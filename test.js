window.TILE_VERSION = { "ditu": { "normal": { "version": "088", "updateDate": "20230214" }, "satellite": { "version": "009", "updateDate": "20230214" }, "normalTraffic": { "version": "081", "updateDate": "20230214" }, "satelliteTraffic": { "version": "083", "updateDate": "20230214" }, "mapJS": { "version": "104", "updateDate": "20230214" }, "satelliteStreet": { "version": "083", "updateDate": "20230214" }, "earthVector": { "version": "001", "updateDate": "20230214" } }, "webapp": { "high_normal": { "version": "001", "updateDate": "20230214" }, "lower_normal": { "version": "002", "updateDate": "20230214" } }, "api_for_mobile": { "vector": { "version": "002", "updateDate": "20230214" }, "vectorIcon": { "version": "002", "updateDate": "20230214" } } }; window.MSV = { "mapstyle": { "version": "001", "updateDate": "20221227" } }; window.BMAP_AUTHENTIC_KEY = "jbgDtTAOZnma2xgz61HKD2kP7KwIc2kG";
(function (t) {
  "use strict"; function e(t) { return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t } function n(t, e) { return t(e = { exports: {} }, e.exports), e.exports } Object.values || (Object.values = function (t) { if (t !== Object(t)) throw new TypeError("Object.values called on a non-object"); var e, n = []; for (e in t) Object.prototype.hasOwnProperty.call(t, e) && n.push(t[e]); return n }), "function" != typeof Object.assign && Object.defineProperty(Object, "assign", { value: function (t) { if (null == t) throw new TypeError("Cannot convert undefined or null to object"); for (var e = Object(t), n = 0; n < (arguments.length <= 1 ? 0 : arguments.length - 1); n++) { var r = n + 1 < 1 || arguments.length <= n + 1 ? void 0 : arguments[n + 1]; if (null != r) for (var i in r) Object.prototype.hasOwnProperty.call(r, i) && (e[i] = r[i]) } return e }, writable: !0, configurable: !0 }); var r = n((function (t) { function e(n) { return t.exports = e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) { return typeof t } : function (t) { return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t }, t.exports.__esModule = !0, t.exports.default = t.exports, e(n) } t.exports = e, t.exports.__esModule = !0, t.exports.default = t.exports })), i = e(r), o = e(n((function (t) { function e(t, e) { for (var n = 0; n < e.length; n++) { var r = e[n]; r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r) } } t.exports = function (t, n, r) { return n && e(t.prototype, n), r && e(t, r), Object.defineProperty(t, "prototype", { writable: !1 }), t }, t.exports.__esModule = !0, t.exports.default = t.exports }))), a = e(n((function (t) { t.exports = function (t) { if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return t }, t.exports.__esModule = !0, t.exports.default = t.exports }))), s = n((function (t) { function e(n, r) { return t.exports = e = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t }, t.exports.__esModule = !0, t.exports.default = t.exports, e(n, r) } t.exports = e, t.exports.__esModule = !0, t.exports.default = t.exports })); e(s); var u, h, c = e(n((function (t) { t.exports = function (t, e) { t.prototype = Object.create(e.prototype), t.prototype.constructor = t, s(t, e) }, t.exports.__esModule = !0, t.exports.default = t.exports }))), l = function (t, e) { var n = this; this.width = void 0, this.height = void 0, this.equals = function (t) { return t && n.width === t.width && n.height === t.height }, this.width = t || 0, this.height = e || 0 }, f = function () { function t(t, e) { this.lng = void 0, this.lat = void 0, this.lng = +t, this.lat = +e } return t.prototype.equals = function (t) { return t && this.lat === t.lat && this.lng === t.lng }, t }(), d = { REFRESH: "refresh", DATA_LOADED: "dataload", THUMB_LOADED: "thumb_loaded", SET_POV: "set_pov", POV_CHANGED: "pov_changed", POV_CHANGED_END: "pov_changed_end", ZOOM_CHANGED: "zoom_changed", SIZE_CHANGED: "size_changed", SET_ID: "set_id", SET_POSITION: "set_position", ID_CHANGED: "id_changed", POSITION_CHANGED: "position_changed", TOUCH_START: "touchstart", TOUCH_END: "touchend", CLICK: "click", DOUBLE_CLICK: "dblclick", LINK_CLICK: "link_click", OVERLAY_ADD: "overlay_add", OVERLAY_REMOVE: "overlay_remove", OVERLAYS_CLEAR: "overlays_clear", PANO_ERROR: "pano_error", LINK_VISIBLE_CHANGE: "links_visible_changed", DESTROY: "destroy", SCENE_CHANGE_END: "scene_change_end" }, p = { TYPE_INNER: "inter", TYPE_STREET: "street", RADIUS: 3e3, COLS: 16, ROWS: 8, TILE_MAX_ZOOM: 4, TILE_MIN_ZOOM: 1, MIN_PITCH: -90, MAX_PITCH: 90, MAX_ZOOM: 4, MIN_ZOOM: 1, TILE_BASE_URLS: ["//apisv0.bdimg.com/", "//apisv1.bdimg.com/"], TOPO_ARROW_TEXTURE: "//webmap0.bdimg.com/wolfman/static/pano/images/webgl/topo_arrow_06f0f2e.png", FISHEYE_DURATION: 1500, FISHEYE_DELAY: 2e3 }, v = (u = {}, h = (navigator.userAgent || "").toLowerCase(), u.isAndroid = h.includes("android"), u.isFirefox = h.includes("firefox"), u.isIos = /ip(hone|ad|od)/i.test(h), u.isWeixin = h.includes("micromessenger"), u.isWeibo = h.includes("weibo"), u.isWeChatOrWeiBo = u.isWeixin && u.isWeibo, u.isBaiduMap = h.includes("baidumap_"), u.isMobile = /android|webos|ip(hone|ad|od)|opera (mini|mobi|tablet)|iemobile|windows.+(phone|touch)|mobile|fennec|kindle (Fire)|Silk|maemo|blackberry|playbook; (touch|kbd)|Symbian(OS)|Ubuntu Touch/i.test(h), u.isPc = !u.isMobile, u), m = function (t) { for (var e = arguments.length <= 1 ? 0 : arguments.length - 1, n = 0; n < e; n++) { var r = n + 1 < 1 || arguments.length <= n + 1 ? void 0 : arguments[n + 1]; for (var i in r) Object.prototype.hasOwnProperty.call(r, i) && (t[i] = r[i]) } return t }, g = function (t) { return t * Math.PI / 180 }, y = function (t) { return 180 * t / Math.PI }, _ = function (t) { return t - 360 * Math.floor(t / 360) }, x = function () { return Date.now() }; var b = function t() { var e = t; if ("boolean" == typeof e._supportWebGL) return e._supportWebGL; if (!window.WebGLRenderingContext) return e._supportWebGL = !1, !1; var n = null, r = document.createElement("canvas"); try { (n = r.getContext("webgl") || r.getContext("experimental-webgl")) && n instanceof WebGLRenderingContext && (e._supportWebGL = !0) } catch (t) { e._supportWebGL = !1 } return null === n && (e._supportWebGL = !1), e._supportWebGL }, M = function (t) { for (var e, n = Number.MAX_VALUE, r = -Number.MAX_VALUE, i = t.length - 1; i >= 0; i--)n > (e = t[i]) && (n = e), r < e && (r = e); return { min: n, max: r } }, w = { g: function (t) { return "string" == typeof t || t instanceof String ? document.getElementById(t) : t && t.nodeName && (1 === t.nodeType || 9 === t.nodeType) ? t : null }, show: function (t) { var e = w.g(t); return e && (e.style.display = ""), e }, hide: function (t) { var e = w.g(t); return e && (e.style.display = "none"), t }, create: function (t) { var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, n = document.createElement(t); for (var r in e) Object.prototype.hasOwnProperty.call(e, r) && n.setAttribute(r, e[r]); return n }, getCurrentStyle: function (t) { return window.getComputedStyle(t, null) } }; function E() { var t, e, n = function (t, e) { var n, r, i = "eii", o = "dac", a = "hem", s = "llm", u = function (t, e) { return t + e }, h = "constructor", c = function (t, e) { return t(e) }, l = function (t, e) { return t + e }; function f(t, e) { for (var n = i; "mill" !== n;)switch (n) { case "llm": return c; case "eii": var r = t.length; n = o; break; case a: for (var u = 0; u < r; u++) { var h = e(t[u]); c.push(h) } n = s; break; case "dac": var c = []; n = a } } var d = decodeURIComponent; b = "de", r = l("fr", "o") + "m", n = l("Co", b); var p = function (t) { return u(t, "")[h][u(r, "Char") + n](t) }, v = function (t) { return f(t, (function (t) { return c(p, t) })) }, m = v.call(p, [39, 34, 37, 96, 60, 120, 97, 65, 98, 66, 99, 67, 100, 68, 101, 69, 102, 70, 103, 110, 109, 111, 112, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57]), g = f([28782, 27702, 26416, 25167, 24183], (function (t) { return c(d, t) })), y = v.call(g, [22354, 22749, 24415, 23346, 22257, 22688, 24306, 25174, 23595, 25547, 22984, 25690, 22212, 27547, 21594, 27210, 23090, 29193, 22394, 29368, 29532, 29459, 29530, 24146, 24500, 26352, 27441, 28788, 29370, 27673, 26925, 25249, 24430]), _ = {}; g = c(v, g); for (var x = new RegExp(g.join("|")), b = 0; b < m.length; b++)_[y[b]] = m[b]; return e = f(e.split(""), (function (t) { return _[t] || t })).join(""), f(e.split(x), (function (t) { return d(t) })) }(0, "su尫stri犸坺幷囄獜呚囄獜扏su尫str氶h廲廲呚l灮i犸囄呚墠O娲氶呚呚廲廲廲朰墠h姈i囄朰彟曰氙si坺犸彟欱殛"); t = n, e = 265, function (e) { for (; --e;)t.push(t.shift()) }(++e); var r = function (t, e) { return n[t -= 0] }; return function (t) { var e = { dmedm: "F5L2O6R6AD8990O", haael: function (t, e) { return t + e }, eeaaa: function (t, e) { return t(e) }, xhcid: function (t, e) { return t + e }, deiic: function (t, e) { return t - e } }, n = e[r("0x0")], i = t[r("0x1")](e[r("0x2")](t[r("0x3")]("?"), 1)), o = e[r("0x4")](md5, e[r("0x5")](md5(i + n), "H0A9P8P7Y6ABQO0")); return r("0x6") + o[r("0x7")](e.deiic(o.length, 12)) } } var T = function (t, e, n) { var r, o, a = "", s = [], u = "jsonp" + Math.ceil(1e5 * Math.random()), h = t.indexOf("?") > 0 ? "&" : "?"; for (var c in n = Object.assign({}, { jsonpCallback: "jsonp", timeout: 5e4, jsonp: "callback" }, n), e) ({}).hasOwnProperty.call(e, c) && (a = "object" === i(e[c]) ? c + "=" + JSON.stringify(e[c]) : c + "=" + e[c], s.push(a)); function l() { r.parentNode && r.parentNode.removeChild(r), window[u] = null } return t += h + s.join("&"), o = document.getElementsByTagName("script")[0] || document.head, t = t + "&" + n.jsonp + "=" + u, t += E()(t), (r = document.createElement("script")).src = t, r.type = "text/javascript", o.parentNode.appendChild(r, o), new Promise((function (t, e) { window[u] = function (e) { if (e && "string" == typeof e) try { e = JSON.parse(e) } catch (t) { e = {}, console.error("[ERROR] Parse Error.") } t(e), l() }, r.onerror = function (t) { l(), e({ errno: -2, errmsg: "[ERROR] Load Error: ".concat(t), data: {} }) } })) }, A = function () { function t() { var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0, e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}; this._size = 0, this._cache = void 0, this.keyList = [], this._options = void 0, this._size = t, this._cache = new window.Map; var n = { clearCallback: null }; this._options = Object.assign({}, n, e) } var e = t.prototype; return e.setData = function (t, e) { 0 !== this._size && (this._cache.size >= this._size && this._removeOld(), this._cache.has(t) || this.keyList.push(t), this._cache.set(t, e)) }, e.getData = function (t) { return this._cache.get(t) }, e._removeOld = function () { for (var t = Math.round(.6 * this._size), e = 0; e < t; e++) { var n = this.keyList[e]; this._options.clearCallback && this._options.clearCallback(this.getData(n)), this._cache.delete(n) } this.keyList.splice(0, t) }, e.clear = function () { this._cache.clear(), this.keyList = [] }, o(t, [{ key: "cacheCount", get: function () { return this._cache.size } }]), t }(), C = function () { function t() { var t = this; this.rid = "", this.roadName = "", this.roadWidth = 5, this.isCurrentRoad = 0, this.pointList = [], this.getTopoInRoad = function (e) { var n = [], r = t.pointList, i = r.length, o = t.getPointByPanoId(e); if (!o || i <= 1) return n; var a = o.order; return 0 === a ? n.push(t.generateTopoData(o.dir, r[1])) : a === i - 1 ? n.push(t.generateTopoData(r[a - 1].dir + 180, r[a - 1])) : (n.push(t.generateTopoData((r[a - 1].dir + 180) % 360, r[a - 1])), n.push(t.generateTopoData(r[a].dir, r[a + 1]))), n }, this.getPointByPanoId = function (e) { for (var n, r = t.pointList, i = 0, o = r.length; i < o; i++)if (r[i].panoId === e) { n = r[i]; break } return n } } return t.prototype.generateTopoData = function (t, e) { return void 0 !== e && (e.topoDir = t, e.roadName = this.roadName), e }, t }(), R = function () { var t = this; this.image = void 0, this.panoId = "", this.iid = "", this.panoType = "", this.panoX = 0, this.panoY = 0, this.panoZ = 0, this.heading = 0, this.pitch = 0, this.defaultHeading = void 0, this.defaultPitch = void 0, this.northDir = 0, this.fixHeading = 0, this.fixPitch = 0, this.fixRoll = 0, this.deviceHeight = 0, this.date = "20130822", this.time = "", this.provider = 1, this.admission = "GS(2013)6021", this.photos = [], this.roadName = "", this.roads = [], this.vpoints = [], this.topoArray = void 0, this.currentRoad = void 0, this.roadWidth = void 0, this.getCurrentRoad = function () { if (t.currentRoad) return t.currentRoad; for (var e = t.roads, n = 0, r = e.length; n < r; n++)if (e[n].isCurrentRoad) { t.currentRoad = e[n]; break } return t.currentRoad }, this.getTopos = function () { if (t.topoArray) return t.topoArray; if (t.currentRoad || (t.currentRoad = t.getCurrentRoad()), !t.currentRoad) return []; if (t.topoArray = t.currentRoad.getTopoInRoad(t.panoId), t.vpoints.length < 1) return t.topoArray; for (var e, n = t.vpoints.length - 1; n >= 0; n--)(e = t.vpoints[n]).topoDir = e.dir, t.topoArray.push(e); return t.topoArray }, this.getRoadWidth = function () { return void 0 === t.roadWidth && (t.currentRoad || (t.currentRoad = t.getCurrentRoad()), t.currentRoad ? t.roadWidth = t.currentRoad.roadWidth : t.roadWidth = 0), t.roadWidth } }; function S(t) { var e = {}; return e.panoId = t.PID, e.panoType = t.Type, e.rid = t.RID, e.dir = t.DIR, e.roadName = t.RoadName, e.order = t.Order, e.panoX = t.X / 100, e.panoY = t.Y / 100, void 0 !== t.CPointX && void 0 !== t.CPointY && (e.cPoint = { x: t.CPointX / 100, y: t.CPointY / 100 }), e } function P(t) { if (!t) return console.error("Get none from server"), null; var e = t.result; if (e && 0 !== e.error) return console.error("Get error from server"), null; var n = t.content; if (void 0 === n || 0 === n.length || void 0 === n[0]) return console.error("Get empty data from server"), null; var r = n[0], i = new R, o = r.Roll, a = {}; if (i.panoId = r.ID, r.Inters instanceof Array) { var s = r.Inters[0]; void 0 !== s && (i.iid = s.IID) } if (i.panoType = r.Type, i.panoX = (r.X || 0) / 100, i.panoY = (r.Y || 0) / 100, i.panoZ = (r.Z || 0) / 100, i.heading = void 0 !== r.MoveDir ? r.MoveDir : 0, i.northDir = r.NorthDir, i.fixHeading = void 0 !== r.Heading ? r.Heading : 270 - r.NorthDir, i.fixPitch = r.Pitch, i.fixRoll = 90 < o || -90 > o ? 0 : o, i.deviceHeight = r.DeviceHeight, i.date = r.Date || i.date, i.time = r.Time, i.provider = void 0 !== r.Provider ? r.Provider : i.provider, i.admission = r.Admission || i.admission, i.timeLine = r.TimeLine || [], i.roadName = r.Rname, r.Roads) { var u = r.Roads; i.roads = u.map((function (t) { return a[t.ID] = t.Name, function (t) { var e = new C; if (e.rid = t.ID, e.roadName = t.Name, e.roadWidth = void 0 !== t.Width ? t.Width / 100 : 0, e.isCurrentRoad = t.IsCurrent || 0, t.Panos) for (var n = t.Panos, r = 0, i = n.length; r < i; r++)e.pointList.push(S(n[r])); return e }(t) })) } if (r.Links) for (var h = r.Links, c = h.length, l = 0; l < c; l++) { var f = h[l]; f.RoadName = a[f.RID], i.vpoints.push(S(f)) } return i.photos = r.Photos || [], i } function D(t, e) { var n = (65535 & t) + (65535 & e); return (t >> 16) + (e >> 16) + (n >> 16) << 16 | 65535 & n } function O(t, e, n, r, i, o) { return D((a = D(D(e, t), D(r, o))) << (s = i) | a >>> 32 - s, n); var a, s } function I(t, e, n, r, i, o, a) { return O(e & n | ~e & r, t, e, i, o, a) } function L(t, e, n, r, i, o, a) { return O(e & r | n & ~r, t, e, i, o, a) } function B(t, e, n, r, i, o, a) { return O(e ^ n ^ r, t, e, i, o, a) } function k(t, e, n, r, i, o, a) { return O(n ^ (e | ~r), t, e, i, o, a) } function U(t, e) { var n, r, i, o, a; t[e >> 5] |= 128 << e % 32, t[14 + (e + 64 >>> 9 << 4)] = e; var s = 1732584193, u = -271733879, h = -1732584194, c = 271733878; for (n = 0; n < t.length; n += 16)r = s, i = u, o = h, a = c, s = I(s, u, h, c, t[n], 7, -680876936), c = I(c, s, u, h, t[n + 1], 12, -389564586), h = I(h, c, s, u, t[n + 2], 17, 606105819), u = I(u, h, c, s, t[n + 3], 22, -1044525330), s = I(s, u, h, c, t[n + 4], 7, -176418897), c = I(c, s, u, h, t[n + 5], 12, 1200080426), h = I(h, c, s, u, t[n + 6], 17, -1473231341), u = I(u, h, c, s, t[n + 7], 22, -45705983), s = I(s, u, h, c, t[n + 8], 7, 1770035416), c = I(c, s, u, h, t[n + 9], 12, -1958414417), h = I(h, c, s, u, t[n + 10], 17, -42063), u = I(u, h, c, s, t[n + 11], 22, -1990404162), s = I(s, u, h, c, t[n + 12], 7, 1804603682), c = I(c, s, u, h, t[n + 13], 12, -40341101), h = I(h, c, s, u, t[n + 14], 17, -1502002290), s = L(s, u = I(u, h, c, s, t[n + 15], 22, 1236535329), h, c, t[n + 1], 5, -165796510), c = L(c, s, u, h, t[n + 6], 9, -1069501632), h = L(h, c, s, u, t[n + 11], 14, 643717713), u = L(u, h, c, s, t[n], 20, -373897302), s = L(s, u, h, c, t[n + 5], 5, -701558691), c = L(c, s, u, h, t[n + 10], 9, 38016083), h = L(h, c, s, u, t[n + 15], 14, -660478335), u = L(u, h, c, s, t[n + 4], 20, -405537848), s = L(s, u, h, c, t[n + 9], 5, 568446438), c = L(c, s, u, h, t[n + 14], 9, -1019803690), h = L(h, c, s, u, t[n + 3], 14, -187363961), u = L(u, h, c, s, t[n + 8], 20, 1163531501), s = L(s, u, h, c, t[n + 13], 5, -1444681467), c = L(c, s, u, h, t[n + 2], 9, -51403784), h = L(h, c, s, u, t[n + 7], 14, 1735328473), s = B(s, u = L(u, h, c, s, t[n + 12], 20, -1926607734), h, c, t[n + 5], 4, -378558), c = B(c, s, u, h, t[n + 8], 11, -2022574463), h = B(h, c, s, u, t[n + 11], 16, 1839030562), u = B(u, h, c, s, t[n + 14], 23, -35309556), s = B(s, u, h, c, t[n + 1], 4, -1530992060), c = B(c, s, u, h, t[n + 4], 11, 1272893353), h = B(h, c, s, u, t[n + 7], 16, -155497632), u = B(u, h, c, s, t[n + 10], 23, -1094730640), s = B(s, u, h, c, t[n + 13], 4, 681279174), c = B(c, s, u, h, t[n], 11, -358537222), h = B(h, c, s, u, t[n + 3], 16, -722521979), u = B(u, h, c, s, t[n + 6], 23, 76029189), s = B(s, u, h, c, t[n + 9], 4, -640364487), c = B(c, s, u, h, t[n + 12], 11, -421815835), h = B(h, c, s, u, t[n + 15], 16, 530742520), s = k(s, u = B(u, h, c, s, t[n + 2], 23, -995338651), h, c, t[n], 6, -198630844), c = k(c, s, u, h, t[n + 7], 10, 1126891415), h = k(h, c, s, u, t[n + 14], 15, -1416354905), u = k(u, h, c, s, t[n + 5], 21, -57434055), s = k(s, u, h, c, t[n + 12], 6, 1700485571), c = k(c, s, u, h, t[n + 3], 10, -1894986606), h = k(h, c, s, u, t[n + 10], 15, -1051523), u = k(u, h, c, s, t[n + 1], 21, -2054922799), s = k(s, u, h, c, t[n + 8], 6, 1873313359), c = k(c, s, u, h, t[n + 15], 10, -30611744), h = k(h, c, s, u, t[n + 6], 15, -1560198380), u = k(u, h, c, s, t[n + 13], 21, 1309151649), s = k(s, u, h, c, t[n + 4], 6, -145523070), c = k(c, s, u, h, t[n + 11], 10, -1120210379), h = k(h, c, s, u, t[n + 2], 15, 718787259), u = k(u, h, c, s, t[n + 9], 21, -343485551), s = D(s, r), u = D(u, i), h = D(h, o), c = D(c, a); return [s, u, h, c] } function N(t) { var e, n = "", r = 32 * t.length; for (e = 0; e < r; e += 8)n += String.fromCharCode(t[e >> 5] >>> e % 32 & 255); return n } function F(t) { var e, n = []; for (n[(t.length >> 2) - 1] = void 0, e = 0; e < n.length; e += 1)n[e] = 0; var r = 8 * t.length; for (e = 0; e < r; e += 8)n[e >> 5] |= (255 & t.charCodeAt(e / 8)) << e % 32; return n } function j(t) { var e, n, r = "0123456789abcdef", i = ""; for (n = 0; n < t.length; n += 1)e = t.charCodeAt(n), i += r.charAt(e >>> 4 & 15) + r.charAt(15 & e); return i } function z(t) { return unescape(encodeURIComponent(t)) } function V(t) { return function (t) { return N(U(F(t), 8 * t.length)) }(z(t)) } function G(t, e) { return function (t, e) { var n, r, i = F(t), o = [], a = []; for (o[15] = a[15] = void 0, i.length > 16 && (i = U(i, 8 * t.length)), n = 0; n < 16; n += 1)o[n] = 909522486 ^ i[n], a[n] = 1549556828 ^ i[n]; return r = U(o.concat(F(e)), 512 + 8 * e.length), N(U(a.concat(r), 640)) }(z(t), z(e)) } var W, H, Z, q, Y = function (t, e, n) { return e ? n ? G(e, t) : j(G(e, t)) : n ? V(t) : j(V(t)) }, X = function (t, e) { return T(t, {}, { jsonp: "fn" }) }, K = function (t, e) { if ("PANORAMA" === t) { var n = "https://api.map.baidu.com/?qt=pano_entry&v=gl&ak=" + window.BMAP_AUTHENTIC_KEY; "function" == typeof e ? X(n).then((function (t) { e() })).catch((function (t) { })) : X(n + "&callback=" + e) } }, Q = function (t) { if ("PANORAMA" === t) alert("您需要申请全景地图服务使用权限") }, J = (H = null, Z = 0, q = W || 5e3, function (t) { var e = (1e5 * Math.random()).toFixed(0); window["cbk" + e] = function (t) { t && void 0 !== t.error && 0 === t.error || K("PANORAMA", (function (t) { t && void 0 !== t.error && 0 === t.error || Q("PANORAMA") })) }, Z += t, H || (H = setTimeout((function () { var t = "https://api.map.baidu.com/?qt=pano_count&v=gl&ak=" + window.BMAP_AUTHENTIC_KEY + "&consume=" + Z; X(t + "&callback=window.cbk" + e), Z = 0, H = null }), q)) }), $ = function (t, e) { var n = (e = e || {}).counter ? e.counter : 1, r = !1 !== e.isCounter, i = Date.parse(new Date), o = i / 1e3, a = t + "-" + (o + 1800) + "-" + i + "-" + window.BMAP_AUTHENTIC_KEY + "-SJvEY5h37ZDh5pHS", s = Y(a), u = "auth_key=" + (o + 1800) + "-" + i + "-" + window.BMAP_AUTHENTIC_KEY + "-" + s; return r && J(n), u }, tt = function () { function t(e) { var n = this; this.getPanoById = function (e) { var r; r = "".concat(t.SERVICE_URL, "?qt=sdata&sid=").concat(e, "&").concat($("/")), n.getDataByUrl(r).then((function (t) { var e = P(t); if (null === e) throw new Error("数据解析异常"); return n._cache.setData(r, t), n._pano.dispatchEvent(d.DATA_LOADED, { data: e }), n._pano.dispatchEvent(d.ID_CHANGED, e.panoId), n._pano.dispatchEvent(d.POSITION_CHANGED, new f(e.panoX, e.panoY)), e })).catch((function (t) { n._pano.dispatchEvent({ type: d.PANO_ERROR, data: t }) })) }, this.getPanoByLocation = function (e, r) { var i; i = "".concat(t.SERVICE_URL, "?qt=qsdata&x=").concat(e.lng, "&y=").concat(e.lat).concat(r ? "&r=" + r : "", "&action=1&").concat($("/")), n.getDataByUrl(i).then((function (t) { var r = P(t); n._cache.setData(i, t), n._pano.dispatchEvent(d.DATA_LOADED, { data: r }), n._pano.dispatchEvent(d.POSITION_CHANGED, e) })).catch((function (t) { n._pano.dispatchEvent({ type: d.PANO_ERROR, data: t }) })) }, this._pano = e, this._cache = new A(10) } return t.prototype.getDataByUrl = function (t) { var e = this._cache.getData(t); return e ? Promise.resolve(e) : T(t, {}, { jsonp: "fn" }) }, t }(); tt.SERVICE_URL = "//apisv0.bdimg.com/"; var et = n((function (t) { function e(t, e, n, r, i, o, a) { try { var s = t[o](a), u = s.value } catch (t) { return void n(t) } s.done ? e(u) : Promise.resolve(u).then(r, i) } t.exports = function (t) { return function () { var n = this, r = arguments; return new Promise((function (i, o) { var a = t.apply(n, r); function s(t) { e(a, i, o, s, u, "next", t) } function u(t) { e(a, i, o, s, u, "throw", t) } s(void 0) })) } }, t.exports.__esModule = !0, t.exports.default = t.exports })), nt = e(et), rt = n((function (t) {
    var e = r.default; function n() {
      /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
      t.exports = n = function () { return r }, t.exports.__esModule = !0, t.exports.default = t.exports; var r = {}, i = Object.prototype, o = i.hasOwnProperty, a = "function" == typeof Symbol ? Symbol : {}, s = a.iterator || "@@iterator", u = a.asyncIterator || "@@asyncIterator", h = a.toStringTag || "@@toStringTag"; function c(t, e, n) { return Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }), t[e] } try { c({}, "") } catch (t) { c = function (t, e, n) { return t[e] = n } } function l(t, e, n, r) { var i = e && e.prototype instanceof p ? e : p, o = Object.create(i.prototype), a = new A(r || []); return o._invoke = function (t, e, n) { var r = "suspendedStart"; return function (i, o) { if ("executing" === r) throw new Error("Generator is already running"); if ("completed" === r) { if ("throw" === i) throw o; return R() } for (n.method = i, n.arg = o; ;) { var a = n.delegate; if (a) { var s = w(a, n); if (s) { if (s === d) continue; return s } } if ("next" === n.method) n.sent = n._sent = n.arg; else if ("throw" === n.method) { if ("suspendedStart" === r) throw r = "completed", n.arg; n.dispatchException(n.arg) } else "return" === n.method && n.abrupt("return", n.arg); r = "executing"; var u = f(t, e, n); if ("normal" === u.type) { if (r = n.done ? "completed" : "suspendedYield", u.arg === d) continue; return { value: u.arg, done: n.done } } "throw" === u.type && (r = "completed", n.method = "throw", n.arg = u.arg) } } }(t, n, a), o } function f(t, e, n) { try { return { type: "normal", arg: t.call(e, n) } } catch (t) { return { type: "throw", arg: t } } } r.wrap = l; var d = {}; function p() { } function v() { } function m() { } var g = {}; c(g, s, (function () { return this })); var y = Object.getPrototypeOf, _ = y && y(y(C([]))); _ && _ !== i && o.call(_, s) && (g = _); var x = m.prototype = p.prototype = Object.create(g); function b(t) { ["next", "throw", "return"].forEach((function (e) { c(t, e, (function (t) { return this._invoke(e, t) })) })) } function M(t, n) { function r(i, a, s, u) { var h = f(t[i], t, a); if ("throw" !== h.type) { var c = h.arg, l = c.value; return l && "object" == e(l) && o.call(l, "__await") ? n.resolve(l.__await).then((function (t) { r("next", t, s, u) }), (function (t) { r("throw", t, s, u) })) : n.resolve(l).then((function (t) { c.value = t, s(c) }), (function (t) { return r("throw", t, s, u) })) } u(h.arg) } var i; this._invoke = function (t, e) { function o() { return new n((function (n, i) { r(t, e, n, i) })) } return i = i ? i.then(o, o) : o() } } function w(t, e) { var n = t.iterator[e.method]; if (void 0 === n) { if (e.delegate = null, "throw" === e.method) { if (t.iterator.return && (e.method = "return", e.arg = void 0, w(t, e), "throw" === e.method)) return d; e.method = "throw", e.arg = new TypeError("The iterator does not provide a 'throw' method") } return d } var r = f(n, t.iterator, e.arg); if ("throw" === r.type) return e.method = "throw", e.arg = r.arg, e.delegate = null, d; var i = r.arg; return i ? i.done ? (e[t.resultName] = i.value, e.next = t.nextLoc, "return" !== e.method && (e.method = "next", e.arg = void 0), e.delegate = null, d) : i : (e.method = "throw", e.arg = new TypeError("iterator result is not an object"), e.delegate = null, d) } function E(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e) } function T(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e } function A(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(E, this), this.reset(!0) } function C(t) { if (t) { var e = t[s]; if (e) return e.call(t); if ("function" == typeof t.next) return t; if (!isNaN(t.length)) { var n = -1, r = function e() { for (; ++n < t.length;)if (o.call(t, n)) return e.value = t[n], e.done = !1, e; return e.value = void 0, e.done = !0, e }; return r.next = r } } return { next: R } } function R() { return { value: void 0, done: !0 } } return v.prototype = m, c(x, "constructor", m), c(m, "constructor", v), v.displayName = c(m, h, "GeneratorFunction"), r.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === v || "GeneratorFunction" === (e.displayName || e.name)) }, r.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, m) : (t.__proto__ = m, c(t, h, "GeneratorFunction")), t.prototype = Object.create(x), t }, r.awrap = function (t) { return { __await: t } }, b(M.prototype), c(M.prototype, u, (function () { return this })), r.AsyncIterator = M, r.async = function (t, e, n, i, o) { void 0 === o && (o = Promise); var a = new M(l(t, e, n, i), o); return r.isGeneratorFunction(e) ? a : a.next().then((function (t) { return t.done ? t.value : a.next() })) }, b(x), c(x, h, "Generator"), c(x, s, (function () { return this })), c(x, "toString", (function () { return "[object Generator]" })), r.keys = function (t) { var e = []; for (var n in t) e.push(n); return e.reverse(), function n() { for (; e.length;) { var r = e.pop(); if (r in t) return n.value = r, n.done = !1, n } return n.done = !0, n } }, r.values = C, A.prototype = { constructor: A, reset: function (t) { if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(T), !t) for (var e in this) "t" === e.charAt(0) && o.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = void 0) }, stop: function () { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval }, dispatchException: function (t) { if (this.done) throw t; var e = this; function n(n, r) { return a.type = "throw", a.arg = t, e.next = n, r && (e.method = "next", e.arg = void 0), !!r } for (var r = this.tryEntries.length - 1; r >= 0; --r) { var i = this.tryEntries[r], a = i.completion; if ("root" === i.tryLoc) return n("end"); if (i.tryLoc <= this.prev) { var s = o.call(i, "catchLoc"), u = o.call(i, "finallyLoc"); if (s && u) { if (this.prev < i.catchLoc) return n(i.catchLoc, !0); if (this.prev < i.finallyLoc) return n(i.finallyLoc) } else if (s) { if (this.prev < i.catchLoc) return n(i.catchLoc, !0) } else { if (!u) throw new Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return n(i.finallyLoc) } } } }, abrupt: function (t, e) { for (var n = this.tryEntries.length - 1; n >= 0; --n) { var r = this.tryEntries[n]; if (r.tryLoc <= this.prev && o.call(r, "finallyLoc") && this.prev < r.finallyLoc) { var i = r; break } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, d) : this.complete(a) }, complete: function (t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), d }, finish: function (t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var n = this.tryEntries[e]; if (n.finallyLoc === t) return this.complete(n.completion, n.afterLoc), T(n), d } }, catch: function (t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var n = this.tryEntries[e]; if (n.tryLoc === t) { var r = n.completion; if ("throw" === r.type) { var i = r.arg; T(n) } return i } } throw new Error("illegal catch attempt") }, delegateYield: function (t, e, n) { return this.delegate = { iterator: C(t), resultName: e, nextLoc: n }, "next" === this.method && (this.arg = void 0), d } }, r
    } t.exports = n, t.exports.__esModule = !0, t.exports.default = t.exports
  })); e(rt); var it = rt(), ot = it; try { regeneratorRuntime = it } catch (t) { "object" == typeof globalThis ? globalThis.regeneratorRuntime = it : Function("r", "regeneratorRuntime = r")(it) } function at(t, e) { if (!t) throw new Error("math.gl assertion ".concat(e)) } const st = { EPSILON: 1e-12, debug: !1, precision: 4, printTypes: !1, printDegrees: !1, printRowMajor: !0 }; function ut(t, { precision: e = st.precision } = {}) { return t = function (t) { return Math.round(t / st.EPSILON) * st.EPSILON }(t), "".concat(parseFloat(t.toPrecision(e))) } function ht(t) { return Array.isArray(t) || ArrayBuffer.isView(t) && !(t instanceof DataView) } function ct(t, e, n) { const r = st.EPSILON; n && (st.EPSILON = n); try { if (t === e) return !0; if (ht(t) && ht(e)) { if (t.length !== e.length) return !1; for (let n = 0; n < t.length; ++n)if (!ct(t[n], e[n])) return !1; return !0 } return t && t.equals ? t.equals(e) : e && e.equals ? e.equals(t) : "number" == typeof t && "number" == typeof e && Math.abs(t - e) <= st.EPSILON * Math.max(1, Math.abs(t), Math.abs(e)) } finally { st.EPSILON = r } } class lt extends (function (t) { function e() { var e = Reflect.construct(t, Array.from(arguments)); return Object.setPrototypeOf(e, Object.getPrototypeOf(this)), e } return e.prototype = Object.create(t.prototype, { constructor: { value: t, enumerable: !1, writable: !0, configurable: !0 } }), Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t, e }(Array)) { clone() { return (new this.constructor).copy(this) } fromArray(t, e = 0) { for (let n = 0; n < this.ELEMENTS; ++n)this[n] = t[n + e]; return this.check() } toArray(t = [], e = 0) { for (let n = 0; n < this.ELEMENTS; ++n)t[e + n] = this[n]; return t } from(t) { return Array.isArray(t) ? this.copy(t) : this.fromObject(t) } to(t) { return t === this ? this : ht(t) ? this.toArray(t) : this.toObject(t) } toTarget(t) { return t ? this.to(t) : this } toFloat32Array() { return new Float32Array(this) } toString() { return this.formatString(st) } formatString(t) { let e = ""; for (let n = 0; n < this.ELEMENTS; ++n)e += (n > 0 ? ", " : "") + ut(this[n], t); return "".concat(t.printTypes ? this.constructor.name : "", "[").concat(e, "]") } equals(t) { if (!t || this.length !== t.length) return !1; for (let e = 0; e < this.ELEMENTS; ++e)if (!ct(this[e], t[e])) return !1; return !0 } exactEquals(t) { if (!t || this.length !== t.length) return !1; for (let e = 0; e < this.ELEMENTS; ++e)if (this[e] !== t[e]) return !1; return !0 } negate() { for (let t = 0; t < this.ELEMENTS; ++t)this[t] = -this[t]; return this.check() } lerp(t, e, n) { if (void 0 === n) return this.lerp(this, t, e); for (let r = 0; r < this.ELEMENTS; ++r) { const i = t[r]; this[r] = i + n * (e[r] - i) } return this.check() } min(t) { for (let e = 0; e < this.ELEMENTS; ++e)this[e] = Math.min(t[e], this[e]); return this.check() } max(t) { for (let e = 0; e < this.ELEMENTS; ++e)this[e] = Math.max(t[e], this[e]); return this.check() } clamp(t, e) { for (let n = 0; n < this.ELEMENTS; ++n)this[n] = Math.min(Math.max(this[n], t[n]), e[n]); return this.check() } add(...t) { for (const e of t) for (let t = 0; t < this.ELEMENTS; ++t)this[t] += e[t]; return this.check() } subtract(...t) { for (const e of t) for (let t = 0; t < this.ELEMENTS; ++t)this[t] -= e[t]; return this.check() } scale(t) { if ("number" == typeof t) for (let e = 0; e < this.ELEMENTS; ++e)this[e] *= t; else for (let e = 0; e < this.ELEMENTS && e < t.length; ++e)this[e] *= t[e]; return this.check() } multiplyByScalar(t) { for (let e = 0; e < this.ELEMENTS; ++e)this[e] *= t; return this.check() } check() { if (st.debug && !this.validate()) throw new Error("math.gl: ".concat(this.constructor.name, " some fields set to invalid numbers'")); return this } validate() { let t = this.length === this.ELEMENTS; for (let e = 0; e < this.ELEMENTS; ++e)t = t && Number.isFinite(this[e]); return t } sub(t) { return this.subtract(t) } setScalar(t) { for (let e = 0; e < this.ELEMENTS; ++e)this[e] = t; return this.check() } addScalar(t) { for (let e = 0; e < this.ELEMENTS; ++e)this[e] += t; return this.check() } subScalar(t) { return this.addScalar(-t) } multiplyScalar(t) { for (let e = 0; e < this.ELEMENTS; ++e)this[e] *= t; return this.check() } divideScalar(t) { return this.multiplyByScalar(1 / t) } clampScalar(t, e) { for (let n = 0; n < this.ELEMENTS; ++n)this[n] = Math.min(Math.max(this[n], t), e); return this.check() } get elements() { return this } } function ft(t) { if (!Number.isFinite(t)) throw new Error("Invalid number ".concat(t)); return t } function dt(t, e, n = "") { if (st.debug && !function (t, e) { if (t.length !== e) return !1; for (let e = 0; e < t.length; ++e)if (!Number.isFinite(t[e])) return !1; return !0 }(t, e)) throw new Error("math.gl: ".concat(n, " some fields set to invalid numbers'")); return t } class pt extends lt { get x() { return this[0] } set x(t) { this[0] = ft(t) } get y() { return this[1] } set y(t) { this[1] = ft(t) } len() { return Math.sqrt(this.lengthSquared()) } magnitude() { return this.len() } lengthSquared() { let t = 0; for (let e = 0; e < this.ELEMENTS; ++e)t += this[e] * this[e]; return t } magnitudeSquared() { return this.lengthSquared() } distance(t) { return Math.sqrt(this.distanceSquared(t)) } distanceSquared(t) { let e = 0; for (let n = 0; n < this.ELEMENTS; ++n) { const r = this[n] - t[n]; e += r * r } return ft(e) } dot(t) { let e = 0; for (let n = 0; n < this.ELEMENTS; ++n)e += this[n] * t[n]; return ft(e) } normalize() { const t = this.magnitude(); if (0 !== t) for (let e = 0; e < this.ELEMENTS; ++e)this[e] /= t; return this.check() } multiply(...t) { for (const e of t) for (let t = 0; t < this.ELEMENTS; ++t)this[t] *= e[t]; return this.check() } divide(...t) { for (const e of t) for (let t = 0; t < this.ELEMENTS; ++t)this[t] /= e[t]; return this.check() } lengthSq() { return this.lengthSquared() } distanceTo(t) { return this.distance(t) } distanceToSquared(t) { return this.distanceSquared(t) } getComponent(t) { return at(t >= 0 && t < this.ELEMENTS, "index is out of range"), ft(this[t]) } setComponent(t, e) { return at(t >= 0 && t < this.ELEMENTS, "index is out of range"), this[t] = e, this.check() } addVectors(t, e) { return this.copy(t).add(e) } subVectors(t, e) { return this.copy(t).subtract(e) } multiplyVectors(t, e) { return this.copy(t).multiply(e) } addScaledVector(t, e) { return this.add(new this.constructor(t).multiplyScalar(e)) } } var vt = 1e-6, mt = "undefined" != typeof Float32Array ? Float32Array : Array, gt = Math.random; function yt() { var t = new mt(2); return mt != Float32Array && (t[0] = 0, t[1] = 0), t } function _t(t, e) { var n = new mt(2); return n[0] = t, n[1] = e, n } function xt(t, e, n) { return t[0] = e[0] - n[0], t[1] = e[1] - n[1], t } function bt(t, e, n) { return t[0] = e[0] * n[0], t[1] = e[1] * n[1], t } function Mt(t, e, n) { return t[0] = e[0] / n[0], t[1] = e[1] / n[1], t } function wt(t, e) { var n = e[0] - t[0], r = e[1] - t[1]; return Math.hypot(n, r) } function Et(t, e) { var n = e[0] - t[0], r = e[1] - t[1]; return n * n + r * r } function Tt(t) { var e = t[0], n = t[1]; return Math.hypot(e, n) } function At(t) { var e = t[0], n = t[1]; return e * e + n * n } function Ct(t, e, n) { var r = e[0], i = e[1]; return t[0] = n[0] * r + n[4] * i + n[12], t[1] = n[1] * r + n[5] * i + n[13], t } Math.hypot || (Math.hypot = function () { for (var t = 0, e = arguments.length; e--;)t += arguments[e] * arguments[e]; return Math.sqrt(t) }); var Rt, St = Tt, Pt = xt, Dt = bt, Ot = Mt, It = wt, Lt = Et, Bt = At, kt = (Rt = yt(), function (t, e, n, r, i, o) { var a, s; for (e || (e = 2), n || (n = 0), s = r ? Math.min(r * e + n, t.length) : t.length, a = n; a < s; a += e)Rt[0] = t[a], Rt[1] = t[a + 1], i(Rt, Rt, o), t[a] = Rt[0], t[a + 1] = Rt[1]; return t }), Ut = Object.freeze({ __proto__: null, create: yt, clone: function (t) { var e = new mt(2); return e[0] = t[0], e[1] = t[1], e }, fromValues: _t, copy: function (t, e) { return t[0] = e[0], t[1] = e[1], t }, set: function (t, e, n) { return t[0] = e, t[1] = n, t }, add: function (t, e, n) { return t[0] = e[0] + n[0], t[1] = e[1] + n[1], t }, subtract: xt, multiply: bt, divide: Mt, ceil: function (t, e) { return t[0] = Math.ceil(e[0]), t[1] = Math.ceil(e[1]), t }, floor: function (t, e) { return t[0] = Math.floor(e[0]), t[1] = Math.floor(e[1]), t }, min: function (t, e, n) { return t[0] = Math.min(e[0], n[0]), t[1] = Math.min(e[1], n[1]), t }, max: function (t, e, n) { return t[0] = Math.max(e[0], n[0]), t[1] = Math.max(e[1], n[1]), t }, round: function (t, e) { return t[0] = Math.round(e[0]), t[1] = Math.round(e[1]), t }, scale: function (t, e, n) { return t[0] = e[0] * n, t[1] = e[1] * n, t }, scaleAndAdd: function (t, e, n, r) { return t[0] = e[0] + n[0] * r, t[1] = e[1] + n[1] * r, t }, distance: wt, squaredDistance: Et, length: Tt, squaredLength: At, negate: function (t, e) { return t[0] = -e[0], t[1] = -e[1], t }, inverse: function (t, e) { return t[0] = 1 / e[0], t[1] = 1 / e[1], t }, normalize: function (t, e) { var n = e[0], r = e[1], i = n * n + r * r; return i > 0 && (i = 1 / Math.sqrt(i)), t[0] = e[0] * i, t[1] = e[1] * i, t }, dot: function (t, e) { return t[0] * e[0] + t[1] * e[1] }, cross: function (t, e, n) { var r = e[0] * n[1] - e[1] * n[0]; return t[0] = t[1] = 0, t[2] = r, t }, lerp: function (t, e, n, r) { var i = e[0], o = e[1]; return t[0] = i + r * (n[0] - i), t[1] = o + r * (n[1] - o), t }, random: function (t, e) { e = e || 1; var n = 2 * gt() * Math.PI; return t[0] = Math.cos(n) * e, t[1] = Math.sin(n) * e, t }, transformMat2: function (t, e, n) { var r = e[0], i = e[1]; return t[0] = n[0] * r + n[2] * i, t[1] = n[1] * r + n[3] * i, t }, transformMat2d: function (t, e, n) { var r = e[0], i = e[1]; return t[0] = n[0] * r + n[2] * i + n[4], t[1] = n[1] * r + n[3] * i + n[5], t }, transformMat3: function (t, e, n) { var r = e[0], i = e[1]; return t[0] = n[0] * r + n[3] * i + n[6], t[1] = n[1] * r + n[4] * i + n[7], t }, transformMat4: Ct, rotate: function (t, e, n, r) { var i = e[0] - n[0], o = e[1] - n[1], a = Math.sin(r), s = Math.cos(r); return t[0] = i * s - o * a + n[0], t[1] = i * a + o * s + n[1], t }, angle: function (t, e) { var n = t[0], r = t[1], i = e[0], o = e[1], a = Math.sqrt(n * n + r * r) * Math.sqrt(i * i + o * o), s = a && (n * i + r * o) / a; return Math.acos(Math.min(Math.max(s, -1), 1)) }, zero: function (t) { return t[0] = 0, t[1] = 0, t }, str: function (t) { return "vec2(" + t[0] + ", " + t[1] + ")" }, exactEquals: function (t, e) { return t[0] === e[0] && t[1] === e[1] }, equals: function (t, e) { var n = t[0], r = t[1], i = e[0], o = e[1]; return Math.abs(n - i) <= vt * Math.max(1, Math.abs(n), Math.abs(i)) && Math.abs(r - o) <= vt * Math.max(1, Math.abs(r), Math.abs(o)) }, len: St, sub: Pt, mul: Dt, div: Ot, dist: It, sqrDist: Lt, sqrLen: Bt, forEach: kt }); function Nt(t, e, n) { const r = e[0], i = e[1], o = e[2], a = n[3] * r + n[7] * i + n[11] * o || 1; return t[0] = (n[0] * r + n[4] * i + n[8] * o) / a, t[1] = (n[1] * r + n[5] * i + n[9] * o) / a, t[2] = (n[2] * r + n[6] * i + n[10] * o) / a, t } function Ft() { var t = new mt(3); return mt != Float32Array && (t[0] = 0, t[1] = 0, t[2] = 0), t } function jt(t) { var e = new mt(3); return e[0] = t[0], e[1] = t[1], e[2] = t[2], e } function zt(t) { var e = t[0], n = t[1], r = t[2]; return Math.hypot(e, n, r) } function Vt(t, e, n) { var r = new mt(3); return r[0] = t, r[1] = e, r[2] = n, r } function Gt(t, e) { return t[0] = e[0], t[1] = e[1], t[2] = e[2], t } function Wt(t, e, n) { return t[0] = e[0] + n[0], t[1] = e[1] + n[1], t[2] = e[2] + n[2], t } function Ht(t, e, n) { return t[0] = e[0] - n[0], t[1] = e[1] - n[1], t[2] = e[2] - n[2], t } function Zt(t, e, n) { return t[0] = e[0] * n[0], t[1] = e[1] * n[1], t[2] = e[2] * n[2], t } function qt(t, e, n) { return t[0] = e[0] / n[0], t[1] = e[1] / n[1], t[2] = e[2] / n[2], t } function Yt(t, e, n) { return t[0] = e[0] * n, t[1] = e[1] * n, t[2] = e[2] * n, t } function Xt(t, e) { var n = e[0] - t[0], r = e[1] - t[1], i = e[2] - t[2]; return Math.hypot(n, r, i) } function Kt(t, e) { var n = e[0] - t[0], r = e[1] - t[1], i = e[2] - t[2]; return n * n + r * r + i * i } function Qt(t) { var e = t[0], n = t[1], r = t[2]; return e * e + n * n + r * r } function Jt(t, e) { var n = e[0], r = e[1], i = e[2], o = n * n + r * r + i * i; return o > 0 && (o = 1 / Math.sqrt(o)), t[0] = e[0] * o, t[1] = e[1] * o, t[2] = e[2] * o, t } function $t(t, e) { return t[0] * e[0] + t[1] * e[1] + t[2] * e[2] } function te(t, e, n) { var r = e[0], i = e[1], o = e[2], a = n[0], s = n[1], u = n[2]; return t[0] = i * u - o * s, t[1] = o * a - r * u, t[2] = r * s - i * a, t } function ee(t, e, n) { var r = e[0], i = e[1], o = e[2], a = n[3] * r + n[7] * i + n[11] * o + n[15]; return a = a || 1, t[0] = (n[0] * r + n[4] * i + n[8] * o + n[12]) / a, t[1] = (n[1] * r + n[5] * i + n[9] * o + n[13]) / a, t[2] = (n[2] * r + n[6] * i + n[10] * o + n[14]) / a, t } function ne(t, e, n) { var r = e[0], i = e[1], o = e[2]; return t[0] = r * n[0] + i * n[3] + o * n[6], t[1] = r * n[1] + i * n[4] + o * n[7], t[2] = r * n[2] + i * n[5] + o * n[8], t } function re(t, e, n) { var r = n[0], i = n[1], o = n[2], a = n[3], s = e[0], u = e[1], h = e[2], c = i * h - o * u, l = o * s - r * h, f = r * u - i * s, d = i * f - o * l, p = o * c - r * f, v = r * l - i * c, m = 2 * a; return c *= m, l *= m, f *= m, d *= 2, p *= 2, v *= 2, t[0] = s + c + d, t[1] = u + l + p, t[2] = h + f + v, t } function ie(t, e, n, r) { var i = [], o = []; return i[0] = e[0] - n[0], i[1] = e[1] - n[1], i[2] = e[2] - n[2], o[0] = i[0], o[1] = i[1] * Math.cos(r) - i[2] * Math.sin(r), o[2] = i[1] * Math.sin(r) + i[2] * Math.cos(r), t[0] = o[0] + n[0], t[1] = o[1] + n[1], t[2] = o[2] + n[2], t } function oe(t, e, n, r) { var i = [], o = []; return i[0] = e[0] - n[0], i[1] = e[1] - n[1], i[2] = e[2] - n[2], o[0] = i[2] * Math.sin(r) + i[0] * Math.cos(r), o[1] = i[1], o[2] = i[2] * Math.cos(r) - i[0] * Math.sin(r), t[0] = o[0] + n[0], t[1] = o[1] + n[1], t[2] = o[2] + n[2], t } function ae(t, e, n, r) { var i = [], o = []; return i[0] = e[0] - n[0], i[1] = e[1] - n[1], i[2] = e[2] - n[2], o[0] = i[0] * Math.cos(r) - i[1] * Math.sin(r), o[1] = i[0] * Math.sin(r) + i[1] * Math.cos(r), o[2] = i[2], t[0] = o[0] + n[0], t[1] = o[1] + n[1], t[2] = o[2] + n[2], t } function se(t, e) { var n = t[0], r = t[1], i = t[2], o = e[0], a = e[1], s = e[2], u = Math.sqrt(n * n + r * r + i * i) * Math.sqrt(o * o + a * a + s * s), h = u && $t(t, e) / u; return Math.acos(Math.min(Math.max(h, -1), 1)) } function ue(t, e) { var n = t[0], r = t[1], i = t[2], o = e[0], a = e[1], s = e[2]; return Math.abs(n - o) <= vt * Math.max(1, Math.abs(n), Math.abs(o)) && Math.abs(r - a) <= vt * Math.max(1, Math.abs(r), Math.abs(a)) && Math.abs(i - s) <= vt * Math.max(1, Math.abs(i), Math.abs(s)) } var he = Ht, ce = Zt, le = qt, fe = Xt, de = Kt, pe = zt, ve = Qt, me = function () { var t = Ft(); return function (e, n, r, i, o, a) { var s, u; for (n || (n = 3), r || (r = 0), u = i ? Math.min(i * n + r, e.length) : e.length, s = r; s < u; s += n)t[0] = e[s], t[1] = e[s + 1], t[2] = e[s + 2], o(t, t, a), e[s] = t[0], e[s + 1] = t[1], e[s + 2] = t[2]; return e } }(), ge = Object.freeze({ __proto__: null, create: Ft, clone: jt, length: zt, fromValues: Vt, copy: Gt, set: function (t, e, n, r) { return t[0] = e, t[1] = n, t[2] = r, t }, add: Wt, subtract: Ht, multiply: Zt, divide: qt, ceil: function (t, e) { return t[0] = Math.ceil(e[0]), t[1] = Math.ceil(e[1]), t[2] = Math.ceil(e[2]), t }, floor: function (t, e) { return t[0] = Math.floor(e[0]), t[1] = Math.floor(e[1]), t[2] = Math.floor(e[2]), t }, min: function (t, e, n) { return t[0] = Math.min(e[0], n[0]), t[1] = Math.min(e[1], n[1]), t[2] = Math.min(e[2], n[2]), t }, max: function (t, e, n) { return t[0] = Math.max(e[0], n[0]), t[1] = Math.max(e[1], n[1]), t[2] = Math.max(e[2], n[2]), t }, round: function (t, e) { return t[0] = Math.round(e[0]), t[1] = Math.round(e[1]), t[2] = Math.round(e[2]), t }, scale: Yt, scaleAndAdd: function (t, e, n, r) { return t[0] = e[0] + n[0] * r, t[1] = e[1] + n[1] * r, t[2] = e[2] + n[2] * r, t }, distance: Xt, squaredDistance: Kt, squaredLength: Qt, negate: function (t, e) { return t[0] = -e[0], t[1] = -e[1], t[2] = -e[2], t }, inverse: function (t, e) { return t[0] = 1 / e[0], t[1] = 1 / e[1], t[2] = 1 / e[2], t }, normalize: Jt, dot: $t, cross: te, lerp: function (t, e, n, r) { var i = e[0], o = e[1], a = e[2]; return t[0] = i + r * (n[0] - i), t[1] = o + r * (n[1] - o), t[2] = a + r * (n[2] - a), t }, hermite: function (t, e, n, r, i, o) { var a = o * o, s = a * (2 * o - 3) + 1, u = a * (o - 2) + o, h = a * (o - 1), c = a * (3 - 2 * o); return t[0] = e[0] * s + n[0] * u + r[0] * h + i[0] * c, t[1] = e[1] * s + n[1] * u + r[1] * h + i[1] * c, t[2] = e[2] * s + n[2] * u + r[2] * h + i[2] * c, t }, bezier: function (t, e, n, r, i, o) { var a = 1 - o, s = a * a, u = o * o, h = s * a, c = 3 * o * s, l = 3 * u * a, f = u * o; return t[0] = e[0] * h + n[0] * c + r[0] * l + i[0] * f, t[1] = e[1] * h + n[1] * c + r[1] * l + i[1] * f, t[2] = e[2] * h + n[2] * c + r[2] * l + i[2] * f, t }, random: function (t, e) { e = e || 1; var n = 2 * gt() * Math.PI, r = 2 * gt() - 1, i = Math.sqrt(1 - r * r) * e; return t[0] = Math.cos(n) * i, t[1] = Math.sin(n) * i, t[2] = r * e, t }, transformMat4: ee, transformMat3: ne, transformQuat: re, rotateX: ie, rotateY: oe, rotateZ: ae, angle: se, zero: function (t) { return t[0] = 0, t[1] = 0, t[2] = 0, t }, str: function (t) { return "vec3(" + t[0] + ", " + t[1] + ", " + t[2] + ")" }, exactEquals: function (t, e) { return t[0] === e[0] && t[1] === e[1] && t[2] === e[2] }, equals: ue, sub: he, mul: ce, div: le, dist: fe, sqrDist: de, len: pe, sqrLen: ve, forEach: me }); const ye = [0, 0, 0]; let _e, xe; class be extends pt { static get ZERO() { return _e || (_e = new be(0, 0, 0), Object.freeze(_e)), _e } constructor(t = 0, e = 0, n = 0) { super(-0, -0, -0), 1 === arguments.length && ht(t) ? this.copy(t) : (st.debug && (ft(t), ft(e), ft(n)), this[0] = t, this[1] = e, this[2] = n) } set(t, e, n) { return this[0] = t, this[1] = e, this[2] = n, this.check() } copy(t) { return this[0] = t[0], this[1] = t[1], this[2] = t[2], this.check() } fromObject(t) { return st.debug && (ft(t.x), ft(t.y), ft(t.z)), this[0] = t.x, this[1] = t.y, this[2] = t.z, this.check() } toObject(t) { return t.x = this[0], t.y = this[1], t.z = this[2], t } get ELEMENTS() { return 3 } get z() { return this[2] } set z(t) { this[2] = ft(t) } angle(t) { return se(this, t) } cross(t) { return te(this, this, t), this.check() } rotateX({ radians: t, origin: e = ye }) { return ie(this, this, e, t), this.check() } rotateY({ radians: t, origin: e = ye }) { return oe(this, this, e, t), this.check() } rotateZ({ radians: t, origin: e = ye }) { return ae(this, this, e, t), this.check() } transform(t) { return this.transformAsPoint(t) } transformAsPoint(t) { return ee(this, this, t), this.check() } transformAsVector(t) { return Nt(this, this, t), this.check() } transformByMatrix3(t) { return ne(this, this, t), this.check() } transformByMatrix2(t) { return function (t, e, n) { const r = e[0], i = e[1]; t[0] = n[0] * r + n[2] * i, t[1] = n[1] * r + n[3] * i, t[2] = e[2] }(this, this, t), this.check() } transformByQuaternion(t) { return re(this, this, t), this.check() } } class Me extends pt { static get ZERO() { return xe || (xe = new Me(0, 0, 0, 0), Object.freeze(xe)), xe } constructor(t = 0, e = 0, n = 0, r = 0) { super(-0, -0, -0, -0), ht(t) && 1 === arguments.length ? this.copy(t) : (st.debug && (ft(t), ft(e), ft(n), ft(r)), this[0] = t, this[1] = e, this[2] = n, this[3] = r) } set(t, e, n, r) { return this[0] = t, this[1] = e, this[2] = n, this[3] = r, this.check() } copy(t) { return this[0] = t[0], this[1] = t[1], this[2] = t[2], this[3] = t[3], this.check() } fromObject(t) { return st.debug && (ft(t.x), ft(t.y), ft(t.z), ft(t.w)), this[0] = t.x, this[1] = t.y, this[2] = t.z, this[3] = t.w, this } toObject(t) { return t.x = this[0], t.y = this[1], t.z = this[2], t.w = this[3], t } get ELEMENTS() { return 4 } get z() { return this[2] } set z(t) { this[2] = ft(t) } get w() { return this[3] } set w(t) { this[3] = ft(t) } transform(t) { return ee(this, this, t), this.check() } transformByMatrix3(t) { return function (t, e, n) { const r = e[0], i = e[1], o = e[2]; t[0] = n[0] * r + n[3] * i + n[6] * o, t[1] = n[1] * r + n[4] * i + n[7] * o, t[2] = n[2] * r + n[5] * i + n[8] * o, t[3] = e[3] }(this, this, t), this.check() } transformByMatrix2(t) { return function (t, e, n) { const r = e[0], i = e[1]; t[0] = n[0] * r + n[2] * i, t[1] = n[1] * r + n[3] * i, t[2] = e[2], t[3] = e[3] }(this, this, t), this.check() } transformByQuaternion(t) { return re(this, this, t), this.check() } applyMatrix4(t) { return t.transform(this, this), this } } class we extends lt { toString() { let t = "["; if (st.printRowMajor) { t += "row-major:"; for (let e = 0; e < this.RANK; ++e)for (let n = 0; n < this.RANK; ++n)t += " ".concat(this[n * this.RANK + e]) } else { t += "column-major:"; for (let e = 0; e < this.ELEMENTS; ++e)t += " ".concat(this[e]) } return t += "]", t } getElementIndex(t, e) { return e * this.RANK + t } getElement(t, e) { return this[e * this.RANK + t] } setElement(t, e, n) { return this[e * this.RANK + t] = ft(n), this } getColumn(t, e = new Array(this.RANK).fill(-0)) { const n = t * this.RANK; for (let t = 0; t < this.RANK; ++t)e[t] = this[n + t]; return e } setColumn(t, e) { const n = t * this.RANK; for (let t = 0; t < this.RANK; ++t)this[n + t] = e[t]; return this } } function Ee() { var t = new mt(9); return mt != Float32Array && (t[1] = 0, t[2] = 0, t[3] = 0, t[5] = 0, t[6] = 0, t[7] = 0), t[0] = 1, t[4] = 1, t[8] = 1, t } function Te(t, e, n) { var r = e[0], i = e[1], o = e[2], a = e[3], s = e[4], u = e[5], h = e[6], c = e[7], l = e[8], f = n[0], d = n[1], p = n[2], v = n[3], m = n[4], g = n[5], y = n[6], _ = n[7], x = n[8]; return t[0] = f * r + d * a + p * h, t[1] = f * i + d * s + p * c, t[2] = f * o + d * u + p * l, t[3] = v * r + m * a + g * h, t[4] = v * i + m * s + g * c, t[5] = v * o + m * u + g * l, t[6] = y * r + _ * a + x * h, t[7] = y * i + _ * s + x * c, t[8] = y * o + _ * u + x * l, t } function Ae(t, e, n) { return t[0] = e[0] - n[0], t[1] = e[1] - n[1], t[2] = e[2] - n[2], t[3] = e[3] - n[3], t[4] = e[4] - n[4], t[5] = e[5] - n[5], t[6] = e[6] - n[6], t[7] = e[7] - n[7], t[8] = e[8] - n[8], t } var Ce = Te, Re = Ae, Se = Object.freeze({ __proto__: null, create: Ee, fromMat4: function (t, e) { return t[0] = e[0], t[1] = e[1], t[2] = e[2], t[3] = e[4], t[4] = e[5], t[5] = e[6], t[6] = e[8], t[7] = e[9], t[8] = e[10], t }, clone: function (t) { var e = new mt(9); return e[0] = t[0], e[1] = t[1], e[2] = t[2], e[3] = t[3], e[4] = t[4], e[5] = t[5], e[6] = t[6], e[7] = t[7], e[8] = t[8], e }, copy: function (t, e) { return t[0] = e[0], t[1] = e[1], t[2] = e[2], t[3] = e[3], t[4] = e[4], t[5] = e[5], t[6] = e[6], t[7] = e[7], t[8] = e[8], t }, fromValues: function (t, e, n, r, i, o, a, s, u) { var h = new mt(9); return h[0] = t, h[1] = e, h[2] = n, h[3] = r, h[4] = i, h[5] = o, h[6] = a, h[7] = s, h[8] = u, h }, set: function (t, e, n, r, i, o, a, s, u, h) { return t[0] = e, t[1] = n, t[2] = r, t[3] = i, t[4] = o, t[5] = a, t[6] = s, t[7] = u, t[8] = h, t }, identity: function (t) { return t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 1, t[5] = 0, t[6] = 0, t[7] = 0, t[8] = 1, t }, transpose: function (t, e) { if (t === e) { var n = e[1], r = e[2], i = e[5]; t[1] = e[3], t[2] = e[6], t[3] = n, t[5] = e[7], t[6] = r, t[7] = i } else t[0] = e[0], t[1] = e[3], t[2] = e[6], t[3] = e[1], t[4] = e[4], t[5] = e[7], t[6] = e[2], t[7] = e[5], t[8] = e[8]; return t }, invert: function (t, e) { var n = e[0], r = e[1], i = e[2], o = e[3], a = e[4], s = e[5], u = e[6], h = e[7], c = e[8], l = c * a - s * h, f = -c * o + s * u, d = h * o - a * u, p = n * l + r * f + i * d; return p ? (p = 1 / p, t[0] = l * p, t[1] = (-c * r + i * h) * p, t[2] = (s * r - i * a) * p, t[3] = f * p, t[4] = (c * n - i * u) * p, t[5] = (-s * n + i * o) * p, t[6] = d * p, t[7] = (-h * n + r * u) * p, t[8] = (a * n - r * o) * p, t) : null }, adjoint: function (t, e) { var n = e[0], r = e[1], i = e[2], o = e[3], a = e[4], s = e[5], u = e[6], h = e[7], c = e[8]; return t[0] = a * c - s * h, t[1] = i * h - r * c, t[2] = r * s - i * a, t[3] = s * u - o * c, t[4] = n * c - i * u, t[5] = i * o - n * s, t[6] = o * h - a * u, t[7] = r * u - n * h, t[8] = n * a - r * o, t }, determinant: function (t) { var e = t[0], n = t[1], r = t[2], i = t[3], o = t[4], a = t[5], s = t[6], u = t[7], h = t[8]; return e * (h * o - a * u) + n * (-h * i + a * s) + r * (u * i - o * s) }, multiply: Te, translate: function (t, e, n) { var r = e[0], i = e[1], o = e[2], a = e[3], s = e[4], u = e[5], h = e[6], c = e[7], l = e[8], f = n[0], d = n[1]; return t[0] = r, t[1] = i, t[2] = o, t[3] = a, t[4] = s, t[5] = u, t[6] = f * r + d * a + h, t[7] = f * i + d * s + c, t[8] = f * o + d * u + l, t }, rotate: function (t, e, n) { var r = e[0], i = e[1], o = e[2], a = e[3], s = e[4], u = e[5], h = e[6], c = e[7], l = e[8], f = Math.sin(n), d = Math.cos(n); return t[0] = d * r + f * a, t[1] = d * i + f * s, t[2] = d * o + f * u, t[3] = d * a - f * r, t[4] = d * s - f * i, t[5] = d * u - f * o, t[6] = h, t[7] = c, t[8] = l, t }, scale: function (t, e, n) { var r = n[0], i = n[1]; return t[0] = r * e[0], t[1] = r * e[1], t[2] = r * e[2], t[3] = i * e[3], t[4] = i * e[4], t[5] = i * e[5], t[6] = e[6], t[7] = e[7], t[8] = e[8], t }, fromTranslation: function (t, e) { return t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 1, t[5] = 0, t[6] = e[0], t[7] = e[1], t[8] = 1, t }, fromRotation: function (t, e) { var n = Math.sin(e), r = Math.cos(e); return t[0] = r, t[1] = n, t[2] = 0, t[3] = -n, t[4] = r, t[5] = 0, t[6] = 0, t[7] = 0, t[8] = 1, t }, fromScaling: function (t, e) { return t[0] = e[0], t[1] = 0, t[2] = 0, t[3] = 0, t[4] = e[1], t[5] = 0, t[6] = 0, t[7] = 0, t[8] = 1, t }, fromMat2d: function (t, e) { return t[0] = e[0], t[1] = e[1], t[2] = 0, t[3] = e[2], t[4] = e[3], t[5] = 0, t[6] = e[4], t[7] = e[5], t[8] = 1, t }, fromQuat: function (t, e) { var n = e[0], r = e[1], i = e[2], o = e[3], a = n + n, s = r + r, u = i + i, h = n * a, c = r * a, l = r * s, f = i * a, d = i * s, p = i * u, v = o * a, m = o * s, g = o * u; return t[0] = 1 - l - p, t[3] = c - g, t[6] = f + m, t[1] = c + g, t[4] = 1 - h - p, t[7] = d - v, t[2] = f - m, t[5] = d + v, t[8] = 1 - h - l, t }, normalFromMat4: function (t, e) { var n = e[0], r = e[1], i = e[2], o = e[3], a = e[4], s = e[5], u = e[6], h = e[7], c = e[8], l = e[9], f = e[10], d = e[11], p = e[12], v = e[13], m = e[14], g = e[15], y = n * s - r * a, _ = n * u - i * a, x = n * h - o * a, b = r * u - i * s, M = r * h - o * s, w = i * h - o * u, E = c * v - l * p, T = c * m - f * p, A = c * g - d * p, C = l * m - f * v, R = l * g - d * v, S = f * g - d * m, P = y * S - _ * R + x * C + b * A - M * T + w * E; return P ? (P = 1 / P, t[0] = (s * S - u * R + h * C) * P, t[1] = (u * A - a * S - h * T) * P, t[2] = (a * R - s * A + h * E) * P, t[3] = (i * R - r * S - o * C) * P, t[4] = (n * S - i * A + o * T) * P, t[5] = (r * A - n * R - o * E) * P, t[6] = (v * w - m * M + g * b) * P, t[7] = (m * x - p * w - g * _) * P, t[8] = (p * M - v * x + g * y) * P, t) : null }, projection: function (t, e, n) { return t[0] = 2 / e, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = -2 / n, t[5] = 0, t[6] = -1, t[7] = 1, t[8] = 1, t }, str: function (t) { return "mat3(" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ", " + t[4] + ", " + t[5] + ", " + t[6] + ", " + t[7] + ", " + t[8] + ")" }, frob: function (t) { return Math.hypot(t[0], t[1], t[2], t[3], t[4], t[5], t[6], t[7], t[8]) }, add: function (t, e, n) { return t[0] = e[0] + n[0], t[1] = e[1] + n[1], t[2] = e[2] + n[2], t[3] = e[3] + n[3], t[4] = e[4] + n[4], t[5] = e[5] + n[5], t[6] = e[6] + n[6], t[7] = e[7] + n[7], t[8] = e[8] + n[8], t }, subtract: Ae, multiplyScalar: function (t, e, n) { return t[0] = e[0] * n, t[1] = e[1] * n, t[2] = e[2] * n, t[3] = e[3] * n, t[4] = e[4] * n, t[5] = e[5] * n, t[6] = e[6] * n, t[7] = e[7] * n, t[8] = e[8] * n, t }, multiplyScalarAndAdd: function (t, e, n, r) { return t[0] = e[0] + n[0] * r, t[1] = e[1] + n[1] * r, t[2] = e[2] + n[2] * r, t[3] = e[3] + n[3] * r, t[4] = e[4] + n[4] * r, t[5] = e[5] + n[5] * r, t[6] = e[6] + n[6] * r, t[7] = e[7] + n[7] * r, t[8] = e[8] + n[8] * r, t }, exactEquals: function (t, e) { return t[0] === e[0] && t[1] === e[1] && t[2] === e[2] && t[3] === e[3] && t[4] === e[4] && t[5] === e[5] && t[6] === e[6] && t[7] === e[7] && t[8] === e[8] }, equals: function (t, e) { var n = t[0], r = t[1], i = t[2], o = t[3], a = t[4], s = t[5], u = t[6], h = t[7], c = t[8], l = e[0], f = e[1], d = e[2], p = e[3], v = e[4], m = e[5], g = e[6], y = e[7], _ = e[8]; return Math.abs(n - l) <= vt * Math.max(1, Math.abs(n), Math.abs(l)) && Math.abs(r - f) <= vt * Math.max(1, Math.abs(r), Math.abs(f)) && Math.abs(i - d) <= vt * Math.max(1, Math.abs(i), Math.abs(d)) && Math.abs(o - p) <= vt * Math.max(1, Math.abs(o), Math.abs(p)) && Math.abs(a - v) <= vt * Math.max(1, Math.abs(a), Math.abs(v)) && Math.abs(s - m) <= vt * Math.max(1, Math.abs(s), Math.abs(m)) && Math.abs(u - g) <= vt * Math.max(1, Math.abs(u), Math.abs(g)) && Math.abs(h - y) <= vt * Math.max(1, Math.abs(h), Math.abs(y)) && Math.abs(c - _) <= vt * Math.max(1, Math.abs(c), Math.abs(_)) }, mul: Ce, sub: Re }); function Pe() { var t = new mt(16); return mt != Float32Array && (t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[6] = 0, t[7] = 0, t[8] = 0, t[9] = 0, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0), t[0] = 1, t[5] = 1, t[10] = 1, t[15] = 1, t } function De(t) { var e = new mt(16); return e[0] = t[0], e[1] = t[1], e[2] = t[2], e[3] = t[3], e[4] = t[4], e[5] = t[5], e[6] = t[6], e[7] = t[7], e[8] = t[8], e[9] = t[9], e[10] = t[10], e[11] = t[11], e[12] = t[12], e[13] = t[13], e[14] = t[14], e[15] = t[15], e } function Oe(t, e) { return t[0] = e[0], t[1] = e[1], t[2] = e[2], t[3] = e[3], t[4] = e[4], t[5] = e[5], t[6] = e[6], t[7] = e[7], t[8] = e[8], t[9] = e[9], t[10] = e[10], t[11] = e[11], t[12] = e[12], t[13] = e[13], t[14] = e[14], t[15] = e[15], t } function Ie(t) { return t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = 1, t[6] = 0, t[7] = 0, t[8] = 0, t[9] = 0, t[10] = 1, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, t } function Le(t, e) { if (t === e) { var n = e[1], r = e[2], i = e[3], o = e[6], a = e[7], s = e[11]; t[1] = e[4], t[2] = e[8], t[3] = e[12], t[4] = n, t[6] = e[9], t[7] = e[13], t[8] = r, t[9] = o, t[11] = e[14], t[12] = i, t[13] = a, t[14] = s } else t[0] = e[0], t[1] = e[4], t[2] = e[8], t[3] = e[12], t[4] = e[1], t[5] = e[5], t[6] = e[9], t[7] = e[13], t[8] = e[2], t[9] = e[6], t[10] = e[10], t[11] = e[14], t[12] = e[3], t[13] = e[7], t[14] = e[11], t[15] = e[15]; return t } function Be(t, e) { var n = e[0], r = e[1], i = e[2], o = e[3], a = e[4], s = e[5], u = e[6], h = e[7], c = e[8], l = e[9], f = e[10], d = e[11], p = e[12], v = e[13], m = e[14], g = e[15], y = n * s - r * a, _ = n * u - i * a, x = n * h - o * a, b = r * u - i * s, M = r * h - o * s, w = i * h - o * u, E = c * v - l * p, T = c * m - f * p, A = c * g - d * p, C = l * m - f * v, R = l * g - d * v, S = f * g - d * m, P = y * S - _ * R + x * C + b * A - M * T + w * E; return P ? (P = 1 / P, t[0] = (s * S - u * R + h * C) * P, t[1] = (i * R - r * S - o * C) * P, t[2] = (v * w - m * M + g * b) * P, t[3] = (f * M - l * w - d * b) * P, t[4] = (u * A - a * S - h * T) * P, t[5] = (n * S - i * A + o * T) * P, t[6] = (m * x - p * w - g * _) * P, t[7] = (c * w - f * x + d * _) * P, t[8] = (a * R - s * A + h * E) * P, t[9] = (r * A - n * R - o * E) * P, t[10] = (p * M - v * x + g * y) * P, t[11] = (l * x - c * M - d * y) * P, t[12] = (s * T - a * C - u * E) * P, t[13] = (n * C - r * T + i * E) * P, t[14] = (v * _ - p * b - m * y) * P, t[15] = (c * b - l * _ + f * y) * P, t) : null } function ke(t) { var e = t[0], n = t[1], r = t[2], i = t[3], o = t[4], a = t[5], s = t[6], u = t[7], h = t[8], c = t[9], l = t[10], f = t[11], d = t[12], p = t[13], v = t[14], m = t[15]; return (e * a - n * o) * (l * m - f * v) - (e * s - r * o) * (c * m - f * p) + (e * u - i * o) * (c * v - l * p) + (n * s - r * a) * (h * m - f * d) - (n * u - i * a) * (h * v - l * d) + (r * u - i * s) * (h * p - c * d) } function Ue(t, e, n) { var r = e[0], i = e[1], o = e[2], a = e[3], s = e[4], u = e[5], h = e[6], c = e[7], l = e[8], f = e[9], d = e[10], p = e[11], v = e[12], m = e[13], g = e[14], y = e[15], _ = n[0], x = n[1], b = n[2], M = n[3]; return t[0] = _ * r + x * s + b * l + M * v, t[1] = _ * i + x * u + b * f + M * m, t[2] = _ * o + x * h + b * d + M * g, t[3] = _ * a + x * c + b * p + M * y, _ = n[4], x = n[5], b = n[6], M = n[7], t[4] = _ * r + x * s + b * l + M * v, t[5] = _ * i + x * u + b * f + M * m, t[6] = _ * o + x * h + b * d + M * g, t[7] = _ * a + x * c + b * p + M * y, _ = n[8], x = n[9], b = n[10], M = n[11], t[8] = _ * r + x * s + b * l + M * v, t[9] = _ * i + x * u + b * f + M * m, t[10] = _ * o + x * h + b * d + M * g, t[11] = _ * a + x * c + b * p + M * y, _ = n[12], x = n[13], b = n[14], M = n[15], t[12] = _ * r + x * s + b * l + M * v, t[13] = _ * i + x * u + b * f + M * m, t[14] = _ * o + x * h + b * d + M * g, t[15] = _ * a + x * c + b * p + M * y, t } function Ne(t, e, n) { var r, i, o, a, s, u, h, c, l, f, d, p, v = n[0], m = n[1], g = n[2]; return e === t ? (t[12] = e[0] * v + e[4] * m + e[8] * g + e[12], t[13] = e[1] * v + e[5] * m + e[9] * g + e[13], t[14] = e[2] * v + e[6] * m + e[10] * g + e[14], t[15] = e[3] * v + e[7] * m + e[11] * g + e[15]) : (r = e[0], i = e[1], o = e[2], a = e[3], s = e[4], u = e[5], h = e[6], c = e[7], l = e[8], f = e[9], d = e[10], p = e[11], t[0] = r, t[1] = i, t[2] = o, t[3] = a, t[4] = s, t[5] = u, t[6] = h, t[7] = c, t[8] = l, t[9] = f, t[10] = d, t[11] = p, t[12] = r * v + s * m + l * g + e[12], t[13] = i * v + u * m + f * g + e[13], t[14] = o * v + h * m + d * g + e[14], t[15] = a * v + c * m + p * g + e[15]), t } function Fe(t, e, n) { var r = n[0], i = n[1], o = n[2]; return t[0] = e[0] * r, t[1] = e[1] * r, t[2] = e[2] * r, t[3] = e[3] * r, t[4] = e[4] * i, t[5] = e[5] * i, t[6] = e[6] * i, t[7] = e[7] * i, t[8] = e[8] * o, t[9] = e[9] * o, t[10] = e[10] * o, t[11] = e[11] * o, t[12] = e[12], t[13] = e[13], t[14] = e[14], t[15] = e[15], t } function je(t, e, n, r) { var i, o, a, s, u, h, c, l, f, d, p, v, m, g, y, _, x, b, M, w, E, T, A, C, R = r[0], S = r[1], P = r[2], D = Math.hypot(R, S, P); return D < vt ? null : (R *= D = 1 / D, S *= D, P *= D, i = Math.sin(n), a = 1 - (o = Math.cos(n)), s = e[0], u = e[1], h = e[2], c = e[3], l = e[4], f = e[5], d = e[6], p = e[7], v = e[8], m = e[9], g = e[10], y = e[11], _ = R * R * a + o, x = S * R * a + P * i, b = P * R * a - S * i, M = R * S * a - P * i, w = S * S * a + o, E = P * S * a + R * i, T = R * P * a + S * i, A = S * P * a - R * i, C = P * P * a + o, t[0] = s * _ + l * x + v * b, t[1] = u * _ + f * x + m * b, t[2] = h * _ + d * x + g * b, t[3] = c * _ + p * x + y * b, t[4] = s * M + l * w + v * E, t[5] = u * M + f * w + m * E, t[6] = h * M + d * w + g * E, t[7] = c * M + p * w + y * E, t[8] = s * T + l * A + v * C, t[9] = u * T + f * A + m * C, t[10] = h * T + d * A + g * C, t[11] = c * T + p * A + y * C, e !== t && (t[12] = e[12], t[13] = e[13], t[14] = e[14], t[15] = e[15]), t) } function ze(t, e, n) { var r = Math.sin(n), i = Math.cos(n), o = e[4], a = e[5], s = e[6], u = e[7], h = e[8], c = e[9], l = e[10], f = e[11]; return e !== t && (t[0] = e[0], t[1] = e[1], t[2] = e[2], t[3] = e[3], t[12] = e[12], t[13] = e[13], t[14] = e[14], t[15] = e[15]), t[4] = o * i + h * r, t[5] = a * i + c * r, t[6] = s * i + l * r, t[7] = u * i + f * r, t[8] = h * i - o * r, t[9] = c * i - a * r, t[10] = l * i - s * r, t[11] = f * i - u * r, t } function Ve(t, e, n) { var r = Math.sin(n), i = Math.cos(n), o = e[0], a = e[1], s = e[2], u = e[3], h = e[8], c = e[9], l = e[10], f = e[11]; return e !== t && (t[4] = e[4], t[5] = e[5], t[6] = e[6], t[7] = e[7], t[12] = e[12], t[13] = e[13], t[14] = e[14], t[15] = e[15]), t[0] = o * i - h * r, t[1] = a * i - c * r, t[2] = s * i - l * r, t[3] = u * i - f * r, t[8] = o * r + h * i, t[9] = a * r + c * i, t[10] = s * r + l * i, t[11] = u * r + f * i, t } function Ge(t, e, n) { var r = Math.sin(n), i = Math.cos(n), o = e[0], a = e[1], s = e[2], u = e[3], h = e[4], c = e[5], l = e[6], f = e[7]; return e !== t && (t[8] = e[8], t[9] = e[9], t[10] = e[10], t[11] = e[11], t[12] = e[12], t[13] = e[13], t[14] = e[14], t[15] = e[15]), t[0] = o * i + h * r, t[1] = a * i + c * r, t[2] = s * i + l * r, t[3] = u * i + f * r, t[4] = h * i - o * r, t[5] = c * i - a * r, t[6] = l * i - s * r, t[7] = f * i - u * r, t } function We(t, e, n) { var r = e[0], i = e[1], o = e[2], a = e[3], s = r + r, u = i + i, h = o + o, c = r * s, l = r * u, f = r * h, d = i * u, p = i * h, v = o * h, m = a * s, g = a * u, y = a * h; return t[0] = 1 - (d + v), t[1] = l + y, t[2] = f - g, t[3] = 0, t[4] = l - y, t[5] = 1 - (c + v), t[6] = p + m, t[7] = 0, t[8] = f + g, t[9] = p - m, t[10] = 1 - (c + d), t[11] = 0, t[12] = n[0], t[13] = n[1], t[14] = n[2], t[15] = 1, t } function He(t, e) { var n = e[0], r = e[1], i = e[2], o = e[4], a = e[5], s = e[6], u = e[8], h = e[9], c = e[10]; return t[0] = Math.hypot(n, r, i), t[1] = Math.hypot(o, a, s), t[2] = Math.hypot(u, h, c), t } function Ze(t, e) { var n = new mt(3); He(n, e); var r = 1 / n[0], i = 1 / n[1], o = 1 / n[2], a = e[0] * r, s = e[1] * i, u = e[2] * o, h = e[4] * r, c = e[5] * i, l = e[6] * o, f = e[8] * r, d = e[9] * i, p = e[10] * o, v = a + c + p, m = 0; return v > 0 ? (m = 2 * Math.sqrt(v + 1), t[3] = .25 * m, t[0] = (l - d) / m, t[1] = (f - u) / m, t[2] = (s - h) / m) : a > c && a > p ? (m = 2 * Math.sqrt(1 + a - c - p), t[3] = (l - d) / m, t[0] = .25 * m, t[1] = (s + h) / m, t[2] = (f + u) / m) : c > p ? (m = 2 * Math.sqrt(1 + c - a - p), t[3] = (f - u) / m, t[0] = (s + h) / m, t[1] = .25 * m, t[2] = (l + d) / m) : (m = 2 * Math.sqrt(1 + p - a - c), t[3] = (s - h) / m, t[0] = (f + u) / m, t[1] = (l + d) / m, t[2] = .25 * m), t } function qe(t, e, n, r) { var i = e[0], o = e[1], a = e[2], s = e[3], u = i + i, h = o + o, c = a + a, l = i * u, f = i * h, d = i * c, p = o * h, v = o * c, m = a * c, g = s * u, y = s * h, _ = s * c, x = r[0], b = r[1], M = r[2]; return t[0] = (1 - (p + m)) * x, t[1] = (f + _) * x, t[2] = (d - y) * x, t[3] = 0, t[4] = (f - _) * b, t[5] = (1 - (l + m)) * b, t[6] = (v + g) * b, t[7] = 0, t[8] = (d + y) * M, t[9] = (v - g) * M, t[10] = (1 - (l + p)) * M, t[11] = 0, t[12] = n[0], t[13] = n[1], t[14] = n[2], t[15] = 1, t } function Ye(t, e) { var n = e[0], r = e[1], i = e[2], o = e[3], a = n + n, s = r + r, u = i + i, h = n * a, c = r * a, l = r * s, f = i * a, d = i * s, p = i * u, v = o * a, m = o * s, g = o * u; return t[0] = 1 - l - p, t[1] = c + g, t[2] = f - m, t[3] = 0, t[4] = c - g, t[5] = 1 - h - p, t[6] = d + v, t[7] = 0, t[8] = f + m, t[9] = d - v, t[10] = 1 - h - l, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, t } function Xe(t, e, n, r, i, o, a) { var s = 1 / (n - e), u = 1 / (i - r), h = 1 / (o - a); return t[0] = 2 * o * s, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = 2 * o * u, t[6] = 0, t[7] = 0, t[8] = (n + e) * s, t[9] = (i + r) * u, t[10] = (a + o) * h, t[11] = -1, t[12] = 0, t[13] = 0, t[14] = a * o * 2 * h, t[15] = 0, t } function Ke(t, e, n, r, i) { var o, a = 1 / Math.tan(e / 2); return t[0] = a / n, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = a, t[6] = 0, t[7] = 0, t[8] = 0, t[9] = 0, t[11] = -1, t[12] = 0, t[13] = 0, t[15] = 0, null != i && i !== 1 / 0 ? (o = 1 / (r - i), t[10] = (i + r) * o, t[14] = 2 * i * r * o) : (t[10] = -1, t[14] = -2 * r), t } var Qe = Ke; function Je(t, e, n, r, i, o, a) { var s = 1 / (e - n), u = 1 / (r - i), h = 1 / (o - a); return t[0] = -2 * s, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = -2 * u, t[6] = 0, t[7] = 0, t[8] = 0, t[9] = 0, t[10] = 2 * h, t[11] = 0, t[12] = (e + n) * s, t[13] = (i + r) * u, t[14] = (a + o) * h, t[15] = 1, t } var $e = Je; function tn(t, e, n, r) { var i, o, a, s, u, h, c, l, f, d, p = e[0], v = e[1], m = e[2], g = r[0], y = r[1], _ = r[2], x = n[0], b = n[1], M = n[2]; return Math.abs(p - x) < vt && Math.abs(v - b) < vt && Math.abs(m - M) < vt ? Ie(t) : (c = p - x, l = v - b, f = m - M, i = y * (f *= d = 1 / Math.hypot(c, l, f)) - _ * (l *= d), o = _ * (c *= d) - g * f, a = g * l - y * c, (d = Math.hypot(i, o, a)) ? (i *= d = 1 / d, o *= d, a *= d) : (i = 0, o = 0, a = 0), s = l * a - f * o, u = f * i - c * a, h = c * o - l * i, (d = Math.hypot(s, u, h)) ? (s *= d = 1 / d, u *= d, h *= d) : (s = 0, u = 0, h = 0), t[0] = i, t[1] = s, t[2] = c, t[3] = 0, t[4] = o, t[5] = u, t[6] = l, t[7] = 0, t[8] = a, t[9] = h, t[10] = f, t[11] = 0, t[12] = -(i * p + o * v + a * m), t[13] = -(s * p + u * v + h * m), t[14] = -(c * p + l * v + f * m), t[15] = 1, t) } function en(t, e, n, r) { var i = e[0], o = e[1], a = e[2], s = r[0], u = r[1], h = r[2], c = i - n[0], l = o - n[1], f = a - n[2], d = c * c + l * l + f * f; d > 0 && (c *= d = 1 / Math.sqrt(d), l *= d, f *= d); var p = u * f - h * l, v = h * c - s * f, m = s * l - u * c; return (d = p * p + v * v + m * m) > 0 && (p *= d = 1 / Math.sqrt(d), v *= d, m *= d), t[0] = p, t[1] = v, t[2] = m, t[3] = 0, t[4] = l * m - f * v, t[5] = f * p - c * m, t[6] = c * v - l * p, t[7] = 0, t[8] = c, t[9] = l, t[10] = f, t[11] = 0, t[12] = i, t[13] = o, t[14] = a, t[15] = 1, t } function nn(t, e, n) { return t[0] = e[0] - n[0], t[1] = e[1] - n[1], t[2] = e[2] - n[2], t[3] = e[3] - n[3], t[4] = e[4] - n[4], t[5] = e[5] - n[5], t[6] = e[6] - n[6], t[7] = e[7] - n[7], t[8] = e[8] - n[8], t[9] = e[9] - n[9], t[10] = e[10] - n[10], t[11] = e[11] - n[11], t[12] = e[12] - n[12], t[13] = e[13] - n[13], t[14] = e[14] - n[14], t[15] = e[15] - n[15], t } var rn = Ue, on = nn, an = Object.freeze({ __proto__: null, create: Pe, clone: De, copy: Oe, fromValues: function (t, e, n, r, i, o, a, s, u, h, c, l, f, d, p, v) { var m = new mt(16); return m[0] = t, m[1] = e, m[2] = n, m[3] = r, m[4] = i, m[5] = o, m[6] = a, m[7] = s, m[8] = u, m[9] = h, m[10] = c, m[11] = l, m[12] = f, m[13] = d, m[14] = p, m[15] = v, m }, set: function (t, e, n, r, i, o, a, s, u, h, c, l, f, d, p, v, m) { return t[0] = e, t[1] = n, t[2] = r, t[3] = i, t[4] = o, t[5] = a, t[6] = s, t[7] = u, t[8] = h, t[9] = c, t[10] = l, t[11] = f, t[12] = d, t[13] = p, t[14] = v, t[15] = m, t }, identity: Ie, transpose: Le, invert: Be, adjoint: function (t, e) { var n = e[0], r = e[1], i = e[2], o = e[3], a = e[4], s = e[5], u = e[6], h = e[7], c = e[8], l = e[9], f = e[10], d = e[11], p = e[12], v = e[13], m = e[14], g = e[15]; return t[0] = s * (f * g - d * m) - l * (u * g - h * m) + v * (u * d - h * f), t[1] = -(r * (f * g - d * m) - l * (i * g - o * m) + v * (i * d - o * f)), t[2] = r * (u * g - h * m) - s * (i * g - o * m) + v * (i * h - o * u), t[3] = -(r * (u * d - h * f) - s * (i * d - o * f) + l * (i * h - o * u)), t[4] = -(a * (f * g - d * m) - c * (u * g - h * m) + p * (u * d - h * f)), t[5] = n * (f * g - d * m) - c * (i * g - o * m) + p * (i * d - o * f), t[6] = -(n * (u * g - h * m) - a * (i * g - o * m) + p * (i * h - o * u)), t[7] = n * (u * d - h * f) - a * (i * d - o * f) + c * (i * h - o * u), t[8] = a * (l * g - d * v) - c * (s * g - h * v) + p * (s * d - h * l), t[9] = -(n * (l * g - d * v) - c * (r * g - o * v) + p * (r * d - o * l)), t[10] = n * (s * g - h * v) - a * (r * g - o * v) + p * (r * h - o * s), t[11] = -(n * (s * d - h * l) - a * (r * d - o * l) + c * (r * h - o * s)), t[12] = -(a * (l * m - f * v) - c * (s * m - u * v) + p * (s * f - u * l)), t[13] = n * (l * m - f * v) - c * (r * m - i * v) + p * (r * f - i * l), t[14] = -(n * (s * m - u * v) - a * (r * m - i * v) + p * (r * u - i * s)), t[15] = n * (s * f - u * l) - a * (r * f - i * l) + c * (r * u - i * s), t }, determinant: ke, multiply: Ue, translate: Ne, scale: Fe, rotate: je, rotateX: ze, rotateY: Ve, rotateZ: Ge, fromTranslation: function (t, e) { return t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = 1, t[6] = 0, t[7] = 0, t[8] = 0, t[9] = 0, t[10] = 1, t[11] = 0, t[12] = e[0], t[13] = e[1], t[14] = e[2], t[15] = 1, t }, fromScaling: function (t, e) { return t[0] = e[0], t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = e[1], t[6] = 0, t[7] = 0, t[8] = 0, t[9] = 0, t[10] = e[2], t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, t }, fromRotation: function (t, e, n) { var r, i, o, a = n[0], s = n[1], u = n[2], h = Math.hypot(a, s, u); return h < vt ? null : (a *= h = 1 / h, s *= h, u *= h, r = Math.sin(e), o = 1 - (i = Math.cos(e)), t[0] = a * a * o + i, t[1] = s * a * o + u * r, t[2] = u * a * o - s * r, t[3] = 0, t[4] = a * s * o - u * r, t[5] = s * s * o + i, t[6] = u * s * o + a * r, t[7] = 0, t[8] = a * u * o + s * r, t[9] = s * u * o - a * r, t[10] = u * u * o + i, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, t) }, fromXRotation: function (t, e) { var n = Math.sin(e), r = Math.cos(e); return t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = r, t[6] = n, t[7] = 0, t[8] = 0, t[9] = -n, t[10] = r, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, t }, fromYRotation: function (t, e) { var n = Math.sin(e), r = Math.cos(e); return t[0] = r, t[1] = 0, t[2] = -n, t[3] = 0, t[4] = 0, t[5] = 1, t[6] = 0, t[7] = 0, t[8] = n, t[9] = 0, t[10] = r, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, t }, fromZRotation: function (t, e) { var n = Math.sin(e), r = Math.cos(e); return t[0] = r, t[1] = n, t[2] = 0, t[3] = 0, t[4] = -n, t[5] = r, t[6] = 0, t[7] = 0, t[8] = 0, t[9] = 0, t[10] = 1, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, t }, fromRotationTranslation: We, fromQuat2: function (t, e) { var n = new mt(3), r = -e[0], i = -e[1], o = -e[2], a = e[3], s = e[4], u = e[5], h = e[6], c = e[7], l = r * r + i * i + o * o + a * a; return l > 0 ? (n[0] = 2 * (s * a + c * r + u * o - h * i) / l, n[1] = 2 * (u * a + c * i + h * r - s * o) / l, n[2] = 2 * (h * a + c * o + s * i - u * r) / l) : (n[0] = 2 * (s * a + c * r + u * o - h * i), n[1] = 2 * (u * a + c * i + h * r - s * o), n[2] = 2 * (h * a + c * o + s * i - u * r)), We(t, e, n), t }, getTranslation: function (t, e) { return t[0] = e[12], t[1] = e[13], t[2] = e[14], t }, getScaling: He, getRotation: Ze, fromRotationTranslationScale: qe, fromRotationTranslationScaleOrigin: function (t, e, n, r, i) { var o = e[0], a = e[1], s = e[2], u = e[3], h = o + o, c = a + a, l = s + s, f = o * h, d = o * c, p = o * l, v = a * c, m = a * l, g = s * l, y = u * h, _ = u * c, x = u * l, b = r[0], M = r[1], w = r[2], E = i[0], T = i[1], A = i[2], C = (1 - (v + g)) * b, R = (d + x) * b, S = (p - _) * b, P = (d - x) * M, D = (1 - (f + g)) * M, O = (m + y) * M, I = (p + _) * w, L = (m - y) * w, B = (1 - (f + v)) * w; return t[0] = C, t[1] = R, t[2] = S, t[3] = 0, t[4] = P, t[5] = D, t[6] = O, t[7] = 0, t[8] = I, t[9] = L, t[10] = B, t[11] = 0, t[12] = n[0] + E - (C * E + P * T + I * A), t[13] = n[1] + T - (R * E + D * T + L * A), t[14] = n[2] + A - (S * E + O * T + B * A), t[15] = 1, t }, fromQuat: Ye, frustum: Xe, perspectiveNO: Ke, perspective: Qe, perspectiveZO: function (t, e, n, r, i) { var o, a = 1 / Math.tan(e / 2); return t[0] = a / n, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = a, t[6] = 0, t[7] = 0, t[8] = 0, t[9] = 0, t[11] = -1, t[12] = 0, t[13] = 0, t[15] = 0, null != i && i !== 1 / 0 ? (o = 1 / (r - i), t[10] = i * o, t[14] = i * r * o) : (t[10] = -1, t[14] = -r), t }, perspectiveFromFieldOfView: function (t, e, n, r) { var i = Math.tan(e.upDegrees * Math.PI / 180), o = Math.tan(e.downDegrees * Math.PI / 180), a = Math.tan(e.leftDegrees * Math.PI / 180), s = Math.tan(e.rightDegrees * Math.PI / 180), u = 2 / (a + s), h = 2 / (i + o); return t[0] = u, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = h, t[6] = 0, t[7] = 0, t[8] = -(a - s) * u * .5, t[9] = (i - o) * h * .5, t[10] = r / (n - r), t[11] = -1, t[12] = 0, t[13] = 0, t[14] = r * n / (n - r), t[15] = 0, t }, orthoNO: Je, ortho: $e, orthoZO: function (t, e, n, r, i, o, a) { var s = 1 / (e - n), u = 1 / (r - i), h = 1 / (o - a); return t[0] = -2 * s, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = -2 * u, t[6] = 0, t[7] = 0, t[8] = 0, t[9] = 0, t[10] = h, t[11] = 0, t[12] = (e + n) * s, t[13] = (i + r) * u, t[14] = o * h, t[15] = 1, t }, lookAt: tn, targetTo: en, str: function (t) { return "mat4(" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ", " + t[4] + ", " + t[5] + ", " + t[6] + ", " + t[7] + ", " + t[8] + ", " + t[9] + ", " + t[10] + ", " + t[11] + ", " + t[12] + ", " + t[13] + ", " + t[14] + ", " + t[15] + ")" }, frob: function (t) { return Math.hypot(t[0], t[1], t[2], t[3], t[4], t[5], t[6], t[7], t[8], t[9], t[10], t[11], t[12], t[13], t[14], t[15]) }, add: function (t, e, n) { return t[0] = e[0] + n[0], t[1] = e[1] + n[1], t[2] = e[2] + n[2], t[3] = e[3] + n[3], t[4] = e[4] + n[4], t[5] = e[5] + n[5], t[6] = e[6] + n[6], t[7] = e[7] + n[7], t[8] = e[8] + n[8], t[9] = e[9] + n[9], t[10] = e[10] + n[10], t[11] = e[11] + n[11], t[12] = e[12] + n[12], t[13] = e[13] + n[13], t[14] = e[14] + n[14], t[15] = e[15] + n[15], t }, subtract: nn, multiplyScalar: function (t, e, n) { return t[0] = e[0] * n, t[1] = e[1] * n, t[2] = e[2] * n, t[3] = e[3] * n, t[4] = e[4] * n, t[5] = e[5] * n, t[6] = e[6] * n, t[7] = e[7] * n, t[8] = e[8] * n, t[9] = e[9] * n, t[10] = e[10] * n, t[11] = e[11] * n, t[12] = e[12] * n, t[13] = e[13] * n, t[14] = e[14] * n, t[15] = e[15] * n, t }, multiplyScalarAndAdd: function (t, e, n, r) { return t[0] = e[0] + n[0] * r, t[1] = e[1] + n[1] * r, t[2] = e[2] + n[2] * r, t[3] = e[3] + n[3] * r, t[4] = e[4] + n[4] * r, t[5] = e[5] + n[5] * r, t[6] = e[6] + n[6] * r, t[7] = e[7] + n[7] * r, t[8] = e[8] + n[8] * r, t[9] = e[9] + n[9] * r, t[10] = e[10] + n[10] * r, t[11] = e[11] + n[11] * r, t[12] = e[12] + n[12] * r, t[13] = e[13] + n[13] * r, t[14] = e[14] + n[14] * r, t[15] = e[15] + n[15] * r, t }, exactEquals: function (t, e) { return t[0] === e[0] && t[1] === e[1] && t[2] === e[2] && t[3] === e[3] && t[4] === e[4] && t[5] === e[5] && t[6] === e[6] && t[7] === e[7] && t[8] === e[8] && t[9] === e[9] && t[10] === e[10] && t[11] === e[11] && t[12] === e[12] && t[13] === e[13] && t[14] === e[14] && t[15] === e[15] }, equals: function (t, e) { var n = t[0], r = t[1], i = t[2], o = t[3], a = t[4], s = t[5], u = t[6], h = t[7], c = t[8], l = t[9], f = t[10], d = t[11], p = t[12], v = t[13], m = t[14], g = t[15], y = e[0], _ = e[1], x = e[2], b = e[3], M = e[4], w = e[5], E = e[6], T = e[7], A = e[8], C = e[9], R = e[10], S = e[11], P = e[12], D = e[13], O = e[14], I = e[15]; return Math.abs(n - y) <= vt * Math.max(1, Math.abs(n), Math.abs(y)) && Math.abs(r - _) <= vt * Math.max(1, Math.abs(r), Math.abs(_)) && Math.abs(i - x) <= vt * Math.max(1, Math.abs(i), Math.abs(x)) && Math.abs(o - b) <= vt * Math.max(1, Math.abs(o), Math.abs(b)) && Math.abs(a - M) <= vt * Math.max(1, Math.abs(a), Math.abs(M)) && Math.abs(s - w) <= vt * Math.max(1, Math.abs(s), Math.abs(w)) && Math.abs(u - E) <= vt * Math.max(1, Math.abs(u), Math.abs(E)) && Math.abs(h - T) <= vt * Math.max(1, Math.abs(h), Math.abs(T)) && Math.abs(c - A) <= vt * Math.max(1, Math.abs(c), Math.abs(A)) && Math.abs(l - C) <= vt * Math.max(1, Math.abs(l), Math.abs(C)) && Math.abs(f - R) <= vt * Math.max(1, Math.abs(f), Math.abs(R)) && Math.abs(d - S) <= vt * Math.max(1, Math.abs(d), Math.abs(S)) && Math.abs(p - P) <= vt * Math.max(1, Math.abs(p), Math.abs(P)) && Math.abs(v - D) <= vt * Math.max(1, Math.abs(v), Math.abs(D)) && Math.abs(m - O) <= vt * Math.max(1, Math.abs(m), Math.abs(O)) && Math.abs(g - I) <= vt * Math.max(1, Math.abs(g), Math.abs(I)) }, mul: rn, sub: on }); function sn() { var t = new mt(4); return mt != Float32Array && (t[0] = 0, t[1] = 0, t[2] = 0, t[3] = 0), t } function un(t) { var e = new mt(4); return e[0] = t[0], e[1] = t[1], e[2] = t[2], e[3] = t[3], e } function hn(t, e, n, r) { var i = new mt(4); return i[0] = t, i[1] = e, i[2] = n, i[3] = r, i } function cn(t, e) { return t[0] = e[0], t[1] = e[1], t[2] = e[2], t[3] = e[3], t } function ln(t, e, n, r, i) { return t[0] = e, t[1] = n, t[2] = r, t[3] = i, t } function fn(t, e, n) { return t[0] = e[0] + n[0], t[1] = e[1] + n[1], t[2] = e[2] + n[2], t[3] = e[3] + n[3], t } function dn(t, e, n) { return t[0] = e[0] - n[0], t[1] = e[1] - n[1], t[2] = e[2] - n[2], t[3] = e[3] - n[3], t } function pn(t, e, n) { return t[0] = e[0] * n[0], t[1] = e[1] * n[1], t[2] = e[2] * n[2], t[3] = e[3] * n[3], t } function vn(t, e, n) { return t[0] = e[0] / n[0], t[1] = e[1] / n[1], t[2] = e[2] / n[2], t[3] = e[3] / n[3], t } function mn(t, e, n) { return t[0] = e[0] * n, t[1] = e[1] * n, t[2] = e[2] * n, t[3] = e[3] * n, t } function gn(t, e) { var n = e[0] - t[0], r = e[1] - t[1], i = e[2] - t[2], o = e[3] - t[3]; return Math.hypot(n, r, i, o) } function yn(t, e) { var n = e[0] - t[0], r = e[1] - t[1], i = e[2] - t[2], o = e[3] - t[3]; return n * n + r * r + i * i + o * o } function _n(t) { var e = t[0], n = t[1], r = t[2], i = t[3]; return Math.hypot(e, n, r, i) } function xn(t) { var e = t[0], n = t[1], r = t[2], i = t[3]; return e * e + n * n + r * r + i * i } function bn(t, e) { var n = e[0], r = e[1], i = e[2], o = e[3], a = n * n + r * r + i * i + o * o; return a > 0 && (a = 1 / Math.sqrt(a)), t[0] = n * a, t[1] = r * a, t[2] = i * a, t[3] = o * a, t } function Mn(t, e) { return t[0] * e[0] + t[1] * e[1] + t[2] * e[2] + t[3] * e[3] } function wn(t, e, n, r) { var i = e[0], o = e[1], a = e[2], s = e[3]; return t[0] = i + r * (n[0] - i), t[1] = o + r * (n[1] - o), t[2] = a + r * (n[2] - a), t[3] = s + r * (n[3] - s), t } function En(t, e, n) { var r = e[0], i = e[1], o = e[2], a = e[3]; return t[0] = n[0] * r + n[4] * i + n[8] * o + n[12] * a, t[1] = n[1] * r + n[5] * i + n[9] * o + n[13] * a, t[2] = n[2] * r + n[6] * i + n[10] * o + n[14] * a, t[3] = n[3] * r + n[7] * i + n[11] * o + n[15] * a, t } function Tn(t, e) { return t[0] === e[0] && t[1] === e[1] && t[2] === e[2] && t[3] === e[3] } function An(t, e) { var n = t[0], r = t[1], i = t[2], o = t[3], a = e[0], s = e[1], u = e[2], h = e[3]; return Math.abs(n - a) <= vt * Math.max(1, Math.abs(n), Math.abs(a)) && Math.abs(r - s) <= vt * Math.max(1, Math.abs(r), Math.abs(s)) && Math.abs(i - u) <= vt * Math.max(1, Math.abs(i), Math.abs(u)) && Math.abs(o - h) <= vt * Math.max(1, Math.abs(o), Math.abs(h)) } var Cn, Rn = dn, Sn = pn, Pn = vn, Dn = gn, On = yn, In = _n, Ln = xn, Bn = function () { var t = sn(); return function (e, n, r, i, o, a) { var s, u; for (n || (n = 4), r || (r = 0), u = i ? Math.min(i * n + r, e.length) : e.length, s = r; s < u; s += n)t[0] = e[s], t[1] = e[s + 1], t[2] = e[s + 2], t[3] = e[s + 3], o(t, t, a), e[s] = t[0], e[s + 1] = t[1], e[s + 2] = t[2], e[s + 3] = t[3]; return e } }(), kn = Object.freeze({ __proto__: null, create: sn, clone: un, fromValues: hn, copy: cn, set: ln, add: fn, subtract: dn, multiply: pn, divide: vn, ceil: function (t, e) { return t[0] = Math.ceil(e[0]), t[1] = Math.ceil(e[1]), t[2] = Math.ceil(e[2]), t[3] = Math.ceil(e[3]), t }, floor: function (t, e) { return t[0] = Math.floor(e[0]), t[1] = Math.floor(e[1]), t[2] = Math.floor(e[2]), t[3] = Math.floor(e[3]), t }, min: function (t, e, n) { return t[0] = Math.min(e[0], n[0]), t[1] = Math.min(e[1], n[1]), t[2] = Math.min(e[2], n[2]), t[3] = Math.min(e[3], n[3]), t }, max: function (t, e, n) { return t[0] = Math.max(e[0], n[0]), t[1] = Math.max(e[1], n[1]), t[2] = Math.max(e[2], n[2]), t[3] = Math.max(e[3], n[3]), t }, round: function (t, e) { return t[0] = Math.round(e[0]), t[1] = Math.round(e[1]), t[2] = Math.round(e[2]), t[3] = Math.round(e[3]), t }, scale: mn, scaleAndAdd: function (t, e, n, r) { return t[0] = e[0] + n[0] * r, t[1] = e[1] + n[1] * r, t[2] = e[2] + n[2] * r, t[3] = e[3] + n[3] * r, t }, distance: gn, squaredDistance: yn, length: _n, squaredLength: xn, negate: function (t, e) { return t[0] = -e[0], t[1] = -e[1], t[2] = -e[2], t[3] = -e[3], t }, inverse: function (t, e) { return t[0] = 1 / e[0], t[1] = 1 / e[1], t[2] = 1 / e[2], t[3] = 1 / e[3], t }, normalize: bn, dot: Mn, cross: function (t, e, n, r) { var i = n[0] * r[1] - n[1] * r[0], o = n[0] * r[2] - n[2] * r[0], a = n[0] * r[3] - n[3] * r[0], s = n[1] * r[2] - n[2] * r[1], u = n[1] * r[3] - n[3] * r[1], h = n[2] * r[3] - n[3] * r[2], c = e[0], l = e[1], f = e[2], d = e[3]; return t[0] = l * h - f * u + d * s, t[1] = -c * h + f * a - d * o, t[2] = c * u - l * a + d * i, t[3] = -c * s + l * o - f * i, t }, lerp: wn, random: function (t, e) { var n, r, i, o, a, s; e = e || 1; do { a = (n = 2 * gt() - 1) * n + (r = 2 * gt() - 1) * r } while (a >= 1); do { s = (i = 2 * gt() - 1) * i + (o = 2 * gt() - 1) * o } while (s >= 1); var u = Math.sqrt((1 - a) / s); return t[0] = e * n, t[1] = e * r, t[2] = e * i * u, t[3] = e * o * u, t }, transformMat4: En, transformQuat: function (t, e, n) { var r = e[0], i = e[1], o = e[2], a = n[0], s = n[1], u = n[2], h = n[3], c = h * r + s * o - u * i, l = h * i + u * r - a * o, f = h * o + a * i - s * r, d = -a * r - s * i - u * o; return t[0] = c * h + d * -a + l * -u - f * -s, t[1] = l * h + d * -s + f * -a - c * -u, t[2] = f * h + d * -u + c * -s - l * -a, t[3] = e[3], t }, zero: function (t) { return t[0] = 0, t[1] = 0, t[2] = 0, t[3] = 0, t }, str: function (t) { return "vec4(" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ")" }, exactEquals: Tn, equals: An, sub: Rn, mul: Sn, div: Pn, dist: Dn, sqrDist: On, len: In, sqrLen: Ln, forEach: Bn }); !function (t) { t[t.COL0ROW0 = 0] = "COL0ROW0", t[t.COL0ROW1 = 1] = "COL0ROW1", t[t.COL0ROW2 = 2] = "COL0ROW2", t[t.COL0ROW3 = 3] = "COL0ROW3", t[t.COL1ROW0 = 4] = "COL1ROW0", t[t.COL1ROW1 = 5] = "COL1ROW1", t[t.COL1ROW2 = 6] = "COL1ROW2", t[t.COL1ROW3 = 7] = "COL1ROW3", t[t.COL2ROW0 = 8] = "COL2ROW0", t[t.COL2ROW1 = 9] = "COL2ROW1", t[t.COL2ROW2 = 10] = "COL2ROW2", t[t.COL2ROW3 = 11] = "COL2ROW3", t[t.COL3ROW0 = 12] = "COL3ROW0", t[t.COL3ROW1 = 13] = "COL3ROW1", t[t.COL3ROW2 = 14] = "COL3ROW2", t[t.COL3ROW3 = 15] = "COL3ROW3" }(Cn || (Cn = {})); const Un = 45 * Math.PI / 180, Nn = 1, Fn = .1, jn = 500, zn = Object.freeze([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]); class Vn extends we { static get IDENTITY() { return function () { Wn || (Wn = new Vn, Object.freeze(Wn)); return Wn }() } static get ZERO() { return function () { Gn || (Gn = new Vn([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), Object.freeze(Gn)); return Gn }() } get ELEMENTS() { return 16 } get RANK() { return 4 } get INDICES() { return Cn } constructor(t) { super(-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0), 1 === arguments.length && Array.isArray(t) ? this.copy(t) : this.identity() } copy(t) { return this[0] = t[0], this[1] = t[1], this[2] = t[2], this[3] = t[3], this[4] = t[4], this[5] = t[5], this[6] = t[6], this[7] = t[7], this[8] = t[8], this[9] = t[9], this[10] = t[10], this[11] = t[11], this[12] = t[12], this[13] = t[13], this[14] = t[14], this[15] = t[15], this.check() } set(t, e, n, r, i, o, a, s, u, h, c, l, f, d, p, v) { return this[0] = t, this[1] = e, this[2] = n, this[3] = r, this[4] = i, this[5] = o, this[6] = a, this[7] = s, this[8] = u, this[9] = h, this[10] = c, this[11] = l, this[12] = f, this[13] = d, this[14] = p, this[15] = v, this.check() } setRowMajor(t, e, n, r, i, o, a, s, u, h, c, l, f, d, p, v) { return this[0] = t, this[1] = i, this[2] = u, this[3] = f, this[4] = e, this[5] = o, this[6] = h, this[7] = d, this[8] = n, this[9] = a, this[10] = c, this[11] = p, this[12] = r, this[13] = s, this[14] = l, this[15] = v, this.check() } toRowMajor(t) { return t[0] = this[0], t[1] = this[4], t[2] = this[8], t[3] = this[12], t[4] = this[1], t[5] = this[5], t[6] = this[9], t[7] = this[13], t[8] = this[2], t[9] = this[6], t[10] = this[10], t[11] = this[14], t[12] = this[3], t[13] = this[7], t[14] = this[11], t[15] = this[15], t } identity() { return this.copy(zn) } fromObject(t) { return this.check() } fromQuaternion(t) { return Ye(this, t), this.check() } frustum(t) { const { left: e, right: n, bottom: r, top: i, near: o = Fn, far: a = jn } = t; return a === 1 / 0 ? function (t, e, n, r, i, o) { const a = 2 * o / (n - e), s = 2 * o / (i - r), u = (n + e) / (n - e), h = (i + r) / (i - r), c = -1, l = -1, f = -2 * o; t[0] = a, t[1] = 0, t[2] = 0, t[3] = 0, t[4] = 0, t[5] = s, t[6] = 0, t[7] = 0, t[8] = u, t[9] = h, t[10] = c, t[11] = l, t[12] = 0, t[13] = 0, t[14] = f, t[15] = 0 }(this, e, n, r, i, o) : Xe(this, e, n, r, i, o, a), this.check() } lookAt(t) { const { eye: e, center: n = [0, 0, 0], up: r = [0, 1, 0] } = t; return tn(this, e, n, r), this.check() } ortho(t) { const { left: e, right: n, bottom: r, top: i, near: o = Fn, far: a = jn } = t; return $e(this, e, n, r, i, o, a), this.check() } orthographic(t) { const { fovy: e = Un, aspect: n = Nn, focalDistance: r = 1, near: i = Fn, far: o = jn } = t; Hn(e); const a = e / 2, s = r * Math.tan(a), u = s * n; return this.ortho({ left: -u, right: u, bottom: -s, top: s, near: i, far: o }) } perspective(t) { const { fovy: e = 45 * Math.PI / 180, aspect: n = 1, near: r = .1, far: i = 500 } = t; return Hn(e), Qe(this, e, n, r, i), this.check() } determinant() { return ke(this) } getScale(t = [-0, -0, -0]) { return t[0] = Math.sqrt(this[0] * this[0] + this[1] * this[1] + this[2] * this[2]), t[1] = Math.sqrt(this[4] * this[4] + this[5] * this[5] + this[6] * this[6]), t[2] = Math.sqrt(this[8] * this[8] + this[9] * this[9] + this[10] * this[10]), t } getTranslation(t = [-0, -0, -0]) { return t[0] = this[12], t[1] = this[13], t[2] = this[14], t } getRotation(t, e) { t = t || [-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0], e = e || [-0, -0, -0]; const n = this.getScale(e), r = 1 / n[0], i = 1 / n[1], o = 1 / n[2]; return t[0] = this[0] * r, t[1] = this[1] * i, t[2] = this[2] * o, t[3] = 0, t[4] = this[4] * r, t[5] = this[5] * i, t[6] = this[6] * o, t[7] = 0, t[8] = this[8] * r, t[9] = this[9] * i, t[10] = this[10] * o, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, t } getRotationMatrix3(t, e) { t = t || [-0, -0, -0, -0, -0, -0, -0, -0, -0], e = e || [-0, -0, -0]; const n = this.getScale(e), r = 1 / n[0], i = 1 / n[1], o = 1 / n[2]; return t[0] = this[0] * r, t[1] = this[1] * i, t[2] = this[2] * o, t[3] = this[4] * r, t[4] = this[5] * i, t[5] = this[6] * o, t[6] = this[8] * r, t[7] = this[9] * i, t[8] = this[10] * o, t } transpose() { return Le(this, this), this.check() } invert() { return Be(this, this), this.check() } multiplyLeft(t) { return Ue(this, t, this), this.check() } multiplyRight(t) { return Ue(this, this, t), this.check() } rotateX(t) { return ze(this, this, t), this.check() } rotateY(t) { return Ve(this, this, t), this.check() } rotateZ(t) { return Ge(this, this, t), this.check() } rotateXYZ(t) { return this.rotateX(t[0]).rotateY(t[1]).rotateZ(t[2]) } rotateAxis(t, e) { return je(this, this, t, e), this.check() } scale(t) { return Fe(this, this, Array.isArray(t) ? t : [t, t, t]), this.check() } translate(t) { return Ne(this, this, t), this.check() } transform(t, e) { return 4 === t.length ? (dt(e = En(e || [-0, -0, -0, -0], t, this), 4), e) : this.transformAsPoint(t, e) } transformAsPoint(t, e) { const { length: n } = t; let r; switch (n) { case 2: r = Ct(e || [-0, -0], t, this); break; case 3: r = ee(e || [-0, -0, -0], t, this); break; default: throw new Error("Illegal vector") }return dt(r, t.length), r } transformAsVector(t, e) { let n; switch (t.length) { case 2: n = function (t, e, n) { const r = e[0], i = e[1], o = n[3] * r + n[7] * i || 1; return t[0] = (n[0] * r + n[4] * i) / o, t[1] = (n[1] * r + n[5] * i) / o, t }(e || [-0, -0], t, this); break; case 3: n = Nt(e || [-0, -0, -0], t, this); break; default: throw new Error("Illegal vector") }return dt(n, t.length), n } transformPoint(t, e) { return this.transformAsPoint(t, e) } transformVector(t, e) { return this.transformAsPoint(t, e) } transformDirection(t, e) { return this.transformAsVector(t, e) } makeRotationX(t) { return this.identity().rotateX(t) } makeTranslation(t, e, n) { return this.identity().translate([t, e, n]) } } let Gn, Wn; function Hn(t) { if (t > 2 * Math.PI) throw Error("expected radians") } function Zn() { var t = new mt(4); return mt != Float32Array && (t[0] = 0, t[1] = 0, t[2] = 0), t[3] = 1, t } function qn(t) { return t[0] = 0, t[1] = 0, t[2] = 0, t[3] = 1, t } function Yn(t, e, n) { n *= .5; var r = Math.sin(n); return t[0] = r * e[0], t[1] = r * e[1], t[2] = r * e[2], t[3] = Math.cos(n), t } function Xn(t, e, n) { var r = e[0], i = e[1], o = e[2], a = e[3], s = n[0], u = n[1], h = n[2], c = n[3]; return t[0] = r * c + a * s + i * h - o * u, t[1] = i * c + a * u + o * s - r * h, t[2] = o * c + a * h + r * u - i * s, t[3] = a * c - r * s - i * u - o * h, t } function Kn(t, e) { var n = e[0], r = e[1], i = e[2], o = e[3], a = Math.sqrt(n * n + r * r + i * i), s = Math.exp(o), u = a > 0 ? s * Math.sin(a) / a : 0; return t[0] = n * u, t[1] = r * u, t[2] = i * u, t[3] = s * Math.cos(a), t } function Qn(t, e) { var n = e[0], r = e[1], i = e[2], o = e[3], a = Math.sqrt(n * n + r * r + i * i), s = a > 0 ? Math.atan2(a, o) / a : 0; return t[0] = n * s, t[1] = r * s, t[2] = i * s, t[3] = .5 * Math.log(n * n + r * r + i * i + o * o), t } function Jn(t, e, n, r) { var i, o, a, s, u, h = e[0], c = e[1], l = e[2], f = e[3], d = n[0], p = n[1], v = n[2], m = n[3]; return (o = h * d + c * p + l * v + f * m) < 0 && (o = -o, d = -d, p = -p, v = -v, m = -m), 1 - o > vt ? (i = Math.acos(o), a = Math.sin(i), s = Math.sin((1 - r) * i) / a, u = Math.sin(r * i) / a) : (s = 1 - r, u = r), t[0] = s * h + u * d, t[1] = s * c + u * p, t[2] = s * l + u * v, t[3] = s * f + u * m, t } function $n(t, e) { var n, r = e[0] + e[4] + e[8]; if (r > 0) n = Math.sqrt(r + 1), t[3] = .5 * n, n = .5 / n, t[0] = (e[5] - e[7]) * n, t[1] = (e[6] - e[2]) * n, t[2] = (e[1] - e[3]) * n; else { var i = 0; e[4] > e[0] && (i = 1), e[8] > e[3 * i + i] && (i = 2); var o = (i + 1) % 3, a = (i + 2) % 3; n = Math.sqrt(e[3 * i + i] - e[3 * o + o] - e[3 * a + a] + 1), t[i] = .5 * n, n = .5 / n, t[3] = (e[3 * o + a] - e[3 * a + o]) * n, t[o] = (e[3 * o + i] + e[3 * i + o]) * n, t[a] = (e[3 * a + i] + e[3 * i + a]) * n } return t } function tr(t, e, n, r) { var i = .5 * Math.PI / 180; e *= i, n *= i, r *= i; var o = Math.sin(e), a = Math.cos(e), s = Math.sin(n), u = Math.cos(n), h = Math.sin(r), c = Math.cos(r); return t[0] = o * u * c - a * s * h, t[1] = a * s * c + o * u * h, t[2] = a * u * h - o * s * c, t[3] = a * u * c + o * s * h, t } var er, nr, rr, ir, or, ar, sr = un, ur = hn, hr = cn, cr = ln, lr = fn, fr = Xn, dr = mn, pr = Mn, vr = wn, mr = _n, gr = mr, yr = xn, _r = yr, xr = bn, br = Tn, Mr = An, wr = (er = Ft(), nr = Vt(1, 0, 0), rr = Vt(0, 1, 0), function (t, e, n) { var r = $t(e, n); return r < -.999999 ? (te(er, nr, e), pe(er) < 1e-6 && te(er, rr, e), Jt(er, er), Yn(t, er, Math.PI), t) : r > .999999 ? (t[0] = 0, t[1] = 0, t[2] = 0, t[3] = 1, t) : (te(er, e, n), t[0] = er[0], t[1] = er[1], t[2] = er[2], t[3] = 1 + r, xr(t, t)) }), Er = (ir = Zn(), or = Zn(), function (t, e, n, r, i, o) { return Jn(ir, e, i, o), Jn(or, n, r, o), Jn(t, ir, or, 2 * o * (1 - o)), t }), Tr = (ar = Ee(), function (t, e, n, r) { return ar[0] = n[0], ar[3] = n[1], ar[6] = n[2], ar[1] = r[0], ar[4] = r[1], ar[7] = r[2], ar[2] = -e[0], ar[5] = -e[1], ar[8] = -e[2], xr(t, $n(t, ar)) }), Ar = Object.freeze({ __proto__: null, create: Zn, identity: qn, setAxisAngle: Yn, getAxisAngle: function (t, e) { var n = 2 * Math.acos(e[3]), r = Math.sin(n / 2); return r > vt ? (t[0] = e[0] / r, t[1] = e[1] / r, t[2] = e[2] / r) : (t[0] = 1, t[1] = 0, t[2] = 0), n }, getAngle: function (t, e) { var n = pr(t, e); return Math.acos(2 * n * n - 1) }, multiply: Xn, rotateX: function (t, e, n) { n *= .5; var r = e[0], i = e[1], o = e[2], a = e[3], s = Math.sin(n), u = Math.cos(n); return t[0] = r * u + a * s, t[1] = i * u + o * s, t[2] = o * u - i * s, t[3] = a * u - r * s, t }, rotateY: function (t, e, n) { n *= .5; var r = e[0], i = e[1], o = e[2], a = e[3], s = Math.sin(n), u = Math.cos(n); return t[0] = r * u - o * s, t[1] = i * u + a * s, t[2] = o * u + r * s, t[3] = a * u - i * s, t }, rotateZ: function (t, e, n) { n *= .5; var r = e[0], i = e[1], o = e[2], a = e[3], s = Math.sin(n), u = Math.cos(n); return t[0] = r * u + i * s, t[1] = i * u - r * s, t[2] = o * u + a * s, t[3] = a * u - o * s, t }, calculateW: function (t, e) { var n = e[0], r = e[1], i = e[2]; return t[0] = n, t[1] = r, t[2] = i, t[3] = Math.sqrt(Math.abs(1 - n * n - r * r - i * i)), t }, exp: Kn, ln: Qn, pow: function (t, e, n) { return Qn(t, e), dr(t, t, n), Kn(t, t), t }, slerp: Jn, random: function (t) { var e = gt(), n = gt(), r = gt(), i = Math.sqrt(1 - e), o = Math.sqrt(e); return t[0] = i * Math.sin(2 * Math.PI * n), t[1] = i * Math.cos(2 * Math.PI * n), t[2] = o * Math.sin(2 * Math.PI * r), t[3] = o * Math.cos(2 * Math.PI * r), t }, invert: function (t, e) { var n = e[0], r = e[1], i = e[2], o = e[3], a = n * n + r * r + i * i + o * o, s = a ? 1 / a : 0; return t[0] = -n * s, t[1] = -r * s, t[2] = -i * s, t[3] = o * s, t }, conjugate: function (t, e) { return t[0] = -e[0], t[1] = -e[1], t[2] = -e[2], t[3] = e[3], t }, fromMat3: $n, fromEuler: tr, str: function (t) { return "quat(" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ")" }, clone: sr, fromValues: ur, copy: hr, set: cr, add: lr, mul: fr, scale: dr, dot: pr, lerp: vr, length: mr, len: gr, squaredLength: yr, sqrLen: _r, normalize: xr, exactEquals: br, equals: Mr, rotationTo: wr, sqlerp: Er, setAxes: Tr }); function Cr(t) { return Cr = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) { return typeof t } : function (t) { return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t }, Cr(t) } var Rr = function (t) { return "[object String]" === Object.prototype.toString.call(t) }, Sr = function (t) { var e = "[object Function]" === Object.prototype.toString.call(t), n = "[object AsyncFunction]" === Object.prototype.toString.call(t); return e || n }, Pr = 365611; function Dr(t, e) { this.type = t, this.returnValue = !0, this.target = e || null, this.currentTarget = null } var Or = function () { function t() { this.__listeners = void 0 } var e = t.prototype; return e.on = function () { for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)e[n] = arguments[n]; this.alias("addEventListener")(e) }, e.off = function () { for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)e[n] = arguments[n]; this.alias("removeEventListener")(e) }, e.emit = function () { for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)e[n] = arguments[n]; this.alias("dispatchEvent")(e) }, e.addEventListener = function (t, e, n) { if (Sr(e)) { var r; !this.__listeners && (this.__listeners = {}); var i = this.__listeners; if ("string" == typeof n && n) { if (/[^\w-]/.test(n)) throw "nonstandard key:" + n; e.hashCode = n, r = n } !t.startsWith("on") && (t = "on" + t), "object" !== Cr(i[t]) && (i[t] = {}), r = r || (++Pr).toString(), e.hashCode = r, i[t][r] = e } }, e.removeEventListener = function (t, e) { if (Sr(e)) e = e.hashCode; else if (!Rr(e)) return; !this.__listeners && (this.__listeners = {}), !t.startsWith("on") && (t = "on" + t); var n = this.__listeners; n[t] && n[t][e] && delete n[t][e] }, e.dispatchEvent = function (t, e) { Rr(t) && (t = new Dr(t)), !this.__listeners && (this.__listeners = {}); var n = this.__listeners, r = t.type, i = e || t; if (t.target = t.target || this, t.currentTarget = this, 0 !== r.indexOf("on") && (r = "on".concat(r)), Sr(n[r]) && n[r].call(this, i), "object" === Cr(n[r])) for (var o in n[r]) Object.prototype.hasOwnProperty.call(n[r], o) && n[r][o].call(this, i); return t.returnValue }, e.alias = function (t) { var e = this; return function (n) { return e[t].apply(e, n) } }, t }(); function Ir(t, e) { var n = e[2], r = e[0], i = e[1], o = e[3], a = o * o, s = n * n, u = r * r, h = i * i, c = i * n - r * o, l = .4999999; return c < -l ? (t[0] = Math.PI / 2, t[1] = 2 * Math.atan2(i, o), t[2] = 0) : c > l ? (t[0] = -Math.PI / 2, t[1] = 2 * Math.atan2(i, o), t[2] = 0) : (t[0] = Math.asin(-2 * (n * i - r * o)), t[1] = Math.atan2(2 * (n * r + i * o), s - u - h + a), t[2] = Math.atan2(2 * (r * i + n * o), -s - u + h + a)), t } var Lr = function () { function t() { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0, n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : t.DefaultOrder; this.isEuler = !0, this._x = void 0, this._y = void 0, this._z = void 0, this._order = void 0, this._onChangeCallback = void 0, this._x = e, this._y = n, this._z = r, this._order = i, this._onChangeCallback = function () { } } var e = t.prototype; return e.set = function (t, e, n) { var r = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3]; return this._x = t, this._y = e, this._z = n, r && this._onChangeCallback(), this }, e.clone = function () { return new t(this._x, this._y, this._z, this._order) }, e.copy = function (t) { return t.isEuler ? (this._x = t._x, this._y = t._y, this._z = t._z, this._order = t._order, this._onChangeCallback(), this) : this }, e.equals = function (t) { return t._x === this._x && t._y === this._y && t._z === this._z && t._order === this._order }, e.toVector3 = function () { return Vt(this._x, this._y, this._z) }, e.onChange = function (t) { "function" == typeof t && (this._onChangeCallback = t) }, o(t, [{ key: "x", get: function () { return this._x }, set: function (t) { this._x = t, this._onChangeCallback() } }, { key: "y", get: function () { return this._y }, set: function (t) { this._y = t, this._onChangeCallback() } }, { key: "z", get: function () { return this._z }, set: function (t) { this._z = t, this._onChangeCallback() } }, { key: "order", get: function () { return this._order }, set: function (t) { this._order = t, this._onChangeCallback() } }]), t }(); function Br() { return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (function (t) { var e = 16 * Math.random() | 0; return ("x" === t ? e : 3 & e | 8).toString(16) })) } Lr.DefaultOrder = "XYZ"; var kr = function (t) { return 180 * t / Math.PI }, Ur = function (t) { function e() { var n; return (n = t.call(this) || this).isObject3D = !0, n.uuid = Br(), n.name = "", n.parent = null, n.children = [], n.visible = !0, n.position = Ft(), n.rotation = new Lr, n.scale = Vt(1, 1, 1), n.quaternion = Zn(), n.up = jt(e.DefaultUp), n.modelMatrix = Pe(), n.worldMatrix = Pe(), n.modelMatrixNeedUpdate = !1, n.worldMatrixNeedsUpdate = !1, n.rotation.onChange((function () { n.modelMatrixNeedUpdate = !0 })), n } c(e, t); var n = e.prototype; return n.rotateX = function (t) { this.rotation.x = t }, n.rotateY = function (t) { this.rotation.y = t }, n.rotateZ = function (t) { this.rotation.z = t }, n.translate = function (t, e, n) { var r = Vt(t, e, n); return this.position = Wt(this.position, this.position, r), this.modelMatrixNeedUpdate = !0, this }, n.setPosition = function (t, e, n) { var r = Vt(t, e, n); return ue(this.position, r) || (this.position = r, this.modelMatrixNeedUpdate = !0), this }, n.lookAt = function (t, e, n) { var r = this.up, i = this.position, o = Vt(t, e, n), a = en(Pe(), i, o, r), s = Ze(Zn(), a), u = Ir(Ft(), s); this.rotation.set(kr(u[0]), kr(u[1]), kr(u[2])) }, n.setVisible = function (t) { var e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1]; if (this.visible !== t && (this.visible = t, e)) for (var n = 0, r = this.children.length; n < r; n++)this.children[n].setVisible(t, e) }, n.setScale = function (t, e, n) { var r = Vt(t, e, n); return ue(this.scale, r) || (this.scale = r, this.modelMatrixNeedUpdate = !0), this }, n.updateMatrix = function () { Ie(this.modelMatrix), qn(this.quaternion), tr(this.quaternion, this.rotation.x, this.rotation.y, this.rotation.z), qe(this.modelMatrix, this.quaternion, this.position, this.scale), this.modelMatrixNeedUpdate = !1, this.worldMatrixNeedsUpdate = !0 }, n.updateWorldMatrix = function () { var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0]; !0 !== this.modelMatrixNeedUpdate && !0 !== t || this.updateMatrix(), !0 === this.worldMatrixNeedsUpdate && (this.parent ? Ue(this.worldMatrix, this.parent.worldMatrix, this.modelMatrix) : Oe(this.worldMatrix, this.modelMatrix), this.worldMatrixNeedsUpdate = !1, t = !0); for (var e = 0, n = this.children.length; e < n; e++)this.children[e].updateWorldMatrix(t) }, n.add = function (t) { if (t === this) return console.error("object3D.add: object can't be added as a child of itself. ==> ".concat(t)), this; if (t instanceof Array) { for (var e = 0, n = t.length; e < n; e++)this.add(t[e]); return this } return t && t.isObject3D ? (null !== t.parent && t.parent.remove(t), t.parent = this, this.children.push(t)) : console.error("Object3D.add: object not an instance of Object3D.", t), this }, n.remove = function (t) { if (t instanceof Array) { for (var e = 0, n = t.length; e < n; e++)this.remove(t[e]); return this } var r = this.children.indexOf(t); return -1 !== r && (t.parent = null, this.children.splice(r, 1)), this }, n.traverse = function (t) { t(this), this.children && this.children.length > 0 && this.children.forEach((function (e) { e.traverse(t) })) }, n.clone = function () { var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0], n = new e; if (n.up = jt(this.up), n.scale = jt(this.scale), n.position = jt(this.position), n.rotation = this.rotation.clone(), n.quaternion = sr(this.quaternion), n.modelMatrix = De(this.modelMatrix), n.worldMatrix = De(this.worldMatrix), n.visible = this.visible, this.children.length && t) for (var r = 0, i = this.children.length; r < i; r++)n.add(this.children[r].clone()); return n }, n.raycast = function (t) { return null }, e }(Or); Ur.DefaultUp = Vt(0, 1, 0); var Nr = function () { function t(t, e) { this.isBox = !0, this.min = void 0, this.max = void 0, this.min = void 0 !== t ? t : Vt(1 / 0, 1 / 0, 1 / 0), this.max = void 0 !== e ? e : Vt(-1 / 0, -1 / 0, -1 / 0) } var e = t.prototype; return e.set = function (t, e) { return Gt(this.min, t), Gt(this.max, e), this }, e.setFromBufferAttribute = function (t) { for (var e = 1 / 0, n = 1 / 0, r = 1 / 0, i = -1 / 0, o = -1 / 0, a = -1 / 0, s = t.array, u = t.count, h = t.itemSize, c = 0; c < u; c++) { var l = s[c * h], f = s[c * h + 1], d = s[c * h + 2]; l < e && (e = l), f < n && (n = f), d < r && (r = d), l > i && (i = l), f > o && (o = f), d > a && (a = d) } var p = Vt(e, n, r), v = Vt(i, o, a); return this.set(p, v), this }, e.getCenter = function () { return this.isInvalid() ? Ft() : Vt((this.max[0] + this.min[0]) / 2, (this.max[1] + this.min[1]) / 2, (this.max[2] + this.min[2]) / 2) }, e.isInvalid = function () { return this.max[0] < this.min[0] || this.max[1] < this.min[1] || this.max[2] < this.min[2] }, t }(), Fr = function () { function t(e, n, r) { var i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3]; if (this.isBufferAttribute = !0, this.name = "", this.type = void 0, this.array = void 0, this.itemSize = void 0, this.count = void 0, this.normalized = void 0, this.usage = void 0, this.needUpdate = void 0, Array.isArray(e)) throw new TypeError("BufferAttribute: array should be a Typed Array."); if (this.name = "BufferAttribute", this.array = e, this.itemSize = n, this.count = void 0 !== e ? e.length / n : 0, this.normalized = !0 === i, this.usage = 35044, this.needUpdate = !0, void 0 === r) { var o = this.array; this.type = t.FLOAT, o instanceof Int8Array ? this.type = t.BYTE : o instanceof Uint8Array ? this.type = t.UNSIGNED_BYTE : o instanceof Int16Array ? this.type = t.SHORT : o instanceof Uint16Array ? this.type = t.UNSIGNED_SHORT : o instanceof Int32Array ? this.type = t.INT : o instanceof Uint32Array && (this.type = t.UNSIGNED_INT) } else this.type = r } t.isBufferAttribute = function (e) { var n = !1; return e && e instanceof t && (n = !0), n }; var e = t.prototype; return e.setUsage = function (t) { return this.usage = t, this }, e.setArray = function (t) { return this.array.set(t), this }, t }(); Fr.BYTE = 5120, Fr.UNSIGNED_BYTE = 5121, Fr.SHORT = 5122, Fr.UNSIGNED_SHORT = 5123, Fr.INT = 5124, Fr.UNSIGNED_INT = 5125, Fr.FLOAT = 5126; var jr = function (t) { function e(e, n, r, i) { var o; return (o = t.call(this, new Uint8Array(e), n, r, i) || this).name = "Uint8BufferAttribute", o } return c(e, t), e }(Fr), zr = function (t) { function e(e, n, r, i) { var o; return (o = t.call(this, new Uint16Array(e), n, r, i) || this).name = "Uint16BufferAttribute", o } return c(e, t), e }(Fr), Vr = function (t) { function e(e, n, r, i) { var o; return (o = t.call(this, new Uint32Array(e), n, r, i) || this).name = "Uint32BufferAttribute", o } return c(e, t), e }(Fr), Gr = function (t) { function e(e, n, r, i) { var o; return (o = t.call(this, new Float32Array(e), n, r, i) || this).name = "Float32ArrayAttribute", o } return c(e, t), e }(Fr), Wr = function (t) { function e(e, n, r, i) { var o; if (Array.isArray(e)) { var a = function (t) { for (var e, n = Number.MAX_VALUE, r = -Number.MAX_VALUE, i = t.length - 1; i >= 0; i--)n > (e = t[i]) && (n = e), r < e && (r = e); return { min: n, max: r } }(e); o = new (a.max > 65535 ? Uint32Array : Uint16Array)(e) } else o = e; return t.call(this, o, n, r, i) || this } return c(e, t), e }(Fr), Hr = 0, Zr = function (t) { function e() { for (var e, n = arguments.length, r = new Array(n), i = 0; i < n; i++)r[i] = arguments[i]; return (e = t.call.apply(t, [this].concat(r)) || this).id = Hr++, e.uuid = Br(), e.name = "", e.type = "BufferGeometry", e.indexes = null, e.attributes = {}, e.__webglInit = !1, e.groupsNeedUpdate = !1, e.boundingBox = null, e } c(e, t); var n = e.prototype; return n.getIndexes = function () { return this.indexes }, n.getCenter = function () { return this.computeBoundingBox(), this.boundingBox ? this.boundingBox.getCenter() : void 0 }, n.setIndexes = function (t) { return Array.isArray(t) || ArrayBuffer.isView(t) ? this.indexes = new Wr(t, 1) : Wr.isBufferAttribute(t) && (this.indexes = t), this }, n.getAttribute = function (t) { return t ? this.attributes[t] : this.attributes }, n.setAttribute = function (t, e) { return t && Fr.isBufferAttribute(e) && (this.attributes[t] = e), this }, n.deleteAttribute = function (t) { return this.attributes[t] && delete this.attributes[t], this }, n.computeBoundingBox = function () { null === this.boundingBox && (this.boundingBox = new Nr); var t = this.attributes.position; t && t.isBufferAttribute && this.boundingBox.setFromBufferAttribute(t) }, e }(Or), qr = new be, Yr = new be, Xr = new be, Kr = function (t) { function e(e, n) { var r; return (r = t.call(this) || this).type = "Mesh", r.geometry = void 0, r.material = void 0, r.materialChanged = void 0, r.__webglInit = !1, r.geometry = void 0 !== e ? e : new Zr, r.material = void 0 !== n ? n : null, r.materialChanged = !1, r } c(e, t); var n = e.prototype; return n.updateMaterial = function (t) { this.material && t.isMaterial && t.uuid !== this.material.uuid && (this.material = t, this.materialChanged = !0) }, n.raycast = function (t) { var e = this.geometry, n = e.indexes && e.indexes.array, r = e.attributes.position.array; if (!n) return null; for (var i = 0; i < n.length; i += 3) { var o = 3 * n[i], a = 3 * n[i + 1], s = 3 * n[i + 2], u = qr.set(r[o], r[o + 1], r[o + 2]).transform(this.worldMatrix), h = Yr.set(r[a], r[a + 1], r[a + 2]).transform(this.worldMatrix), c = Xr.set(r[s], r[s + 1], r[s + 2]).transform(this.worldMatrix), l = t.intersectTriangle(u, h, c); if (l) return { distance: l.distance, point: l.point, object: this } } return null }, e }(Ur), Qr = function (t) { function e() { for (var e, n = arguments.length, r = new Array(n), i = 0; i < n; i++)r[i] = arguments[i]; return (e = t.call.apply(t, [this].concat(r)) || this).type = "Scene", e.isScene = !0, e.autoUpdate = !0, e } c(e, t); var n = e.prototype; return n.updateWorldMatrix = function () { var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0]; !0 === this.autoUpdate && t.prototype.updateWorldMatrix.call(this, e) }, n.clone = function (n) { return void 0 === n && (n = new e), t.prototype.clone.call(this, n), n.autoUpdate = this.autoUpdate, n }, e }(Ur), Jr = function (t) { function e() { var e; return (e = t.call(this) || this).type = "Geometry", e.vertices = [], e.verticesBufferData = new Float32Array, e.indicesBufferData = new Uint16Array, e.uvtsBufferData = new Float32Array, e.groupsNeedUpdate = !1, e } return c(e, t), e }(Or), $r = new be, ti = new be, ei = new be, ni = new be, ri = new be, ii = function () { function t(t, e) { this.origin = void 0, this.direction = void 0, this.origin = t || new be, this.direction = e || new be(0, 0, -1) } var e = t.prototype; return e.set = function (t, e) { return this.origin.copy(t), this.direction.copy(e), this }, e.setFromCamera = function (t, e) { var n = new be(e.position[0], e.position[1], e.position[2]), r = (new Vn).fromArray(e.projectionMatrix), i = e.worldMatrix, o = new Me(t[0], t[1], .5, 1).transform(r).transform(i), a = o.x, s = o.y, u = o.z, h = new be(a, s, u).sub(n).normalize(); this.set(n, h) }, e.getPointByLen = function (t, e) { var n = void 0 !== e ? e : new be; return n.copy(this.direction), n.scale(t), n.add(this.origin), n }, e.intersectTriangle_Old = function (t, e, n) { var r, i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3], o = arguments.length > 4 ? arguments[4] : void 0, a = $r.copy(e).subtract(t), s = ti.copy(n).subtract(t), u = ei.copy(a).cross(s), h = ni.copy(this.origin).subtract(t), c = this.direction.dot(u); if (0 < c) { if (i) return null; r = 1 } else { if (!(0 > c)) return null; r = -1, c = -c } s.copy((new be).copy(h).cross(s)); var l = r * this.direction.dot(s); if (0 > l) return null; var f = r * this.direction.dot((new be).copy(h).cross(a)); if (0 > f) return null; if (l + f > c) return null; var d = -r * h.dot(u); return 0 > d ? null : this.getPointByLen(d / c, o) }, e.intersectTriangle = function (t, e, n) { var r = arguments.length > 4 ? arguments[4] : void 0, i = 1e-6, o = $r.subVectors(e, t), a = ti.subVectors(n, t), s = ei.copy(this.direction).cross(a), u = o.dot(s); if (u > -i && u < i) return null; var h = 1 / u, c = ni.subVectors(this.origin, t), l = h * c.dot(s); if (l < 0 || l > 1) return null; var f = ri.copy(c).cross(o), d = h * this.direction.dot(f); if (d < 0 || l + d > 1) return null; var p = a.dot(f) * h; return p > i ? { distance: p, point: this.getPointByLen(p, r) } : null }, e.intersectSphere = function (t, e, n) { var r = (new be).subtract(t, this.origin), i = r.dot(this.direction), o = r.dot(r) - i * i, a = e * e; if (o > a) return null; var s = Math.sqrt(a - o), u = i - s, h = i + s; return 0 > u && 0 > h ? null : 0 > u ? this.getPointByLen(h, n) : this.getPointByLen(u, n) }, t }(); function oi(t, e) { var n = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"]; if (!n) { if (Array.isArray(t) || (n = function (t, e) { if (!t) return; if ("string" == typeof t) return ai(t, e); var n = Object.prototype.toString.call(t).slice(8, -1); "Object" === n && t.constructor && (n = t.constructor.name); if ("Map" === n || "Set" === n) return Array.from(t); if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return ai(t, e) }(t)) || e && t && "number" == typeof t.length) { n && (t = n); var r = 0, i = function () { }; return { s: i, n: function () { return r >= t.length ? { done: !0 } : { done: !1, value: t[r++] } }, e: function (t) { throw t }, f: i } } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.") } var o, a = !0, s = !1; return { s: function () { n = n.call(t) }, n: function () { var t = n.next(); return a = t.done, t }, e: function (t) { s = !0, o = t }, f: function () { try { a || null == n.return || n.return() } finally { if (s) throw o } } } } function ai(t, e) { (null == e || e > t.length) && (e = t.length); for (var n = 0, r = new Array(e); n < e; n++)r[n] = t[n]; return r } var si = function () { function t(t, e, n, r) { this.ray = void 0, this.near = void 0, this.far = void 0, this.ray = new ii(t, e), this.near = n || 0, this.far = r || 1 / 0 } var e = t.prototype; return e.set = function (t, e) { this.ray.set(t, e) }, e.setFromCamera = function (t, e) { var n = new be(e.position[0], e.position[1], e.position[2]), r = (new Vn).fromArray(e.projectionMatrix).invert(), i = e.worldMatrix, o = new Me(t[0], t[1], .5, 1).transform(r).transform(i), a = o.x, s = o.y, u = o.z, h = new be(a, s, u).sub(n).normalize(); this.set(n, h) }, e.pick = function (t) { var e, n = this.ray, r = [], i = oi([].concat(t)); try { for (i.s(); !(e = i.n()).done;) { var o = e.value.raycast(n); o && r.push(o) } } catch (t) { i.e(t) } finally { i.f() } return r.sort((function (t, e) { return t.distance - e.distance })), r }, t }(), ui = function (t) { function e(n) { var r; return (r = t.call(this) || this).image = void 0, r.flipY = !0, r.premultiplyAlpha = !1, r.needsUpdate = !0, r.glTexture = null, r.isTexture = !0, r.gl = null, r.__textureInit = !1, r.clone = function (t) { return void 0 === t && (t = new e), t.image = r.image, t.flipY = r.flipY, t }, r.destory = function () { r.emit("destory", r.glTexture) }, r.destoryTexture = function () { r.glTexture && r.gl && (r.off("destory", r.destoryTexture), r.gl.deleteTexture(r.glTexture)) }, void 0 !== n && (r.image = n), r } return c(e, t), e.prototype.init = function (t) { !0 !== this.__textureInit && (this.gl = t, this.glTexture = t.createTexture(), this.on("destory", this.destoryTexture), this.__textureInit = !0) }, e }(Or), hi = function (t) { function e(e) { var n; return (n = t.call(this) || this).isCube = !0, n.image = e || [], n.flipY = !1, n } return c(e, t), e }(ui), ci = function () { function t(t, e, n) { var r = this; this.gl = void 0, this.maxTextureSize = void 0, this.maxTextures = void 0, this.usedTextureUnits = 0, this.getTextureUnit = function () { var t = r.usedTextureUnits; return r.usedTextureUnits >= r.maxTextures ? r.usedTextureUnits = 0 : r.usedTextureUnits += 1, t }, this.resetUsedTextureUnits = function () { r.usedTextureUnits = 0 }, this.setTexture = function (t) { var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0; if (t instanceof hi) r.setCubeTexture(t, e); else { var n = r.gl; n.activeTexture(n.TEXTURE0 + e), t.needsUpdate ? (t.init(n), r.uploadTexture(n, t)) : n.bindTexture(n.TEXTURE_2D, t.glTexture) } }, this.setTextureForRenderTarget = function (t) { var e = r.gl; t.glTexture = e.createTexture(), e.bindTexture(e.TEXTURE_2D, t.glTexture), e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL, t.flipY), e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL, t.premultiplyAlpha), r.setTextureParameter(e); var n = e.RGBA, i = e.RGBA, o = e.UNSIGNED_BYTE; e.texImage2D(e.TEXTURE_2D, 0, n, t.width, t.height, 0, i, o, null) }, this.uploadTexture = function (t, e) { e.init(t), t.bindTexture(t.TEXTURE_2D, e.glTexture), t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, e.flipY), t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL, e.premultiplyAlpha), r.setTextureParameter(t), t.texImage2D(t.TEXTURE_2D, 0, t.RGBA, t.RGBA, t.UNSIGNED_BYTE, e.image), e.needsUpdate = !1 }, this.setTextureParameter = function (t) { t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_S, t.CLAMP_TO_EDGE), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_T, t.CLAMP_TO_EDGE), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MAG_FILTER, t.LINEAR), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MIN_FILTER, t.LINEAR) }, this.gl = t, this.maxTextureSize = n, this.maxTextures = e } return t.prototype.setCubeTexture = function (t) { var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n = t.image; if (6 !== n.length) throw new Error("[setCubeTexture] CubeTexture need six images, but get\n                ".concat(n.length, "\n            ")); var r = this.gl; if (t.needsUpdate) { t.init(r), r.activeTexture(r.TEXTURE0 + e), r.bindTexture(r.TEXTURE_CUBE_MAP, t.glTexture), r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL, t.flipY), r.texParameteri(r.TEXTURE_CUBE_MAP, r.TEXTURE_MAG_FILTER, r.LINEAR), r.texParameteri(r.TEXTURE_CUBE_MAP, r.TEXTURE_MIN_FILTER, r.LINEAR), r.texParameteri(r.TEXTURE_CUBE_MAP, r.TEXTURE_WRAP_S, r.CLAMP_TO_EDGE), r.texParameteri(r.TEXTURE_CUBE_MAP, r.TEXTURE_WRAP_T, r.CLAMP_TO_EDGE); for (var i = 0; i < 6; i++) { var o = n[i]; r.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, r.RGBA, r.RGBA, r.UNSIGNED_BYTE, o) } t.needsUpdate = !1 } else r.bindTexture(r.TEXTURE_CUBE_MAP, t.glTexture) }, t }(), li = n((function (t) { t.exports = function (t, e) { (null == e || e > t.length) && (e = t.length); for (var n = 0, r = new Array(e); n < e; n++)r[n] = t[n]; return r }, t.exports.__esModule = !0, t.exports.default = t.exports })); e(li); var fi = n((function (t) { t.exports = function (t) { if (Array.isArray(t)) return li(t) }, t.exports.__esModule = !0, t.exports.default = t.exports })); e(fi); var di = n((function (t) { t.exports = function (t) { if ("undefined" != typeof Symbol && null != t[Symbol.iterator] || null != t["@@iterator"]) return Array.from(t) }, t.exports.__esModule = !0, t.exports.default = t.exports })); e(di); var pi = n((function (t) { t.exports = function (t, e) { if (t) { if ("string" == typeof t) return li(t, e); var n = Object.prototype.toString.call(t).slice(8, -1); return "Object" === n && t.constructor && (n = t.constructor.name), "Map" === n || "Set" === n ? Array.from(t) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? li(t, e) : void 0 } }, t.exports.__esModule = !0, t.exports.default = t.exports })); e(pi); var vi = n((function (t) { t.exports = function () { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.") }, t.exports.__esModule = !0, t.exports.default = t.exports })); e(vi); var mi = e(n((function (t) { t.exports = function (t) { return fi(t) || di(t) || pi(t) || vi() }, t.exports.__esModule = !0, t.exports.default = t.exports }))), gi = n((function (t) { t.exports = function (t) { if (Array.isArray(t)) return t }, t.exports.__esModule = !0, t.exports.default = t.exports })); e(gi); var yi = n((function (t) { t.exports = function (t, e) { var n = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"]; if (null != n) { var r, i, o = [], a = !0, s = !1; try { for (n = n.call(t); !(a = (r = n.next()).done) && (o.push(r.value), !e || o.length !== e); a = !0); } catch (t) { s = !0, i = t } finally { try { a || null == n.return || n.return() } finally { if (s) throw i } } return o } }, t.exports.__esModule = !0, t.exports.default = t.exports })); e(yi); var _i = n((function (t) { t.exports = function () { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.") }, t.exports.__esModule = !0, t.exports.default = t.exports })); e(_i); var xi = e(n((function (t) { t.exports = function (t, e) { return gi(t) || yi(t, e) || pi(t, e) || _i() }, t.exports.__esModule = !0, t.exports.default = t.exports }))), bi = function (t, e, n) { if (t && e && e.length) for (var r = e.length, i = 0; i < r; i++) { var o = void 0, a = void 0, s = void 0, u = e[i], h = xi(u, 2), c = h[0], l = h[1], f = c.type, d = c.value; switch (c.type) { case "1i": case "1f": t["uniform".concat(f)](l, c.value); break; case "2f": case "3f": case "4f": t["uniform".concat(f)].apply(t, [l].concat(mi(d))); break; case "t": if (!(o = c.value) || !o.image && !o.glTexture) break; a = n.getTextureUnit(), t.uniform1i(l, a), n.setTexture(o, a); break; case "tv": s = []; for (var p = c.value, v = 0, m = p.length; v < m; v++)s[v] = n.getTextureUnit(); t.uniform1iv(l, s); for (var g = 0, y = p.length; g < y; g++)(o = p[g]) && (o.image || o.glTexture) && (a = s[g], n.setTexture(o, a)); break; case "mat4fv": t.uniformMatrix4fv(l, !1, c.value); break; default: console.warn("[UniformOperation] Unknown uniform type: ".concat(f)) } } }; var Mi = "\nvoid main() {\n    gl_Position = mvpMatrix * vec4(position, 1.0);\n}\n", wi = "\nvoid main() {\n    gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n}\n", Ei = 0, Ti = function (t) { function e() { for (var e, n = arguments.length, r = new Array(n), i = 0; i < n; i++)r[i] = arguments[i]; return (e = t.call.apply(t, [this].concat(r)) || this).isMaterial = !0, e.id = Ei++, e.type = "Material", e.name = "", e.uuid = Br(), e.uniforms = {}, e.vertexShader = Mi, e.fragmentShader = wi, e.program = null, e.depthTest = !0, e.visible = !0, e.opacity = 1, e.needsUpdate = !0, e.uniformsList = [], e } c(e, t); var n = e.prototype; return n.setValues = function (t) { if (void 0 !== t) for (var e in t) if (Object.prototype.hasOwnProperty.call(t, e)) { var n = t[e]; if (void 0 === n) { console.warn("Material: '" + e + "' parameter is undefined."); continue } if (void 0 === this[e]) { console.warn("".concat(this.type, ": ").concat(e, " is not a property of this material.")); continue } var r = "set" + e.charAt(0).toUpperCase() + e.slice(1); "function" == typeof this[r] ? this[r](n) : this[e] = n } }, n.clone = function () { return (new e).copy(this) }, n.copy = function (t) { return this.uniforms = function (t) { var e, n = {}; for (var r in t) if (Object.prototype.hasOwnProperty.call(t, r)) for (var i in n[r] = {}, t[r]) Object.prototype.hasOwnProperty.call(t[r], i) && ((e = t[r][i]) && e.isTexture ? n[r][i] = e.clone() : n[r][i] = e instanceof Array ? e.slice(0) : e); return n }(t.uniforms), this.depthTest = t.depthTest, this.visible = t.visible, this.fragmentShader = t.fragmentShader, this.vertexShader = t.vertexShader, this }, o(e, [{ key: "defines", get: function () { return "" } }]), e }(Or), Ai = { useColor: "USE_COLOR", useUV: "NEED_UV" }, Ci = function () { function t() { this.useColor = !1, this.useUV = !1 } return t.prototype.getDefines = function () { for (var t = [], e = 0, n = Object.keys(this); e < n.length; e++) { var r = n[e]; Ai[r] && !0 === this[r] && t.push("#define ".concat(Ai[r])) } return t.push(""), t.join("\n") }, t }(), Ri = "\n#ifdef NEED_UV\n    varying vec2 vUV;\n#endif\nvoid main(void) {\n    gl_Position = mvpMatrix * vec4(position, 1.0);\n    #ifdef NEED_UV\n        vUV = uv;\n    #endif\n}\n", Si = "\nprecision mediump float;\n#ifdef NEED_UV\n    varying vec2 vUV;\n    uniform sampler2D uSampler;\n#endif\n#ifdef USE_COLOR\n    uniform vec4 uColor;\n#endif\nuniform float uOpacity;\nvoid main(void) {\n    vec4 finalColor;\n    vec4 defaultColor = vec4(1.0, 0.0, 0.0, 1.0);\n    finalColor = defaultColor;\n    #ifdef USE_COLOR\n        finalColor = uColor;\n    #endif\n    #ifdef NEED_UV\n        finalColor = texture2D(uSampler, vUV);\n    #endif\n    gl_FragColor = vec4(finalColor.rgb, finalColor.a * uOpacity);\n}\n", Pi = function (t) { function e() { var e, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; return (e = t.call(this) || this).map = null, e.color = [1, 0, 0, 1], e.type = "BasicMaterial", e.opacity = 1, e.depthTest = !0, e.vertexShader = Ri, e.fragmentShader = Si, e.uniforms = { uSampler: { type: "t", value: null }, uColor: { type: "4f", value: [1, 0, 0, 1] }, uOpacity: { type: "1f", value: e.opacity } }, e.setValues(n), e } c(e, t); var n = e.prototype; return n.setOpacity = function (t) { this.uniforms.uOpacity.value = t, this.opacity = t }, n.setColor = function (t) { !Array.isArray(t) || t.length < 4 || (this.uniforms.uColor.value = t, this.color = t) }, n.setMap = function (t) { var e = this; t && (t instanceof Promise ? t.then((function (t) { e.uniforms.uSampler.value = t instanceof ui == !0 ? t : new ui(t) })).catch((function (t) { return console.error(t) })) : !0 === t.isTexture && (this.uniforms.uSampler.value = t), this.map = t) }, o(e, [{ key: "defines", get: function () { var t = new Ci; return t.useColor = !!this.color, t.useUV = !!this.map, t.getDefines() } }]), e }(Ti), Di = function (t) { var e = this; this.gl = void 0, this.newAttributes = new Uint8Array(16), this.enabledAttributes = new Uint8Array(16), this.currentDepthTest = !1, this.currentDepthWrite = !0, this.currentColorWrite = !0, this.currentDoubleSided = !1, this.currentFlipSided = !1, this.initAttributes = function () { for (var t = 0, n = e.newAttributes.length; t < n; t++)e.newAttributes[t] = 0 }, this.enableAttribute = function (t) { var n = e.gl, r = e.newAttributes, i = e.enabledAttributes; r[t] = 1, 0 === i[t] && (n.enableVertexAttribArray(t), i[t] = 1) }, this.disableAttribute = function (t) { var n = e.gl, r = e.newAttributes, i = e.enabledAttributes; r[t] = 0, 1 === i[t] && (n.disableVertexAttribArray(t), i[t] = 0) }, this.disableUnusedAttributes = function () { for (var t = e.gl, n = e.newAttributes, r = e.enabledAttributes, i = 0, o = r.length; i < o; i++)r[i] !== n[i] && (t.disableVertexAttribArray(i), r[i] = 0) }, this.setDepthTest = function (t) { var n = e.gl; e.currentDepthTest !== t && (t ? n.enable(n.DEPTH_TEST) : n.disable(n.DEPTH_TEST), e.currentDepthTest = t) }, this.setDepthWrite = function (t) { var n = e.gl; e.currentDepthWrite !== t && (n.depthMask(t), e.currentDepthWrite = t) }, this.setColorWrite = function (t) { var n = e.gl; e.currentColorWrite !== t && (n.colorMask(t, t, t, t), e.currentColorWrite = t) }, this.setDefaultGLState = function (t, n, r, i) { var o = e.gl; o.clearColor(229 / 255, 227 / 255, 223 / 255, 1), o.clear(o.COLOR_BUFFER_BIT | o.DEPTH_BUFFER_BIT), o.clearDepth(1), o.clearStencil(0), o.disable(o.DEPTH_TEST), o.depthFunc(o.LEQUAL), o.frontFace(o.CCW), o.disable(o.CULL_FACE), o.depthMask(!0), o.enable(o.BLEND), o.blendFunc(o.SRC_ALPHA, o.ONE_MINUS_SRC_ALPHA), o.viewport(t, n, r, i) }, this.setDoubleSided = function (t) { var n = e.gl; e.currentDoubleSided !== t && (t ? n.disable(n.CULL_FACE) : n.enable(n.CULL_FACE), e.currentDoubleSided = t) }, this.setFlipSided = function (t) { var n = e.gl; e.currentFlipSided !== t && (t ? n.frontFace(n.CW) : n.frontFace(n.CCW), e.currentFlipSided = t) }, this.reset = function () { for (var t = e.enabledAttributes, n = 0; n < t.length; n++)t[n] = 0; e.currentDepthTest = !1, e.currentDepthWrite = !0, e.currentColorWrite = !0, e.currentDoubleSided = !1, e.currentFlipSided = !1 }, this.gl = t }, Oi = function (t) { var e = this; this.maxTextures = void 0, this.maxTextureSize = void 0, this.maxVerticesOneDraw = void 0, this.maxVertexShaderTextureUnits = void 0, this.maxFragmentShaderTextureUnits = void 0, this.gl = void 0, this.getMaxTextures = function () { var t = e.gl; return t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS) }, this.getLineWidthRange = function () { var t = e.gl; return t.getParameter(t.ALIASED_LINE_WIDTH_RANGE) }, this.getMaxVertexShaderTextureUnits = function () { var t = e.gl; return t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS) }, this.getMaxFragmentShaderTextureUnits = function () { var t = e.gl; return t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS) }, this.getMaxTextureSize = function () { var t = e.gl; return t.getParameter(t.MAX_TEXTURE_SIZE) }, this.getMaxVerticesOneDraw = function () { return e.gl.getExtension("OES_element_index_uint") ? 4294967296 : 65535 }, this.getLegalPrecision = function (t) { var n = e.gl, r = n.getShaderPrecisionFormat(n.VERTEX_SHADER, n.HIGH_FLOAT), i = n.getShaderPrecisionFormat(n.VERTEX_SHADER, n.MEDIUM_FLOAT), o = n.getShaderPrecisionFormat(n.FRAGMENT_SHADER, n.HIGH_FLOAT), a = n.getShaderPrecisionFormat(n.FRAGMENT_SHADER, n.MEDIUM_FLOAT), s = r && o && r.precision > 0 && o.precision > 0, u = i && a && i.precision > 0 && a.precision > 0; return "highp" !== t || s ? "mediump" !== t || u || (t = "lowp", console.warn("[WebGLCapability] mediump is not supported, using lowp by default.")) : u ? (t = "mediump", console.warn("[WebGLCapability] highp is not supported, using mediump by default.")) : (t = "lowp", console.warn("[WebGLCapability] highp and mediump is not supported, using lowp by default.")), t }, this.gl = t, this.maxTextures = this.getMaxTextures(), this.maxVertexShaderTextureUnits = this.getMaxVertexShaderTextureUnits(), this.maxFragmentShaderTextureUnits = this.getMaxFragmentShaderTextureUnits(), this.maxTextureSize = this.getMaxTextureSize(), this.maxVerticesOneDraw = this.getMaxVerticesOneDraw() }, Ii = 0, Li = function (t, e, n) { var r = t.createShader(n); if (!r) throw new Error("Something went wrong while compile the shader."); return t.shaderSource(r, e), t.compileShader(r), t.getShaderParameter(r, t.COMPILE_STATUS) || console.error("Error compiling shader: ".concat(t.getShaderInfoLog(r))), r }, Bi = function () { function t(t, e, n) { this.usedTimes = void 0, this.id = void 0, this.code = void 0, this.program = void 0, this.attributes = void 0, this.uniforms = void 0, this.gl = void 0, this.parameters = void 0, this.precision = void 0, this.gl = t, this.parameters = e, this.precision = n.precision || "highp", this.usedTimes = 1, this.id = Ii++; var r = e.defines, i = void 0 === r ? "" : r, o = e.vertexShader, a = e.fragmentShader; this.code = i + o + a, this.program = this.createProgram(t, e, this.precision), this.attributes = this.fetchAttributes(t, this.program), this.uniforms = function (t, e) { var n, r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [], i = {}, o = r.length; if (!o) return i; for (var a = 0; a < o; a++)i[n = r[a]] = t.getUniformLocation(e, n); return i }(t, this.program, this.getFullUniforms(e.uniforms)) } var e = t.prototype; return e.getAttributes = function () { return this.attributes }, e.getUniforms = function () { return this.uniforms }, e.createProgram = function (t, e) { var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "highp", r = e.vertexShader, i = e.fragmentShader, o = e.defines, a = void 0 === o ? "" : o, s = ["precision ".concat(n, " float;"), "uniform mat4 modelMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat4 mvpMatrix;", "attribute vec3 position;", "attribute vec2 uv;", ""].join("\n"), u = t.createProgram(), h = ["precision ".concat(n, " float;"), ""].join("\n"), c = Li(t, s + a + r, t.VERTEX_SHADER), l = Li(t, h + a + i, t.FRAGMENT_SHADER); if (!u) throw new Error("Something went wrong while createProgram."); return t.attachShader(u, c), t.attachShader(u, l), t.linkProgram(u), u }, e.fetchAttributes = function (t, e) { for (var n = {}, r = t.getProgramParameter(e, t.ACTIVE_ATTRIBUTES), i = 0; i < r; i++) { var o = t.getActiveAttrib(e, i); if (!o) throw new Error("Something went wrong while getActiveAttrib."); var a = o.name; n[a] = t.getAttribLocation(e, a) } return n }, e.getFullUniforms = function (t) { var e = ["mvpMatrix", "modelMatrix", "projectionMatrix", "viewMatrix"]; for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && e.push(n); return e }, t }(), ki = { canvas: document.createElement("canvas"), context: void 0, width: 0, height: 0, pixelRatio: 1, precision: "highp", alpha: !1, premultipliedAlpha: !0, antialias: !0, stencil: !0, depth: !0, preserveDrawingBuffer: !1 }, Ui = function () { function t() { var t = this, e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; this.state = void 0, this.domElement = void 0, this.capability = void 0, this.textureOperation = void 0, this._gl = void 0, this.parameters = void 0, this.programs = void 0, this.viewportInfo = void 0, this.autoDisposeProgram = !0, this.currentCacheState = void 0, this.setSize = function (e, n) { var r = t.parameters, i = r.canvas, o = r.pixelRatio; i.style.width = "".concat(e, "px"), i.style.height = "".concat(n, "px"), i.width = e * o, i.height = n * o, t.setViewport(0, 0, e, n) }, this.setViewport = function (e, n, r, i) { var o = t.parameters.pixelRatio, a = t.viewportInfo; a.x = e * o, a.y = n * o, a.width = r * o, a.height = i * o, t._gl.viewport.apply(t._gl, Object.values(a)) }, this.setClearColor = function (e, n, r) { var i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1; !0 === t.parameters.premultipliedAlpha && (e *= i, n *= i, r *= i), t._gl.clearColor(e, n, r, i) }, this.getContext = function () { return t._gl }, this.forceContextLoss = function () { try { var e = t._gl.getExtension("WEBGL_lose_context"); e && e.loseContext() } catch (t) { console.error("[WebGLRenderer] WEBGL_lose_context error: ", t) } }, this.initScene = function (e) { !0 === e.visible && e.traverse((function (e) { !0 === e.visible && e instanceof Kr && t.initMesh(e) })) }, this.initMesh = function (e) { !0 === e.visible && (!0 !== e.__webglInit && (e.__webglInit = !0, e.addEventListener("removed", t.onObjectRemoved)), e.geometry && t.checkAndUpdateGeometry(e.geometry), e.children && e.children.length > 0 && e.children.forEach((function (e) { t.initMesh(e) }))) }, this.checkAndUpdateGeometry = function (e) { !0 !== e.__webglInit && (e.__webglInit = !0, e.addEventListener("removed", t.onGeometryRemove), e.groupsNeedUpdate = !0), !0 === e.groupsNeedUpdate && ("BufferGeometry" === e.type ? t.updateBufferGeometry(e) : t.updateGeometryBuffer(e, t._gl.STATIC_DRAW), e.groupsNeedUpdate = !1) }, this.updateGeometryBuffer = function (e, n) { var r = e.verticesBufferData, i = e.uvtsBufferData, o = e.indicesBufferData, a = e.borderVerticesBufferData, s = t._gl; 0 < r.length && (e.glVerticesBuffer = s.createBuffer(), s.bindBuffer(s.ARRAY_BUFFER, e.glVerticesBuffer), s.bufferData(s.ARRAY_BUFFER, r, n)), 0 < i.length && (e.glUvtsBuffer = s.createBuffer(), s.bindBuffer(s.ARRAY_BUFFER, e.glUvtsBuffer), s.bufferData(s.ARRAY_BUFFER, i, n)), 0 < o.length && (e.glIndicesBuffer = s.createBuffer(), s.bindBuffer(s.ELEMENT_ARRAY_BUFFER, e.glIndicesBuffer), s.bufferData(s.ELEMENT_ARRAY_BUFFER, o, n)), !0 === e.showBorder && void 0 !== a && 0 < a.length && (e.glBorderVerticesBuffer = s.createBuffer(), s.bindBuffer(s.ARRAY_BUFFER, e.glBorderVerticesBuffer), s.bufferData(s.ARRAY_BUFFER, e.borderVerticesBufferData, n)) }, this.renderScene = function (e, n) { !0 === e.visible && e.traverse((function (e) { e instanceof Kr && (t.renderObject(e, n), e.children.length && e.children.forEach((function (e) { t.renderObject(e, n) }))) })) }, this.renderObject = function (e, n) { var r = e.material, i = e.geometry; if (!0 === e.visible && r && i && !0 === r.visible) { t.state.setDepthTest(r.depthTest); var o = !1, a = t.setProgram(n, r, e); o = "BufferGeometry" === i.type ? t.updateVerticesAttribute2(a, i, !1) : t.updateVerticesAttribute(a, i, !1), t.renderGeometryWithProgram(a, i, r, o) } }, this.setProgram = function (e, n, r) { var i = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3], o = t._gl; t.textureOperation.resetUsedTextureUnits(), t.checkAndUpdateMaterial(r.material); var a = n.program, s = a.getUniforms(); return a.id !== t.currentCacheState.programId && (o.useProgram(a.program), t.currentCacheState.programId = a.id), !1 !== i && bi(o, n.uniformsList, t.textureOperation), t.updateMVPMatrix(s, e, r), a }, this.checkAndUpdateMaterial = function (e) { void 0 !== e && (!0 !== e.__webglInit && (e.__webglInit = !0, e.addEventListener("removed", t.onMaterialRomove), e.needsUpdate = !0), !0 === e.needsUpdate && (t.updateMaterial(e), e.needsUpdate = !1)) }, this.updateMaterial = function (e) { e.program && t.removeMaterial(e); for (var n = null, r = t.programs.length, i = e.defines, o = (void 0 === i ? "" : i) + e.vertexShader + e.fragmentShader, a = r - 1; a >= 0; a--) { var s = t.programs[a]; if (s.code === o) { (n = s).usedTimes++; break } } if (null === n) { var u = { uniforms: e.uniforms, defines: e.defines || "", vertexShader: e.vertexShader, fragmentShader: e.fragmentShader }; n = new Bi(t._gl, u, { precision: t.parameters.precision }), t.programs.push(n) } e.program = n, e.uniformsList = []; var h = 0, c = n.uniforms, l = e.uniforms; for (var f in l) if (Object.prototype.hasOwnProperty.call(l, f)) { var d = c[f]; d && (e.uniformsList[h] = [l[f], d], h++) } }, this.updateMVPMatrix = function (e, n, r) { if (void 0 !== e.mvpMatrix) { var i = De(n.projectionMatrix); Ue(i, i, n.viewMatrix), Ue(i, i, r.worldMatrix), t._gl.uniformMatrix4fv(e.mvpMatrix, !1, i), t._gl.uniformMatrix4fv(e.modelMatrix, !1, r.worldMatrix), t._gl.uniformMatrix4fv(e.viewMatrix, !1, n.viewMatrix), t._gl.uniformMatrix4fv(e.projectionMatrix, !1, n.projectionMatrix) } t.currentCacheState.camera = n }, this.renderGeometryWithProgram = function (e, n, r) { var i = t._gl, o = t.currentCacheState.curRenderTarget; if (e.uniforms.showDebugLine && i.uniform1i(e.uniforms.showDebugLine, 0), "BufferGeometry" === n.type ? i.bindBuffer(i.ELEMENT_ARRAY_BUFFER, n.indexesBuffer) : i.bindBuffer(i.ELEMENT_ARRAY_BUFFER, n.glIndicesBuffer), null !== o && void 0 !== o.glFrameBuffer) { var a = i.checkFramebufferStatus(i.FRAMEBUFFER); if (i.FRAMEBUFFER_COMPLETE !== a) return t.removeRenderTarget(o), void (t.currentCacheState.curRenderTarget = null) } n.indexes && n.indexes.count > 0 ? i.drawElements(i.TRIANGLES, n.indexes.count, i.UNSIGNED_SHORT, 0) : i.drawArrays(i.TRIANGLES, 0, n.attributes.position.count) }, this.onObjectRemoved = function (e) { e.target.traverse((function (e) { e.removeEventListener("removed", t.onObjectRemoved), t.removeObject(e) })) }, this.onGeometryRemove = function (e) { var n = e.target; n.removeEventListener("removed", t.onGeometryRemove), t.removeGeometry(n) }, this.onMaterialRomove = function (e) { var n = e.target; n.removeEventListener("removed", t.onMaterialRomove), t.removeMaterial(n) }, this.onRenderTargetRemove = function (e) { var n = e.target; n.removeEventListener("removed", t.onRenderTargetRemove), t.removeRenderTarget(n) }, this.removeObject = function (t) { t.geometry && delete t.geometry.__webglInit, delete t.__webglInit }, this.removeGeometry = function (e) { delete e.__webglInit, t.deleteBuffers(e), t.currentCacheState.geometryProgramId = null }, this.deleteBuffers = function (e) { ["glVerticesBuffer", "glUvtsBuffer", "glIndicesBuffer", "glBorderVerticesBuffer"].forEach((function (n) { t._gl.deleteBuffer(e[n]), void 0 !== e[n] && 0 < e[n] && delete e[n] })) }, this.removeMaterial = function (e) { var n = e.program.program; if (n) { e.program = null; for (var r = t.programs, i = r.length - 1; i >= 0; i--) { var o = r[i]; if (o.program === n) { o.usedTimes--, 0 === o.usedTimes && !1 !== t.autoDisposeProgram && (r.splice(i, 1), t._gl.deleteProgram(n)); break } } } }, this.removeRenderTarget = function (e) { t._gl.deleteRenderbuffer(e.glDepthBuffer), e.glDepthBuffer = null, t._gl.deleteTexture(e.glTexture), e.glTexture = null, t._gl.deleteFramebuffer(e.glFrameBuffer), e.glFrameBuffer = null }, this.parameters = Object.assign({}, ki, e), e && !e.canvas && (this.parameters.canvas = document.createElement("canvas")), this.initGL(), this.programs = [], this.viewportInfo = { x: 0, y: 0, width: this.parameters.canvas.width, height: this.parameters.canvas.height }, this.parameters.width && this.parameters.height && this.setSize(this.parameters.width, this.parameters.height), this.domElement = this.parameters.canvas, this.state = new Di(this._gl), this.state.setDefaultGLState.apply(this.state, Object.values(this.viewportInfo)), this.currentCacheState = { programId: null, geometryProgramId: null, materialId: null, camera: null, curRenderTarget: null }, this.capability = new Oi(this._gl); var n = this.capability.maxTextures, r = this.capability.maxTextureSize; this.textureOperation = new ci(this._gl, n, r) } var e = t.prototype; return e.clearBuffer = function () { var t = this._gl; t.clear(t.COLOR_BUFFER_BIT | t.DEPTH_BUFFER_BIT) }, e.initGL = function () { var t = this, e = this.parameters, n = e.canvas, r = e.context, i = e.alpha, o = e.depth, a = e.stencil, s = e.antialias, u = e.premultipliedAlpha, h = e.preserveDrawingBuffer; try { var c = { alpha: i, depth: o, stencil: a, antialias: s, premultipliedAlpha: u, preserveDrawingBuffer: h }, l = r || n.getContext("webgl", c) || n.getContext("experimental-webgl", c) || n.getContext("moz-webgl", c) || n.getContext("webkit-3d", c); if (!l) throw null !== n.getContext ? "Error creating WebGL context with your provided attributes." : "Error creating WebGL context."; this._gl = l, n.addEventListener("webglcontextlost", (function (e) { e.preventDefault(), void 0 !== t.state && (t.resetGLState(), t.state.setDefaultGLState.apply(t.state, Object.values(t.viewportInfo))) }), !1) } catch (t) { console.error("[WebGLRenderer] Create webgl error: ", t) } }, e.resetGLState = function () { this.currentCacheState = { programId: null, geometryProgramId: null, materialId: null, camera: null, curRenderTarget: null }, this.state.reset() }, e.setRenderTarget = function (t) { var e = this._gl; void 0 !== t && null === t.glFrameBuffer && (t.addEventListener("removed", this.onRenderTargetRemove), t.glFrameBuffer = e.createFramebuffer(), e.bindFramebuffer(e.FRAMEBUFFER, t.glFrameBuffer), this.textureOperation.setTextureForRenderTarget(t), t.glDepthBuffer = e.createRenderbuffer(), e.bindRenderbuffer(e.RENDERBUFFER, t.glDepthBuffer), e.renderbufferStorage(e.RENDERBUFFER, e.DEPTH_COMPONENT16, t.width, t.height), e.framebufferTexture2D(e.FRAMEBUFFER, e.COLOR_ATTACHMENT0, e.TEXTURE_2D, t.glTexture, 0), e.framebufferRenderbuffer(e.FRAMEBUFFER, e.DEPTH_ATTACHMENT, e.RENDERBUFFER, t.glDepthBuffer), e.bindTexture(e.TEXTURE_2D, null), e.bindRenderbuffer(e.RENDERBUFFER, null), e.bindFramebuffer(e.FRAMEBUFFER, null)) }, e.render = function (t, e, n) { if (e.isCamera) { var r = this._gl; if (t.updateWorldMatrix(), e.updateWorldMatrix(), e.updateProjectionMatrix(), this.currentCacheState.camera = null, void 0 !== n) this.setRenderTarget(n), this.currentCacheState.curRenderTarget = n, r.bindFramebuffer(r.FRAMEBUFFER, n.glFrameBuffer), r.viewport(0, 0, n.width, n.height); else { var i = this.viewportInfo, o = i.width, a = i.height; this.currentCacheState.curRenderTarget = null, r.bindFramebuffer(r.FRAMEBUFFER, null), r.viewport(0, 0, o, a) } this.initScene(t), this.renderScene(t, e) } else console.error("[WebGLRenderer]  Camera is not leagal.") }, e.updateBufferGeometry = function (t) { var e = this._gl, n = t.getIndexes(), r = t.getAttribute(); for (var i in r) if (Object.prototype.hasOwnProperty.call(r, i)) { var o = i + "Buffer", a = r[i], s = a.array, u = a.usage; t[o] = e.createBuffer(), e.bindBuffer(e.ARRAY_BUFFER, t[o]), e.bufferData(e.ARRAY_BUFFER, s, u) } n && (t.indexesBuffer = e.createBuffer(), e.bindBuffer(e.ELEMENT_ARRAY_BUFFER, t.indexesBuffer), e.bufferData(e.ELEMENT_ARRAY_BUFFER, n.array, n.usage)) }, e.updateVerticesAttribute2 = function (t, e) { var n = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2], r = this._gl, i = !1, o = "".concat(e.id, "_").concat(t.id); if (o !== this.currentCacheState.geometryProgramId) { this.currentCacheState.geometryProgramId = o, this.state.initAttributes(), i = !0; var a = e.getAttribute(); for (var s in a) if (Object.prototype.hasOwnProperty.call(a, s)) { var u = s + "Buffer", h = a[s], c = h.itemSize, l = h.type, f = h.normalized; 0 <= t.attributes[s] && (!0 !== n && (r.bindBuffer(r.ARRAY_BUFFER, e[u]), r.vertexAttribPointer(t.attributes[s], c, l, f, 0, 0)), this.state.enableAttribute(t.attributes[s])) } } return this.state.disableUnusedAttributes(), i }, e.updateVerticesAttribute = function (t, e) { var n = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2], r = this._gl, i = !1, o = "".concat(e.id, "_").concat(t.id); if (o !== this.currentCacheState.geometryProgramId) { this.currentCacheState.geometryProgramId = o, this.state.initAttributes(), i = !0; var a = t.getAttributes(); 0 <= a.position && (!0 !== n && (r.bindBuffer(r.ARRAY_BUFFER, e.glVerticesBuffer), r.vertexAttribPointer(a.position, 3, r.FLOAT, !1, 0, 0)), this.state.enableAttribute(a.position)), 0 <= a.uv && void 0 !== e.glUvtsBuffer && (r.bindBuffer(r.ARRAY_BUFFER, e.glUvtsBuffer), r.vertexAttribPointer(a.uv, 2, r.FLOAT, !1, 0, 0), this.state.enableAttribute(a.uv)) } return this.state.disableUnusedAttributes(), i }, t }(), Ni = function (t) { function e(e, n, r, i, o, a) { var s; switch ((s = t.call(this) || this).addIntoBuffer = function (t, e, n) { t[n] = e[0], t[n + 1] = e[1], t[n + 2] = e[2] }, s.get3DVertex = function (t, e) { var n; switch (e) { case "x": n = Vt(0, t[0], t[1]); break; case "y": n = Vt(t[0], 0, t[1]); break; default: n = Vt(t[0], t[1], 0) }return n }, s.zeroAxis = void 0 !== o ? o : "z", s.zeroAxis) { case "x": s.normal = Vt(-1, 0, 0); break; case "y": default: s.normal = Vt(0, -1, 0); break; case "z": s.normal = Vt(0, 0, -1) }a = void 0 !== a ? a : {}, s.showBorder = !(!1 === a.showBorder), s.borderWidth = void 0 !== a.borderWidth ? a.borderWidth : 1, s.borderColor = void 0 !== a.borderColor ? a.borderColor : [0, 0, 0, 1]; var u, h, c, l = .5 * e, f = .5 * n, d = r || 1, p = i || 1, v = e / d, m = n / p, g = (d + 1) * (p + 1); s.verticesBufferData = new Float32Array(3 * g), s.uvtsBufferData = new Float32Array(2 * g), s.indicesBufferData = new (g > 65535 ? Uint32Array : Uint16Array)(d * p * 6); for (var y = 0, _ = 0, x = 0; x <= p; x++) { u = x * m - f; for (var b = 0; b <= d; b++)c = _t(b * v - l, u), h = s.get3DVertex(c, s.zeroAxis), s.vertices.push(h), s.addIntoBuffer(s.verticesBufferData, h, y), s.uvtsBufferData[_] = b / d, s.uvtsBufferData[_ + 1] = 1 - x / p, y += 3, _ += 2 } for (var M, w, E, T, A = 0, C = 0; C < p; C++)for (var R = 0; R < d; R++)M = R + (d + 1) * C, w = R + (d + 1) * (C + 1), E = R + 1 + (d + 1) * (C + 1), T = R + 1 + (d + 1) * C, s.addIntoBuffer(s.indicesBufferData, [M, w, E], A), s.addIntoBuffer(s.indicesBufferData, [M, E, T], A + 3), A += 6; s.borderIndicesBufferData = new Uint16Array(4), s.borderIndicesBufferData[0] = 0, s.borderIndicesBufferData[1] = d, s.borderIndicesBufferData[2] = (d + 1) * p, s.borderIndicesBufferData[3] = (d + 1) * (p + 1) - 1; var S = 0; s.borderVerticesBufferData = new Float32Array(6 * (d + p)); for (var P = 0; P < g; P += d + 1)s.addIntoBuffer(s.borderVerticesBufferData, s.vertices[P], S), S += 3; for (var D = (d + 1) * p + 1; D < g; D++)s.addIntoBuffer(s.borderVerticesBufferData, s.vertices[D], S), S += 3; for (var O = (d + 1) * p - 1; O > 0; O -= d + 1)s.addIntoBuffer(s.borderVerticesBufferData, s.vertices[O], S), S += 3; for (var I = d - 1; I > 0; I--)s.addIntoBuffer(s.borderVerticesBufferData, s.vertices[I], S), S += 3; return s } return c(e, t), e }(Jr), Fi = "z", ji = function (t) { function e(n, r, i, o) { var a, s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {}; a = t.call(this) || this; var u = e.buildPlane(n, r, i, o, s), h = u.uvs, c = u.indices, l = u.normals, f = u.vertices; return a.name = "PlaneBufferGeometry", a.setAttribute("position", new Gr(f, 3)), a.setAttribute("normals", new Gr(l, 3)), a.setAttribute("uv", new Gr(h, 2)), a.setIndexes(c), a } return c(e, t), e.buildPlane = function (t, n, r, i) { for (var o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {}, a = o.normalAxis, s = void 0 === a ? Fi : a, u = o.useBack, h = void 0 !== u && u, c = o.normalDest, l = void 0 === c ? 0 : c, f = .5 * t, d = .5 * n, p = r || 1, v = i || 1, m = t / p, g = n / v, y = e.getNormal(s, h), _ = [], x = [], b = [], M = [], w = 0; w <= v; w++)for (var E = w * g - d, T = 0; T <= p; T++) { var A = T * m - f, C = e.get3DVertex([A, E], s, l); b.push.apply(b, mi(C)), _.push(T / p, 1 - w / v), M.push.apply(M, mi(y)) } for (var R = 0; R < v; R++)for (var S = 0; S < p; S++) { var P = S + (p + 1) * R, D = S + (p + 1) * (R + 1), O = S + 1 + (p + 1) * (R + 1), I = S + 1 + (p + 1) * R; x.push(P, D, O), x.push(P, O, I) } return { uvs: _, indices: x, vertices: b, normals: M } }, e.getNormal = function (t) { var e, n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], r = n ? -1 : 1; switch (t) { case "x": e = [r, 0, 0]; break; case Fi: e = [0, 0, r]; break; default: e = [0, r, 0] }return e }, e }(Zr); ji.get3DVertex = function (t, e) { var n, r = xi(t, 2), i = r[0], o = r[1], a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0; switch (e) { case "x": n = [a, i, o]; break; case "y": n = [i, a, o]; break; default: n = [i, o, a] }return n }; var zi = function (t) { function e(e, n, r, i, o, a) { var s; (s = t.call(this) || this).name = "BoxGeometry"; var u = s.initBox(e, n, r, i, o, a), h = u.uvs, c = u.normals, l = u.vertices, f = u.indices; return s.setAttribute("position", new Gr(l, 3)), s.setAttribute("normals", new Gr(c, 3)), s.setAttribute("uv", new Gr(h, 2)), s.setIndexes(f), s } return c(e, t), e.prototype.initBox = function (t, e, n, r, i, o) { var a = [], s = ji.buildPlane, u = s(n, e, o, i, { normalAxis: "x", normalDest: t / 2 }), h = s(n, e, o, i, { normalAxis: "x", useBack: !0, normalDest: -t / 2 }), c = s(t, n, r, o, { normalAxis: "y", normalDest: e / 2 }), l = s(t, n, r, o, { normalAxis: "y", useBack: !0, normalDest: -e / 2 }), f = s(t, e, r, i, { normalAxis: "z", normalDest: n / 2 }), d = s(t, e, r, i, { normalAxis: "z", useBack: !0, normalDest: -n / 2 }); a.push(u, h, c, l, f, d); for (var p = 0, v = [], m = [], g = [], y = [], _ = function (t) { var e = a[t], n = e.uvs, r = e.vertices, i = e.normals, o = e.indices, s = p; v = v.concat(n), m = m.concat(r), g = g.concat(i), y = y.concat(o.map((function (t) { return s + t }))), p += r.length / 3 }, x = 0; x < 6; x++)_(x); return { uvs: v, vertices: m, normals: g, indices: y } }, e }(Zr), Vi = function (t) { function e(e, n) { var r; return (r = t.call(this) || this).width = void 0, r.height = void 0, r.glFrameBuffer = null, r.glDepthBuffer = null, r.flipY = !1, r.premultiplyAlpha = !1, r.glTexture = null, r.width = e, r.height = n, r } return c(e, t), e }(Or); function Gi(t, e) { var n = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"]; if (!n) { if (Array.isArray(t) || (n = function (t, e) { if (!t) return; if ("string" == typeof t) return Wi(t, e); var n = Object.prototype.toString.call(t).slice(8, -1); "Object" === n && t.constructor && (n = t.constructor.name); if ("Map" === n || "Set" === n) return Array.from(t); if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Wi(t, e) }(t)) || e && t && "number" == typeof t.length) { n && (t = n); var r = 0, i = function () { }; return { s: i, n: function () { return r >= t.length ? { done: !0 } : { done: !1, value: t[r++] } }, e: function (t) { throw t }, f: i } } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.") } var o, a = !0, s = !1; return { s: function () { n = n.call(t) }, n: function () { var t = n.next(); return a = t.done, t }, e: function (t) { s = !0, o = t }, f: function () { try { a || null == n.return || n.return() } finally { if (s) throw o } } } } function Wi(t, e) { (null == e || e > t.length) && (e = t.length); for (var n = 0, r = new Array(e); n < e; n++)r[n] = t[n]; return r } var Hi = function () { function t() { this.faceCount = 0, this.verticesCoords = [], this.textureCoords = [], this.uvs = [], this.vertices = [], this.normals = [], this.indexes = [] } var e = t.prototype; return e.load = function (t) { var e = this; return new Promise((function (n) { (function (t) { var e = new XMLHttpRequest; return e.open("GET", t, !0), e.send(null), new Promise((function (t) { e.addEventListener("load", (function () { t(e.responseText) }), !1) }), (function (t) { e.addEventListener("error", (function (e) { console.error("request error"), t(e) }), !1) })) })(t).then((function (t) { e.parse(t); var r = e.genObject3D(); n(r) })) })) }, e.genObject3D = function () { var t = new Zr; t.setAttribute("position", new Gr(this.vertices, 3)), this.uvs.length && t.setAttribute("uv", new Gr(this.uvs, 2)), t.setIndexes(this.indexes); var e = new Pi; return new Kr(t, e) }, e.parse = function (t) { var e, n = Gi(t.split("\n")); try { for (n.s(); !(e = n.n()).done;) { var r = e.value, i = r.indexOf("#"); -1 !== i && (r = r.substring(0, i)); var o = (r = r.trim()).split(/\s+/); switch (o[0]) { case "v": this.verticesCoords.push(parseFloat(o[1]), parseFloat(o[2]), parseFloat(o[3])); break; case "vn": this.normals.push(parseFloat(o[1]), parseFloat(o[2]), parseFloat(o[3])); break; case "vt": this.textureCoords.push(parseFloat(o[1]), parseFloat(o[2])); break; case "p": case "l": case "usemtl": break; case "f": o.shift(), this.parseFaceLine(o) } } } catch (t) { n.e(t) } finally { n.f() } }, e.parseFaceLine = function (t) { for (var e = [], n = t.length, r = 0; r < n; r++) { var i = t[r]; if (i.length > 0) { var o = i.split("/"); e.push(o) } } for (var a = e[0], s = 1, u = e.length - 1; s < u; s++) { var h = e[s], c = e[s + 1]; this.addFace(a, h, c) } }, e.addFace = function (t, e, n) { var r = this.verticesCoords, i = r.length / 3, o = this.parseVertexIndex(t[0], i), a = this.parseVertexIndex(e[0], i), s = this.parseVertexIndex(n[0], i); this.vertices.push(r[o], r[o + 1], r[o + 2], r[a], r[a + 1], r[a + 2], r[s], r[s + 1], r[s + 2]); var u = 3 * this.faceCount; if (this.indexes.push(u, u + 1, u + 2), this.faceCount++, "" !== t[1]) { var h = this.textureCoords, c = h.length, l = this.parseUVIndex(t[1], c), f = this.parseUVIndex(e[1], c), d = this.parseUVIndex(n[1], c); this.uvs.push(h[l], h[l + 1], h[f], h[f + 1], h[d], h[d + 1]) } t[2] }, e.parseVertexIndex = function (t, e) { var n = parseInt(t, 10); return 3 * (n >= 0 ? n - 1 : n + e / 3) }, e.parseUVIndex = function (t, e) { var n = parseInt(t, 10); return 2 * (n >= 0 ? n - 1 : n + e / 2) }, t }(); function Zi(t) { return new Promise((function (e, n) { var r = new Image; r.src = t, r.crossOrigin = "Anonymous", r.onload = function () { e(r) }, r.onerror = function (t) { n(t) } })) } function qi(t) { if (6 !== t.length) throw new Error("[loadCubeTexture] param urls need len six. [px, nx, py, ny, pz, nz]"); return new Promise((function (e, n) { for (var r = 0, i = new hi, o = i.image, a = function (a) { Zi(t[a]).then((function (t) { r++, o[a] = t, 6 === r && (i.needsUpdate = !0, e(i)) })).catch((function (t) { console.error(t), n(t) })) }, s = 0; s < 6; s++)a(s) })) } var Yi = function (t) { function e() { var e, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : .1, r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 3e3; return (e = t.call(this) || this).isCamera = !0, e.viewMatrix = Pe(), e.projectionMatrix = Pe(), e.projectionMatrixNeedUpdate = !1, e._far = void 0, e._near = void 0, e._far = r, e._near = n, e } return c(e, t), e.prototype.updateWorldMatrix = function () { var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0]; t.prototype.updateWorldMatrix.call(this, e), Be(this.viewMatrix, this.worldMatrix) }, o(e, [{ key: "near", get: function () { return this._near }, set: function (t) { this._near = t, this.projectionMatrixNeedUpdate = !0 } }, { key: "far", get: function () { return this._far }, set: function (t) { this._far = t, this.projectionMatrixNeedUpdate = !0 } }]), e }(Ur), Xi = function (t) { function e(e, n, r, i, o, a) { var s; return (s = t.call(this, o, a) || this)._left = void 0, s._right = void 0, s._top = void 0, s._bottom = void 0, s._top = r, s._left = e, s._right = n, s._bottom = i, s.updateProjectionMatrix(!0), s } c(e, t); var n = e.prototype; return n.updateProjectionMatrix = function () { var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0]; if (!0 === t || !0 === this.projectionMatrixNeedUpdate) { var e = (this.right - this.left) / 2, n = (this.top - this.bottom) / 2, r = (this.right + this.left) / 2, i = (this.top + this.bottom) / 2, o = r - e, a = r + e, s = i + n, u = i - n; Ie(this.projectionMatrix), $e(this.projectionMatrix, o, a, s, u, this.near, this.far), this.projectionMatrixNeedUpdate = !1 } }, n.clone = function (n) { return void 0 === n && (n = new e(0, 0, 0, 0, 0, 0)), t.prototype.clone.call(this, n), n.left = this.left, n.right = this.right, n.top = this.top, n.bottom = this.bottom, n.near = this.near, n.far = this.far, n.updateProjectionMatrix(), n.updateWorldMatrix(), n }, o(e, [{ key: "top", get: function () { return this._top }, set: function (t) { t !== this._top && (this._top = t, this.projectionMatrixNeedUpdate = !0) } }, { key: "left", get: function () { return this._left }, set: function (t) { t !== this._left && (this._left = t, this.projectionMatrixNeedUpdate = !0) } }, { key: "right", get: function () { return this._right }, set: function (t) { t !== this._right && (this._right = t, this.projectionMatrixNeedUpdate = !0) } }, { key: "bottom", get: function () { return this._bottom }, set: function (t) { t !== this._bottom && (this._bottom = t, this.projectionMatrixNeedUpdate = !0) } }]), e }(Yi), Ki = function (t) { function e(e, n, r, i) { var o; return (o = t.call(this, r, i) || this).type = "PerspectiveCamera", o._fov = void 0, o._aspect = void 0, o._fov = e, o._aspect = n, o.updateProjectionMatrix(!0), o } c(e, t); var n = e.prototype; return n.updateProjectionMatrix = function () { var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0]; !0 !== t && !0 !== this.projectionMatrixNeedUpdate || (Ie(this.projectionMatrix), Qe(this.projectionMatrix, this.fov * Math.PI / 180, this.aspect, this.near, this.far), this.projectionMatrixNeedUpdate = !1) }, n.clone = function (n) { return void 0 === n && (n = new e(0, 0, 0, 0)), t.prototype.clone.call(this, n), n.fov = this.fov, n.aspect = this.aspect, n.near = this.near, n.far = this.far, n.updateProjectionMatrix(), n.updateWorldMatrix(), n }, o(e, [{ key: "fov", get: function () { return this._fov }, set: function (t) { t !== this._fov && (this._fov = t, this.projectionMatrixNeedUpdate = !0) } }, { key: "aspect", get: function () { return this._aspect }, set: function (t) { t !== this._aspect && (this._aspect = t, this.projectionMatrixNeedUpdate = !0) } }]), e }(Yi), Qi = Object.freeze({ __proto__: null, Mesh: Kr, Scene: Qr, Geometry: Jr, Object3D: Ur, Raycaster: si, Texture: ui, CubeTexture: hi, TextureOperation: ci, Material: Ti, BasicMaterial: Pi, BufferGeometry: Zr, WebGLRenderer: Ui, PlaneGeometry: Ni, BoxGeometry: zi, WebGLRenderTarget: Vi, PlaneBufferGeometry: ji, Box3: Nr, OBJLoader: Hi, loadImage: Zi, loadTexture: function (t, e, n) { return Zi(t).then((function (t) { var n = new ui(t); return e && e(n), n })).catch((function (t) { n && n(t) })) }, loadCubeTexture: qi, Vec2: Ut, Vec3: ge, Vec4: kn, Mat3: Se, Mat4: an, Quat: Ar, quatToEuler: Ir, BufferAttribute: Fr, Uint8BufferAttribute: jr, Uint16BufferAttribute: zr, Uint32BufferAttribute: Vr, Float32ArrayAttribute: Gr, UintBufferAttribute: Wr, OrthographicCamera: Xi, PerspectiveCamera: Ki }), Ji = function () { function t(t) { this.pano = void 0, this.panoData = void 0, this._meshs = new Kr, this.pano = t } return o(t, [{ key: "camera", get: function () { return this.pano.camera } }, { key: "meshs", get: function () { return this._meshs }, set: function (t) { this._meshs = t } }]), t }(), $i = ["varying vec3 v_normal;", "void main(void){", "   gl_Position = mvpMatrix * vec4(position, 1.0);", "   v_normal = normalize(position.xyz);", "}"].join("\n"), to = ["uniform samplerCube uSampler;", "uniform float uOpacity;", "varying vec3 v_normal;", "void main(void){", "    vec4 textureColor = textureCube(uSampler, normalize(v_normal));", "    gl_FragColor = vec4(textureColor.rgb, textureColor.a * uOpacity);", "}"].join("\n"), eo = function (t) { function e(e) { var n; return (n = t.call(this, e) || this).initMesh(), n } c(e, t); var n = e.prototype; return n.initMesh = function () { var t = new zi(8, 8, 8, 1, 1, 1), e = new Ti; e.vertexShader = $i, e.fragmentShader = to, e.uniforms = { vColor: { type: "4f", value: [1, 0, 0, 1] }, uSampler: { type: "t", value: null }, uOpacity: { type: "1f", value: 1 } }; var n = new Kr(t, e); n.visible = !1, n.setScale(-1, 1, 1), this.meshs = n }, n.setData = function (t) { var e = this; if (!t.image || 6 !== t.image.length) throw new Error("天空盒模型需要6张纹理，但只获取到 ".concat(t.image ? t.image.length : 0, "张")); this.panoData = t; var n = this.meshs; qi(t.image).then((function (t) { n.material.uniforms.uSampler.value = t, n.visible = !0, e.pano.emit({ type: d.REFRESH, log: "[Refresh Log] 立方贴图加载完成， 渲染一帧" }) })).catch((function (t) { return console.error(t) })) }, n.update = function () { }, n.draw = function () { }, e }(Ji), no = function (t) { return t }, ro = function (t) { return t * t }, io = function (t) { return -t * (t - 2) }, oo = ro, ao = io, so = Object.freeze({ __proto__: null, linear: no, reverse: function (t) { return 1 - t }, easeInQuad: ro, easeInCubic: function (t) { return Math.pow(t, 3) }, easeOutQuad: io, easeOutCubic: function (t) { return Math.pow(t - 1, 3) + 1 }, easeInOutQuad: function (t) { return t < .5 ? t * t * 2 : -2 * (t - 2) * t - 1 }, easeInOutCubic: function (t) { return t < .5 ? 4 * Math.pow(t, 3) : 4 * Math.pow(t - 1, 3) + 1 }, easeInOutSine: function (t) { return (1 - Math.cos(Math.PI * t)) / 2 }, easeIn: oo, easeOut: ao }), uo = function () { }, ho = function () { function t(t, e, n) { var r = this, i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : no; this.from = void 0, this.to = void 0, this.duration = void 0, this.easingFn = void 0, this._isPlaying = !1, this._autoTimer = null, this._startTime = null, this._onUpdateCallback = uo, this._onEndCallback = uo, this.start = function () { return r._isPlaying || (r._isPlaying = !0, r._startTime = r.getNow()), r }, this.stop = function () { return r._isPlaying = !1, r }, this.startAndAutoUpdate = function () { if (r._isPlaying) return r; r.start(), r._autoTimer = null; return function t() { r.update(), r._autoTimer = requestAnimationFrame(t) }(), r }, this.onEnd = function (t) { return "function" == typeof t ? r._onEndCallback = t : console.warn("[Warning] onUpdate required a funtion"), r }, this.onUpdate = function (t) { return "function" == typeof t ? r._onUpdateCallback = t : console.warn("[Warning] onUpdate required a funtion"), r }, this.update = function () { if (!r._isPlaying) return !1; var t = r.from, e = r.to, n = r.getNow(), i = r.easingFn, o = r._startTime; if (o > n) return !1; var a = (n - o) / r.duration, s = t + (e - t) * i(a = 0 === r.duration || a > 1 ? 1 : a); return r._onUpdateCallback(s), 1 === a && r.handleEnd(), !0 }, this.from = t, this.to = e, this.duration = n, this.easingFn = i } var e = t.prototype; return e.getNow = function () { return Date.now() }, e.handleEnd = function () { this._isPlaying = !1, this._autoTimer = null, this._onEndCallback() }, t }(), co = function (t, e, n) { var r = .5 * e, i = .5 * n; return _t((t[0] - r) / r, (i - t[1]) / i) }, lo = function (t, e, n) { var r = .5 * e, i = .5 * n; return _t((t[0] + 1) * r, (1 - t[1]) * i) }, fo = function (t, e, n, r) { var i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 100, o = sn(), a = co(t, n, r), s = hn(a[0], a[1], i, 1), u = Pe(), h = e.worldMatrix; return Be(u, e.projectionMatrix), En(o, s, u), En(o, o, h), o }, po = function (t, e, n, r) { var i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4], o = hn(e[0], e[1], e[2], 1); if (En(o, o, t.viewMatrix), 0 < o[2] && !0 !== i) return null; En(o, o, t.projectionMatrix), o[0] = o[0] / o[3], o[1] = o[1] / o[3], o[2] = o[2] / o[3], o[3] = 1; var a = _t(o[0], o[1]); return lo(a, n, r) }, vo = function (t, e, n, r) { var i = po(e, t, n, r) || [-1, -1], o = xi(i, 2), a = o[0], s = o[1], u = !1; return a >= 0 && a <= n && s >= 0 && s <= r && (u = !0), u }, mo = Object.freeze({ __proto__: null, viewportToNormalizeProjection: co, normalizeProjectionToViewport: lo, viewportToWorld: fo, worldToViewport: po, isCoordsInView: vo }), go = function () { function t() { var e = this, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 500; this.getVertexs = function () { return e.vertexs }, this.getFacesVertex = function () { return e.facesVertex }, this.generateTextureCoord = function (n, r, i) { var o = e.facesVertex[Math.round(e.facesVertex.length / 2)]; if (o) { for (var a = [], s = Math.pow(2, 5 - i), u = r % s, h = n % s, c = t.H_SEGS / e.cols, l = 1 / c, f = 1 / ((t.V_SEGS - 1) / e.rows), d = 0; d < o.length / 3; d++) { var p = d % (c + 1) * l, v = Math.floor(d / (c + 1)) * f; p = p / s + 1 * u / s, v = v / s + 1 * h / s, 1 === i && (v *= 2), a.push(p, v) } return a } }, this.getFaceIndex = function (n) { var r = 0, i = xi(n, 3), o = i[0], a = i[1], s = i[2], u = Math.round(180 * Math.atan(Math.abs(s) / Math.abs(o)) / Math.PI); o > 0 ? s < 0 && (u = 360 - u) : u = s > 0 ? 180 - u : 180 + u, u %= 360, r = a > e._x3 ? 7 : a > e._x2 ? 6 : a > e._x1 ? 5 : a > 0 ? 4 : a > -e._x1 ? 3 : a > -e._x2 ? 2 : a > -e._x3 ? 1 : 0; var h = Math.floor(u / 22.5), c = t.H_SEGS; return [h, r, h + r * (c / (c / e.cols))] }, this.viewportToSphereCoord = function (t, n, r, i) { var o = e.radius, a = fo(t, i, n, r), s = xi(a, 3), u = s[0], h = s[1], c = s[2], l = o / Math.sqrt(u * u + h * h + c * c); return [u * l, h * l, c * l] }, this.getFaceVertex = function (n, r) { var i = t.H_SEGS / e.cols, o = r + n * (t.H_SEGS / i); return e.facesVertex[o] }, this.radius = n, this.rows = t.DEFAULT_COLS / 2, this.cols = t.DEFAULT_COLS, this.vertexs = null, this.facesVertex = [], this.facesVertexIndice = [], this.init() } var e = t.prototype; return e.init = function () { var t = this.getSphereVertexInfo(); this.facesVertexIndice = this.getSphereFacesIndices(), this.vertexs = t.vertexs, this.facesVertex = t.facesVertex, this.calcConst() }, e.calcConst = function () { var t = 360 / this.cols; this._x1 = Math.cos(g(3 * t)) * this.radius, this._x2 = Math.cos(g(2 * t)) * this.radius, this._x3 = Math.cos(g(1 * t)) * this.radius }, e.getSphereVertexInfo = function () { for (var e, n = [], r = [], i = this.radius, o = t.H_SEGS, a = t.V_SEGS, s = 360 / o, u = 180 / (a - 1), h = o / this.cols, c = o / h, l = 0, f = 0, d = [], p = 0; p < a; p++) { var v = Math.sin(g(p * u - 90)) * i, m = Math.cos(g(p * u - 90)) * i; v = Math.round(100 * v) / 100, m = Math.round(100 * m) / 100, l = Math.floor(p / h); for (var y = 0; y < o; y++) { var _ = Math.cos(g(y * s)) * m, x = Math.sin(g(y * s)) * m; if (_ = Math.round(100 * _) / 100, x = Math.round(100 * x) / 100, n.push(_, v, x), e = (f = Math.floor(y / h)) + l * c, l < this.rows && (r[e] || (r[e] = []), r[e].push(_, v, x)), l > 0 && p % h == 0) { var b = f + (l - 1) * c; r[b].push(_, v, x), y > 0 && y % h == 0 && r[b - 1] && r[b - 1].push(_, v, x), y === o - 1 && r[b].push(d[0], d[1], d[2]) } 0 === f && 0 === y && (d = [_, v, x]), y > 0 && y % h == 0 && r[e - 1] && r[e - 1].push(_, v, x), l < this.rows && y === o - 1 && r[e].push(d[0], d[1], d[2]) } } return { vertexs: n, facesVertex: r } }, e.getSphereFacesIndices = function () { for (var e = [], n = t.H_SEGS / this.cols, r = n + 1, i = 0; i < n; i++)for (var o = 0; o < n; o++) { var a = i * r, s = a + o + 1, u = a + o + 1 + r; e.push(a + o, s, u), s = a + o + 1 + r, e.push(a + o, s, a + r + o) } return e }, e.getSphereFacesIndicesByimageZoom = function (e) { for (var n = this, r = [], i = t.H_SEGS, o = Math.pow(2, 5 - e), a = i / this.cols + 1, s = a * a, u = function (t) { for (var e = function (e) { n.facesVertexIndice.forEach((function (n) { r.push(n + s * e + s * t * 2) })) }, i = 0; i < o; i++)e(i) }, h = 0; h < o; h++)u(h); return r }, t }(); go.DEFAULT_COLS = Math.pow(2, 4), go.H_SEGS = 64, go.V_SEGS = 33; var yo = function () { function t() { this._counter = 0, this._imageCollection = {} } var e = t.prototype; return e.getImageInstance = function () { var t; for (var e in this._imageCollection) if (this._imageCollection[e] && !0 === this._imageCollection[e]._free) return this._imageCollection[e]._free = !1, this._imageCollection[e]; t = new Image; var n = this.getGUID(); return this._imageCollection[n] = t, t }, e.freeImage = function (t) { t && (t._free = !0, t.src = "", t.onload = t.onerror = null) }, e.getGUID = function () { return this._counter++, "img_".concat(this._counter) }, t }(), _o = function () { function t(e, n) { var r = this, i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : ""; this.imageInstancePool = void 0, this.tileImagesCache = void 0, this.textureInfo = void 0, this.pano = void 0, this.udtVersion = void 0, this.cdnList = void 0, this.calcTileKey = function (t, e, n, r) { return "".concat(t, "_").concat(e, "_").concat(n, "_").concat(r) }, this.loadImage = function (t, e, n, i) { var o = r.calcTileKey(t, e, n, i), a = r.getTilesUrl(t, { x: e, y: n }, i), s = r.tileImagesCache.getData(o); return new Promise((function (t, e) { s ? t(s._loaded ? s : null) : ((s = r.imageInstancePool.getImageInstance()).crossOrigin = "anonymous", s._loaded = !1, s.onload = function () { s._loaded = !0, t(s) }, s.onerror = function (t) { console.error("Tile ".concat(o, " load error => "), t), e(t) }, s.src = a, r.tileImagesCache.setData(o, s)) })) }, this.loadTexture = function (t, e, n, i) { var o = r.calcTileKey(t, e, n, i), a = r.textureInfo.getData(o); return new Promise((function (s, u) { a && a.loaded ? s(a) : r.loadImage(t, e, n, i).then((function (t) { if (!t) return null; var e = new ui(t); 1 !== i && r.textureInfo.setData(o, e), s(e) })).catch((function (t) { console.error("[TextureManager] loadTexture fail => ".concat(t)), u(null) })) })) }, this.loadTopoTexture = function (t) { var e = 0, n = new Image; return new Promise((function (r) { n.onload = function () { var t = new ui(n); t.flipY = !1, r(t) }, n.onerror = function () { 2 > e ? (e++, n.src = "".concat(t, "&random=").concat((new Date).getTime())) : r(null) }, n.crossOrigin = "anonymous", n.src = t })) }, this.clear = function () { r.textureInfo.clear() }, this.pano = e, this.udtVersion = i, this.cdnList = n || e.opts.tileBaseUrls, this.imageInstancePool = new yo, this.tileImagesCache = new A(t.MAX_TILE_CACHED, { clearCallback: function (t) { r.imageInstancePool.freeImage(t) } }), this.textureInfo = new A(t.MAX_TILE_CACHED, { clearCallback: function (t) { t.destory() } }) } var e = t.prototype; return e.getRandomCDN = function () { var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [], e = t.length; return t[Math.floor(Math.random() * e)] }, e.getTilesUrl = function (e, n, r) { return this.getRandomCDN(this.cdnList) + (t.TILE_URL_TEMPLATE + "&".concat($("/", { isCounter: !0 }))).replace("{udt}", this.udtVersion).replace("{sid}", e).replace("{x}", "".concat(n.x)).replace("{y}", "".concat(n.y)).replace("{zoom}", "".concat(r)) }, t }(); _o.MAX_TILE_CACHED = 160, _o.TILE_URL_TEMPLATE = "?qt=pdata&sid={sid}&pos={y}_{x}&z={zoom}&udt={udt}&from=H5"; var xo = ["attribute vec2 uvBack;", "varying mediump vec2 vTextureCoordBack;", "varying mediump vec2 vTextureCoord;", "void main(void) {", "    gl_Position = mvpMatrix * vec4(position, 1.0);", "    vTextureCoordBack = uvBack;", "    vTextureCoord = uv;", "}"].join("\n"), bo = ["precision mediump float;", "varying vec2 vTextureCoordBack;", "varying vec2 vTextureCoord;", "uniform sampler2D uSamplerBack;", "uniform sampler2D uSampler;", "uniform bool uDrawThumb;", "uniform bool uDrawBack;", "uniform float uAlpha;", "void main(void) {", "    if (uDrawThumb) {", "        gl_FragColor = texture2D(uSamplerBack, vTextureCoordBack);", "        return;", "    }", "    if (uAlpha == 1.0) {", "        gl_FragColor = texture2D(uSampler, vTextureCoord);", "        return;", "    }", "    if (uDrawBack) {", "        gl_FragColor = texture2D(uSampler, vTextureCoord) * uAlpha + texture2D(uSamplerBack, vTextureCoordBack) * (1.0 - uAlpha);", "    } else {", "        vec4 textureColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));", "        gl_FragColor =  vec4(textureColor.rgb, textureColor.a * uAlpha);", "    }", "}"].join("\n"), Mo = ["varying highp vec2 vTextureCoord;", "void main(void) {", "    gl_Position = mvpMatrix * vec4(position, 1.0);", "    vTextureCoord = uv;", "}"].join("\n"), wo = ["precision mediump float;", "uniform sampler2D uSampler;", "varying highp vec2 vTextureCoord;", "void main(void) {", "    gl_FragColor = texture2D(uSampler, vTextureCoord);", "}"].join("\n"), Eo = ["varying highp vec2 vTextureCoord;", "void main(void) {", "    gl_Position = mvpMatrix * vec4(position, 1.0);", "    vTextureCoord = uv;", "}"].join("\n"), To = ["uniform sampler2D uSampler;", "uniform float uOpacity;", "varying vec2 vTextureCoord;", "void main(void){", "    vec4 textureColor = texture2D(uSampler, vTextureCoord);", "    gl_FragColor = vec4(textureColor.rgb, textureColor.a * uOpacity);", "}"].join("\n"), Ao = ["varying highp vec3 vTextureCoord;", "void main(void){", "   gl_Position = mvpMatrix  * vec4(position, 1.0);", "   vTextureCoord = vec3(uv, 1.0) * length(position);", "}"].join("\n"), Co = ["uniform sampler2D uSampler;", "uniform float uOpacity;", "varying vec3 vTextureCoord;", "uniform bool showDebugLine;", "uniform vec4 vColor;", "void main(void){", "   if (!showDebugLine) {", "       vec4 textureColor = texture2DProj(uSampler, vTextureCoord);", "       gl_FragColor = vec4(textureColor.rgb, textureColor.a * uOpacity);", "   } else {", "       gl_FragColor = vec4(vColor.rgb, vColor.a);", "   }", "}"].join("\n"), Ro = function () { function t(e, n, r, i) { this.nodes = void 0, this.level = void 0, this.key = void 0, this.nodes = [], this.level = e, this.key = "".concat(r, "_").concat(i), e < n && (this.nodes[0] = new t(e + 1, n, 2 * r, 2 * i), this.nodes[1] = new t(e + 1, n, 2 * r, 2 * i + 1), this.nodes[2] = new t(e + 1, n, 2 * r + 1, 2 * i), this.nodes[3] = new t(e + 1, n, 2 * r + 1, 2 * i + 1)) } var e = t.prototype; return e.hasNodes = function () { return this.nodes.length > 0 }, e.getNodeKeysByLevel = function (t) { if (t < this.level) return console.warn("指定节点".concat(t, " 不在当前节点").concat(this.level, "范围内！")), []; if (this.level === t) return [this.key]; for (var e = [], n = 0; n < this.nodes.length; n++)if (Object.prototype.hasOwnProperty.call(this.nodes, n)) { var r = this.nodes[n]; if (this.level === t - 1) e.push(r.key); else if (r.hasNodes()) { var i = r.getNodeKeysByLevel(t); e.push.apply(e, mi(i)) } } return e }, t }(); var So = function (t) { function e(e) { var n; return (n = t.call(this, e) || this).name = "SphereRender", n.sphere = void 0, n.textureManager = void 0, n.imgColsRows = void 0, n.curThumbTexture = void 0, n.meshCache = {}, n.tileInfoCache = {}, n.imgRange = void 0, n.faceRange = void 0, n.hitTile = void 0, n.setData = function (t) { n.panoData = t, n.curThumbTexture = null, n.loadThumbTextures(t.panoId) }, n.update = function () { n.updateRangeInfo(), n.checkAndLoadTiles() }, n.checkAndLoadTiles = function () { if (n.curThumbTexture && n.panoData) { var t = n.panoData.panoId, e = n.camera, r = n.imgColsRows[n._imgZoom], i = r.cols, o = i - 1, a = r.rows - 1, s = n.pano.getContainerSize(), u = s.width, h = s.height, c = !1, l = [], f = xi(n.imgRange, 4), d = f[0], p = f[1], v = f[2], m = f[3]; if (vo(Vt(0, 100, 0), e, u, h)) { for (var g = 0; g <= v; g++)for (var y = 0; y <= o; y++)n.checkAndLoadTile(t, y, g, n._imgZoom), l.push([g, y]); v < m && (v += 1, c = !0) } else if (vo(Vt(0, -100, 0), e, u, h)) { for (var _ = m; _ <= a; _++)for (var x = 0; x <= o; x++)n.checkAndLoadTile(t, x, _, n._imgZoom), l.push([_, x]); v < m && (m -= 1, c = !0) } else c = !0; if (!0 === c) { p > o && (p = o); for (var b = d; b <= p; b++)for (var M = v; M <= m; M++) { var w = b < 0 ? b + i : b; n.checkAndLoadTile(t, w, M, n._imgZoom), l.push([M, w]) } } n.hitTile = l, l.forEach((function (t) { var e = xi(t, 2), r = e[0], i = e[1], o = "".concat(r, "_").concat(i, "_").concat(n._imgZoom); if (void 0 === n.tileInfoCache[o]) { var a = new Ro(n._imgZoom, 5, r, i).getNodeKeysByLevel(5); n.tileInfoCache[o] = a } })) } }, n.draw = function () { var t = n.meshs; if (!n.faceRange || !n.curThumbTexture) return !1; t.children = []; for (var e = function (e, r) { var i = n.curThumbTexture, o = n.textureManager.calcTileKey(n.panoData.panoId, e, r, n._imgZoom), a = n.textureManager.textureInfo.getData(o), s = !1, u = null; if (a ? !(u = a).finished && u.aniInfo && u.aniInfo && u.aniInfo.update() : i && (s = !0, u = i), u) { var h = "".concat(r, "_").concat(e, "_").concat(n._imgZoom), c = n.meshCache[h]; if (!c) { if (!(c = n.createTileMesh(r, e))) return; n.meshCache[h] = c } if (!c.material) return; var l = c.material.uniforms; l.uSamplerBack.value = i, s ? l.uDrawThumb.value = !0 : (l.uDrawThumb.value = !1, l.uSampler.value = u, l.uAlpha.value = u.alpha), t.add(c) } }, r = 0; r < n.hitTile.length; r++) { var i = xi(n.hitTile[r], 2), o = i[0]; e(i[1], o) } return !0 }, n.pano = e, n.sphere = new go(e.opts.radius), n.textureManager = new _o(e), n.imgColsRows = function () { for (var t = [], e = 0; e <= 5; e++)t[e] = e < 2 ? { cols: 1, rows: 1 } : { cols: Math.pow(2, e - 1), rows: Math.pow(2, e - 1) / 2 }; return t }(), n.curThumbTexture = null, n.meshs = new Kr, n } c(e, t); var n = e.prototype; return n.checkAndLoadTile = function (t, e, n, r) { var i = this, o = this.textureManager, a = o.calcTileKey(t, e, n, r); !0 !== (void 0 !== o.textureInfo.getData(a)) && this.textureManager.loadTexture(t, e, n, r).then((function (t) { t && !t.done && (t.aniInfo = i.createTextureAnimation(t), t.done = !0, i.pano.dispatchEvent({ type: d.REFRESH, log: "[Refresh Log] 瓦片加载完成， 渲染一帧" })) })) }, n.loadThumbTextures = function (t) { var e = this; this.textureManager.loadTexture(t, 0, 0, 1).then((function (t) { e.curThumbTexture = t, e.pano.dispatchEvent({ type: d.THUMB_LOADED }), e.pano.dispatchEvent({ debug: !0, type: d.REFRESH, log: "[Refresh Log] 缩略图加载完毕，渲染一帧" }) })) }, n.createTextureAnimation = function (t) { var e = this; return t.alpha = 0, new ho(0, 1, 300).onUpdate((function (n) { t.alpha = n, e.pano.dispatchEvent({ debug: !0, type: d.REFRESH, log: "[Refresh Log] 纹理清晰度渐变动画，渲染一帧" }) })).onEnd((function () { t.finished = !0 })).start() }, n.createTileMesh = function (t, e) { var n = new Ti, r = new Zr; if (n.depthTest = !1, n.vertexShader = xo, n.fragmentShader = bo, n.uniforms = { uSampler: { type: "t", value: null }, uSamplerBack: { type: "t", value: null }, uDrawThumb: { type: "1i", value: 1 }, uDrawBack: { type: "1i", value: 1 }, uAlpha: { type: "1f", value: 1 } }, !this.setGeometryAttrib(r, t, e)) return null; var i = new Kr(r, n); return i.name = "tile-mesh", i }, n.setGeometryAttrib = function (t, e, n) { var r = "".concat(e, "_").concat(n, "_").concat(this._imgZoom), i = this.tileInfoCache[r]; if (!i) return !1; for (var o = [], a = [], s = [], u = 0; u < i.length; u++) { var h = i[u].split("_"), c = this.sphere.rows, l = Number(h[1]), f = c - 1 - Number(h[0]); o.push.apply(o, mi(this.sphere.getFaceVertex(f, l))), a.push.apply(a, mi(this.sphere.generateTextureCoord(f, l, this._imgZoom))), s.push.apply(s, mi(this.sphere.generateTextureCoord(f, l, 1))) } var d = this.sphere.getSphereFacesIndicesByimageZoom(this._imgZoom); return t.setAttribute("uv", new Gr(a, 2)), t.setAttribute("uvBack", new Gr(s, 2)), t.setAttribute("position", new Gr(o, 3)), t.setIndexes(d), !0 }, n.getTileBoundary = function () { var t = this.pano.getContainerSize(), e = t.width, n = t.height, r = _t(0, 0), i = _t(e, 0), o = _t(0, n), a = _t(e, n), s = _t(.5 * e, 0), u = _t(.5 * e, n), h = _t(0, .5 * n), c = _t(e, .5 * n), l = this.getSpherePosition(r), f = this.getSpherePosition(i), d = this.getSpherePosition(o), p = this.getSpherePosition(a), v = this.getSpherePosition(s), m = this.getSpherePosition(u), g = this.getSpherePosition(h), y = this.getSpherePosition(c), _ = Math.max(l[1], v[1], f[1]), x = Math.min(d[1], m[1], p[1]), b = [l[0], g[0], d[0], v[0]], w = [f[0], y[0], p[0], m[0]], E = Math.min.apply(Math, b), T = Math.max.apply(Math, w), A = M(b), C = M(w), R = this.sphere.cols, S = R / 2; A.max - A.min > S && (E = Math.min.apply(Math, mi(b.filter((function (t) { return t > S }))))), C.max - C.min > S && (T = Math.max.apply(Math, mi(w.filter((function (t) { return t < S }))))), E > T && (E -= R); var P = this.getImgIndexByFaceColRow(E, _), D = xi(P, 2), O = D[0], I = D[1], L = this.getImgIndexByFaceColRow(T, x), B = xi(L, 2); return [[E, T, _, x], [O, B[0], I, B[1]]] }, n.updateRangeInfo = function () { var t = this.getTileBoundary(), e = xi(t, 2), n = e[0], r = e[1]; this.imgRange = r, this.faceRange = n }, n.getImgIndexByFaceColRow = function (t, e, n) { n = n || this._imgZoom; var r = Math.pow(2, 5 - n), i = Math.floor(t / r), o = Math.floor(e / r); return [i, o = this.imgColsRows[n].rows - o - 1, i + o * go.DEFAULT_COLS / r] }, n.normalizeNum = function (t, e) { for (var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, r = t; r < n;)r += e; return r %= e }, n.getSpherePosition = function (t) { var e = this.camera, n = this.pano.getContainerSize(), r = n.width, i = n.height, o = this.sphere.viewportToSphereCoord(t, r, i, e), a = this.sphere.getFaceIndex(o), s = xi(a, 2); return _t(s[0], s[1]) }, n.generateBackThumb = function (t) { if (t) { var e = this.pano, n = e.getContainerSize(), r = n.width, i = n.height, o = "//apisv0.bdimg.com/?udt=20140616&qt=pdata&pos=0_0&z=2&sid=".concat(t, "&from=H5&").concat($("/", { isCounter: !0 })), a = e.getPanes().tileLayer; a.style.backgroundImage = 'url("' + o + '")', a.style.backgroundPosition = "50% 50%", a.style.backgroundSize = "150% 150%", a.style.width = "".concat(r, "px"), a.style.height = "".concat(i, "px") } }, o(e, [{ key: "_imgZoom", get: function () { return this.pano.imageZoom } }]), e }(Ji), Po = [10, -20, 30, 10, -20, 10, -10, -20, 10, -10, -20, 30].map((function (t) { return -20 === t ? -20 : 1.8 * t })), Do = [10, -22, 30, 10, -22, 10, -10, -22, 10, -10, -22, 30].map((function (t) { return -22 === t ? -22 : 1.8 * t })), Oo = [1.8, -20, 24.9, 1.8, -20, 16.3, -1.8, -20, 16.3, -1.8, -20, 24.9].map((function (t) { return -20 === t ? -20 : 1.8 * t })), Io = [0, 0, 0, .5, .25, .5, .25, 0], Lo = function () { function t(t, e, n) { var r = this; this.mesh = void 0, this.material = void 0, this.linkData = void 0, this._pano = void 0, this.northDir = void 0, this.yAxisDis = void 0, this.isPosInArrow = function (t, e, n, i, o) { var a = _t(t, e), s = fo(a, n, i, o, -1), u = 200 * s[0], h = 200 * s[1], c = 200 * s[2], l = r.yAxisDis / h; if (l < 0) return !1; var f = [u * l, h * l, c * l]; return r.isHitLink(f) }, this._pano = t, this.linkData = e, this.northDir = n, this.yAxisDis = 0, this.linkData.refinedDir = _((e.topoDir || 0) + this.northDir), this.material = this.createArrowMaterial(), this.mesh = this.initMesh(), this.changePose() } var e = t.prototype; return e.initMesh = function () { var t = this.createGeometry(), e = new Kr(t, this.material); return e.visible = !1, e.name = "link-mesh", e }, e.createArrowMaterial = function () { var t = new Ti; return t.depthTest = !1, t.vertexShader = Mo, t.fragmentShader = wo, t.uniforms = { uSampler: { type: "t", value: null } }, t }, e.setTopoTexture = function (t) { t.isTexture && (this.material.uniforms.uSampler.value = t) }, e.setVisible = function (t) { this.mesh.setVisible(t, !0) }, e.createGeometry = function () { var t = new Zr, e = this.getTextCoord(this.linkData.topoDir), n = [].concat(Do, Po, Oo), r = [].concat([.5, 0, .5, .5, 1, .5, 1, 0], [0, 0, 0, .5, .5, .5, .5, 0], e), i = [].concat([0, 1, 2, 0, 2, 3], [4, 5, 6, 4, 6, 7], [8, 9, 11, 10, 11, 9]); return t.setAttribute("position", new Gr(n, 3)), t.setAttribute("uv", new Gr(r, 2)), t.setIndexes(i), t }, e.changePose = function (t) { t = t || this.mesh; var e = 50, n = -30, r = this._pano.getPov().pitch, i = this.linkData.refinedDir; (e += 20 * this._pano.getZoom(), r < 0) && (e *= (90 - (r = Math.abs(r))) / 90, n -= 20 * r / 90); var o = Math.cos(g(i)) * e, a = Math.sin(g(i)) * e; this.yAxisDis = n + -20, t.setPosition(o, n, a), t.rotateY(-_(i - 90)), t.rotateX(-5), t.updateWorldMatrix(!0) }, e.getTextCoord = function (t) { t = (t + 360) % 360; var e = Math.ceil(Math.floor(t / 22.5) / 2); 8 === e && (e = 0); for (var n = Io.slice(0), r = Math.floor(e / 2), i = e % 2, o = 0; o < n.length; o++)o % 2 == 0 ? (n[o] += .25 * r, n[o] = .5 * n[o]) : (n[o] += .5 * i, n[o] = .5 * n[o] + .5); return n }, e.isHitLink = function (t) { var e = t[0], n = t[2], r = this.mesh.worldMatrix, i = Vt(Po[0], Po[1], Po[2]), o = Vt(Po[6], Po[7], Po[8]), a = Vt((i[0] + o[0]) / 2, (i[1] + o[1]) / 2, (i[2] + o[2]) / 2); return ee(a, a, r), Math.abs(e - a[0]) < 18 && Math.abs(n - a[2]) < 18 }, t }(), Bo = function (t) { function e(e) { var n; return (n = t.call(this, e) || this).name = "PanoLinkRender", n.linkVisible = !0, n.textureManager = void 0, n.linkInfos = [], n.setData = function (t) { if (t && (o = t.getTopos, a = "[object Function]" === Object.prototype.toString.call(o), s = "[object AsyncFunction]" === Object.prototype.toString.call(o), a || s)) { n.reset(); var e = t.getTopos(), r = t.northDir, i = t.panoType === p.TYPE_STREET; e.length && i && (n.linkInfos = e.map((function (t) { return new Lo(n.pano, t, r) })), n.meshs = n.linkInfos.map((function (t) { return t.mesh })), n.loadTextures(), n.setVisible(!0)) } var o, a, s }, n.clickChecker = function (t, e) { if (n.linkVisible) { var r = n.getIdByTouchPos(t, e); return r && (n.setVisible(!1), n.pano.dispatchEvent({ type: d.LINK_CLICK, id: r }), n.pano.setId(r, { animation: !0 })), !r } }, n.pano = e, n.meshs = [], n.textureManager = new _o(e), n } c(e, t); var n = e.prototype; return n.reset = function () { this.meshs = [], this.linkInfos = [] }, n.update = function () { this.linkInfos.forEach((function (t) { t.changePose() })) }, n.setVisible = function (t) { var e = this.linkInfos; if (!(e.length < 1)) { var n = this.pano.opts.linksControl, r = !1; !0 === n && (r = t), this.linkVisible = r, e.forEach((function (t) { return t.setVisible(r) })) } }, n.draw = function () { }, n.loadTextures = function () { var t = this, e = this.pano.opts.imgPath ? "".concat(this.pano.opts.imgPath, "topo_arrow.png") : p.TOPO_ARROW_TEXTURE; this.textureManager.loadTopoTexture(e).then((function (e) { e && t.linkInfos.forEach((function (t) { t.setTopoTexture(e) })) })) }, n.getIdByTouchPos = function (t, e) { var n = this, r = null; if (!this.linkInfos.length) return r; var i = this.pano.getContainerSize(), o = i.width, a = i.height, s = this.linkInfos.filter((function (r) { return r.isPosInArrow(t, e, n.camera, o, a) })); return s.length && (r = s[0].linkData.panoId), r }, e }(Ji), ko = function () { function t(t, e, n) { var r = this; this.start = function () { r.fadeAni.start(), r._pano.dispatchEvent({ debug: !0, log: "淡出动画，渲染一帧", type: d.REFRESH }) }, this.update = function () { r.fadeAni.update() }, this._pano = t, this.gl = this._pano.gl, this.snapshot = e, this.scene = this.initScene(), this.camera = this.initCamera(); this.fadeAni = new ho(1, 0, 600).onUpdate((function (t) { r.material.uniforms.uOpacity.value = t, r._pano.dispatchEvent({ type: d.REFRESH }) })).onEnd((function () { n && n(), r._pano.dispatchEvent({ type: d.REFRESH, debug: !0, log: "淡出动画结束，渲染一帧" }) })) } var e = t.prototype; return e.initScene = function () { var t = new Qr, e = this._pano.getContainerSize(), n = e.width, r = e.height, i = new ji(n, r), o = this.initMaterial(), a = new Kr(i, o); return t.add(a), t }, e.initMaterial = function () { var t = new Ti; return t.depthTest = !1, t.vertexShader = Eo, t.fragmentShader = To, t.uniforms = { uSampler: { type: "t", value: this.snapshot }, uOpacity: { type: "1f", value: 1 } }, this.material = t, t }, e.initCamera = function () { var t = this._pano.getContainerSize(), e = t.width / 2, n = t.height / 2; return new Xi(-e, e, n, -n, 0, 11e3) }, t }(), Uo = function () { function t(t, e, n) { var r = this; this.start = function () { r.waveAni.start(), r._pano.dispatchEvent({ debug: !0, log: "淡出动画，渲染一帧", type: d.REFRESH }) }, this.update = function () { r.waveAni.update() }, this._pano = t, this.gl = this._pano.gl, this.snapshot = e, this.scene = this.initScene(), this.camera = this.initCamera(); this.waveAni = new ho(0, 1, 800).onUpdate((function (t) { r.material.uniforms.progress.value = t, r.material.uniforms.uOpacity.value = 1 - t, r._pano.dispatchEvent({ type: d.REFRESH }) })).onEnd((function () { n && n(), r._pano.dispatchEvent({ type: d.REFRESH, debug: !0, log: "淡出动画结束，渲染一帧" }) })) } var e = t.prototype; return e.initCamera = function () { var t = this._pano.getContainerSize(), e = t.width / 2, n = t.height / 2; return new Xi(-e, e, n, -n, 0, 11e3) }, e.initScene = function () { var t = new Qr, e = this._pano.getContainerSize(), n = e.width, r = e.height, i = new ji(n, r), o = this.initMaterial(), a = new Kr(i, o); return t.add(a), t }, e.initMaterial = function () { var t = new Ti, e = this._pano.getContainerSize(), n = e.width, r = e.height; return t.depthTest = !1, t.vertexShader = Eo, t.fragmentShader = "\n    uniform float aspect;\n    uniform float radius;\n    uniform float amp;\n    uniform float band;\n    uniform float waves;\n    uniform float speed;\n    uniform float progress;\n    uniform vec2 uCenter;\n    uniform sampler2D uSampler;\n    uniform float uOpacity;\n\n    varying vec2 vTextureCoord;\n\n    void main() {\n        vec2 tc = vTextureCoord;\n        vec2 uv = vec2(0.0, 0.0);\n        vec2 p;\n        float len;\n        vec2 uv_offset;\n        float wave_width = band * radius;\n\n        p = (tc - uCenter);\n        p.x = p.x * aspect;\n        len = length(p);\n\n        float current_radius = radius * progress;\n        float damp_factor = 1.0;\n        if (progress > .5) {\n            damp_factor = (1.0 - progress) * 2.0;\n        }\n\n        float cut_factor = clamp(wave_width * damp_factor - abs(current_radius - len), 0.0, 1.0);\n        float waves_factor = waves * len / radius;\n        uv_offset = (p / len) * cos((waves_factor - progress * speed) * 3.14) * amp * cut_factor;\n\n        uv += uv_offset;\n\n        vec4 t_image = texture2D(uSampler, fract(tc + uv));\n\n        // gl_FragColor = t_image;\n        gl_FragColor = vec4(t_image.rgb, t_image.a * uOpacity);\n    }\n", t.uniforms = { uSampler: { type: "t", value: this.snapshot }, uCenter: { type: "2f", value: [.5, .5] }, uOpacity: { type: "1f", value: 1 }, progress: { type: "1f", value: 0 }, speed: { type: "1f", value: 4 }, waves: { type: "1f", value: 14 }, band: { type: "1f", value: .3 }, amp: { type: "1f", value: .3 }, aspect: { type: "1f", value: n / r }, radius: { type: "1f", value: 1 } }, this.material = t, t }, t }(), No = function () { function t(t, e, n, r) { var i = this; this.startAni = function () { i.animation.start() }, this.update = function () { i.animation.update() }, this.pano = t, this.distance = n, this.refinedDir = e, this.camera = this.pano.camera, this.cameraBase = this.pano.camera.clone(), this.handleEnd = r, this.initAni() } return t.prototype.initAni = function () { var t = this, e = this.distance, n = this.refinedDir, r = Math.cos(g(n)), i = Math.sin(g(n)); this.animation = new ho(0, 1, 400, so.easeOutQuad).onUpdate((function (n) { var o = e * n, a = r * o, s = i * o; t.camera.setPosition(a, 0, s), t.pano.dispatchEvent({ debug: !0, type: d.REFRESH, log: "[Refresh Log] 前进动画， 渲染一帧" }) })).onEnd((function () { t.handleEnd && t.handleEnd() })) }, t }(), Fo = function (t, e, n, r) { this.x = t || 0, this.y = e || 0, this.width = n || 0, this.height = r || 0 }, jo = function (t, e) { var n = this; this.angleDegreeDelta = function (t, e) { var n = Math.abs(t - e); return n > 180 ? 360 - n : n }, this.getRoad = function (t, e, n, r, i) { for (var o, a = [], s = [[-t / 2, -e, -10], [-t / 2, -e, -20], [t / 2, -e, -10], [t / 2, -e, -20]], u = s.length, h = 0; h < u; h++)ee(o = s[h], o, n), a[h] = { x: o[0] * r * .5, y: -o[1] * i * .5 }; return a }, this.getIntersection = function (t, e, n, r) { if (t.x === e.x || n.x === r.x) return null; var i = (e.y - t.y) / (e.x - t.x), o = (r.y - n.y) / (r.x - n.x); if (i === o) return null; var a = (o * n.x - i * t.x + t.y - n.y) / (o - i); return { x: a, y: i * (a - t.x) + t.y } }, this.calculateVanishPoint = function (t, e, r, i) { var o = n.getIntersection(t[0], t[1], t[2], t[3]); return null === o ? null : (o.x += r * e * .5, o.y += i * e * .5, o) }, this.getOuterRect = function (t, e, n) { return new Fo(t * (n - 1) * .5, e * (n - 1) * .5, t, e) }, this.transformPoint = function (t, e, n) { return t && void 0 !== t.x && void 0 !== t.y ? { x: t.x + e, y: t.y + n } : t }, this.getInnerRect = function (t, e, r, i, o) { var a = n.transformPoint(t, .5 * -r * o, .5 * -i * o), s = n.transformPoint(a, 0, 20), u = n.transformPoint(a, 10, 20), h = n.getIntersection(e[0], e[1], s, u), c = n.getIntersection(e[2], e[3], s, u), l = n.transformPoint(h, 0, -70), f = new Fo(l.x + r * o * .5, l.y + i * o * .5, c.x - h.x, 70); return f = n.fixInnerRectPosition(f, t), f = n.fixInnerRectSize(f, t, r) }, this.fixInnerRectPosition = function (t, e) { var n = t, r = (e.x - t.x) / t.width, i = 0; return r > .7 && (i = r - .7), r < .3 && (i = .3 - r), n.x = n.x + n.width * i, n }, this.fixInnerRectSize = function (t, e, n) { var r, i, o, a, s = t; s.width / n > .12 && (a = (o = .12 * n) * (s.width / s.height), r = s.x + (s.width - o) * (e.x - s.x) / s.width, i = s.y + (s.height - a) * (e.y - s.y) / s.height, s = new Fo(r, i, o, a)); var u = s.width / s.height; return a = s.height, u > 1.2 && (a = s.height * u / 1.2), u < .9 && (a = s.height * u / .9), i = s.y + s.height - a, s.height = a, s.y = i, s }, this.panoData = t.panoData, this.camera = t.camera, this.projectionMatrix = this.camera.projectionMatrix, this.fov = g(this.camera.fov), this.traverseDir = e, this.cameraHeading = t.getPov().heading || 0, this.isMovingForward = this.angleDegreeDelta(this.cameraHeading, this.traverseDir) <= 90, this.roadWith = Math.min(1.5 * this.panoData.getRoadWidth(), 10), this.deviceHeight = this.panoData.deviceHeight || 2.2, this.panoWidth = t._container.clientWidth, this.panoHeight = t._container.clientHeight; var r = this.angleDegreeDelta(this.cameraHeading, this.traverseDir) > 45; this.snapshotRatio = r ? 1 : 1.8, this.projectionRoadInfos = this.getRoad(this.roadWith, this.deviceHeight, this.projectionMatrix, this.panoWidth, this.panoHeight), this.vanishPoint = this.calculateVanishPoint(this.projectionRoadInfos, this.snapshotRatio, this.panoWidth, this.panoHeight), this.innerRect = this.getInnerRect(this.vanishPoint, this.projectionRoadInfos, this.panoWidth, this.panoHeight, this.snapshotRatio), this.outerRect = this.getOuterRect(this.panoWidth, this.panoHeight, this.snapshotRatio), this.focusLength = .5 * this.panoHeight / Math.tan(.75 * this.fov), this.vanishPointDeltaX = this.vanishPoint.x - this.outerRect.x - .5 * this.outerRect.width, this.vanishPointDeltaY = this.vanishPoint.y - this.outerRect.y - .5 * this.outerRect.height }, zo = { FAR: [10, 10, 0], LEFT: [0, 10, 30], RIGHT: [0, 10, 30], TOP: [10, 0, 30], BOTTOM: [10, 0, 30] }, Vo = { FAR: ["innerTopLeftVertex", "innerBottomRightVertex"], LEFT: ["outerTopLeftVertex", "innerBottomLeftVertex"], RIGHT: ["innerTopRightVertex", "outerBottomRightVertex"], TOP: ["outerTopLeftVertex", "innerTopRightVertex"], BOTTOM: ["innerBottomLeftVertex", "outerBottomRightVertex"] }, Go = Object.keys(zo), Wo = function (t) { function e(e, n) { var r; if ((r = t.call(this) || this).createSkeleton = function (t) { var e = t.vanishPoint, n = t.innerRect, r = t.outerRect, i = t.focusLength, o = r.y + r.height - n.y - n.height, a = e.y - n.y, s = e.x - n.x, u = n.x + n.width - e.x, h = r.y + r.height - e.y, c = o * i / (h - o), l = u * (i + c) / i, f = -(s * (i + c) / i), d = h + a * (i + c) / i - h, p = -h, v = c / 5; return { innerTopLeftVertex: { x: f, y: d, z: -c }, innerBottomLeftVertex: { x: f, y: p, z: -c }, innerTopRightVertex: { x: l, y: d, z: -c }, innerBottomRightVertex: { x: l, y: p, z: -c }, outerTopLeftVertex: { x: f, y: d, z: v }, outerTopRightVertex: { x: l, y: d, z: v }, outerBottomLeftVertex: { x: f, y: p, z: v }, outerBottomRightVertex: { x: l, y: p, z: v } } }, r.modelSkeleton = function (t, e) { var n = [], i = []; return Go.forEach((function (o) { var a = xi(Vo[o], 2), s = a[0], u = a[1], h = n.length / 3; n = n.concat(r.calculatePlaneVertex(t[s], t[u], o, e)), i = i.concat(r.calculateIndices(o, h)) })), [n, i] }, r.calculatePlaneVertex = function (t, e, n, i) { for (var o, a = [], s = xi(zo[n], 3), u = s[0], h = s[1], c = s[2], l = r.linerInterpolate(t.x, e.x, u), f = r.linerInterpolate(t.y, e.y, h), d = r.linerInterpolate(t.z, e.z, c), p = 0; p <= u; p++)for (var v = 0; v <= h; v++)for (var m = 0; m <= c; m++)En(o = hn(l[p], f[v], d[m], 1), o, i), o[0] = o[0] / o[3], o[1] = o[1] / o[3], o[2] = o[2] / o[3], a.push(o[0], o[1], o[2]); return a }, r.calculateIndices = function (t, e) { var n = [], r = zo[t]; r = r.filter((function (t) { return t > 0 })); for (var i = xi(r, 2), o = i[0], a = i[1], s = 0, u = 0, h = 0, c = 0, l = 0; l < o; l++)for (var f = 0; f < a; f++)u = (s = e + (a + 1) * l + f) + 1, c = (h = s + a + 1) + 1, n.push(s, h, c), n.push(s, c, u); return n }, r.linerInterpolate = function (t, e, n) { var r = []; if (n <= 0) r.push(t); else for (var i = (e - t) / n, o = 0; o <= n; o++)r[o] = t + i * o; return r }, r.calculateUVCoordinate = function (t, e, n) { for (var i, o = t.camera, a = t.panoWidth, s = t.panoHeight, u = t.vanishPointDeltaX, h = t.vanishPointDeltaY, c = [], l = e.width, f = e.height, d = 0, p = 0, v = n.length / 3, m = 0; m < v; m++)En(i = hn(n[3 * m], n[3 * m + 1], n[3 * m + 2], 1), i, o.viewMatrix), En(i, i, o.projectionMatrix), i[0] = i[0] / i[3], i[1] = i[1] / i[3], i[2] = i[2] / i[3], i[3] = 1, d = (i[0] * a * .5 + u + .5 * l) / l, p = (i[1] * s * .5 + h + .5 * f) / f, c.push(r.getValidateUV(d), r.getValidateUV(p)); return new Float32Array(c) }, r.getValidateUV = function (t) { return Math.max(-.1, Math.min(1.1, t)) }, r.rotationMatrix = Pe(), r.camera = e.camera, e.isMovingForward) Ve(r.rotationMatrix, r.rotationMatrix, g(_(-e.traverseDir + e.panoData.heading))); else { var i = _(180 - e.traverseDir + e.panoData.heading); Ve(r.rotationMatrix, r.rotationMatrix, g(i)) } r.cuboidVertexes = r.createSkeleton(e); var o = r.modelSkeleton(r.cuboidVertexes, r.rotationMatrix), a = xi(o, 2), s = a[0], u = a[1]; return r.verticesBufferData = new Float32Array(s), r.indicesBufferData = new Uint16Array(u), r.uvtsBufferData = r.calculateUVCoordinate(e, n, s, r.rotationMatrix), r.setAttribute("position", new Gr(r.verticesBufferData, 3)), r.setAttribute("uv", new Gr(r.uvtsBufferData, 2)), r.setIndexes(r.indicesBufferData), r } return c(e, t), e }(Zr), Ho = [0, 1, 0, .5], Zo = function () { function t(t, e, n, r, i) { var o = this; this.start = function () { o.animation.start(), o._pano.dispatchEvent({ debug: !0, log: "淡出动画，渲染一帧", type: d.REFRESH }) }, this.update = function () { o.animation.update() }, this._pano = t, this.distance = e, this.handleEnd = i, this.traverseDir = r, this.snapshot = n, this.camera = t.camera, this.scene = this.initScene(), this.rotationMatrix = this.traverseGeometry.rotationMatrix, this.initAni() } var e = t.prototype; return e.initAni = function () { var t = this, e = Vt(0, 0, this.distance); ee(e, e, this.rotationMatrix), this.animation = new ho(0, 1, 700, so.linear).onUpdate((function (n) { var r = Ft(); Yt(r, e, n), t.scene.traverse((function (t) { t.position = r, t.updateWorldMatrix(!0) })), t._pano.dispatchEvent({ debug: !0, type: d.REFRESH, log: "[Refresh Log] 前进动画， 渲染一帧" }) })).onEnd((function () { t.handleEnd && t.handleEnd(), t._pano.dispatchEvent({ debug: !0, type: d.REFRESH, log: "[Refresh Log] 前进动画， 渲染一帧" }) })) }, e.initScene = function () { var t = new Qr, e = this._pano.getContainerSize(), n = e.width, r = e.height, i = new jo(this._pano, this.traverseDir), o = new Fo(0, 0, n, r), a = new Wo(i, o), s = this.initMaterial(), u = new Kr(a, s); return this.traverseGeometry = a, t.add(u), t }, e.initMaterial = function () { var t = new Ti; return t.depthTest = !1, t.vertexShader = Ao, t.fragmentShader = Co, t.uniforms = { uSampler: { type: "t", value: this.snapshot }, uOpacity: { type: "1f", value: 1 }, vColor: { type: "4f", value: Ho }, showDebugLine: { type: "1i", value: true } }, this.material = t, t }, t }(), qo = function () { function t() { var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0, e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0; this.x = t, this.y = e } return t.prototype.equals = function (t) { return t && t.x === this.x && t.y === this.y }, t }(), Yo = function () { function t(t, e) { var n = this; this.setData = function (t, e) { n.panoData = t, n.nextPanoData = e }, this.sceneChangeHandler = function () { if (n.panoData && n.nextPanoData) return new Promise((function (t) { var e = n.isStreet(n.panoData.panoType), r = n.isStreet(n.nextPanoData.panoType), i = n.snapshotFn(), o = n.pano.animationType; if (o && ["waterwave", "fade"].indexOf(o) > -1) switch (o) { case "waterwave": n.prepareWaterWave(i), t(); break; case "fade": n.prepareFade(i), t() } else r && e ? (n.setDir(), n.prepareTraverse(i).then((function (e) { n.prepareFade(e), t() }))) : (n.prepareFade(i), t()) })) }, this.setSnapshot = function (t) { n.snapshot = t }, this.pano = t, this.snapshotFn = e, this.panoData = null, this.nextPanoData = null, this.changeAni = null, this.animateDir = 0 } var e = t.prototype; return e.draw = function () { if (this.changeAni) { var t = this.changeAni, e = t.scene, n = t.camera; this.changeAni.update(), this.pano.renderer.render(e, n) } }, e.setDir = function () { if (this.panoData && this.nextPanoData) { var t = this.nextPanoData.panoId, e = this.panoData.getTopos().filter((function (e) { return e && e.panoId === t })); if (e.length) { var n = e[0].topoDir; this.animateDir = n } else this.animateDir = this.pano.getPov().heading || 0 } }, e.prepareJump = function () { var t = this, e = this.calcJumpDistance(); return new Promise((function (n) { t.changeAni = new No(t.pano, t.animateDir, e, (function () { t.changeAni = null, n() })), t.changeAni.startAni(), t.pano.dispatchEvent({ debug: !0, log: "穿梭动画，渲染一帧", type: d.REFRESH }) })) }, e.prepareTraverse = function (t) { var e = this, n = this.calcJumpDistance(); return new Promise((function (r) { e.changeAni = new Zo(e.pano, n, t, e.animateDir, (function () { var t = e.snapshotFn(e.changeAni.scene, e.changeAni.camera); r(t), e.changeAni = null })), e.changeAni.start(), e.pano.dispatchEvent({ debug: !0, log: "穿梭动画，渲染一帧", type: d.REFRESH }) })) }, e.prepareFade = function (t) { var e = this; this.changeAni = new ko(this.pano, t, (function () { e.changeAni = null, e.pano.emit(d.SCENE_CHANGE_END) })) }, e.prepareWaterWave = function (t) { var e = this; this.changeAni = new Uo(this.pano, t, (function () { e.changeAni = null, e.pano.emit(d.SCENE_CHANGE_END) })) }, e.calcJumpDistance = function () { var t, e, n = 300, r = (t = new qo(this.panoData.panoX, this.panoData.panoY), e = new qo(this.nextPanoData.panoX, this.nextPanoData.panoY), t && e ? Math.round(Math.sqrt(Math.pow(t.x - e.x, 2) + Math.pow(t.y - e.y, 2))) : 0); "number" == typeof r && (n *= Math.pow(r, 1 / 4)); return n }, e.isStreet = function (t) { return t === p.TYPE_STREET }, t }(), Xo = function () { function t(t, e) { var n = e.fov, r = void 0 === n ? 145 : n, i = e.cameraY, o = void 0 === i ? 3e3 : i, a = e.handleEnd; this._pano = void 0, this.originFov = void 0, this.originRotateX = void 0, this.originRotateY = void 0, this.targetFov = void 0, this.targetCameraY = void 0, this.handleEnd = void 0, this.animate = void 0, this._pano = t, this.originFov = this.camera.fov, this.originRotateX = this.camera.rotation.x, this.originRotateY = this.camera.rotation.y, this.targetFov = r, this.targetCameraY = o, this.handleEnd = a, this.init() } var e = t.prototype; return e.start = function () { this._pano.dispatchEvent({ type: d.REFRESH, debug: !0, log: "开场动画动画起始，渲染一帧" }), this.animate.start() }, e.update = function () { this.animate.update() }, e.init = function () { var t = this, e = this.camera; this.handleCameraChange(0), this.animate = new ho(0, 1, p.FISHEYE_DURATION, so.easeInOutQuad).onUpdate((function (e) { t.handleCameraChange(e), t._pano.dispatchEvent({ type: d.REFRESH, debug: !0, log: "开场动画动画，渲染一帧" }) })).onEnd((function () { e.fov = t.originFov, e.rotateX(t.originRotateX), e.rotateY(t.originRotateY), e.setPosition(0, 0, 0), e.updateWorldMatrix(), e.updateProjectionMatrix(), t._pano.dispatchEvent({ type: d.REFRESH, debug: !0, log: "开场动画动画结束，渲染一帧" }), t.handleEnd() })) }, e.handleCameraChange = function (t) { var e = this.camera, n = this.targetCameraY, r = this.targetFov - (this.targetFov - this.originFov) * t, i = (this.originRotateX - -90) * t - 90, o = this.originRotateY * t; e.fov = r, e.rotateX(i), e.rotateY(o), e.setPosition(0, n - n * t, 0), e.updateWorldMatrix(), e.updateProjectionMatrix() }, o(t, [{ key: "camera", get: function () { return this._pano.camera } }]), t }(); function Ko(t, e) { var n = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"]; if (!n) { if (Array.isArray(t) || (n = function (t, e) { if (!t) return; if ("string" == typeof t) return Qo(t, e); var n = Object.prototype.toString.call(t).slice(8, -1); "Object" === n && t.constructor && (n = t.constructor.name); if ("Map" === n || "Set" === n) return Array.from(t); if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Qo(t, e) }(t)) || e && t && "number" == typeof t.length) { n && (t = n); var r = 0, i = function () { }; return { s: i, n: function () { return r >= t.length ? { done: !0 } : { done: !1, value: t[r++] } }, e: function (t) { throw t }, f: i } } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.") } var o, a = !0, s = !1; return { s: function () { n = n.call(t) }, n: function () { var t = n.next(); return a = t.done, t }, e: function (t) { s = !0, o = t }, f: function () { try { a || null == n.return || n.return() } finally { if (s) throw o } } } } function Qo(t, e) { (null == e || e > t.length) && (e = t.length); for (var n = 0, r = new Array(e); n < e; n++)r[n] = t[n]; return r } var Jo = function () { function t(t) { var e = this; this.name = "PanoOverlayManager", this.overlays = [], this.pano = void 0, this.isReady = !1, this.clickChecker = function (t, n) { var r, i = !0, o = Ko(e.overlays); try { for (o.s(); !(r = o.n()).done;) { var a = r.value, s = a.dom.getBoundingClientRect(), u = s.left, h = s.right, c = s.top, l = s.bottom; if (t >= u && t <= h && n >= c && n <= l) { i = !1, a.handleClick(); break } } } catch (t) { o.e(t) } finally { o.f() } return i }, this.pano = t } var e = t.prototype; return e.handleAdd = function (t) { t && t.id && (this.overlays.some((function (e) { return e.id === t.id })) || (this.overlays.push(t), this.isReady && t.init(this.pano))) }, e.handleRemove = function (t) { for (var e = 0; e < this.overlays.length; e++)if (this.overlays[e].id === t.id) return this.overlays[e].remove(), void this.overlays.splice(e, 1) }, e.init = function () { this.isReady = !0; var t, e = Ko(this.overlays); try { for (e.s(); !(t = e.n()).done;) { t.value.init(this.pano) } } catch (t) { e.e(t) } finally { e.f() } }, e.draw = function () { if (this.isReady) { var t, e = Ko(this.overlays); try { for (e.s(); !(t = e.n()).done;) { t.value.draw() } } catch (t) { e.e(t) } finally { e.f() } } }, e.destroy = function () { var t, e = Ko(this.overlays); try { for (e.s(); !(t = e.n()).done;) { t.value.remove() } } catch (t) { e.e(t) } finally { e.f() } this.overlays = [] }, t }(); function $o(t, e) { var n = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"]; if (!n) { if (Array.isArray(t) || (n = function (t, e) { if (!t) return; if ("string" == typeof t) return ta(t, e); var n = Object.prototype.toString.call(t).slice(8, -1); "Object" === n && t.constructor && (n = t.constructor.name); if ("Map" === n || "Set" === n) return Array.from(t); if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return ta(t, e) }(t)) || e && t && "number" == typeof t.length) { n && (t = n); var r = 0, i = function () { }; return { s: i, n: function () { return r >= t.length ? { done: !0 } : { done: !1, value: t[r++] } }, e: function (t) { throw t }, f: i } } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.") } var o, a = !0, s = !1; return { s: function () { n = n.call(t) }, n: function () { var t = n.next(); return a = t.done, t }, e: function (t) { s = !0, o = t }, f: function () { try { a || null == n.return || n.return() } finally { if (s) throw o } } } } function ta(t, e) { (null == e || e > t.length) && (e = t.length); for (var n = 0, r = new Array(e); n < e; n++)r[n] = t[n]; return r } var ea = function () { function t(t) { var e = this; this.renderer = void 0, this.gl = void 0, this.camera = void 0, this.cameraNoFix = null, this.panoData = null, this.scene = void 0, this.sceneChange = void 0, this.openingAni = void 0, this.sphereRender = void 0, this.linkGLRender = void 0, this.overlayManager = void 0, this.skyboxRender = void 0, this.pano = void 0, this.renderThreadId = null, this.requestId = null, this.isRAFRuning = !1, this.setData = function () { var t = nt(ot.mark((function t(n) { var r, o; return ot.wrap((function (t) { for (; ;)switch (t.prev = t.next) { case 0: if (n) { t.next = 2; break } return t.abrupt("return"); case 2: if (!e.panoData || !e.pano.useAnimation) { t.next = 8; break } return e.sceneChange.setData(e.panoData, n), t.next = 6, e.sceneChange.sceneChangeHandler(); case 6: void 0 !== e.pano.backupUseAnimation && (e.pano.useAnimation = e.pano.backupUseAnimation), e.pano.animationType = ""; case 8: e.reset(), e.panoData = n, e.pano.panoData = n, void 0 === i(n.defaultHeading) && void 0 === i(n.defaultPitch) || e.pano.handlePovChange({ heading: n.defaultHeading, pitch: n.defaultPitch }), r = n.image && 6 === n.image.length, (o = r ? e.skyboxRender : e.sphereRender).setData(n), e.linkGLRender.setData(n), e.overlayManager.init(), e.scene.add(o.meshs), e.updateProjectionMatrix(e.camera), e.updateCameraHeadingAndPitch(e.camera); case 20: case "end": return t.stop() } }), t) }))); return function (e) { return t.apply(this, arguments) } }(), this.getSnapshot = function (t, n) { t = t || e.scene, n = n || e.camera; var r = e.pano.getContainerSize(), i = r.width, o = r.height, a = new Vi(i, o); return a.premultiplyAlpha = !0, e.renderer.render(t, n, a), a }, this.update = function () { e.panoData && (e.sphereRender.update(), e.linkGLRender.update(), e.startRenderThread()) }, this.onThumbLoaded = function () { e.sceneChange.changeAni && e.sceneChange.changeAni.start(); var t = e.linkGLRender.meshs; t && e.scene.add(t), e.startFishEyeAni() }, this.startRenderThread = function () { var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 100; e.renderThreadId && (clearTimeout(e.renderThreadId), e.renderThreadId = null), e.renderThreadId = window.setTimeout((function () { e.isRAFRuning = !1, e.renderThreadId = null }), t), e.isRAFRuning || (e.isRAFRuning = !0, e.renderFrame()) }, this.resize = function () { var t = e.pano.getContainer(); e.renderer.setSize(t.clientWidth, t.clientHeight) }; var n = window.devicePixelRatio || 1, r = t.getContainer(); this.pano = t, this.renderer = new Ui({ premultipliedAlpha: !1, preserveDrawingBuffer: t.opts.enableCapture || !1, antialias: !(n > 1), pixelRatio: n, width: r.clientWidth, height: r.clientHeight }), this.renderer.setSize(r.clientWidth, r.clientHeight), t.getPanes().tileLayer.appendChild(this.renderer.domElement), this.gl = this.renderer.getContext(), this.camera = new Ki(75, r.clientWidth / r.clientHeight, .01, 67e3), this.scene = new Qr, t.gl = this.gl, t.canvas = this.renderer.domElement, t.scene = this.scene, t.camera = this.camera, t.cameraNoFix = this.cameraNoFix, t.renderer = this.renderer, t.renders = [], this.sceneChange = new Yo(t, this.getSnapshot), this.initModule() } var e = t.prototype; return e.initModule = function () { var t = this.pano; this.sphereRender = new So(t), this.linkGLRender = new Bo(t), this.overlayManager = new Jo(t), this.skyboxRender = new eo(t), this.pano.renders.push(this.sphereRender, this.linkGLRender, this.overlayManager, this.skyboxRender) }, e.reset = function () { this.scene.remove(this.sphereRender.meshs), this.scene.remove(this.linkGLRender.meshs) }, e.getModule = function (t) { var e, n = null, r = $o(this.pano.renders); try { for (r.s(); !(e = r.n()).done;) { var i = e.value; if (i.name === t) { n = i; break } } } catch (t) { r.e(t) } finally { r.f() } return n }, e.renderFrame = function () { !1 !== this.isRAFRuning ? (this.openingAni && this.openingAni.update(), this.sphereRender.draw(), this.renderer.render(this.scene, this.camera), this.overlayManager.draw(), this.sceneChange.draw(), this.requestId = requestAnimationFrame(this.renderFrame.bind(this))) : this.requestId && (cancelAnimationFrame(this.requestId), this.requestId = null) }, e.startFishEyeAni = function () { var t = this; this.pano.fisheye && (this.openingAni = new Xo(this.pano, { handleEnd: function () { t.openingAni = null, t.pano.fisheye = !1 } }), setTimeout((function () { t.openingAni.start(), t.startRenderThread() }), p.FISHEYE_DELAY)) }, e.updateProjectionMatrix = function (t, e) { var n = this.pano.getFov(e), r = this.pano.getContainerSize(), i = r.width / r.height; t.fov = n, t.aspect = i, t.updateProjectionMatrix() }, e.updateCameraHeadingAndPitch = function (t) { var e = this.pano.getPov(), n = e.heading, r = e.pitch, i = this.panoData, o = i.fixHeading, a = void 0 === o ? 0 : o, s = i.fixPitch, u = void 0 === s ? 0 : s, h = i.fixRoll, c = void 0 === h ? 0 : h; t.rotateX(r - u), t.rotateY(-n + a), t.rotateZ(c), t.updateWorldMatrix() }, e.safeCall = function (t, e, n) { var r = this.getModule(t); if (r && r[e]) return r[e].apply(r, n || []); throw new Error("[safeCall] get module error => ".concat(t)) }, o(t, [{ key: "isCanUpdate", get: function () { var t = this.sceneChange.changeAni, e = this.openingAni; return this.panoData && !(t || e) } }]), t }(), na = function () { function t(t) { var e = this; this.updateAnglePerPixel = function () { e._anglePerPixel = e._pano.calcAnglePerPixel() }, this.destroy = function () { e.bindEvent(!1) }, this._pano = t, this._displayZoom = t.getZoom(), this._anglePerPixel = t.calcAnglePerPixel(), this._container = t.getContainer(), this.lock = !1, this.clickTimer = null, this.dragAni = null, this.state = { initPos: null, initHeading: 0, initPitch: 0, lastDiffPos: null, moveDiffPos: null, isTouchDown: !1, isTouchMove: !1, startTime: 0, lastMoveTime: 0 } } var e = t.prototype; return e.init = function () { if (!this._initialized) { if (this._initialized = !0, this.isMobile = navigator.userAgent.toLowerCase().match(/ipod|ipad|iphone|android/), this.isMobile) { this.EVENTS = { START: "touchstart", MOVING: "touchmove", END: "touchend", OUT: "touchcancel", WHEEL: "gesturechange", DOMMouseScroll: "DOMMouseScroll" }; var t = this._container.getBoundingClientRect ? this._container.getBoundingClientRect() : {}, e = t.left, n = void 0 === e ? 0 : e, r = t.top, i = void 0 === r ? 0 : r; this.getPagePosition = function (t) { var e = t.touches.length > 0 ? t.touches[0] : t.changedTouches[0]; return { x: e.pageX - n, y: e.pageY - i } } } else this.EVENTS = { START: "mousedown", MOVING: "mousemove", END: "mouseup", OUT: "mouseout", WHEEL: "mousewheel" }, this.getPagePosition = function (t) { return { x: t.offsetX, y: t.offsetY } }; this.bindEvent() } }, e.bindEvent = function () { var t = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0], e = document.body, n = this.EVENTS, r = n.START, i = n.MOVING, o = n.END, a = this._pano._svContainer, s = t ? "addEventListener" : "removeEventListener"; a[s](r, this.handleDown.bind(this)), a[s](i, this.handleMove.bind(this)), e[s](o, this.handleUp.bind(this)) }, e.handleDown = function (t) { this.dragAni && this.dragAni.stop(); var e = this.state, n = this.getPagePosition(t), r = this._pano.getPov(); e.initPos = n, e.isTouchDown = !0, e.initHeading = r.heading, e.initPitch = r.pitch, e.startTime = x(), this._pano.dispatchEvent(d.TOUCH_START, t) }, e.handleMove = function (t) { if (this.state.isTouchDown) { this.state.isTouchMove = !0; var e = this.calcDiffPos(this.state.initPos, this.getPagePosition(t)); this.setPov(e), this.state.moveDiffPos = e, this.state.lastDiffPos = e, this.state.lastMoveTime = x(), t.preventDefault(), t.stopPropagation() } }, e.handleUp = function (t) { var e = this; if (this.state.isTouchDown) { var n = !0, r = this.getPagePosition(t); if (t.pos = r, this.state.isTouchDown = !1, this._pano.dispatchEvent(d.TOUCH_END, t), this._pano.renders.length) for (var i = 0; i < this._pano.renders.length; i++) { var o = this._pano.renders[i]; if (o.clickChecker && !(n = o.clickChecker(r.x, r.y))) { t.stopPropagation(); break } } if (!1 !== n) if (this.state.isTouchMove) this.state.isTouchMove = !1, this.processMotion(t); else if (t.stopPropagation(), this.clickTimer) clearTimeout(this.clickTimer), this.clickTimer = null, this._pano.dispatchEvent(d.DOUBLE_CLICK, t); else { this.clickTimer = setTimeout((function () { e.clickTimer = null, e._pano.dispatchEvent(d.CLICK, t) }), 300) } } }, e.setPov = function (t) { var e = t.x, n = t.y, r = -e * this._anglePerPixel, i = n * this._anglePerPixel, o = this.state.initHeading + r, a = this.state.initPitch + i; this._pano.setPov({ heading: o, pitch: a }) }, e.processMotion = function (t) { var e = this, n = this.state, r = x(), i = r - n.lastMoveTime, o = n.moveDiffPos, a = o.x, s = o.y; if (i < 300 && (Math.abs(a) > 10 || Math.abs(s) > 10)) { var u = this.calcDiffPos(this.state.initPos, this.getPagePosition(t)), h = 2 * Math.sqrt(Math.pow(u.x, 2) + Math.pow(u.y, 2)) / (.008 * (r - n.startTime)), c = [u.x > 0 ? 1 : -1, u.y > 0 ? 1 : -1], l = Math.abs(u.x), f = Math.abs(u.y), p = Math.atan2(f, l), v = Math.cos(p) * h, m = Math.sin(p) * h; -1 === c[0] && (v = -v), -1 === c[1] && (m = -m), this.dragAni && this.dragAni.stop(); var g = this._pano.getPov(), y = g.heading, _ = g.pitch; n.initHeading = y, n.initPitch = _; this.dragAni = new ho(0, 1, 400, (function (t) { return .3125 * t - .15625 * t * t })).onUpdate((function (t) { var n = (t *= 6.4) * v, r = t * m; e.setPov({ x: n, y: r }) })).onEnd((function () { e.dragAni = null, e._pano.dispatchEvent({ type: d.POV_CHANGED_END }) })).startAndAutoUpdate() } else this._pano.dispatchEvent({ type: d.POV_CHANGED_END }) }, e.calcDiffPos = function (t, e) { return t && e ? { x: e.x - t.x, y: e.y - t.y } : { x: 0, y: 0 } }, t }(); function ra(t, e) { var n = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"]; if (!n) { if (Array.isArray(t) || (n = function (t, e) { if (!t) return; if ("string" == typeof t) return ia(t, e); var n = Object.prototype.toString.call(t).slice(8, -1); "Object" === n && t.constructor && (n = t.constructor.name); if ("Map" === n || "Set" === n) return Array.from(t); if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return ia(t, e) }(t)) || e && t && "number" == typeof t.length) { n && (t = n); var r = 0, i = function () { }; return { s: i, n: function () { return r >= t.length ? { done: !0 } : { done: !1, value: t[r++] } }, e: function (t) { throw t }, f: i } } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.") } var o, a = !0, s = !1; return { s: function () { n = n.call(t) }, n: function () { var t = n.next(); return a = t.done, t }, e: function (t) { s = !0, o = t }, f: function () { try { a || null == n.return || n.return() } finally { if (s) throw o } } } } function ia(t, e) { (null == e || e > t.length) && (e = t.length); for (var n = 0, r = new Array(e); n < e; n++)r[n] = t[n]; return r } var oa = function () { function t(t) { this.pano = t, this.preZoom = t.getZoom(), this.zoomChangeAni = null, this.debug = !1, this.panoServiceLock = !1, this.bindEvent(), this.initModule(), this.initResize(), this.handleContextStatus() } var e = t.prototype; return e.initModule = function () { var t = this.pano; this.panoService = new tt(t), this.panoGLRender = new ea(t), this.op = new na(t) }, e.initResize = function () { var t = this, e = this.pano.getContainerSize(), n = this.pano.getContainer(), r = function (n, r) { if (n && r) { var i = new l(n, r); i.equals(e) || (t.pano.dispatchEvent({ type: d.SIZE_CHANGED }), e = i) } }; if (void 0 !== window.ResizeObserver) { var i = new window.ResizeObserver((function (t) { var e, n = ra(t); try { for (n.s(); !(e = n.n()).done;) { var i = e.value.target; r(i.clientWidth, i.clientHeight) } } catch (t) { n.e(t) } finally { n.f() } })); i.observe(n), this.resizeOb = i } else this.checkSizeTimer = setInterval((function () { r(n.clientWidth, n.clientHeight) }), 80) }, e.bindEvent = function () { var t = this, e = this.pano; e.on(d.PANO_ERROR, (function () { t.panoServiceLock = !1 })), e.on(d.DATA_LOADED, (function (n) { t.pano.opts.visible ? t.pano.show() : t.pano.hide(), t.panoServiceLock = !1, n.options && n.options.animation && (e.backupUseAnimation = e.useAnimation, e.useAnimation = n.options.animation, "" !== n.options.animationType && (e.animationType = n.options.animationType)), t.panoGLRender.setData(n.data), t.op.init() })), e.on(d.SET_POV, (function (n) { var r = n.pov, i = n.options, o = (void 0 === i ? { animation: !0 } : i).animation; if (t.panoGLRender.isCanUpdate) { var a = function (n) { e.handlePovChange(n) && (t.panoGLRender.updateCameraHeadingAndPitch(e.camera), t.panoGLRender.update(), e.dispatchEvent(d.POV_CHANGED, n)) }; if (o) { var s = e.getPov(), u = s.heading, h = s.pitch, c = r.heading - u, l = r.pitch - h; c > 180 ? (u += 360, c = r.heading - u) : c < -180 && (u -= 360, c = r.heading - u), new ho(0, 1, 400, so["ease-out"]).onUpdate((function (t) { a({ heading: u + t * c, pitch: h + t * l }) })).onEnd((function () { })).startAndAutoUpdate() } else a(r) } else e.handlePovChange(r) })), e.on(d.ZOOM_CHANGED, (function () { var n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; if (t.panoGLRender.isCanUpdate) { var r = t.preZoom, i = e.getZoom(); if (r !== i) { var o = n.noAnimation || !1; if (t.zoomChangeAni && (t.zoomChangeAni.stop(), t.zoomChangeAni = null), o) return t.op.updateAnglePerPixel(), t.panoGLRender.updateProjectionMatrix(e.camera), t.panoGLRender.update(), void (t.preZoom = i); var a = 400; t.zoomChangeAni = new ho(r, i, a, so.easeOutCubic).onUpdate((function (n) { t.panoGLRender.updateProjectionMatrix(e.camera, n), t.panoGLRender.update(n) })).onEnd((function () { t.zoomChangeAni = null, t.preZoom = i })).startAndAutoUpdate() } } })), e.on(d.DOUBLE_CLICK, (function () { t.panoGLRender.isCanUpdate && (v.isMobile && (3 === e.getZoom() ? e.setZoom(2) : e.setZoom(3))) })), e.on(d.REFRESH, (function (e) { var n = e.duration || 200; t.panoGLRender.startRenderThread(n), t.debug && e.log && e.debug && console.warn(e.log) })), e.on(d.SET_ID, (function (e) { if (!t.panoServiceLock && e.id) { t.panoServiceLock = !0, window.getPanoById = t.panoService.getPanoById; var n = (1e5 * Math.random()).toFixed(0); BMapGL._rd = BMapGL._rd || {}, BMapGL._rd["_cbk" + n] = function (t) { t && void 0 !== t.error && 0 === t.error ? window.getPanoById(e.id) : Q("PANORAMA"), delete BMapGL._rd["_cbk" + n] }, K("PANORAMA", "BMapGL._rd._cbk" + n) } })), e.on(d.SET_POSITION, (function (e) { if (!t.panoServiceLock && e.point) { t.panoServiceLock = !0, window.getPanoByLocation = t.panoService.getPanoByLocation; var n = (1e5 * Math.random()).toFixed(0); BMapGL._rd = BMapGL._rd || {}, BMapGL._rd["_cbk" + n] = function (t) { t && void 0 !== t.error && 0 === t.error ? window.getPanoByLocation(e.point) : Q("PANORAMA"), delete BMapGL._rd["_cbk" + n] }, K("PANORAMA", "BMapGL._rd._cbk" + n) } })), e.on(d.SIZE_CHANGED, (function () { t.op.updateAnglePerPixel(), t.panoGLRender.resize(), t.panoGLRender.updateProjectionMatrix(e.camera), t.panoGLRender.update() })), e.on(d.THUMB_LOADED, (function () { t.panoGLRender.onThumbLoaded(), t.panoGLRender.update() })), e.on(d.OVERLAY_ADD, (function (e) { t.panoGLRender.overlayManager.handleAdd(e) })), e.on(d.OVERLAY_REMOVE, (function (e) { t.panoGLRender.overlayManager.handleRemove(e) })), e.on(d.OVERLAYS_CLEAR, (function () { t.panoGLRender.overlayManager.destroy() })), e.on(d.LINK_VISIBLE_CHANGE, (function (e) { "boolean" == typeof e.value && (t.panoGLRender.safeCall("PanoLinkRender", "setVisible", [e.value]), t.pano.dispatchEvent(d.REFRESH)) })), e.on(d.DESTROY, (function () { t.op.destroy(), t.resizeOb && t.resizeOb.disconnect(), t.checkSizeTimer && clearInterval(t.checkSizeTimer), t.panoGLRender.renderer.forceContextLoss(), e.canvas.removeEventListener("webglcontextlost", t.onWebGLContextLost, !1) })); var n = v.isFirefox ? "DOMMouseScroll" : "mousewheel", r = new Date; e._svContainer.addEventListener(n, (function (t) { if (e.opts.enableScrollWheelZoom && e.opts.visible) { var n = new Date; if (n - r < 400) return; r = n; var i = -t.detail / 3 || t.wheelDelta / 120, o = e.getZoom() + i; e.setZoom(o), t.preventDefault() } })) }, e.getImgZoom = function () { return this.pano.calcDisplayZoom().imgZoom }, e.handleContextStatus = function () { this.pano.canvas.addEventListener("webglcontextlost", this.onWebGLContextLost, !1) }, e.onWebGLContextLost = function (t) { t.preventDefault(), setTimeout((function () { window.location.reload() }), 200) }, t }(); function aa(t, e, n) { t.addEventListener(e, n, !1) } var sa = function (t) { function e(e, n) { var r; (r = t.call(this) || this).panoData = null, r.opts = void 0, r.useAnimation = !1, r.backupUseAnimation = r.useAnimation, r.animationType = "", r.fisheye = !1, r.canvas = void 0, r.camera = void 0, r.renderer = void 0, r.gl = void 0, r.scene = void 0, r.cameraNoFix = void 0, r.renders = void 0, r.closeBtn = null, r.navigator = null, r._container = void 0, r._pov = { heading: 0, pitch: 0 }, r._id = null, r._position = null, r._zoom = 2, r._displayZoomResultsCache = {}, r._svContainer = void 0, r._eventManager = void 0, r._panes = void 0, r.addCloseButton = function (t) { var e = r.closeBtn = document.createElement("div"); e.className = "pano_close", e.style.cssText = ["position:absolute", "right:10px", "top:10px", "padding: 5px 8px;", "cursor:pointer", "border-radius: 4px", "font-size: 14px", "background-color: rgba(0,0,0,.55)", "z-index: 99", "color: #fff"].join(";"), e.innerText = "关闭", e.title = "退出全景", e.onclick = function () { r.hide(), t && t() }, r._svContainer.appendChild(e) }, r.getContainer = function () { return r._container }, r.getContainerSize = function () { var t = r._container; return new l(t.clientWidth, t.clientHeight) }, r.getPanes = function () { return r._panes }, r.show = function () { r.opts.visible = !0, w.show(r._svContainer) }, r.hide = function () { r.opts.visible = !1, w.hide(r._svContainer) }, r.getZoom = function () { return r._zoom }, r.setZoom = function (t) { var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}; t !== r._zoom && (t > p.MAX_ZOOM && (t = p.MAX_ZOOM), t < p.MIN_ZOOM && (t = p.MIN_ZOOM), t !== r._zoom && (r._zoom = t, r.dispatchEvent(d.ZOOM_CHANGED, { noAnimation: e.noAnimation || !1 }))) }, r.getPov = function () { return r._pov }, r.setPov = function (t, e) { r.dispatchEvent(d.SET_POV, { pov: t, options: e || { animation: !1 } }) }, r.handlePovChange = function (t) { if ("object" === i(t)) { var e = !1, n = t.heading, o = t.pitch; if ("number" != typeof n || isNaN(n) || (e = !0, n = _(n), r._pov.heading = n), "number" == typeof o && !isNaN(n)) { e = !0; var a = r.opts.minPitch, s = r.opts.maxPitch; o > s && (o = s), o < a && (o = a), r._pov.pitch = o } return e } }, r.calcDisplayZoom = function (t, e) { t = t || r.getContainerSize(), e = e || r.getZoom(); var n = t, i = n.width, o = n.height, a = r.opts.maxImageZoom, s = r.opts.minImageZoom, u = "".concat(i, "_").concat(o, "_").concat(e); if (r._displayZoomResultsCache[u]) return r._displayZoomResultsCache[u]; for (var h = r.calcAnglePerPixel(), c = Math.floor(e) + 2, l = 360 / (2 * Math.pow(2, c - 2) * h); l > 512;)c++, l = 360 / (2 * Math.pow(2, c - 2) * h); if (c > a) { var f = c - a; l *= Math.pow(2, f), c = a } c < s && (c = s); var d = { imgZoom: c, displayTileSize: l = Math.round(l) }; return r._displayZoomResultsCache[u] = d, d }, r.calcAnglePerPixel = function () { return r.getFov() / r.getContainerSize().height }, r.getFov = function (t) { return t = t || r.getZoom(), (v.isMobile ? r.calcMobileFovy : r.calcPCFovy).call(a(r), t) }, r.getVisible = function () { return r.opts.visible }, r.setId = function (t) { var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}; r.useAnimation = e.animation || !1, r.fisheye = e.fisheye || !1, r.animationType = e.animationType || "", r.dispatchEvent(d.SET_ID, { id: t }) }, r.setPosition = function (t) { var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}; r.useAnimation = e.animation || !1, r.fisheye = e.fisheye || !1, r.animationType = e.animationType || "", r.dispatchEvent(d.SET_POSITION, { point: t }) }; var o = { minImageZoom: p.TILE_MIN_ZOOM, maxImageZoom: p.TILE_MAX_ZOOM, minPitch: p.MIN_PITCH, maxPitch: p.MAX_PITCH, radius: p.RADIUS, tileBaseUrls: p.TILE_BASE_URLS, linksControl: !0, navigationControl: !0, enableScrollWheelZoom: !0, enableCapture: !1, visible: !0 }; r.opts = Object.assign({}, o, n); var s = "string" == typeof e ? document.querySelector(e) : e; if (!s) throw new Error("全景引擎宿主容器不存在"); return r._container = s, r._init(), r } c(e, t); var n = e.prototype; return n.getPosition = function () { return this.position }, n.setOptions = function (t) { var e; for (e in t) if (Object.prototype.hasOwnProperty.call(t, e)) { var n = !0; if ("object" !== i(t[e]) && (n = t[e] !== this.opts[e]), this.opts[e] = t[e], !n) continue; switch (e) { case "linksControl": this.dispatchEvent(d.LINK_VISIBLE_CHANGE, { value: t[e] }); break; case "navigationControl": var r = !!t[e], o = this.navigator; r ? o.show() : o.hide() } } }, n.capture = function () { var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; if (this.canvas) { var e = this.canvas, n = t.quality || .8, r = t.type || "image/jpeg", i = e.toDataURL(r, n); return i } }, n.addOverlay = function (t) { this.dispatchEvent(d.OVERLAY_ADD, t) }, n.removeOverlay = function (t) { this.dispatchEvent(d.OVERLAY_REMOVE, t) }, n.clearOverlays = function () { this.dispatchEvent(d.OVERLAYS_CLEAR) }, n.destroy = function () { this.dispatchEvent(d.DESTROY) }, n._init = function () { this._createDoms(), this.navigator = function (t) { function e(t) { this._initialize(t) } return m(e.prototype, { _initialize: function (t) { this._pano = t, this.imgPath = t.opts.imgPath || "//api0.map.bdimg.com/images/", this._zoomInEnabled = !0, this._zoomOutEnabled = !0, this._render(), this._bind() }, _render: function () { this._container = w.create("div"); var t = this._container.style; t.position = "absolute", t.left = "10px", t.top = "10px", t.zIndex = 99; var e = this._container; e.innerHTML = this._generateHtml(), v.isPc ? (this._panBtnContainer = e.children[2], this._panBtns = [this._panBtnContainer.children[0], this._panBtnContainer.children[1], this._panBtnContainer.children[2], this._panBtnContainer.children[3]], this._svgDirGroup = e.children[1].childNodes[0], this._zoomContainer = e.children[3]) : v.isMobile && (this._zoomContainer = e.children[0]), this._btnZoomIn = this._zoomContainer.children[0], this._btnZoomOut = this._zoomContainer.children[1], v.isMobile && (this._zoomContainer.style.left = this._zoomContainer.style.top = "0", this._zoomContainer.style.width = "36px", this._zoomContainer.style.height = "78px", this._btnZoomIn.style.width = this._btnZoomOut.style.width = "33px", this._btnZoomIn.style.height = this._btnZoomOut.style.height = "36px", this._btnZoomOut.style.top = "37.5px"), this._pano.getZoom() >= p.MAX_ZOOM && this._setZoomBtnEnabled("zoomIn", !1), this._pano.getZoom() <= p.MIN_ZOOM && this._setZoomBtnEnabled("zoomOut", !1), this._pano._svContainer.appendChild(e) }, _generateHtml: function () { var t = []; return v.isPc && (t.push(this._generatePanHtml()), t.push(this._generateDirHtml()), t.push(this._generatePanBtnHtml())), t.push(this._generateZoomContainerHtml()), t.join("") }, _generateDirHtml: function () { return '<svg version="1.1" overflow="hidden" width="82px" height="82px" viewBox="0 0 82 82"style="position: absolute; top: 0px; left: 0px;"><g transform="rotate(0, 41, 41)"><rect x="33"y="1" width="14" height="12" rx="4" ry="4" stroke="#868685" stroke-width="1" fill="#f8f8f8"></rect><polyline points="37.5,9.5 37.5,3.5 42.5,9.5 42.5,3.5" stroke-linejoin="bevel" stroke-width="1.5" fill="#f2f4f6" stroke="#868685"></polyline></g></svg>' }, _generatePanHtml: function () { return '<div style="position:absolute;top:4px;left:4px;width:74px;height:74px;background:url(' + this.imgPath + 'st-navictrl.png) no-repeat;-webkit-user-select:none;overflow:hidden"><div></div></div>' }, _generatePanBtnHtml: function () { return '<div style="position:absolute;top:0px;left:0;width:82px;height:82px;user-select:none;"><div style="position:absolute;left:32px;top:13px;cursor:pointer;width:17px;height:17px;" title="向上平移"></div><div style="position:absolute;left:14px;top:32px;cursor:pointer;width:17px;height:17px;" title="向左平移"></div><div style="position:absolute;left:51px;top:32px;cursor:pointer;width:17px;height:17px;" title="向右平移"></div><div style="position:absolute;left:33px;top:51px;cursor:pointer;width:17px;height:17px;" title="向下平移"></div></div>' }, _generateZoomContainerHtml: function () { var t = "background-image:url('" + this.imgPath + "st-navictrl.png');background-repeat:no-repeat;background-position:-74px 0;"; return v.isMobile && (t = "background-image:url('" + this.imgPath + "st-navictrl-hd.png');background-repeat:no-repeat;background-position:0 0;background-size:180px 78px;"), '<div style="position:absolute;top:84px;left:30px;width:24px;height:52px;' + t + '-webkit-user-select:none;overflow:hidden"><div style="position:absolute;cursor:pointer;width:22px;height:24px;top:0;left:0;-webkit-user-select:none;-webkit-tap-highlight-color:rgba(0,0,0,0)" title="放大一级"></div><div style="position:absolute;cursor:pointer;width:22px;height:24px;top:25px;left:0;-webkit-user-select:none;-webkit-tap-highlight-color:rgba(0,0,0,0)" title="缩小一级"></div><div></div></div>' }, _bind: function () { var t = this._pano, e = this; if (v.isPc) { aa(this._panBtns[0], "click", (function () { var e = t.getPov(); t.setPov({ heading: e.heading, pitch: e.pitch + 30 }, { animation: !0 }) })), aa(this._panBtns[1], "click", (function () { var e = t.getPov(); t.setPov({ heading: e.heading - 45, pitch: e.pitch }, { animation: !0 }) })), aa(this._panBtns[2], "click", (function () { var e = t.getPov(); t.setPov({ heading: e.heading + 45, pitch: e.pitch }, { animation: !0 }) })), aa(this._panBtns[3], "click", (function () { var e = t.getPov(); t.setPov({ heading: e.heading, pitch: e.pitch - 30 }, { animation: !0 }) })); for (var n = 0; n < this._panBtns.length; n++)aa(this._panBtns[n], "mousedown", (function (t) { t.stopPropagation() })); e._mousedown = !1, aa(this._panBtnContainer, "mousedown", (function (n) { e._mousedown = !0, e._panBtnContainer.style.cursor = "grabbing", e._startHeading = e._calcAngle(n), e._curHeading = t.getPov().heading, n.preventDefault() })), aa(document, "mousemove", (function (n) { e._mousedown && t.setPov({ heading: e._curHeading + 360 - (e._calcAngle(n) - e._startHeading), pitch: t.getPov().pitch }) })), aa(document, "mouseup", (function () { e._mousedown && (e._mousedown = !1, e._panBtnContainer.style.cursor = "grab", e._startHeading = null) })), t.addEventListener("position_changed", (function () { var t = 360 - this.getPov().heading; e._svgDirGroup.setAttribute("transform", "rotate(" + t + ", 41, 41)") })), t.addEventListener("pov_changed", (function () { var t = 360 - this.getPov().heading; e._svgDirGroup.setAttribute("transform", "rotate(" + t + ", 41, 41)") })) } aa(this._btnZoomIn, "click", (function () { t.setZoom(t.getZoom() + 1) })), aa(this._btnZoomOut, "click", (function () { t.setZoom(t.getZoom() - 1) })), v.isPc ? (aa(this._btnZoomIn, "mousedown", (function () { e._redrawZoomBtn(e._zoomInEnabled, -98) })), aa(this._btnZoomOut, "mousedown", (function () { e._redrawZoomBtn(e._zoomOutEnabled, -122) })), aa(this._btnZoomIn, "mouseup", (function () { e._redrawZoomBtn(e._zoomInEnabled, -74) })), aa(this._btnZoomOut, "mouseup", (function () { e._redrawZoomBtn(e._zoomOutEnabled, -74) }))) : v.isMobile && (aa(this._btnZoomIn, "touchstart", (function () { e._redrawZoomBtn(e._zoomInEnabled, -98) })), aa(this._btnZoomOut, "touchstart", (function () { e._redrawZoomBtn(e._zoomOutEnabled, -122) })), aa(this._btnZoomIn, "touchend", (function () { e._redrawZoomBtn(e._zoomInEnabled, -74) })), aa(this._btnZoomOut, "touchend", (function () { e._redrawZoomBtn(e._zoomOutEnabled, -74) }))), t.addEventListener("zoom_changed", (function (n) { t.getZoom() >= p.MAX_ZOOM ? e._setZoomBtnEnabled("zoomIn", !1) : t.getZoom() <= p.MIN_ZOOM ? e._setZoomBtnEnabled("zoomOut", !1) : (e._setZoomBtnEnabled("zoomIn", !0), e._setZoomBtnEnabled("zoomOut", !0)) })) }, _redrawZoomBtn: function (t, e) { t && (v.isMobile && (e = (e + 74) / 24 * 36), this._zoomContainer.style.backgroundPosition = e + "px 0") }, show: function () { this._container.style.display = "" }, hide: function () { this._container.style.display = "none" }, _calcAngle: function (t) { var e = (t = window.event || t).pageX || t.clientX, n = t.pageY || t.clientY, r = this._pano.getContainer().getBoundingClientRect(); e = e - r.left - 50, n = -(n - r.top - 50); var i = Math.atan2(n, e) / Math.PI * 180; return i < 90 ? 90 - i : 450 - i }, _setZoomBtnEnabled: function (t, e) { if ("zoomIn" === t) if (e) { this._zoomInEnabled = !0, this._btnZoomIn.style.cursor = "pointer"; var n = -74; v.isMobile && (n = 0), this._zoomContainer.style.backgroundPosition = n + "px 0" } else { this._zoomInEnabled = !1, this._btnZoomIn.style.cursor = ""; var r = -170; v.isMobile && (r = -144), this._zoomContainer.style.backgroundPosition = r + "px 0" } if ("zoomOut" === t) if (e) { this._zoomOutEnabled = !0, this._btnZoomOut.style.cursor = "pointer"; var i = -74; v.isMobile && (i = 0), this._zoomContainer.style.backgroundPosition = i + "px 0" } else { this._zoomOutEnabled = !1, this._btnZoomOut.style.cursor = ""; var o = -146; v.isMobile && (o = -108), this._zoomContainer.style.backgroundPosition = o + "px 0" } } }), new e(t) }(this), this._eventManager = new oa(this) }, n._createDoms = function () { var t = this._container, e = w.create("div"), n = e.style; n.overflow = "hidden", n.position = "absolute", n.zIndex = "20", n.top = n.left = "0px", n.height = n.width = "100%", n.backgroundColor = "#e5e3df", n.display = "none", n.cursor = "grab", e.addEventListener("mousedown", (function () { return n.cursor = "grabbing" })), e.addEventListener("mouseup", (function () { return n.cursor = "grab" })), this._svContainer = e, this._panes = { tileLayer: this._createContainer("1"), maskLayer: this._createContainer("2"), linksLayer: this._createContainer("3"), overlayLayer: this._createContainer("4"), effectLayer: this._createContainer("5") }, e.appendChild(this._panes.tileLayer), e.appendChild(this._panes.linksLayer), e.appendChild(this._panes.overlayLayer), e.appendChild(this._panes.effectLayer), b() || (e.appendChild(this._panes.maskLayer), this._panes.maskLayer.style.width = "".concat(t.clientWidth, "px"), this._panes.maskLayer.style.height = "".concat(t.clientHeight, "px"), this._panes.maskLayer.style.overflow = "hidden"), t.appendChild(e), "absolute" !== w.getCurrentStyle(t).position && (t.style.position = "relative") }, n._createContainer = function (t) { var e = w.create("div"), n = e.style; return n.position = "absolute", n.top = n.left = "0", n.zIndex = t || "0", e }, n.calcMobileFovy = function (t) { var e = this.getContainerSize(), n = e.width, r = e.height, i = 240 / Math.pow(2, t), o = n / 2 / Math.tan(g(i / 2)), a = Math.atan2(r / 2, o); return 2 * y(a) }, n.calcPCFovy = function (t) { return 90 - 15 * (t - 1) }, o(e, [{ key: "imageZoom", get: function () { return this.calcDisplayZoom().imgZoom } }, { key: "panoId", get: function () { return this.panoData ? this.panoData.panoId : "" } }, { key: "panoNorthDir", get: function () { return this.panoData ? this.panoData.northDir : 0 } }, { key: "position", get: function () { return this.panoData && "number" == typeof this.panoData.panoX && "number" == typeof this.panoData.panoY ? new f(this.panoData.panoX, this.panoData.panoY) : null } }]), e }(Or), ua = { dom: null, anchor: null, width: null, height: null, altitude: 2, sphereZ: null, useUV: !1 }, ha = function (t) { function e(e) { var n, r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}; return (n = t.call(this) || this).visible = !0, n.worldCoord = void 0, n.pov = void 0, n.id = n.genId(), n._pano = void 0, n.lastPanoPosition = null, n.initialized = !1, n.position = void 0, n.options = void 0, n.position = e, n.options = Object.assign({}, ua, r), n.pov = null, n } c(e, t); var n = e.prototype; return n.getPov = function () { return this.pov }, n.genId = function () { var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 4; return Number("".concat(Math.random().toString().substr(3, t)).concat(Date.now())).toString(36) }, n.init = function (t) { t && !this.initialized && (this._pano = t, this.lastPanoPosition = this._pano.position, this.worldCoord = this.options.useUV ? this.calcCoordsByUV() : this.calcCoordsByMC(), this.worldCoord && (this.initialized = !0, this.add(), this.draw())) }, n.calcCoordsByMC = function () { var t = this._pano.position; if (t && this.position) { var e, n = this.position, r = n.lng - t.lng, i = n.lat - t.lat, o = Math.atan2(r, i); o < 0 && (o += 2 * Math.PI), o = Math.round(y(o)); var a = 500, s = this.options, u = s.sphereZ, h = s.altitude; null === u ? e = 25 * h : (e = u || 0, a = Math.sqrt(Math.pow(r, 2) + Math.pow(i, 2) + Math.pow(e, 2))); var c = y(Math.asin(e / a)); c = c > 90 ? 90 : c < -90 ? -90 : c; var l = _(o + this._pano.panoNorthDir), f = this.radius, d = Math.cos(g(c)) * f; d = Math.round(100 * d) / 100; var p = Math.cos(g(l)) * d, v = Math.sin(g(c)) * f, m = Math.sin(g(l)) * d; return this.pov = { heading: o, pitch: c }, Vt(p, v, m) } }, n.calcCoordsByUV = function () { if (this.position) { var t = this.radius, e = this.position, n = xi(e, 2), r = n[0], i = n[1], o = 2 * r * Math.PI, a = (i - .5) * Math.PI, s = Math.cos(a) * Math.cos(o) * t, u = Math.sin(a) * t, h = Math.cos(a) * Math.sin(o) * t; return this.pov = { heading: _(y(o) - this._pano.panoNorthDir), pitch: y(a) }, Vt(s, u, h) } }, n.add = function () { var t = this.options, e = t.width, n = t.height; if (this.dom) { var r = this._pano, i = this.dom; i.style.position = "absolute", r.getPanes().overlayLayer.appendChild(i), "number" != typeof e && (this.options.width = i.clientWidth), "number" != typeof n && (this.options.height = i.clientHeight), r.dispatchEvent({ type: "onoverlaydomadded", overlay: this }) } }, n.remove = function () { var t = this.dom; t && t.parentNode && t.parentNode.removeChild(t) }, n.povToPointGL = function () { if (!this.worldCoord) return null; var t = this._pano, e = t.camera, n = t.getContainerSize(), r = n.width, i = n.height; return po(e, this.worldCoord, r, i) }, n.draw = function () { if (this.initialized && this.visible && this._pano && this._pano.panoData && this.dom) { var t = this.lastPanoPosition, e = this._pano.position; t.lng === e.lng && t.lat === e.lat || (this.lastPanoPosition = e, this.worldCoord = this.options.useUV ? this.calcCoordsByUV() : this.calcCoordsByMC()); var n = this.dom, r = this.povToPointGL(); if (n.style.visibility = "hidden", r) { var i = this.calcAnchor(), o = "".concat(r[0] - i.width, "px"), a = "".concat(r[1] - i.height, "px"); if (isNaN(r[0]) || isNaN(r[1])) return; n.style.visibility = "visible", n.style.webkitTransform = "translate(".concat(o, ", ").concat(a, ")"), n.style.transform = "translate(".concat(o, ", ").concat(a, ")") } } }, n.handleClick = function () { this.dispatchEvent("click") }, n.calcAnchor = function () { var t = this.options, e = t.anchor, n = t.width, r = void 0 === n ? 0 : n, i = t.height; return e || new l(r / 2, (void 0 === i ? 0 : i) / 2) }, n.show = function () { this.visible = !0, this.dom && (this.dom.style.display = "") }, n.hide = function () { this.visible = !1, this.dom && (this.dom.style.display = "none") }, o(e, [{ key: "radius", get: function () { return this._pano ? this._pano.opts.radius : 0 } }, { key: "dom", get: function () { return this.options.dom } }]), e }(Or), ca = function (t) { function e(e, n) { var r = n.position, i = n.altitude, o = void 0 === i ? 2 : i, a = n.costomStyle, s = function (t) { var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, n = document.createElement("div"), r = { backgroundColor: "rgba(29, 29, 29, 0.8)", fontSize: "14px", padding: "7px 14px", height: "19px", color: "#fff", whiteSpace: "nowrap", borderRadius: "4px" }; return m(n.style, r, e), n.innerText = t, n }(e, void 0 === a ? {} : a); return t.call(this, r, { dom: s, altitude: o }) || this } return c(e, t), e }(ha); t.Converters = mo, t.Engines = Qi, t.EventType = d, t.PanoLabel = ca, t.PanoOverlay = ha, t.PanoramaService = function () { var t = this; this.getPanoById = function (e, n) { var r; r = "".concat(tt.SERVICE_URL, "?qt=sdata&sid=").concat(e, "&").concat($("/")), t.request(r).then((function (t) { n && n(t) })).catch((function (t) { n && n(null) })) }, this.getPanoByLocation = function (e, n, r) { var i; i = "".concat(tt.SERVICE_URL, "?qt=qsdata&x=").concat(e.lng, "&y=").concat(e.lat).concat(n ? "&r=" + n : "", "&action=1&").concat($("/")), t.request(i).then((function (t) { r && r(t) })).catch((function (t) { r && r(null) })) }, this.request = function (t) { return T(t, {}, { jsonp: "fn" }) } }, t.Point = f, t.getPanoControl = function (t, e) { var n, r, i, o = (e = e || {}).imgPath || "//api.map.baidu.com/images/"; function a(e) { e.call(this), this.defaultAnchor = t.ControlAnchor.TOP_RIGHT, this.defaultOffset = new t.Size(10, 10), this._isOn = !1 } return n = a, r = t.Control, (i = Object.create(r.prototype)).constructor = n, n.prototype = i, m(a.prototype, { initialize: function (t) { return this._map = t, this._render(), this._bind(), this._container }, _render: function () { var t = this, n = w.create("div"); n.innerHTML = '<span style="position:relative;top:33px;">全景</span>', n.title = "进入全景", m(n.style, { width: "49px", height: "51px", color: "#565656", background: 'url("'.concat(o, 'st-control.png")'), position: "absolute", cursor: "pointer", fontFamily: "arial,sans-serif", fontSize: "13px", textAlign: "center", boxShadow: "0px 0px 3px rgba(0, 0, 0, 0.3)", MozBoxShadow: "0px 0px 3px rgba(0, 0, 0, 0.3)", WebkitBoxShadow: "0px 0px 3px rgba(0, 0, 0, 0.3)" }), this._container = n; var r = this._map.getContainer(); r.appendChild(n); var i = { visible: !1 }; e.imgPath && (i.imgPath = [e.imgPath]), e.tileBaseUrl && (i.tileBaseUrls = [e.tileBaseUrl]), this._pano = new sa(r, i), this._pano.addCloseButton((function () { t.isMapEnableWheelZoom && t._map.enableScrollWheelZoom() })); var a = this._scout = w.create("div"); m(a.style, { position: "absolute", width: "24px", height: "41px", cursor: "pointer", backgroundImage: 'url("'.concat(o, 'st-scout.png")'), backgroundRepeat: "no-repeat", backgroundPosition: "-24px 0", overflow: "hidden", display: "none", zIndex: 11 }), r.appendChild(a); var s = this._infoWindow = w.create("div"); m(s.style, { position: "absolute", width: "112px", height: "119px", backgroundImage: 'url("'.concat(o, 'st-infowindow.gif")'), backgroundRepeat: "no-repeat", backgroundPosition: "0 0", display: "none", cursor: "pointer", zIndex: 12 }); var u = this._thumb = w.create("img"); s.appendChild(u), u.src = o + "st-noresult.png", m(u.style, { width: "100px", height: "75px", left: "6px", top: "6px", position: "absolute" }); var h = this._stDescription = w.create("div"); m(h.style, { position: "absolute", top: "85px", fontFamily: "arial,sans-serif", fontSize: "13px", paddingLeft: "6px" }), s.appendChild(h), r.appendChild(s) }, _updateView: function () { var t = this._container.style; this._isOn || this._isOver ? (t.backgroundPosition = "-49px 0", t.color = "#fff") : (t.backgroundPosition = "0 0", t.color = "#565656") }, _bind: function () { var n = this; this._pano.on("dataload", (function (t) { var r = t.data; r ? (n._currentSvId = r.panoId, e.tileBaseUrl ? n._thumb.src = "".concat(e.tileBaseUrl, "?&sid=").concat(r.panoId, "&pos=0_0&z=0") : n._thumb.src = "//apisv0.bdimg.com/?qt=pdata&sid=".concat(r.panoId, "\n                            &pos=0_0&z=0&from=H5&").concat($("/")), n._stDescription.innerHTML = r.roadName) : (n._currentSvId = null, n._thumb.src = o + "st-noresult.png", n._stDescription.innerHTML = "") })); var r = this; v.isPc && (this._container.addEventListener("mouseover", (function () { r._isOver = !0, r._updateView() })), this._container.addEventListener("mouseout", (function () { r._isOver = !1, r._updateView() }))), this._container.addEventListener("click", (function () { r._isOn ? r._close() : r._open() })), this._map.getContainer().addEventListener("mousemove", (function (e) { if (r._isOn) { var n = (e = window.event || e).pageX || e.clientX, i = e.pageY || e.clientY, a = function (t) { for (var e = { left: 0, top: 0 }; t && t.offsetParent;)e.left += t.offsetLeft, e.top += t.offsetTop, t = t.offsetParent; return e }(r._map.container), s = new qo(n - a.left, i - a.top), u = r._map.pixelToPoint(s); if ("" !== r._scout.style.display && v.isPc && (r._scout.style.display = "", r._infoWindow.style.display = ""), r._scout.style.left = s.x - 12 + "px", r._scout.style.top = s.y - 41 - 2 + "px", r._prePixel = r._curPixel, r._curPixel = s, r._prePixel) { var h = s.x - r._prePixel.x; h > 0 ? r._scout.style.backgroundPosition = "-48px 0" : h < 0 && (r._scout.style.backgroundPosition = "0 0") } r._curPixel.y < 170 ? r._infoStatus = 2 : r._infoStatus = 1, r._curPixel.x < 66 && (r._infoStatus = 3), r._curPixel.x > r._map.getSize().width - 56 - 10 && (r._infoStatus = 4); var c = 1 === r._infoStatus || 2 === r._infoStatus ? 112 : 126, l = 1 === r._infoStatus || 2 === r._infoStatus ? 119 : 105; 1 !== r._infoStatus && 2 !== r._infoStatus || (r._infoWindow.style.left = r._curPixel.x - Math.round(c / 2) + "px", 1 === r._infoStatus ? (r._infoWindow.style.top = r._curPixel.y - l - 42 + "px", r._infoWindow.style.backgroundPosition = "0 0", r._thumb.style.top = "6px", r._thumb.style.bottom = "", r._stDescription.style.top = "85px", r._stDescription.style.bottom = "") : (r._infoWindow.style.top = r._curPixel.y + 2 + "px", r._infoWindow.style.backgroundPosition = "-112px 0", r._thumb.style.top = "", r._thumb.style.bottom = "6px", r._stDescription.style.top = "", r._stDescription.style.bottom = "85px"), r._infoWindow.style.width = "112px", r._infoWindow.style.height = "119px", r._thumb.style.left = "6px", r._stDescription.style.left = "0"), 3 !== r._infoStatus && 4 !== r._infoStatus || (r._infoWindow.style.top = r._curPixel.y - Math.round(l / 2) - 20 + "px", 3 === r._infoStatus ? (r._infoWindow.style.left = r._curPixel.x + 12 + "px", r._infoWindow.style.backgroundPosition = "0 -119px", r._thumb.style.left = "20px", r._stDescription.style.left = "14px") : (r._infoWindow.style.left = r._curPixel.x - 12 - c + "px", r._infoWindow.style.backgroundPosition = "-126px -119px", r._thumb.style.left = "6px", r._stDescription.style.left = "0"), r._infoWindow.style.width = "126px", r._infoWindow.style.height = "105px"), r._infoWindow.style.backgroundImage = 'url("'.concat(o, 'st-infowindow.gif")'), r._timerId && (clearTimeout(r._timerId), r._timerId = null), r._timerId = setTimeout((function () { r._currentPoint = u, r._scout.style.backgroundPosition = "-24px 0"; var e = r._map.lnglatToMercator(u.lng, u.lat); r._pano.setPosition(new t.Point(e[0], e[1])) }), 200) } })), this._map.addEventListener("click", (function (t) { r._isOn && v.isMobile && (r._pano.setPosition(t.point), r._pano.show(), r._close()), r._isOn && r._currentSvId && (r._pano.setId(r._currentSvId), r._pano.show(), r._map.config.enableWheelZoom && (r._map.disableScrollWheelZoom(), r.isMapEnableWheelZoom = !0), r._close()) })) }, _open: function () { this._isOn || (this._isOn = !0, this._map.addTileLayer(this._panoCoverageLayer), v.isPc && (this._preDefaultCursor = this._map.getDefaultCursor(), this._preDraggingCursor = this._map.getDraggingCursor(), this._map.setDefaultCursor("pointer"), this._map.setDraggingCursor("pointer"))), this._updateView() }, _close: function () { this._isOn && (this._map.removeTileLayer(this._panoCoverageLayer), v.isPc && (this._scout.style.display = "none", this._infoWindow.style.display = "none", this._map.setDefaultCursor(this._preDefaultCursor), this._map.setDraggingCursor(this._preDraggingCursor)), this._isOn = !1), this._updateView() } }), new a(t.Control) }, t.getStreetViewCoverageLayer = function (t) { var e = new t.TileLayer({ transparentPng: !0, dataType: 1, cacheSize: 32 }); return e.zIndex = 110, e.getTilesUrl = window.PANORAMA_URL ? function (t, e) { var n = window.PANORAMA_URL + "/tile", r = t.x, i = t.y; return window.BMAPGL_84 && (i = Math.pow(2, e) - i - 1), "".concat(n, "?customid=panorama&x=").concat(r, "&y=").concat(i, "&z=").concat(e, "&type=WGS84") } : function (t, e) { var n = ["//apisv0.bdimg.com/", "//apisv1.bdimg.com/"], r = (Math.abs(t.x) + Math.abs(t.y)) % n.length; return "".concat(n[r], "?udt=").concat("20150114", "&qt=tile&styles=").concat("pl", "&x=").concat(t.x, "&y=").concat(t.y, "&z=").concat(e).replace(/-(\d+)/gi, "M$1") + "&" + $("/", { isCounter: !1 }) }, e }, t.init = function (t, e) { return new sa(t, e) }, Object.defineProperty(t, "__esModule", { value: !0 })
})(Pano = {});
window.BMapGL = window.BMapGL || {}; (function (bw, fi) { var eN = eN || { version: "20150702", emptyFn: function () { } }; (function () { eN._log = []; var i = 0; var T = {}; eN.BaseClass = function (jT) { T[(this.hashCode = (jT || eN.BaseClass.guid()))] = this }; eN.BaseClass.guid = function () { return "mz_" + (i++).toString(36) }; eN.BaseClass.create = function () { var jT = new eN.BaseClass(); jT.decontrol(); return jT }; var e = eN.instance = eN.I = function (jT) { return T[jT] }; eN.BaseClass.prototype.dispose = function () { if (this.hashCode) { delete T[this.hashCode] } for (var jT in this) { if (typeof this[jT] != "function") { delete this[jT] } } }; eN.BaseClass.prototype.getHashCode = function () { if (!this.hashCode) { T[(this.hashCode = eN.BaseClass.guid())] = this } return this.hashCode }; eN.BaseClass.prototype.decontrol = function () { delete T[this.hashCode] }; eN.BaseClass.prototype.toString = function () { return "[object " + (this._className || "Object") + "]" }; eN.BaseClass.prototype._wlog = function (jU, jV) { var jT = eN._log; if (jT.length > 100) { jT.reverse().length = 50; jT.reverse() } jT[jT.length] = "[" + jU + "][" + (this._className || "Object") + " " + this.hashCode + "] " + jV } })(); Function.prototype.inherits = function (jT, T) { var e, jU, jW = this.prototype, jV = function () { }; jV.prototype = jT.prototype; jU = this.prototype = new jV(); if (typeof (T) == "string") { jU._className = T } for (e in jW) { jU[e] = jW[e] } this.prototype.constructor = jW.constructor; jW = jV = null; return jU }; eN.BaseEvent = function (e, i) { this.type = e; this.returnValue = true; this.target = i || null; this.currentTarget = this.srcElement = null; this.cancelBubble = false; this.domEvent = null }; eN.BaseClass.prototype.on = eN.BaseClass.prototype.addEventListener = function (T, i) { if (typeof i !== "function") { return this._wlog("error", "addEventListener:" + i + " is not a function") } if (!this._listeners) { this._listeners = {} } var e = this._listeners; if (T.indexOf("on") !== 0) { T = "on" + T } if (typeof e[T] !== "object") { e[T] = {} } var jT = i.hashCode || eN.BaseClass.guid(); i.hashCode = jT; if (e[T][jT]) { this._wlog("warning", "repeat key:" + jT) } e[T][jT] = i }; eN.BaseClass.prototype.off = eN.BaseClass.prototype.removeEventListener = function (T, i) { if (typeof i == "function") { i = i.hashCode } else { if (typeof i !== "string" && typeof i !== "undefined") { return } } if (!this._listeners) { this._listeners = {} } if (T.indexOf("on") != 0) { T = "on" + T } var e = this._listeners; if (!e[T]) { return } if (i === undefined) { e[T] = {}; return } if (e[T][i]) { delete e[T][i] } }; eN.BaseClass.prototype.fire = eN.BaseClass.prototype.dispatchEvent = function (jT) { if (!this._listeners) { this._listeners = {} } var T, e = this._listeners, jU = jT.type; jT.target = jT.srcElement = jT.target || jT.srcElement || this; jT.currentTarget = this; if (typeof this[jU] == "function") { this[jU](jT) } if (typeof e[jU] == "object") { for (T in e[jU]) { if (typeof e[jU][T] == "function") { e[jU][T].call(this, jT) } } } return jT.returnValue }; eN.BaseEvent.prototype.inherit = function (T) { var i = this; this.domEvent = T = window.event || T; i.clientX = T.clientX || T.pageX; i.clientY = T.clientY || T.pageY; i.offsetX = T.offsetX || T.layerX; i.offsetY = T.offsetY || T.layerY; i.screenX = T.screenX; i.screenY = T.screenY; i.ctrlKey = T.ctrlKey || T.metaKey; i.shiftKey = T.shiftKey; i.altKey = T.altKey; return i }; eN.Browser = (function () { var T = navigator.userAgent; var jU = 0; var e = 0; var jV = 0; var i = 0; var jZ = 0; var jX = 0; var jY = 0; var jW = 0; var jT = 0; var j0 = 0; if (typeof window.opera === "object" && /Opera(\s|\/)(\d+(\.\d+)?)/.test(T)) { jV = parseFloat(RegExp.$2) } else { if (/OPR(\/(\d+)(\..?)?)/.test(T)) { jV = parseInt(RegExp.$2, 10) } else { if (/Edge\/((\d+)\.\d+)/.test(T)) { jU = parseInt(RegExp.$2, 10) } else { if (/MSIE (\d+(\.\d+)?)/.test(T)) { e = parseFloat(RegExp.$1) } else { if (T.indexOf("Trident") > -1 && /rv:(\d+(\.\d+)?)/.test(T)) { e = parseInt(RegExp.$1, 10) } else { if (/Firefox(\s|\/)(\d+(\.\d+)?)/.test(T)) { jZ = parseFloat(RegExp.$2) } else { if (navigator.vendor === "Netscape" && /Netscape(\s|\/)(\d+(\.\d+)?)/.test(T)) { jY = parseFloat(RegExp.$2) } else { if (T.indexOf("Safari") > -1 && /Version\/(\d+(\.\d+)?)/.test(T)) { i = parseFloat(RegExp.$1) } } } } } } } } if (T.indexOf("Trident") > -1 && /Trident\/(\d+(\.\d+)?)/.test(T)) { jW = parseInt(RegExp.$1, 10) } else { if (!e && !jU && T.indexOf("Gecko") > -1 && T.indexOf("KHTML") === -1 && /rv\:(\d+(\.\d+)?)/.test(T)) { jT = parseFloat(RegExp.$1) } else { if (!jU && /chrome\/(\d+(\.\d+)?)/i.test(T)) { jX = parseFloat(RegExp.$1) } else { if (!jU && /AppleWebKit\/(\d+(\.\d+)?)/.test(T)) { j0 = parseInt(RegExp.$1, 10) } } } } var j1 = { edge: jU, ie: e, firefox: jZ, netscape: jY, opera: jV, safari: i, chrome: jX, gecko: jT, trident: jW, webkit: j0 }; return j1 })(); window.FeBrowser = eN.Browser; eN.Dom = {}; eN.Dom.createDom = function (i, e) { if (eN.isIE && e && e.name) { i = "<" + i + ' name="' + eN.String.escapeHTML(e.name) + '">' } var T = document.createElement(i); if (e) { eN.Dom.setProperties(T, e) } return T }; eN.Dom.getOffset = function (jT) { var jW = eN.Dom.getOwnerDocument(jT); var jV = eN.isGecko > 0 && jW.getBoxObjectFor && eN.Dom.getStyle(jT, "position") == "absolute" && (jT.style.top === "" || jT.style.left === ""); var jX = { left: 0, top: 0 }; var i = (eN.isIE && !eN.isStrict) ? jW.body : jW.documentElement; if (jT == i) { return jX } var T = null; var jU; if (jT.getBoundingClientRect) { jU = jT.getBoundingClientRect(); jX.left = jU.left + Math.max(jW.documentElement.scrollLeft, jW.body.scrollLeft); jX.top = jU.top + Math.max(jW.documentElement.scrollTop, jW.body.scrollTop); jX.left -= jW.documentElement.clientLeft; jX.top -= jW.documentElement.clientTop; if (eN.isIE && !eN.isStrict) { jX.left -= 2; jX.top -= 2 } } else { if (jW.getBoxObjectFor && !jV) { jU = jW.getBoxObjectFor(jT); var e = jW.getBoxObjectFor(i); jX.left = jU.screenX - e.screenX; jX.top = jU.screenY - e.screenY } else { T = jT; do { jX.left += T.offsetLeft; jX.top += T.offsetTop; if (eN.isWebkit > 0 && eN.Dom.getStyle(T, "position") == "fixed") { jX.left += jW.body.scrollLeft; jX.top += jW.body.scrollTop; break } T = T.offsetParent } while (T && T != jT); if (eN.isOpera > 0 || (eN.isWebkit > 0 && eN.Dom.getStyle(jT, "position") == "absolute")) { jX.top -= jW.body.offsetTop } T = jT.offsetParent; while (T && T != jW.body) { jX.left -= T.scrollLeft; if (!eN.isOpera || T.tagName != "TR") { jX.top -= T.scrollTop } T = T.offsetParent } } } return jX }; eN.Dom.getOwnerDocument = function (e) { return e.nodeType == 9 ? e : e.ownerDocument || e.document }; eN.Dom.setProperties = function (i, e) { eN.each(e, function (jT, T) { eN.Dom._setProperty(i, T, jT) }) }; eN.Dom._setProperty = function (i, e, T) { if (e == "style") { i.style.cssText = T } else { if (e == "class") { i.className = T } else { if (e == "for") { i.htmlFor = T } else { if (e in eN.Dom._DIRECT_ATTRIBUTE_MAP) { i.setAttribute(eN.Dom._DIRECT_ATTRIBUTE_MAP[e], T) } else { i[e] = T } } } } }; eN.Dom._DIRECT_ATTRIBUTE_MAP = { cellpadding: "cellPadding", cellspacing: "cellSpacing", colspan: "colSpan", rowspan: "rowSpan", valign: "vAlign", height: "height", width: "width", usemap: "useMap", frameborder: "frameBorder" }; eN.G = function () { for (var T = [], jT = arguments.length - 1; jT > -1; jT--) { var jU = arguments[jT]; T[jT] = null; if (typeof jU == "object" && jU && jU.dom) { T[jT] = jU.dom } else { if ((typeof jU == "object" && jU && jU.tagName) || jU == window || jU == document) { T[jT] = jU } else { if (typeof jU == "string" && (jU = document.getElementById(jU))) { T[jT] = jU } } } } return T.length < 2 ? T[0] : T }; eN.ac = function (e, i) { if (!(e = this.G(e))) { return } i = this.trim(i); if (!new RegExp("(^| )" + i.replace(/(\W)/g, "\\$1") + "( |$)").test(e.className)) { e.className = e.className.split(/\s+/).concat(i).join(" ") } }; eN.addClassName = eN.ac; eN.each = function (jV, e) { if (typeof e != "function") { return jV } if (jV) { if (jV.length === undefined) { for (var T in jV) { e.call(jV[T], jV[T], T) } } else { for (var jT = 0, jU = jV.length; jT < jU; jT++) { e.call(jV[jT], jV[jT], jT) } } } return jV }; eN.extend = function (jV, jT) { if (jV && jT && typeof (jT) == "object") { for (var jU in jT) { jV[jU] = jT[jU] } var T = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"]; for (var e = 0, i; e < T.length; e++) { i = T[e]; if (Object.prototype.hasOwnProperty.call(jT, i)) { jV[i] = jT[i] } } } return jV }; eN.hide = function () { eN.each(arguments, function (e) { if (e = eN.G(e)) { e.style.display = "none" } }) }; eN.inherit = function (jX, jT, T) { var jW = jX.prototype; var jV = function () { }; jV.prototype = jT.prototype; var jU = jX.prototype = new jV(); if (typeof T == "string") { jU._className = T } for (var e in jW) { jU[e] = jW[e] } jX.prototype.constructor = jW.constructor; jW = null; return jU }; eN.isIE = 0; (function () { if (navigator.userAgent.indexOf("MSIE") > 0 && !window.opera) { /MSIE (\d+(\.\d+)?)/.test(navigator.userAgent); eN.isIE = parseFloat(RegExp.$1) } })(); eN.rc = function (e, i) { if (!(e = this.G(e))) { return } i = this.trim(i); var T = e.className.replace(new RegExp("(^| +)" + i.replace(/(\W)/g, "\\$1") + "( +|$)", "g"), "$2"); if (e.className != T) { e.className = T } }; eN.removeClassName = eN.rc; eN.show = function () { this.each(arguments, function (e) { if (e = eN.G(e)) { e.style.display = "" } }) }; eN.trim = function (e) { return e.replace(/(^[\s\t\xa0\u3000]+)|([\u3000\xa0\s\t]+$)/g, "") }; eN.getElementsByClassName = function (e, i) { if (e.getElementsByClassName) { return e.getElementsByClassName(i) } else { return (function T(j0, jY) { if (jY == null) { jY = document } var jX = [], jW = jY.getElementsByTagName("*"), jT = jW.length, jZ = new RegExp("(^|\\s)" + j0 + "(\\s|$)"), jV, jU; for (jV = 0, jU = 0; jV < jT; jV++) { if (jZ.test(jW[jV].className)) { jX[jU] = jW[jV]; jU++ } } return jX })(i, e) } }; eN.toggleClass = function (e, i) { if (eN.hasClass(e, i)) { eN.removeClassName(e, i) } else { eN.addClassName(e, i) } }; eN.hasClass = function (jT, T) { if (!jT || !jT.className || typeof jT.className != "string") { return false } var i = -1; try { i = jT.className == T || jT.className.search(new RegExp("(\\s|^)" + T + "(\\s|$)")) } catch (jU) { return false } return i > -1 }; eN.insertHTML = function (jT, e, T) { jT = eN.G(jT); if (jT === null) { return jT } var i, jU; if (jT.insertAdjacentHTML) { jT.insertAdjacentHTML(e, T) } else { i = jT.ownerDocument.createRange(); e = e.toUpperCase(); if (e == "AFTERBEGIN" || e == "BEFOREEND") { i.selectNodeContents(jT); i.collapse(e == "AFTERBEGIN") } else { jU = e == "BEFOREBEGIN"; i[jU ? "setStartBefore" : "setEndAfter"](jT); i.collapse(jU) } i.insertNode(i.createContextualFragment(T)) } return jT }; if (typeof HTMLElement != "undefined" && HTMLElement.prototype.__lookupGetter__ && !HTMLElement.prototype.__lookupGetter__("children") && !window.opera) { try { HTMLElement.prototype.__defineGetter__("children", function () { for (var T = [], jT = 0, jV, jU = 0, e = this.childNodes.length; jU < e; jU++) { jV = this.childNodes[jU]; if (jV.nodeType == 1) { T[jT++] = jV; if (jV.name) { if (!T[jV.name]) { T[jV.name] = [] } T[jV.name][T[jV.name].length] = jV } if (jV.id) { T[jV.id] = jV } } } return T }) } catch (i8) { } } if (typeof (HTMLElement) != "undefined" && !window.opera && HTMLElement.prototype && !HTMLElement.prototype.insertAdjacentHTML) { HTMLElement.prototype.insertAdjacentHTML = function (i, T) { var jT = this.ownerDocument.createRange(); jT.setStartBefore(this); jT = jT.createContextualFragment(T); switch (i) { case "beforeBegin": this.parentNode.insertBefore(jT, this); break; case "afterBegin": this.insertBefore(jT, this.firstChild); break; case "beforeEnd": this.appendChild(jT); break; case "afterEnd": if (!this.nextSibling) { this.parentNode.appendChild(jT) } else { this.parentNode.insertBefore(jT, this.nextSibling) } break } } } if (typeof HTMLElement != "undefined" && !window.opera) { HTMLElement.prototype.contains = function (e) { if (!e) { return false } if (e == this) { return true } while (e = e.parentNode) { if (e == this) { return true } } return false } } if (!eN.Browser.ie && typeof Event != "undefined" && !window.opera) { Event.prototype.__defineSetter__("returnValue", function (e) { if (!e) { this.preventDefault() } return e }); Event.prototype.__defineSetter__("cancelBubble", function (e) { if (e) { this.stopPropagation() } return e }) } eN.each = function (jU, jT) { if (bP(jT)) { for (var T = 0, e = jU.length; T < e; T++) { if (jT.call(jU, jU[T], T) === false) { break } } } return jU }; eN.Platform = { x11: 0, macintosh: 0, windows: 0, android: 0, iphone: 0, ipad: 0 }; for (var i6 in eN.Platform) { if (eN.Platform.hasOwnProperty(i6)) { eN.Platform[i6] = new RegExp(i6, "i").test(window.navigator.userAgent) ? 1 : 0 } } if (typeof (eN.Dom) === "undefined") { eN.Dom = {} } eN.Dom.getComputedStyle = function (i, e) { var jT = i.nodeType == 9 ? i : i.ownerDocument || i.document, T; if (jT.defaultView && jT.defaultView.getComputedStyle) { T = jT.defaultView.getComputedStyle(i, null); if (T) { return T[e] || T.getPropertyValue(e) } } else { if (i.currentStyle) { return i.currentStyle[e] || "" } } return "" }; var fy = eN.BaseEvent; var c1 = eN.BaseClass; c1.prototype.toString = function () { return this._className || "" }; eN.on = function (T, i, e) { if (!(T = eN.G(T))) { return T } i = i.replace(/^on/, ""); if (T.addEventListener) { T.addEventListener(i, e, false) } else { if (T.attachEvent) { T.attachEvent("on" + i, e) } } return T }; eN.un = function (T, i, e) { if (!(T = eN.G(T))) { return T } i = i.replace(/^on/, ""); if (T.removeEventListener) { T.removeEventListener(i, e, false) } else { if (T.detachEvent) { T.detachEvent("on" + i, e) } } return T }; eN.hc = function (jT, T) { if (!jT || !jT.className || typeof jT.className != "string") { return false } var i = -1; try { i = jT.className == T || jT.className.search(new RegExp("(\\s|^)" + T + "(\\s|$)")) } catch (jU) { return false } return i > -1 }; eN.isEmptyObject = function (T) { if (Object.prototype.toString.call(T) === "[object Object]") { for (var e in T) { return false } return true } else { return false } }; var bO = window.location.protocol === "http:" ? "http:" : "https:"; var el = { fontFamily: 'Arial,Helvetica,"PingFang SC","Hiragino Sans GB",STHeiti,sans-serif', mapStyleNameIdPair: { "default": 0, "grayed-out": 1 }, mapHost: bO + "//map.baidu.com", apiHost: bO + "//api.map.baidu.com", apiIMG: bO + "//api.map.baidu.com/images", staticHost: bO + "//webmap0.bdimg.com", imgPath: bO + "//webmap0.bdimg.com/image/api/", tileDomain: [bO + "//maponline0.bdimg.com", bO + "//maponline1.bdimg.com", bO + "//maponline2.bdimg.com", bO + "//maponline3.bdimg.com"], panoTilePath: "//apisv1.bdimg.com/", optDomain: "http://10.120.25.45:8017", rasterTilePath: "/tile/", vectorTilePath: "/pvd/", originTilePath: [bO + "//pcor.baidu.com"], stylePath: "//maponline0.bdimg.com/sty/", getIconSetPath: function (e) { var i = "map_icons2x/"; if (typeof e === "string" && this.mapStyleNameIdPair[e] > 0) { i = "map_icons2x_" + (this.mapStyleNameIdPair[e] - 1) + "/" } return bO + this.stylePath + i }, getMapStyleFiles: function (T) { var jU = true; if (typeof T === "string" && T !== "default") { jU = false } var jV = jU ? "" : "_" + (this.mapStyleNameIdPair[T] - 1); var i = bx(); var jT = "udt=" + i.udt + "&v=" + i.ver; var e = bO + this.stylePath; return [e + "icons_2x" + jV + ".js?" + jT, e + "fs" + jV + ".js?" + jT, e + "indoor_fs.js?" + jT] }, tvc: { ditu: { normal: { version: "088", updateDate: "20210726" }, satellite: { version: "009", updateDate: "20210726" }, normalTraffic: { version: "081", updateDate: "20210726" }, satelliteTraffic: { version: "083", updateDate: "20210726" }, mapJS: { version: "104", updateDate: "20210726" }, satelliteStreet: { version: "083", updateDate: "20210726" }, panoClick: { version: "1033", updateDate: "20180108" }, panoUdt: { version: "20180108", updateDate: "20180108" }, panoSwfAPI: { version: "20150123", updateDate: "20150123" }, panoSwfPlace: { version: "20141112", updateDate: "20141112" }, earthVector: { version: "001", updateDate: "20210726" } } }, msv: { mapstyle: { updateDate: "20221108", version: "001" } } }; el.imgResources = { blankGIF: el.staticHost + "/res/litemapapi/v1d1/images/blank.gif?20170501", markerPng: el.staticHost + "/res/litemapapi/v1d1/images/marker.png?20170501", locPng: el.staticHost + "/res/litemapapi/v1d1/images/loc.png?20180918", locNewPng: el.staticHost + "/res/litemapapi/v1d1/images/loc_new.png?20190314", zoomPng: el.staticHost + "/res/litemapapi/v1d1/images/zoombtn.png?20180918", mapLogoPng: el.staticHost + "/res/litemapapi/v1d1/images/logo-2x.png?20190226" }; var B = el; var iY = "ruler.cur"; if (eN.Browser.ie || eN.Browser.edge) { eN.extend(B, { distCursor: "url(" + B.imgPath + iY + "),crosshair", defaultCursor: "url(" + B.imgPath + "openhand.cur),default", draggingCursor: "url(" + B.imgPath + "closedhand.cur),move" }) } else { if (eN.Browser.firefox) { eN.extend(B, { distCursor: "url(" + B.imgPath + iY + "),crosshair", defaultCursor: "-moz-grab", draggingCursor: "-moz-grabbing" }) } else { if (eN.Browser.chrome || eN.Browser.safari) { eN.extend(B, { distCursor: "url(" + B.imgPath + iY + ") 2 6,crosshair", defaultCursor: "url(" + B.imgPath + "openhand.cur) 8 8,default", draggingCursor: "url(" + B.imgPath + "closedhand.cur) 8 8,move" }); if (eN.Platform.macintosh) { B.defaultCursor = "-webkit-grab"; B.draggingCursor = "-webkit-grabbing" } } else { eN.extend(B, { distCursor: "url(" + B.imgPath + iY + "),crosshair", defaultCursor: "url(" + B.imgPath + "openhand.cur),default", draggingCursor: "url(" + B.imgPath + "closedhand.cur),move" }) } } } bw = bw || {}; bw.version = "gl"; bw._register = []; bw.register = function (e) { this._register[this._register.length] = e }; bw.guid = 1; bw.getGUID = function (e) { return (e || "") + bw.guid++ }; var eD = window.BMAP_AUTHENTIC_KEY || ""; function R(e, i, jT) { var T = new Date(); T.setTime(T.getTime() + jT * 24 * 60 * 60 * 1000); document.cookie = e + "=" + escape(i) + ";expires=" + T.toGMTString() } function a2(e, i) { if (navigator.cookieEnabled) { return R(e, i, 30) } if (localStorage) { return localStorage.setItem(e, i) } if (sessionStorage) { return sessionStorage.setItem(e, i) } } bw.getSeckeyCid = function () { var i = +new Date(); var e = bO + "//dlswbr.baidu.com/heicha/mw/abclite-2063-s.js?_t=" + i; gA.load(e, iw) }; function iw() { if (window.___abvk) { a2("SECKEY_ABVK", window.___abvk) } } window.__abbaidu_2063_cb = function (i) { var e = JSON.parse(i); a2("BMAP_SECKEY", e.data) }; bw.bmapVerifyCbk = function (jU) { if (jU && jU.error !== 0) { bw = null; BMapGL = null; var jV = "百度未授权使用地图API，可能是因为您提供的密钥不是有效的百度地图开放平台密钥，或此密钥未对本应用的百度地图JavaScriptAPI授权。您可以访问如下网址了解如何获取有效的密钥：https://lbs.baidu.com/apiconsole/key#。"; switch (jU.error) { case 101: jV = "您所使用的密钥ak有问题，不支持jsapi服务，可以访问该网址了解如何获取有效密钥：http://lbsyun.baidu.com/apiconsole/key#。"; break; case 102: jV = "MCODE参数不存在，mobile类型MCODE参数必需，详情查看：http://lbsyun.baidu.com/apiconsole/key#。"; break; case 200: jV = "APP不存在，AK有误请检查再重试，详情查看：http://lbsyun.baidu.com/apiconsole/key#。"; break; case 201: jV = "APP被您禁用啦，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看自己的应用具体详情，或联系我们了解详情。"; break; case 202: jV = "APP被管理员删除啦，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看自己的应用具体详情，或联系我们了解详情。"; break; case 203: jV = "APP类型错误，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看自己的应用具体详情，或联系我们了解详情。"; break; case 210: jV = "APP IP校验失败，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看自己的应用具体详情，或联系我们了解详情。"; break; case 220: jV = "APP Referer校验失败。请检查该ak设置的白名单与访问所有的域名是否一致。详情查看：http://lbsyun.baidu.com/apiconsole/key#"; break; case 230: jV = "APP Mcode码校验失败，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看自己的应用具体详情，或联系我们了解详情。"; break; case 240: jV = "APP服务被禁用了，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看自己的应用具体详情，或联系我们了解详情。"; break; case 250: jV = "该用户不存在... 请登录 https://lbs.baidu.com 的控制台，注册成为开发者申请ak吧。"; break; case 251: jV = "该用户被自己删除啦，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看自己的应用具体详情。"; break; case 252: jV = "该用户被管理员删除啦，可以访问 http://lbsyun.baidu.com/apiconsole/key# 了解如何获取有效密钥，或请联系我们了解详情。"; break; case 260: jV = "您所使用的密钥AK不包含该服务呢，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看服务选择情况，或请联系我们了解详情。"; break; case 261: jV = "您所使用的密钥AK的该服务被禁用啦，可以访问 http://lbsyun.baidu.com/apiconsole/key# 查看服务选择情况，或请联系我们了解详情。"; break; case 401: jV = "您所使用的AK并发超限了，请登录 http://lbsyun.baidu.com/cashier/quota#/home 了解详情。"; break; case 302: jV = "您所使用的AK天配额超限了，请登录 http://lbsyun.baidu.com/cashier/quota#/home 了解详情。"; break }alert(jV); var T = document.getElementsByClassName("bmap-container"); if (T) { for (var jT = 0; jT < T.length; jT++) { var e = T[jT]; if (e && e.firstChild && e.firstChild.id === "platform") { e.innerText = "" } } } } }; bw.frequencyCbk = function (e) { if (e) { window.QTFrequency = e } }; bw.verify = function () { var e = B.apiHost + "/?qt=verify&v=gl&type=webgl&ak=" + eD + "&callback=" + fi + ".bmapVerifyCbk"; gA.load(e) }; bw.frequency = function () { }; bw.apiLoad = bw.apiLoad || function () { }; function hR(i, e) { this._size = i; this._cache = []; this._totalGetTimes = 0; this._totalHitTimes = 0; this._options = { clearCallback: null, removeOldCallback: null }; e = e || {}; for (var T in e) { if (e.hasOwnProperty(T)) { this._options[T] = e[T] } } } hR.prototype.setData = function (T, jT) { var e = this._cache; var i = this._size; if (i === 0) { return } if (e.length > i) { this._removeOld() } if (!e[T]) { e.push(jT) } e[T] = jT; jT._key_ = T }; hR.prototype.getHitRate = function () { return Math.round(this._totalHitTimes / this._totalGetTimes * 1000) / 1000 }; hR.prototype.getData = function (i) { var e = this._cache[i]; if (e) { this._totalHitTimes++ } this._totalGetTimes++; return e }; hR.prototype.removeData = function (jU) { if (this._options.clearCallback) { this._options.clearCallback(this._cache[jU]) } var T = this._cache; var jV = T[jU]; for (var jT = 0, e = T.length; jT < e; jT++) { if (T[jT] === jV) { T.splice(jT, 1); break } } delete T[jU] }; hR.prototype._removeOld = function () { var e = this._cache; var jU = Math.round(this._size * 0.6); for (var jT = 0; jT < jU; jT++) { var T = e[jT]._key_; if (this._options.clearCallback) { this._options.clearCallback(e[T]) } delete e[T] } e.splice(0, jU); if (this._options.removeOldCallback) { this._options.removeOldCallback() } }; hR.prototype.clear = function () { var T = this._cache; for (var jU = 0, e = T.length; jU < e; jU++) { var jT = T[jU]._key_; if (this._options.clearCallback) { this._options.clearCallback(T[jT]) } delete T[jT] } this._cache = T = [] }; hR.prototype.forEach = function (jT) { var T = this._cache; for (var jV = 0, e = T.length; jV < e; jV++) { var jU = T[jV]._key_; jT(T[jU]) } }; hR.prototype.getBatch = function (jU) { var e = []; for (var jT = 0, T = jU.length; jT < T; jT++) { if (this.getData(jU[jT])) { e[e.length] = this.getData(jU[jT]) } } return e }; hR.prototype.clearExcept = function (jV) { var T = this._cache; for (var e = T.length, jU = e - 1; jU >= 0; jU--) { var jT = this._cache[jU]._key_; if (!jV[jT]) { T.splice(jU, 1); if (this._options.clearCallback) { this._options.clearCallback(T[jT]) } delete T[jT] } } }; hR.prototype.getDataCount = function () { return this._cache.length }; function iB() { } eN.extend(iB.prototype, { centerAndZoomIn: function (jY, T, jZ) { var jW = this; if (!jY && !T) { return } jY = jY || this.centerPoint; T = T || this.zoomLevel; T = this._getProperZoom(T).zoom; if (this.mapType === BMAP_EARTH_MAP) { if (!this._earth) { this.mapType = BMAPGL_NORMAL_MAP; this.temp.originMapType = BMAP_EARTH_MAP; function jX() { jW._earth = new bw.Earth(jW, { showRealSunlight: jW.config.showRealSunlight, showMilkyway: jW.config.showMilkyway, earthBackground: jW.config.earthBackground }); jW._proxyEarthEvents(); jW._changeEarthMapType(BMAP_EARTH_MAP); eN.extend(jW, bw.EarthView.prototype); if (!jW._navigationCtrl && jW.config.showControls) { jW._navigationCtrl = new bw.NavigationControl3D(jW) } delete jW.temp.originMapType } gO.load("earth", function () { if (bw["FeatureStyle" + jW.config.style]) { jX() } else { jW.loadMapStyleFiles(function () { jX() }) } }) } } this.lastLevel = this.zoomLevel || T; this.zoomLevel = T; var jU = new fy("onload"); jU.point = jY; jU.zoom = T; this.centerPoint = this.restrictCenter(new ct(jY.lng, jY.lat)); if (this.centerPoint.zoom) { this.zoomLevel = this.centerPoint.zoom } this.defaultZoomLevel = this.defaultZoomLevel || this.zoomLevel; this.defaultCenter = this.defaultCenter || this.centerPoint; if (!this.loaded && !(this.temp.originMapType === BMAP_EARTH_MAP)) { var i = this.config.defaultMaxBounds; var jV = new m(i, "baidu", this.mapType); var jT = new hg({ mapType: this.mapType, copyright: jV, customLayer: false, baseLayer: true, tileTypeName: "web" }); jT._isInnerLayer = true; this.addTileLayer(jT); if (this.mapType === BMAP_SATELLITE_MAP && this._isHybridShow === true) { this._addHybirdMap() } } this.dispatchEvent(jU); this.loaded = true; jZ = jZ || {}; jZ.callback && jZ.callback() }, _setPlatformPosition: function (jZ, jY, j2) { j2 = j2 || {}; if (jZ === 0 && jY === 0 && !j2.point) { return } if (isNaN(j2.initMapOffsetX)) { j2.initMapOffsetX = this.offsetX } if (isNaN(j2.initMapOffsetY)) { j2.initMapOffsetY = this.offsetY } var j0 = jZ + j2.initMapOffsetX; var jX = jY + j2.initMapOffsetY; if (j2.point) { var i = this.restrictCenter(j2.point); if (!i.equals(this.centerPoint)) { this.centerPoint = i.clone(); this.fire(new fy("oncenter_changed")) } } else { var jT = this.offsetX - j0; var e = this.offsetY - jX; var T = this.getZoomUnits(); var jW = this.centerPoint.lng; var jV = this.centerPoint.lat; var jU = new ct(jW, jV); this.centerPoint = this.restrictCenter(new ct(jU.lng + jT * T, jU.lat - e * T), T); this.fire(new fy("oncenter_changed")); if (this.zoomLevel < 10) { j0 = this.offsetX - (this.centerPoint.lng - jU.lng) / T; jX = this.offsetY + (this.centerPoint.lat - jU.lat) / T } } this.offsetX = j0; this.offsetY = jX; var j1 = this.platform.style; j1.left = j0 + "px"; j1.top = jX + "px"; this.maskLayer.style.left = -j0 + "px"; this.maskLayer.style.top = -jX + "px"; if (j2.dispatchEvent !== false) { this.dispatchEvent(new fy("onmoving")) } }, zoomTo: function (e, jW, j0) { j0 = j0 || {}; j0.zoomCenter = jW; if (j0.noAnimation !== true) { this.deepZoomTo(e, j0); return } if (typeof e !== "number") { return } var jU = ea[this.mapType]; if (!jU) { return } var T = e; e = this._getProperZoom(e).zoom; if (e === this.zoomLevel) { var jX = new fy("onzoomexceeded"); jX.targetZoom = T; this.dispatchEvent(jX); j0.callback && j0.callback(); return } this.lastLevel = this.zoomLevel; if (jW) { this.temp._cPoint = jW; this.temp._cPixel = this.pointToPixelIn(jW) } else { if (this.getInfoWindow()) { var jZ = this.getInfoWindow().getPoint(); this.temp._cPixel = this.pointToPixelIn(jZ); this.temp._cPoint = jZ } } if (this.config.zoomCenter) { jW = this.config.zoomCenter; this.temp._cPoint = jW; this.temp._cPixel = this.pointToPixelIn(jW) } if (jW || this.temp.infoWin && this.temp.infoWin.isOpen()) { var i = this.temp._cPoint; var jY = this.temp._cPixel; var jT = this.getZoomUnits(e); var jV = new ct(i.lng + jT * (this.width / 2 - jY.x), i.lat - jT * (this.height / 2 - jY.y)); this.centerPoint = this.restrictCenter(jV, jT, e); if (this.centerPoint.zoom) { e = this.centerPoint.zoom } } if (j0.fireEvent !== false) { this.dispatchEvent(new fy("onzoomstart")) } if (e !== this.zoomLevel) { this.zoomLevel = e; this.dispatchEvent(new fy("onzooming")); this.dispatchEvent(new fy("onzoomstartcode")) } if (j0.fireEvent !== false) { this.dispatchEvent(new fy("onzoomend")) } if (j0.callback) { j0.callback() } }, deepZoomMedia: function (e) { var i = this; if (!i.temp.isStdCtrlBusy) { i.temp.isStdCtrlBusy = true; i.deepZoomTo(i.zoomLevel + e); setTimeout(function () { i.temp.isStdCtrlBusy = false }, 400) } }, deepZoomTo: function (jX, jT) { jT = jT || {}; var jV = jX - this.zoomLevel; var jU = this._getProperZoom(jX); if (jU.exceeded) { var e = new fy("onzoomexceeded"); e.targetZoom = jX; this.dispatchEvent(e); return } var i; if (jT.zoomCenter) { i = this.pointToPixelIn(jT.zoomCenter) } else { if (this.getInfoWindow()) { i = this.pointToPixelIn(this.getInfoWindow().getPoint(), { zoom: this.lastLevel }) } else { var i = new e8(this.width / 2, this.height / 2) } } this.lastLevel = this.zoomLevel; var jW = this.deepZoom || new aD(this); var T = jV > 0 ? 1 : -1; jW.zoomMap(i, jV, T, null, jT) }, flyToIn: function (jY, e) { if (e === this.zoomLevel) { this.panToIn(jY); return } var jV = this._getProperZoom(e); if (jV.exceeded) { var jZ = new fy("onzoomexceeded"); jZ.targetZoom = e; this.dispatchEvent(jZ); return } var jX = e - this.zoomLevel; var T = new e8(this.width / 2, this.height / 2); var i = this.pointToPixelIn(jY); var jW = new iJ(i.x - T.x, i.y - T.y); this.lastLevel = this.zoomLevel; if (Math.abs(jX) >= 4 || Math.abs(jW.width) > this.width || Math.abs(jW.height) > this.height) { this.centerAndZoomIn(jY, e); return } var jU = this.deepZoom || new aD(this); var jT = jX > 0 ? 1 : -1; jU.zoomMap(i, jX, jT, jW) }, panToIn: function (i, T) { T = T || {}; if (!i || i.equals(this.centerPoint)) { T.callback && T.callback(); return } var jT = this.pointToPixelIn(i); var e = Math.round(this.width / 2); var jU = Math.round(this.height / 2); if (Math.abs(e - jT.x) > this.width || Math.abs(jU - jT.y) > this.height || T.noAnimation === true) { this._panToIn(e - jT.x, jU - jT.y, i); T.callback && T.callback() } else { this._panBy(e - jT.x, jU - jT.y, T) } }, _panToIn: function (i, e, jT) { var T = this.temp; if (T.operating === true) { return } if (T.dragAni) { T.dragAni.stop(); T.dragAni = null; this.dispatchEvent(new fy("onmoveend")) } this.dispatchEvent(new fy("onmovestart")); this._setPlatformPosition(i, e, { point: jT }); this.dispatchEvent(new fy("onmoveend")) }, panBy: function (i, e, T) { T = T || {}; i = Math.round(i) || 0; e = Math.round(e) || 0; if (Math.abs(i) <= this.width && Math.abs(e) <= this.height && T.noAnimation !== true) { this._panBy(i, e, T) } else { this._panToIn(i, e); T.callback && T.callback() } }, _panBy: function (i, e, jU) { if (this.temp.operating === true) { return } jU = jU || {}; this.dispatchEvent(new fy("onmovestart")); var jT = this; var T = jT.temp; T.pl = jT.offsetX; T.pt = jT.offsetY; if (T.tlPan) { T.tlPan.cancel() } if (T.dragAni) { T.dragAni.stop(); T.dragAni = null; this.dispatchEvent(new fy("onmoveend")) } T.tlPan = new fo({ fps: jU.fps || jT.config.fps, duration: jU.duration || jT.config.actionDuration, transition: jU.transition || go.easeInOutQuad, render: function (jV) { this.terminative = jT.temp.operating; if (jT.temp.operating) { return } jT._setPlatformPosition(Math.ceil(i * jV), Math.ceil(e * jV), { initMapOffsetX: T.pl, initMapOffsetY: T.pt }) }, finish: function (jV) { jT.dispatchEvent(new fy("onmoveend")); jT.temp.tlPan = false; if (jT.temp.stopArrow === true) { jT.temp.stopArrow = false; if (jT.temp.arrow !== 0) { jT._arrow() } } jU.callback && jU.callback() } }) }, getCenterIn: function () { return this.centerPoint }, getZoom: function () { return this.zoomLevel }, setTilt: function () { }, getTilt: function () { return this._tilt }, setHeading: function () { }, getHeading: function () { return this._heading }, restrictCenter: function (j1, i, e) { this.isRestrict = false; i = i || this.getZoomUnits(); e = e || this.zoomLevel; var jZ = this.pixelToPointIn(new e8(this.width, 0), { center: j1, zoom: e }); var jX = this.pixelToPointIn(new e8(0, this.height), { center: j1, zoom: e }); var j2 = j1.lng; var j7 = j1.lat; if (this.config.restrictBounds !== null && !this.config.restrictBounds.isEmpty()) { var j6 = this.config.restrictBounds; var jT = j6.getSouthWest(); var j4 = j6.getNorthEast(); var j0 = iS.convertLL2MC(jT); var jV = iS.convertLL2MC(j4); j1.lng = this.calcNewLngByBounds(j2, jX, jZ, j0.lng, jV.lng, i); j1.lat = this.calcNewLatByBounds(j7, jX, jZ, j0.lat, jV.lat, i); return j1 } var jY = this.pixelToPointIn(new e8(0, 0), { center: j1, zoom: e }); var jU = this.pixelToPointIn(new e8(0, this.height), { center: j1, zoom: e }); if (this.zoomLevel < 5) { if (jY.lat > hv.MAX_LAT && jU.lat < hv.MIN_LAT) { this.isRestrict = true; var T = hv.MAX_LAT - j1.lat; var jW = j1.lat - hv.MIN_LAT; var j5; if (T < jW) { j5 = T / (this.height / 2) } else { j5 = jW / (this.height / 2) } var j3 = 18 - p(j5); this.zoomLevel = Math.ceil(j3); j1.zoom = Math.ceil(j3); return j1 } } if (jY.lat > hv.MAX_LAT) { this.isRestrict = true; j1.lat = hv.MAX_LAT - this.height / 2 * i } else { if (jU.lat < hv.MIN_LAT) { this.isRestrict = true; j1.lat = hv.MIN_LAT + this.height / 2 * i } } return j1 } }); function hv(e, T) { if (typeof e === "string") { e = document.getElementById(e) } c1.call(this); this.container = e; this.width = e.clientWidth; this.height = e.clientHeight; this.offsetX = 0; this.offsetY = 0; this._setStyle(e); e.unselectable = "on"; e.innerHTML = ""; eN.ac(e, "bmap-container"); e.appendChild(this.render()); this._initDate = new Date(); this.platform = e.children[0]; this.maskLayer = this.platform.children[0]; this._panes = {}; this.centerPoint = new ct(0, 0); this.zoomLevel = 0; this._heading = 0; this._tilt = 0; this._bounds = new hJ(); this.lastLevel = 0; this._lock = false; this._enableTiltZoom = 7; this._enableHeadingZoom = 7; this.defaultZoomLevel = null; this.defaultCenter = null; this.zoomEventStatus = "idle"; this.currentOperation = d4.idle; this._setConfig(T); this._initMapRenderType(); this._animationInfo = {}; this._animationInfoUnstopable = {}; this.suspendLoad = false; this._customTileLabels = []; if (this._renderType === "webgl") { this._workerMgr = new je(this); this._featureMgr = new b9(); eN.extend(this, C.prototype); this.jobScheduler = new bi(this); this.benchmark = new cS(); this._setupWebGLMap(); this.deviceInfo = { hardwareInfo: { renderer: "", vendor: "" } }; if (cZ.ifSupportWebGL._renderer) { this.deviceInfo.hardwareInfo.renderer = cZ.ifSupportWebGL._renderer; this.deviceInfo.hardwareInfo.vendor = cZ.ifSupportWebGL._vendor } } else { eN.extend(this, iB.prototype) } if (!ea[this.config.mapType]) { this.config.mapType = BMAPGL_NORMAL_MAP } if (this.config.mapType === BMAP_EARTH_MAP && !this.config.enableEarth) { if (this.forceEnableEarth() === false) { this.config.mapType = BMAPGL_NORMAL_MAP } } this.mapType = this.config.mapType; this.preMapType = null; if (this.config.enableEarth) { var jV = this.maskLayer.style; jV.opacity = 0; jV.background = "#000"; if (this.config.mapType === BMAP_EARTH_MAP) { jV.opacity = 1 } setTimeout(function () { jV.WebkitTransition = jV.transition = "opacity .4s" }, 100) } this._isHybridShow = this.config.showStreetLayer; this.temp = { operating: false, arrow: 0, lastDomMoveTime: 0, lastLoadTileTime: 0, lastMovingTime: 0, canKeyboard: false, I: function (i) { return eN.I(i) }, curSpots: [], curSpotsArray: [], curAreaSpot: null, spotsGuid: 1, registerIndex: -1, hoverOnSpot: null, isStdCtrlBusy: false }; window.InstanceCore = this.temp.I; this.platform.style.cursor = this.config.defaultCursor; this._bind(); if (!bw.BMAP_INSTANCES) { bw.BMAP_INSTANCES = 1 } else { bw.BMAP_INSTANCES += 1 } for (var jT = 0; jT < bw._register.length; jT++) { bw._register[jT](this) } this.temp.registerIndex = jT; var jU = this; if (this._renderType === "webgl") { gO.load("oppcgl", function () { jU._asyncRegister() }) } else { gO.load("oppc", function () { jU._asyncRegister() }) } if (this.config.mapType === "B_EARTH_MAP") { if (!bw.Earth) { gO.load("earth", function () { }) } else { jU._syncAndChangeMapType("B_EARTH_MAP") } } } hv.MAX_TILT = 87; hv.MAX_DRAG_TILT = 73; hv.MAX_DRAG_TILT_L2 = 50; hv.MIN_TILT = 0; hv.MAX_LAT = 19431424; hv.MIN_LAT = -16023552; hv.WORLD_SIZE_MC_HALF = 20037726.372307256; hv.WORLD_SIZE_MC = hv.WORLD_SIZE_MC_HALF * 2; hv.RIGHT_EDGE_POINT = new ct(hv.WORLD_SIZE_MC_HALF, 0); hv.LEFT_EDGE_POINT = new ct(-hv.WORLD_SIZE_MC_HALF, 0); hv.HIGH_RES_MIN_RATIO = 1.2; hv.inherits(c1, "Map"); var fg = { NORMAL: "B_NORMAL_MAP", EARTH: "B_EARTH_MAP", SATELLITE: "B_STREET_MAP" }; bw.MapTypeId = fg; eN.extend(hv.prototype, { render: function () { var e = bU("div", { id: "platform" }); var jT = e.style; jT.overflow = "visible"; jT.position = "absolute"; jT.zIndex = 5; jT.top = jT.left = "0px"; var i = bU("div", { id: "mask", "class": "BMap_mask" }); var T = i.style; T.position = "absolute"; T.top = T.left = "0px"; T.zIndex = "9"; T.overflow = "hidden"; T.WebkitUserSelect = "none"; T.width = this.width + "px"; T.height = this.height + "px"; e.appendChild(i); return e }, _initMapRenderType: function () { var e = this.config.forceRenderType; if (e === "dom") { this._renderType = "dom"; return } else { if (e === "canvas") { if (cZ.isModernBrowser && !cZ.ifCanvas2dInBlackList()) { this._renderType = "canvas"; return } else { this._renderType = "dom"; return } } else { if (e === "webgl") { if (cZ.ifSupportWebGL()) { this._renderType = "webgl"; return } } } } if (cZ.ifSupportWebGL() && cZ.ifEnableWebGLMap()) { this._renderType = "webgl"; return } if (cZ.isModernBrowser && cZ.ifEnableCanvas2dMap()) { this._renderType = "canvas"; return } this._renderType = "dom" }, _setConfig: function (i) { i = i || {}; this.config = { bottomOffset: 0, clickInterval: 200, enableDragging: true, enableRotate: true, enableTilt: true, enableKeyboard: false, enableDblclickZoom: true, enableContinuousZoom: true, enableWheelZoom: false, enableRotateGestures: true, enableTiltGestures: true, enablePinchZoom: true, fixCenterWhenPinch: false, enableAutoResize: true, zoomCenter: null, fps: eN.Browser.ie ? 30 : 60, zoomerDuration: 240, actionDuration: 450, defaultCursor: B.defaultCursor, draggingCursor: B.draggingCursor, overlayMoveCursor: "pointer", coordType: BMAP_COORD_MERCATOR, mapType: BMAPGL_NORMAL_MAP, drawer: BMAP_SYS_DRAWER, enableInertialDragging: true, drawMargin: 500, drawMarginGL: 500, enableFulltimeSpotClick: false, enableResizeOnCenter: false, isModernBrowser: cZ.isModernBrowser, forceRenderType: "", textRenderType: null, ratio: f1() >= hv.HIGH_RES_MIN_RATIO ? 2 : 1, enableEarth: cZ.ifEnableEarth(), defaultMaxBounds: new hJ(new ct(-21364736, -10616832), new ct(23855104, 15859712)), showControls: false, showRealSunlight: true, showMilkyway: true, earthBackground: null, showStreetLayer: true, minZoom: null, maxZoom: null, style: "default", backgroundColor: null, enableIconClick: false, autoSafeArea: false, ak: null, webgl2: false, restrictCenter: true, restrictBounds: null, smaa: true, preserveDrawingBuffer: false, privateOn: false, privateRegions: null, popRightClick: false }; for (var T in i) { if (i.hasOwnProperty(T)) { this.config[T] = i[T]; if (T === "fixCenterWhenResize") { this.config.enableResizeOnCenter = i[T] } } } if (i.style) { if (i.style["styleId"] && i.style["styleId"].length < 32) { this.config.style = i.style["styleId"] } else { this.config.style = i.style } } this._setTextRenderType(); this._displayOptions = { poi: true, poiText: true, poiIcon: true, overlay: true, layer: true, building: true, indoor: true, street: true, skyColors: ["rgba(226, 237, 248, 0)", "rgba(186, 211, 252, 1)"], isFlat: false, labelMargin: 0 }; if (i.displayOptions) { for (var e in i.displayOptions) { if (i.displayOptions.hasOwnProperty(e)) { this._displayOptions[e] = i.displayOptions[e] } } } if (this.config.restrictCenter === false) { this._enableTiltZoom = 0; this._enableHeadingZoom = 0 } }, getMinZoom: function () { var T; if (ea[this.mapType][this._renderType]) { T = ea[this.mapType][this._renderType].minZoom } else { T = ea[this.mapType].minZoom } if (this.config.minZoom !== null && this.config.minZoom >= T) { T = this.config.minZoom } if (this.mapType === "B_EARTH_MAP") { return T } var i = this.getSize(); var e = this.worldSize(T); while (e < i.width) { T++; e = this.worldSize(T) } return T }, getMaxZoom: function () { var e; if (ea[this.mapType][this._renderType]) { e = ea[this.mapType][this._renderType].maxZoom } else { e = ea[this.mapType].maxZoom } if (this.config.maxZoom !== null && this.config.maxZoom <= e) { e = this.config.maxZoom } else { if (this._renderType === "webgl") { e = 21 } } return e }, _drawFrame: function () { this._webglMapScene._painter.draw() }, _setupWebGLMap: function () { var e = this; gO.load("mapgl", function () { e._asyncRegister() }) }, _setStyle: function (i) { var e = i.style; e.overflow = "hidden"; if (cd(i).position !== "absolute") { e.position = "relative" } e.backgroundImage = "url(" + B.imgPath + "bg.png)"; e.textAlign = "left"; e.touchAction = e.MSTouchAction = "none" }, _bind: function () { var e = this; if (e._renderType !== "webgl") { e._watchSize = function () { var T = e.getContainerSize(); if (e.width !== T.width || e.height !== T.height) { var jW = (T.width - e.width) / 2; var jY = (T.height - e.height) / 2; var jT = e.getZoomUnits(); var jV = e.centerPoint; if (jV && !e.config.enableResizeOnCenter) { e.centerPoint = new ct(jV.lng + jW * jT, jV.lat - jY * jT) } e.maskLayer.style.width = (e.width = T.width) + "px"; e.maskLayer.style.height = (e.height = T.height) + "px"; var jU = new fy("onresize"); jU.size = T; e.dispatchEvent(jU); e.fire(new fy("onsize_changed")); var i = parseInt(e.platform.style.left, 10) || 0; var jX = parseInt(e.platform.style.top, 10) || 0; if (e.currentOperation !== "undefined" && e.currentOperation !== d4.idle && (e.offsetX !== i || e.offsetY !== jX)) { e._setPlatformPosition(i, jX) } } } } else { e._watchSize = function () { var i = e.getContainerSize(); if (e.width !== i.width || e.height !== i.height) { var jT = e.getSize(); e.maskLayer.style.width = (e.width = i.width) + "px"; e.maskLayer.style.height = (e.height = i.height) + "px"; if (f1() !== e.config.ratio) { e.config.ratio = f1() } var jU = new fy("onresize"); jU.size = i; e.dispatchEvent(jU); var T = new fy("onsize_changed"); T.size = i; T.oldSize = jT; e.fire(T) } } } if (e.config.enableAutoResize) { e.temp.autoResizeTimer = setInterval(e._watchSize, 16) } this.on("size_changed", function () { var i = e.getMinZoom(); if (e.zoomLevel < i) { e.setZoomIn(i, { noAnimation: true }) } }); this.on("zoom_changed", function () { this.dispatchEvent(new fy("onzooming")) }) }, addControl: function (e) { if (e && bP(e._i)) { e._i(this); this.dispatchEvent(new fy("onaddcontrol", e)) } }, removeControl: function (e) { if (e && bP(e.remove)) { e.remove(); this.dispatchEvent(new fy("onremovecontrol", e)) } }, addContextMenu: function (i, e) { if (i) { i.initialize(this, e); this.dispatchEvent(new fy("onaddcontextmenu", i)) } }, removeContextMenu: function (e) { if (e) { this.dispatchEvent(new fy("onremovecontextmenu", e)); e.remove() } }, addDistrictLayer: function (e) { if (e) { e.initialize(this) } }, removeDistrictLayer: function (e) { if (e) { e.removeDistrict(this, e) } }, addOverlay: function (i) { if (i && bP(i._i)) { var T = new fy("onbeforeaddoverlay", i); T.overlay = i; this.dispatchEvent(T); i._i(this); T = new fy("onaddoverlay", i); T.overlay = i; this.dispatchEvent(T) } }, removeOverlay: function (i) { if (i && bP(i.remove)) { if (i instanceof cf) { if (this.stencil) { this.stencil = null } } var T = new fy("onremoveoverlay", i); T.overlay = i; i.remove(); this.dispatchEvent(T) } }, clearOverlays: function () { this.dispatchEvent(new fy("onclearoverlays")) }, addTileLayer: function (jU) { if (!jU) { return } if (jU instanceof dj || jU instanceof dY) { if (jU.layer) { jU = jU.layer } else { return } } for (var jT = 0, e = this.tileMgr.tileLayers.length; jT < e; jT++) { var T = this.tileMgr.tileLayers[jT]; if (T === jU || T.getMapType() === jU.getMapType()) { return } } jU.initialize(this); this.dispatchEvent(new fy("onaddtilelayer", jU)) }, removeTileLayer: function (e) { if (e) { if (e instanceof dj || e instanceof dY) { if (e.layer) { e = e.layer } else { return } } e.remove(); this.dispatchEvent(new fy("onremovetilelayer", e)) } }, addNormalLayer: function (e) { if (!e || !(e instanceof ci)) { return } this.dispatchEvent(new fy("onaddnormallayer", e)) }, removeNormalLayer: function (e) { if (e && e instanceof ci) { this.dispatchEvent(new fy("onremovenormallayer", e)) } }, addGeoJSONLayer: function (e) { if (e && e instanceof aM) { e.init(this) } }, removeGeoJSONLayer: function (e) { if (e && e instanceof aM) { e.remove() } }, getTileLayer: function (e) { if (this.tileMgr) { return this.tileMgr.getTileLayer(e) } return null }, setMapType: function (e) { var i = this; if (this.mapType === e || this._mapTypeChanging) { return } if (e === BMAP_EARTH_MAP && !this.config.enableEarth) { return } if (this._earth && this._earth.getLock()) { return } this._mapTypeChanging = true; this.preMapType = this.mapType; this._boundsInPreMapType = this.getBoundsIn(); if (this.preMapType === BMAP_SATELLITE_MAP) { this._preStreetLayerShow = this._isHybridShow } if (e === BMAP_EARTH_MAP) { if (!bw.Earth) { gO.load("earth", function () { i._syncAndChangeMapType(e) }); return } i._syncAndChangeMapType(e) } else { if (this.preMapType !== BMAP_EARTH_MAP) { this._changeFlatMapType(e); this._mapTypeChanging = false } else { this._setMapTypeStatus(e, function (T, jT) { var jU = i._earth.getEarthCanvas(); i._changeFlatMapType(e, this.preMapType); if (i._mapTypeChangAni) { i._mapTypeChangAni.stop() } i._mapTypeChangAni = df.start({ el: jU, style: "opacity", startValue: 1, endValue: 0, duration: 200, callback: function () { i._mapTypeChangAni = null; i._mapTypeChanging = false } }); T = iS.convertLL2MC(T); if (i._renderType === "webgl") { eN.extend(i, C.prototype); i.setCenterIn(T, { noAnimation: true }); i.setZoomIn(jT, { noAnimation: true }) } else { eN.extend(i, iB.prototype); i.centerAndZoomIn(T, jT) } }) } } }, _changeFlatMapType: function (jW) { if (!jW || !ea[jW]) { return } var j4 = this.preMapType; this.mapType = jW; var jT = this.getTileLayer(j4); if (jT) { this.removeTileLayer(jT) } else { if (this.tileMgr.tileLayers.length) { var j3 = this.getTileLayer("B_NORMAL_MAP"); if (j3) { this.removeTileLayer(j3) } else { j3 = this.getTileLayer("B_SATELLITE_MAP"); j3 && this.removeTileLayer(j3) } } } this._preStreetLayerShow = this.config.showStreetLayer; if (j4 === BMAP_SATELLITE_MAP && this._preStreetLayerShow) { this._removeHybirdMap() } if (this.mapType !== BMAP_EARTH_MAP || this._renderType !== "webgl" || this.baseLayerAdded !== true) { var T = new hJ(new ct(-21364736, -10616832), new ct(23855104, 15859712)); var j1 = new m(T, "baidu", jW); var jU = new hg({ mapType: this.mapType, copyright: j1, dataType: this.mapType === BMAP_SATELLITE_MAP ? gt : ht, customLayer: this.mapType === BMAP_SATELLITE_MAP, baseLayer: true, transparentPng: false, tileTypeName: this.mapType === BMAP_SATELLITE_MAP ? "web" : "na" }); jU._isInnerLayer = true; jU.setZIndex(0); this.addTileLayer(jU); if (this._renderType === "webgl" && !this.baseLayerAdded) { this.baseLayerAdded = true } } if (jW === BMAP_SATELLITE_MAP) { this._featureMgr.clearLabelOverlayData(); this._featureMgr.setLabelData([]); if (this._preStreetLayerShow === true || typeof this._preStreetLayerShow === "undefined") { this._addHybirdMap() } } var jY = this.tileMgr.tileLayers; for (var jX = 0, jV = jY.length; jX < jV; jX++) { var jZ = jY[jX]; var j2 = jZ.tilesDiv; if (!j2) { continue } if (!jZ._isInnerLayer && j2.style.visibility === "hidden") { j2.style.visibility = "" } } var j0 = new fy("onmaptypechange"); j0.zoomLevel = this.zoomLevel; j0.mapType = jW; j0.exMapType = j4; this.dispatchEvent(j0) }, showStreetLayer: function (e) { e ? this._addHybirdMap() : this._removeHybirdMap() }, hideStreetLayer: function (e) { this._hideStreetLayerOptions = e; this._removeHybirdMap(e) }, _addHybirdMap: function () { this._isHybridShow = true; if (this.mapType === "B_EARTH_MAP") { if (this._earth) { this._earth.showStreetLayer() } return } if (this._hybridTileLayer) { this.addTileLayer(this._hybridTileLayer); var jW = new fy("onstreetlayer_show"); this.dispatchEvent(jW); return } var jU = new hJ(new ct(-21364736, -10616832), new ct(23855104, 15859712)); var T = new m(jU, "", BMAP_HYBRID_MAP); var i = new hg({ copyright: T, transparentPng: true, tileTypeName: "web" }); i._isInnerLayer = true; var jT = this.isCanvasMap(); i.getTilesUrl = function (jX, j2) { var j0 = ea.B_STREET_MAP; var j1 = jw("ditu", "satelliteStreet"); var jY = j1.ver; var e = j1.udt; var jZ = j0.tileUrls[Math.abs(jX.x + jX.y) % j0.tileUrls.length] + "?qt=vtile&x=" + (jX.x + "").replace(/-/gi, "M") + "&y=" + (jX.y + "").replace(/-/gi, "M") + "&z=" + j2 + "&styles=sl&v=" + jY + "&udt=" + e + "&scaler=" + f1() + "&showtext=" + (jT ? 0 : 1); return jZ }; this._isHybridShow = true; this.addTileLayer(i); this._hybridTileLayer = i; var jV = new fy("onstreetlayer_show"); this.dispatchEvent(jV) }, _removeHybirdMap: function (i) { this._isHybridShow = false; if (this.mapType === "B_EARTH_MAP") { if (this._earth) { this._earth.hideStreetLayer(i) } return } if (this._hybridTileLayer) { this.removeTileLayer(this._hybridTileLayer); var T = new fy("onstreetlayer_hide"); this.dispatchEvent(T) } }, isStreetLayerShow: function () { return this._isHybridShow }, getTileId: function (e, jV) { var jT = ea[this.mapType]; if (typeof jT !== "object") { return null } var T = jT.baseUnits * Math.pow(2, (jT.zoomLevelBase - jV)); var jU = parseInt(e.lng / T, 10); var i = parseInt(e.lat / T, 10); return { row: jU, column: i, level: jV } }, reset: function () { this.centerAndZoomIn(this.defaultCenter, this.defaultZoomLevel, true) }, setOptions: function (i) { i = i || {}; var jU = this; for (var jT in i) { if (i.hasOwnProperty(jT)) { var T = true; if (typeof i[jT] !== "object") { T = i[jT] !== this.config[jT] } this.config[jT] = i[jT]; if (jT === "fixCenterWhenResize") { this.config.enableResizeOnCenter = i[jT] } if (!T) { continue } switch (jT) { case "style": case "styleUrl": var e = { os: i.style.os, sv: i.style.sv }; if (jT === "style" && i.styleUrl) { break } this.fire(new fy("onstyle_willchange")); this.loadMapStyleFiles(function () { var jV = new fy("onlayer_update"); jV.name = "na"; jU.fire(jV) }, e); break; case "enableAutoResize": if (i[jT] === true) { this.enableAutoResize() } else { this.disableAutoResize() } break; case "displayOptions": this.setDisplayOptions(i[jT]); break } } } }, setPrivateStatus: function (i) { if (typeof i === "boolean") { if (this.config.privateOn !== i) { this.config.privateOn = i; var e = new fy("onlayer_update"); e.name = "na"; this.fire(e) } } }, getPrivateStatus: function () { return this.config.privateOn }, setPrivateRegions: function (jU) { if (jU && jU instanceof Array) { var jT = true; for (var T = 0; T < jU.length; T++) { if (jU[T] instanceof cG) { continue } else { jT = false; break } } if (jT) { this.config.privateRegions = jU; var e = new fy("onlayer_update"); e.name = "na"; this.fire(e) } } }, getPrivateRegions: function () { if (!this.config.privateRegions) { return null } else { return this.config.privateRegions } }, enableDragging: function () { this.config.enableDragging = true }, disableDragging: function () { this.config.enableDragging = false }, enableInertialDragging: function () { this.config.enableInertialDragging = true }, disableInertialDragging: function () { this.config.enableInertialDragging = false }, enableScrollWheelZoom: function () { this.config.enableWheelZoom = true }, disableScrollWheelZoom: function () { this.config.enableWheelZoom = false }, enableContinuousZoom: function () { this.config.enableContinuousZoom = true }, disableContinuousZoom: function () { this.config.enableContinuousZoom = false }, enableResizeOnCenter: function () { this.config.enableResizeOnCenter = true }, disableResizeOnCenter: function () { this.config.enableResizeOnCenter = false }, enableDoubleClickZoom: function () { this.config.enableDblclickZoom = true }, disableDoubleClickZoom: function () { this.config.enableDblclickZoom = false }, enableKeyboard: function () { this.config.enableKeyboard = true }, disableKeyboard: function () { this.config.enableKeyboard = false }, getSize: function () { return new iJ(this.width, this.height) }, enablePinchToZoom: function () { this.config.enablePinchZoom = true }, disablePinchToZoom: function () { this.config.enablePinchZoom = false }, enableTilt: function () { this.config.enableTilt = true }, disableTilt: function () { this.config.enableTilt = false }, enableRotate: function () { this.config.enableRotate = true }, disableRotate: function () { this.config.enableRotate = false }, enableAutoResize: function () { this.config.enableAutoResize = true; this._watchSize(); if (!this.temp.autoResizeTimer) { this.temp.autoResizeTimer = setInterval(this._watchSize, 16) } }, disableAutoResize: function () { this.config.enableAutoResize = false; if (this.temp.autoResizeTimer) { clearInterval(this.temp.autoResizeTimer); this.temp.autoResizeTimer = null } }, checkResize: function () { this._watchSize() }, resize: function () { this._watchSize() }, getContainerSize: function () { return new iJ(this.container.clientWidth, this.container.clientHeight) }, _getProperZoom: function (T) { if (!T) { T = this.zoomLevel } var i = this.getMinZoom(); var e = this.getMaxZoom(); var jT = false; if (T < i) { jT = true; T = i } if (T > e) { jT = true; T = e } if (this._renderType !== "webgl") { T = Math.round(T) } return { zoom: T, exceeded: jT } }, getContainer: function () { return this.container }, getZoomUnits: function (T) { if (this.mapType === BMAP_EARTH_MAP) { return Math.pow(2, 18 - this._earth.getImageZoom()) } var e = ea[this.mapType]; if (typeof e !== "object") { return null } var i = T || this.zoomLevel; return Math.pow(2, (e.zoomLevelBase - i)) }, pointToPixelIn: function (j4, j6) { if (!j4) { return } j6 = j6 || {}; if (this.mapType === BMAP_EARTH_MAP) { var jV; if (!j4._llPt) { jV = iS.convertMC2LL(j4); j4._llPt = jV } jV = j4._llPt; var j0 = null; var jU = null; if (typeof j6.zoom === "number") { var j3 = this._earth; var j5 = j3._getEarthZoomByImgZoom(j6.zoom); if (j5 <= 3) { j0 = j3._generateTmpPMatrix(j5) } jU = j3._generateTmpMVMatrix(j3.getCenter(), j5) } var jW = this._earth.fromLatLngToPixel(jV, { useRound: false, isCalcOnBack: true, matrixInfo: { modelViewMatrix: jU, projectionMatrix: j0 } }); return jW } if ((this._heading % 360 === 0 && this._tilt === 0) || !this._webglMapCamera) { var j2 = this.getZoomUnits(j6.zoom); var jY = j6.center || this.centerPoint; var jT = this.width / 2; var jX = this.height / 2; var j1; if (j4.lng * jY.lng < 0) { var i = Math.abs(j4.lng - jY.lng); var e = (eQ._mc180X * 2 - i) / j2; if (jY.lng < 0) { j1 = jT - e } else { j1 = jT + e } } else { j1 = (j4.lng - jY.lng) / j2 + jT } var jZ = (jY.lat - j4.lat) / j2 + jX; if (j6.useRound !== false) { j1 = Math.round(j1); jZ = Math.round(jZ) } return new e8(j1, jZ) } var T = this._webglMapCamera.fromMCToScreenPixel(j4.lng, j4.lat, j6); if (j6.useRound === false) { return T } T.x = Math.round(T.x); T.y = Math.round(T.y); return T }, pixelToPointIn: function (e, j0) { if (!e) { return } j0 = j0 || {}; if (this.mapType === BMAP_EARTH_MAP) { if (typeof j0.zoom === "number") { var jY = this._earth; var jV = null; var T = null; var jZ = jY._getEarthZoomByImgZoom(j0.zoom); if (jZ <= 3) { jV = jY._generateTmpPMatrix(jZ) } T = jY._generateTmpMVMatrix(jY.getCenter(), jZ) } var i = this._earth.fromPixelToLatLng(e, { matrixInfo: { modelViewMatrix: T, projectionMatrix: jV } }); if (i === null) { return null } return iS.convertLL2MC(i) } if ((this._heading % 360 !== 0 || this._tilt > 0) && this._webglMapCamera) { return this._webglMapCamera.fromScreenPixelToMC(e.x, e.y, j0) } var jW = j0.center || this.centerPoint; var jX = this.getZoomUnits(j0.zoom); var jU = jW.lng + jX * (e.x - this.width / 2); var jT = jW.lat - jX * (e.y - this.height / 2); return new ct(jU, jT) }, pointToOverlayPixelIn: function (e, jT) { jT = jT || {}; var T = this.pointToPixelIn(e, { zoom: jT.zoom, center: jT.center, forLabel: true, frustumTest: true, useRound: jT.useRound }); if (!T) { return } if (jT.fixPosition && this.mapType !== "B_EARTH_MAP") { var jU = this.getSize(); var i = this.worldSize(jT.zoom); if (T.x > jU.width) { while (T.x > jU.width) { T.x -= i } } else { if (T.x < 0) { while (T.x < 0) { T.x += i } } } } if (this._renderType === "webgl") { return T } T.x -= this.offsetX; T.y -= this.offsetY; return T }, overlayPixelToPointIn: function (i, e) { if (!i) { return } var T = i.clone(); if (this._renderType !== "webgl") { T.x += this.offsetX; T.y += this.offsetY } return this.pixelToPointIn(T, e) }, getProjection: function () { return new iS() }, lnglatToMercator: function (e, jT) { var i = new ct(e, jT); var T = iS.convertLL2MC(i); return [T.lng, T.lat] }, mercatorToLnglat: function (i, e) { if (isNaN(i) || isNaN(e)) { return [] } i = parseFloat(i); e = parseFloat(e); var jT = new ct(i, e); var T = iS.convertMC2LL(jT); return [T.lng, T.lat] }, getBoundsIn: function () { if (!this._bounds) { return } var j6 = arguments[0]; if (this.mapType === BMAP_EARTH_MAP && this._earth) { var j0 = this._earth.getCustomBounds(); if (!j0) { return this.config.defaultMaxBounds } var jZ = j0.getSouthWest(); var e = j0.getNorthEast(); if (jZ.lng > e.lng) { e.lng = 180 } var kn = iS.convertLL2MC(jZ); var kd = iS.convertLL2MC(e); var j3 = this.config.defaultMaxBounds; var kc = Math.max(kn.lng, j3.sw.lng); var kb = Math.max(kn.lat, j3.sw.lat); var j5 = Math.min(kd.lng, j3.ne.lng); var j4 = Math.min(kd.lat, j3.ne.lat); var j8 = new hJ(new ct(kc, kb), new ct(j5, j4)); j8.pointBottomLeft = new ct(kc, kb); j8.pointBottomRight = new ct(j5, kb); j8.pointTopLeft = new ct(kc, j4); j8.pointTopRight = new ct(j5, j4); j8.setMinMax(); j8.makeNormalizedPoint(this._earth.getHeading()); return j8 } j6 = j6 || {}; var jU = j6.margins || [0, 0, 0, 0]; var ki = this.pixelToPointIn({ x: jU[3], y: this.height - jU[2] }, j6); var km = this.pixelToPointIn({ x: this.width - jU[1], y: jU[0] }, j6); var ka = typeof j6.heading === "number" ? j6.heading : (this._heading % 360); var T = typeof j6.tilt === "number" ? j6.tilt : this._tilt; var j2 = this._webglMapCamera; if ((ka === 0 && T === 0) || !j2) { this._bounds.setSouthWest(ki); this._bounds.setNorthEast(km); this._bounds.pointBottomLeft = ki; this._bounds.pointBottomRight = new ct(km.lng, ki.lat); this._bounds.pointTopRight = km; this._bounds.pointTopLeft = new ct(ki.lng, km.lat); this._bounds.setMinMax(); this._bounds.makeNormalizedPoint(ka); return this._bounds } var j9 = this.pixelToPointIn({ x: jU[3], y: jU[0] }, j6); var jT = j2.getPosition(); var ko = Math.sqrt(Math.pow(j9.lng - jT[0], 2) + Math.pow(j9.lat - jT[1], 2)); var kj = this.getZoomUnits(); var kq = ko / kj; var kg = j2._frustumSideLen; var jY = j2._fovy; if (kq > kg || (90 - T) < jY / 2) { var kp = [j9.lng - jT[0], j9.lat - jT[1]]; if ((90 - T) < jY / 2) { kp[0] = -kp[0]; kp[1] = -kp[1] } var kh = kg * kj; var jX = [kp[0] / ko * kh + jT[0], kp[1] / ko * kh + jT[1]]; var ke = [km.lng - jT[0], km.lat - jT[1]]; if ((90 - T) < jY / 2) { ke[0] = -ke[0]; ke[1] = -ke[1] } var jV = [ke[0] / ko * kh + jT[0], ke[1] / ko * kh + jT[1]]; j9.lng = jX[0]; j9.lat = jX[1]; km.lng = jV[0]; km.lat = jV[1] } var j7 = this.pixelToPointIn({ x: this.width - jU[1], y: this.height - jU[2] }, j6); var kf = [ki, km, j9, j7]; var kl = kf[0].lng; var kr = kf[0].lat; var jW = kf[0].lng; var j1 = kf[0].lat; for (var kk = 1; kk < 4; kk++) { if (kf[kk].lng < kl) { kl = kf[kk].lng } if (kf[kk].lng > jW) { jW = kf[kk].lng } if (kf[kk].lat < kr) { kr = kf[kk].lat } if (kf[kk].lat > j1) { j1 = kf[kk].lat } } this._bounds.setSouthWest(new ct(kl, kr)); this._bounds.setNorthEast(new ct(jW, j1)); this._bounds.pointTopLeft = j9; this._bounds.pointTopRight = km; this._bounds.pointBottomRight = j7; this._bounds.pointBottomLeft = ki; this._bounds.makeNormalizedPoint(ka); this._bounds.setMinMax(); return this._bounds }, isLoaded: function () { return !!this.loaded }, _getBestLevel: function (i, j2) { var jV = 0; if (this._renderType === "webgl" && !bT()) { jV = 100 } var jW = j2.margins || [10, 10, 10, 10]; var jT = j2.zoomFactor || 0; var jX = jW[1] + jW[3]; var jU = jW[0] + jW[2]; var e = this.getMinZoom(); var j1 = this.getMaxZoom(); var j0 = i.toSpan(); var jZ = j0.width / (this.width - jX - jV); var jY = j0.height / (this.height - jU - jV); var T = 18 - p(Math.max(jZ, jY)); if (T < e) { T = e } if (T > j1) { T = j1 } T += jT; if (this._renderType !== "webgl") { T = Math.floor(T) } return T }, getViewportIn: function (j2, jU) { if (this.mapType === BMAP_EARTH_MAP) { j2 = j2 || []; var jW = []; for (var j3 = 0; j3 < j2.length; j3++) { if (!j2[j3]) { continue } jW.push(iS.convertMC2LL(j2[j3])) } var j4 = this._earth.getViewportIn(jW, jU); var jT = j4.center; var j0 = j4.zoom; var j8 = iS.convertLL2MC(jT); return { center: j8, zoom: j0 } } var jY = { center: this.getCenterIn(), zoom: this.getZoom() }; if (!j2 || j2.length === 0) { return jY } jU = jU || {}; var jX; if (j2 instanceof hJ) { jX = j2 } else { var jV = j2; jX = new hJ(); for (var j1 = jV.length - 1; j1 >= 0; j1--) { jX.extend(jV[j1]) } if (jX.isEmpty()) { return jY } } var j7 = jX.getCenter(); var e = this._getBestLevel(jX, jU); if (jU.margins) { var T = jU.margins; var j6 = (T[1] - T[3]) / 2; var jZ = (T[0] - T[2]) / 2; var j5 = this.getZoomUnits(e); j7.lng = j7.lng + j5 * j6; j7.lat = j7.lat + j5 * jZ } return { center: j7, zoom: e } }, setViewportIn: function (jT, jU) { if (this.mapType === BMAP_EARTH_MAP) { var jY; if (jT && jT.center) { var T = iS.convertMC2LL(jT.center); var jW = this._earth._getEarthZoomByImgZoom(jT.zoom, T); jY = { center: T, zoom: jW } } else { jY = []; for (var jV = 0; jV < jT.length; jV++) { var jX = iS.convertMC2LL(jT[jV]); jY[jV] = new cn(jX.lat, jX.lng) } } this._earth.setViewportIn(jY, jU); return } var e; if (jT && jT.center) { e = jT } else { e = this.getViewportIn(jT, jU) } jU = jU || {}; if (this._renderType === "webgl") { this.centerAndZoomIn(e.center, e.zoom, jU); return } if (e.zoom === this.zoomLevel && jU.enableAnimation !== false) { this.panToIn(e.center, { duration: 200, callback: jU.callback }) } else { this.centerAndZoomIn(e.center, e.zoom, jU) } }, addSpots: function (T, i) { if (!T || T.length === 0) { return } i = i || {}; var jV = i.zIndex || 0; var jU = typeof i.enableMultiResponse === "undefined" ? true : !!i.enableMultiResponse; this.spotsPool = this.spotsPool || {}; var e = "sp" + (this.temp.spotsGuid++); this.spotsPool[e] = { spots: T.slice(0), zIndex: jV, enableMultiResponse: jU }; var jT = this; gO.load("hotspot", function () { jT._asyncRegister() }); return e }, getSpots: function (e) { return this.spotsPool[e] && this.spotsPool[e].spots || [] }, removeSpots: function (e) { if (!e || !this.spotsPool[e]) { return } delete this.spotsPool[e] }, clearSpots: function () { delete this.spotsPool }, getIconByClickPosition: function (i) { if (!this.config.enableIconClick || !this._spotsMgr) { return null } var e = this._spotsMgr.getSpotsByScreenPosition(i); if (e[0] && e[0].userdata) { var T = e[0].userdata; return { name: T.name, uid: T.uid, position: T.iconPoint || e[0].pt } } return null }, setBounds: function (e) { ea[this.mapType].bounds = e.clone() }, getCoordType: function () { return this.config.coordType }, getPanes: function () { return this._panes }, getInfoWindow: function () { if (this.temp.infoWin && this.temp.infoWin.isOpen()) { return this.temp.infoWin } return null }, getDistanceIn: function (jU, e) { if (!jU || !e) { return } if (jU.equals(e)) { return 0 } if (this.mapType === BMAP_EARTH_MAP) { var jT = iS.convertMC2LL(jU); var T = iS.convertMC2LL(e); return this._earth.getDistance(jT, T) } var i = iS.getDistanceByMC(jU, e); return i }, getOverlays: function () { var jV = []; var jW = this._overlays; var jU = this._customOverlays; if (jW) { for (var jT in jW) { if (jW[jT] instanceof er) { jV.push(jW[jT]) } } } if (jU) { for (var T = 0, e = jU.length; T < e; T++) { jV.push(jU[T]) } } return jV }, getMapType: function () { return this.mapType }, getMapCoordType: function () { return this.coordType }, _asyncRegister: function () { for (var e = this.temp.registerIndex; e < bw._register.length; e++) { bw._register[e](this) } this.temp.registerIndex = e }, setDefaultCursor: function (e) { this.config.defaultCursor = e; if (this.platform) { this.platform.style.cursor = this.config.defaultCursor } }, getDefaultCursor: function () { return this.config.defaultCursor }, setOverlayMoveCursor: function (e) { this.config.overlayMoveCursor = e }, getOverlayMoveCursor: function () { return this.config.overlayMoveCursor }, setDraggingCursor: function (e) { this.config.draggingCursor = e }, getDraggingCursor: function () { return this.config.draggingCursor }, _syncAndChangeMapType: function (e) { var i = this; if (i._renderType === "webgl" && i.getTilt() > hv.MAX_DRAG_TILT_L2) { i.setTilt(hv.MAX_DRAG_TILT_L2, { callback: function () { i._changeEarthMapType(e) } }) } else { i._changeEarthMapType(e) } }, _changeEarthMapType: function (T) { var jT = this; var jW = jT.tileMgr.tileLayers; if (this._mapTypeChangAni) { this._mapTypeChangAni.stop() } var jV; if (this._earth) { jV = this._earth.getEarthCanvas() } if (!this._earth) { this.maskLayer.style.opacity = 1; this.maskLayer.style.zIndex = 999; this.maskLayer.style.background = "#000" } this._mapTypeChangAni = new fo({ duration: 400, render: function (e) { if (!jT._earth) { return } jV.style.opacity = e }, finish: function () { for (var e = jW.length - 1, jX = e; jX >= 0; jX--) { var jZ = jW[jX].tilesDiv; if (jZ) { jZ.style.visibility = "hidden" } if (jW[jX]._isInnerLayer && jT._renderType !== "webgl") { jT.removeTileLayer(jW[jX]) } } jT._mapTypeChangAni = null; jT._mapTypeChanging = false; function jY() { var j3 = jT.getZoom() - 2; var j4 = jT.getCenterIn(); var j1 = iS.convertMC2LL(j4); jT._earth = new bw.Earth(jT, { center: j1, zoom: j3, showRealSunlight: jT.config.showRealSunlight, showMilkyway: jT.config.showMilkyway, earthBackground: jT.config.earthBackground }); jT._proxyEarthEvents(); var j0 = jT.mapType; jT.mapType = T; var j2 = new fy("onmaptypechange"); j2.zoomLevel = this.zoomLevel; j2.mapType = T; j2.exMapType = j0; jT.dispatchEvent(j2); jT._setMapTypeStatus(T); eN.extend(jT, bw.EarthView.prototype); if (!jT._navigationCtrl && jT.config.showControls) { jT._navigationCtrl = new eP(jT) } } if (!jT._earth) { if (bw["FeatureStyle" + jT.config.style]) { jY() } else { jT.loadMapStyleFiles(function () { jY() }) } } if (parseInt(jT.maskLayer.style.opacity, 10) === 1) { setTimeout(function () { jT.maskLayer.style.zIndex = 9; jT.maskLayer.style.opacity = 0 }, 1000) } } }); if (!this._earth) { return } var i = this.mapType; this.mapType = T; var jU = new fy("onmaptypechange"); jU.zoomLevel = this.zoomLevel; jU.mapType = T; jU.exMapType = i; this.dispatchEvent(jU); jT._setMapTypeStatus(T); eN.extend(jT, bw.EarthView.prototype) }, getMapStyleId: function () { if (typeof this.config.style === "string") { return this.config.style } return this.config.mapStyleId || "custom" }, _setMapTypeStatus: function (T) { var jX = arguments[1]; if (T === BMAP_EARTH_MAP) { var jV = this._earth.getEarthCanvas(); if (jV) { jV.style.display = "" } var jY = { noAnimation: true }; this._earth.setCenter(iS.convertMC2LL(this.centerPoint), jY); this._earth.setImageZoom(this.zoomLevel, jY); this._earth.setTilt(this.getTilt(), jY); this._earth.setHeading(this.getHeading(), jY) } else { if (this.preMapType === BMAP_EARTH_MAP && this._earth) { var jW = this._earth; var jT = jW.getMapZoom(); var jU = jW._imageRawZoom || jT; var i = jU - jT; var e = jW.getCenter(); if (this._renderType === "webgl") { this._tilt = jW.getTilt(); if (this.zoomLevel > 7) { this._heading = jW.getHeading(); jX && jX(e, jT); return } if (jW.getHeading() !== 0) { jW.setTilt(this.getTilt()); jW.setHeading(this.getHeading(), { callback: function () { jX && jX(e, jT) } }) } else { jX && jX(e, jT) } return } if (i < 0.1 && jW.getTilt() === 0 && jW.getHeading() === 0) { jX && jX(e, jT); return } jW.setTilt(0); jW.setHeading(0); jW.setZoom(jW.getZoom() - i, { callback: function () { jX && jX(e, jT) } }) } } }, _proxyEarthEvents: function () { var jU = this; var jV = this._earth; jV.on("tilesload", function (i) { jU.fire(i) }); jV.on("centerandzoom", function (i) { jU.dispatchEvent(new fy("onmoveend")); jU.dispatchEvent(new fy("onzoomend")) }); function jT(i) { jU.fire(i) } var e = ["zoomstart", "zoomend", "tilesload", "sunlighttime_change", "sunlighttime_clear", "centerandzoom", "animation_start", "animation_stop", "movestart", "moveend", "moving", "dragstart", "dragend", "dragging"]; for (var T = 0; T < e.length; T++) { jV.on(e[T], jT) } }, forceEnableEarth: function () { this.config.forceEnableEarth = true; this.config.enableEarth = cZ.ifEnableEarth(true); this.dispatchEvent(new fy("forceenableearth")); return this.config.enableEarth }, setLock: function (e) { if (this.mapType === BMAP_EARTH_MAP) { this._earth.setLock(e) } this._lock = e }, getLock: function () { if (this.mapType === BMAP_EARTH_MAP) { return this._earth.getLock() } return this._lock }, getEarth: function () { return this._earth }, isSupportEarth: function () { return this.config.enableEarth }, isCanvasMap: function () { return !!(this._renderType === "canvas" && this.getMapType() !== "B_EARTH_MAP") }, getCanvasMapCoordByUid: function (jU) { if (this._renderType === "webgl") { var jV = this.tileMgr.tileLayers; for (var jT = 0; jT < jV.length; jT++) { if (jV[jT].labelProcessor) { return jV[jT].labelProcessor.getLabelByUid(jU, "") } } return null } var e = this.canvas2dMapMgr._labelClick; var T = e.findLabelByUid(jU); return T ? new ct(T.iconPos.geoX, T.iconPos.geoY) : null }, loadBizData: function (i) { var e = new fy("onloadbizdata"); e.data = i; this.dispatchEvent(e) }, unloadBizData: function () { var e = new fy("onunloadbizdata"); this.dispatchEvent(e) }, zoomIn: function (e) { this.setZoomIn(this.zoomLevel + 1, { zoomCenter: e }) }, zoomOut: function (e) { this.setZoomIn(this.zoomLevel - 1, { zoomCenter: e }) }, setMaxZoom: function (e) { if (this._renderType === "webgl") { this.config.maxZoom = e <= 21 ? e : 21 } else { this.config.maxZoom = e <= 19 ? e : 19 } }, setMinZoom: function (e) { this.config.minZoom = e >= 3 ? e : 3 }, setCenterIn: function (e, i) { this.panToIn(e, i) }, getRenderType: function () { return this._renderType }, getSolarInfo: function (jT) { jT = jT || this._initDate; var T = fl(jT); var e = iS.convertLL2MC(new ct(T[0], T[1])); var j1 = e.latLng; var jW = bw.Projection.convertMC2LL(this.centerPoint); var jY = jT.getUTCHours(); var j0 = jY + 24 * jW.lng / 360; var jZ = j0 - 12; var jX = jZ * 60 * 0.25; var jV = Math.asin(Math.sin(ik(jW.lat)) * Math.sin(ik(j1.lat)) + Math.cos(ik(jW.lat)) * Math.cos(ik(j1.lat)) * Math.cos(ik(jX))); var jU = Math.asin(Math.sin(ik(jX)) * Math.cos(ik(j1.lat)) / Math.cos(jV)); var i = "north"; if (jW.lat < j1.lat) { i = "south" } return { zenith: e, solarAltitude: jV, solarAzimuth: jU, centerPosition: i, position: e } }, setDisplayOptions: function (T) { if (!T) { return } for (var e in this._displayOptions) { if (this._displayOptions.hasOwnProperty(e)) { if (typeof T[e] === "boolean" || (e === "skyColors" && typeof T.skyColors === "object") || (e === "labelMargin" && typeof T.labelMargin === "number")) { this._displayOptions[e] = T[e] } } } var i = this.getMapType(); if (i === fg.NORMAL) { this.fire(new fy("ondisplayoptions_changed")) } else { if (i === fg.EARTH && this._earth) { this._earth.fire(new fy("ondisplayoptions_changed")) } } }, getHorizonPosY: function (e) { if (!e || !this._webglMapCamera) { return null } var i = this._webglMapCamera.fromMCToScreenPixel(e.lng, e.lat, { heading: 0 }); return i.y }, getIndoorInfo: function () { if (!this._indoorMgr) { return } return this._indoorMgr.getData() }, showIndoor: function (e, T) { var i = new fy("onindoor_status_changed"); i.uid = e; i.floor = T; this.fire(i) }, addAreaSpot: function (e, T) { if (!e || e.length === 0) { return } T = T || {}; this.areaSpots = this.areaSpots || {}; var i = T.id || ("sp" + (this.temp.spotsGuid++)); this.areaSpots[i] = { spot: e, userData: T.userData }; var jT = this; gO.load("hotspot", function () { jT._asyncRegister() }); return i }, getAreaSpot: function (e) { if (this.areaSpots && this.areaSpots[e]) { return this.areaSpots[e] } return null }, removeAreaSpot: function (e) { if (!e || !this.areaSpots[e]) { return } delete this.areaSpots[e] }, clearAreaSpots: function () { this.areaSpots = {} }, resetSpotStatus: function () { this.fire(new fy("onspot_status_reset")) }, hightlightSpotByUid: function (e, T) { var i = new fy("onspot_highlight"); i.uid = e; i.tilePosStr = T; this.fire(i) }, setZoomIn: function (i, e) { e = e || {}; this.zoomTo(i, e.zoomCenter || null, e) }, restrictBounds: function (e) { if (e instanceof hJ) { this.config.restrictBounds = e; this.restrictCenter(this.getCenterIn()); this.fire(new fy("oncenter_changed")) } }, getCurrentMaxTilt: function () { var e = this.zoomLevel; if (this.mapType === "B_EARTH_MAP") { return hv.MAX_DRAG_TILT_L2 } if (this.config.restrictCenter === false) { return hv.MAX_DRAG_TILT } if (e >= 19) { return hv.MAX_DRAG_TILT } else { if (e <= 18) { if (e < this._enableTiltZoom) { if (e >= this._enableTiltZoom - 2) { return (1 - (this._enableTiltZoom - e) / 2) * hv.MAX_DRAG_TILT_L2 } return 0 } return hv.MAX_DRAG_TILT_L2 } else { return (hv.MAX_DRAG_TILT - hv.MAX_DRAG_TILT_L2) * (e - 18) + hv.MAX_DRAG_TILT_L2 } } }, worldSize: function (i) { var e = i || this.zoomLevel; return hv.WORLD_SIZE_MC / this.getZoomUnits(e) }, setTrafficOn: function (e) { if (e && Number(e) > 1) { jm.setZIndex(Number(e)) } this.addTileLayer(jm) }, setTrafficOff: function () { this.removeTileLayer(jm) }, showOverlayContainer: function () { this.setDisplayOptions({ overlay: true }) }, hideOverlayContainer: function () { this.setDisplayOptions({ overlay: false }) }, addLabelsToMapTile: function (jW, jV) { for (var jT = 0; jT < jW.length; jT++) { if (typeof jW[jT].type === "undefined") { jW[jT].type = "fixed" } if (typeof jW[jT].rank !== "number") { jW[jT].rank = 50000 } jW[jT].pt = jW[jT].position; jW[jT].custom = true; jW[jT].processedInZoom = 0; var T = false; for (var e = 0; e < this._customTileLabels.length; e++) { if (this._customTileLabels[e].uid === jW[jT].uid) { T = true; break } } if (!T) { this._customTileLabels.push(jW[jT]) } } var jU = new fy("onadd_tile_labels"); if (jV && jV instanceof dY) { jU.data = jW; jU.index = jV.layer.drawIndex; jU.model = "mvt" } this.dispatchEvent(jU) }, removeLabelsFromMapTile: function (jU, jT, T) { var jW = new fy("onremove_tile_labels"); if (jT && T) { jW.data = jU; jW.index = jT; jW.model = T } else { for (var jV = 0; jV < jU.length; jV++) { for (var e = 0; e < this._customTileLabels.length; e++) { if (this._customTileLabels[e].uid === jU[jV]) { this._customTileLabels.splice(e, 1) } } } } this.dispatchEvent(jW) }, clearLabels: function (T, i) { var e = new fy("onclear_labels"); if (T && i) { e.data = []; e.index = T; e.model = i } else { this._customTileLabels.length = 0 } this.dispatchEvent(e) }, loadMapStyleFiles: function (jV, e) { this.customLoaded = false; var T = this.config.style; var jU = this.config.styleUrl; var jT = this; this._setTextRenderType(); if (typeof T === "string" && !jU) { if (bw["FeatureStyle" + T]) { this.customLoaded = true; jT.fire(new fy("onstyle_loaded")); jV(); return } bw["FeatureStyle" + T] = window.FeatureStyle; bw["iconSetInfo" + T] = window.iconSetInfo_high; bw.indoorStyle = window.indoorStyle; gA.load(B.getMapStyleFiles(T), function () { if (jT.config.style === T) { bw["FeatureStyle" + T] = window.FeatureStyle; bw["iconSetInfo" + T] = window.iconSetInfo_high; bw.indoorStyle = window.indoorStyle; jT.customLoaded = true; jT.fire(new fy("onstyle_loaded")); jV() } }) } else { var i = T; u.init(jT); u.getStyleJson(i, function (jX) { var j2 = eD; var j4 = bw.getGUID("custom"); jT.config.mapStyleId = j4; var j0 = {}; eN.extend(j0, jX); var jY = Math.floor(jT.getZoom()); var j1; window["styleCbk_" + j4] = function (j5, j6) { if (j6 !== j1) { return } if (typeof j5 === "string") { j5 = JSON.parse(j5) } u.onStyleDataBack(j5, jY, j4, j0, j2, bw["customStyleInfo_" + j4]); jT.customLoaded = true; jT.fire(new fy("onstyle_loaded")); jV() }; bw["customStyleInfo_" + j4] = { zoomRegion: {}, zoomStyleBody: [], zoomFrontStyle: {} }; var j3 = u.getStyleUrl(jX, j2, "styleCbk_" + j4, jY, e, bw["customStyleInfo_" + j4]); var jW = j3.split("?")[0]; j1 = j3.split("?")[1]; if (jU) { jW = jU; j1 = jW.split("?")[1] } if (!bw.iconSetInfoCustom) { var jZ = B.getMapStyleFiles("default"); jZ.splice(1, 1); gA.load(jZ, function () { bw.iconSetInfoCustom = window.iconSetInfo_high; bw.indoorStyle = window.indoorStyle; if (jW.indexOf("jsonp") > "-1") { gA.load(jW) } else { bw["customStyleInfo_" + j4].xhr = hQ.post(jW, j1, window["styleCbk_" + j4]) } }) } else { if (jW.indexOf("jsonp") > "-1") { gA.load(jW) } else { bw["customStyleInfo_" + j4].xhr = hQ.post(jW, j1, window["styleCbk_" + j4]) } } }) } }, getFeatureStyleTags: function () { var e = []; var jU = Object.keys(bw); for (var jT = 0; jT < jU.length; jT++) { var T = jU[jT]; if (T.indexOf("FeatureStyle") > -1 && bw[T]) { e.push(T) } } return e }, setCopyrightOffset: function (jT, i) { var T = new fy("oncopyrightoffsetchange", { logo: jT, cpy: i }); this.dispatchEvent(T) }, _setTextRenderType: function (e) { if (e) { this.config.textRenderType = e; return } if (this.config.textRenderType !== null) { return } if (bT()) { this.config.textRenderType = "canvas" } else { if (typeof this.config.style === "string") { this.config.textRenderType = "image" } else { this.config.textRenderType = "canvas" } } }, destroy: function () { this._destroyed = true; this.disableAutoResize(); this.fire(new fy("ondestroy")); var e = this.config.mapStyleId || 0; delete bw["customStyleInfo_" + e]; bw.BMAP_INSTANCES && (bw.BMAP_INSTANCES -= 1); if (!bw.BMAP_INSTANCES) { this.destroyStyle() } this.config = {}; this.clearSpots(); this._webGLStateId && dJ.WebGLState.remove(this._webGLStateId); this.container.onselectstart = null; this.container.innerHTML = ""; this.container.style.backgroundImage = ""; this.container = null; this.maskLayer = null; this.platform = null; u.map = null; var i = this; setTimeout(function () { i._listeners = null; i._bounds = null; i.tileLabels = []; i._overlayMgrGL = null; i._overlayMgr = null; i._mapIcon = null; if (i._mouse) { i._mouse._drag = null; i._mouse = null } i.deepZoom = null; i.tileMgr = null; i.indexToRgb = null; i.toFormatCoords = null; i._webglMapCamera = null; i._normalLayerMgr = null; i._webglPainter = null; i._webglMapScene = null; i._indoorMgr = null; if (i._renderType === "webgl") { i._spotsMgr = null; i._workerMgr = null; i.jobScheduler = null; i.benchmark = null; i._featureMgr = null; i._labelProcessor = null; i._customLabelMgr = null } if (i.cpyCtrl) { i.cpyCtrl._map = null; i.cpyCtrl = null } i.logoCtrl = null; i._spotDataOnCanvas = null; i._navigationCtrl = null; window.FeatureStyle = null; window.iconSetInfo_high = null; window.indoorStyle = null; window._indoorMgr = null }, 600) }, destroyStyle: function () { var e = []; var jU = Object.keys(bw); for (var jT = 0; jT < jU.length; jT++) { var T = jU[jT]; if (T.indexOf("FeatureStyle") > -1 || T.indexOf("iconSetInfo") > -1 || T.indexOf("indoorStyle") > -1) { e.push(T) } } for (var jT = 0; jT < e.length; jT++) { delete bw[e[jT]] } }, centerAndZoom: function (e, jW, T) { if (Object.prototype.toString.call(jW) !== "[object Undefined]") { jW = parseInt(jW, 10) } if (typeof e === "string") { var jT = this; var jV = new be(); jV.getPoint(e, function (jX) { e = jX; var jY = iS.convertLL2MC(e); jT.centerAndZoomIn(jY, jW, T) }, e) } else { if (this.config.coordType === BMAP_COORD_GCJ02) { var jU = ic(e, 3); var i = iS.convertLL2MC(jU) } else { var i = iS.convertLL2MC(e) } this.centerAndZoomIn(i, jW, T) } }, pointToPixel: function (e, T) { var i = iS.convertLL2MC(e); var jT = {}; eN.extend(jT, T); if (jT && jT.center) { jT.center = iS.convertLL2MC(jT.center) } return this.pointToPixelIn(i, jT) }, pixelToPoint: function (T, i) { var jT = {}; eN.extend(jT, i); if (jT && jT.center) { jT.center = iS.convertLL2MC(jT.center) } var e = this.pixelToPointIn(T, jT); return iS.convertMC2LL(e) }, pointToOverlayPixel: function (e, T) { var i = iS.convertLL2MC(e); var jT = {}; eN.extend(jT, T); if (jT && jT.center) { jT.center = iS.convertLL2MC(jT.center) } return this.pointToOverlayPixelIn(i, jT) }, overlayPixelToPoint: function (T, i) { var jT = {}; eN.extend(jT, i); if (jT && jT.center) { jT.center = iS.convertLL2MC(jT.center) } var e = this.overlayPixelToPointIn(T, jT); return iS.convertMC2LL(e) }, setViewport: function (T, jT) { var e; if (T && T.center) { e = {}; eN.extend(e, T); e.center = iS.convertLL2MC(e.center) } else { e = []; for (var jU = 0; jU < T.length; jU++) { e[jU] = iS.convertLL2MC(T[jU]) } } this.setViewportIn(e, jT) }, getViewport: function (jV, jT) { var T; if (jV && jV.length) { T = []; for (var jU = 0; jU < jV.length; jU++) { T[jU] = iS.convertLL2MC(jV[jU]) } } else { if (jV instanceof hJ) { T = new hJ(iS.convertLL2MC(jV.getSouthWest()), iS.convertLL2MC(jV.getNorthEast())); T.setMinMax() } } var e = this.getViewportIn(T, jT); e.center = iS.convertMC2LL(e.center); return e }, getDistance: function (jU, T) { var i = iS.convertLL2MC(jU); var jT = iS.convertLL2MC(T); var e = this.getDistanceIn(i, jT); return e }, setCenter: function (e, T) { if (typeof e === "string") { var jT = this; var jV = new be(); jV.getPoint(e, function (jW) { e = jW; var jX = iS.convertLL2MC(e); jT.setCenterIn(jX, T) }, e) } else { if (this.config.coordType === BMAP_COORD_GCJ02) { var jU = ic(e, 3); var i = iS.convertLL2MC(jU) } else { var i = iS.convertLL2MC(e) } this.setCenterIn(i, T) } }, setZoom: function (T, e) { var i = {}; eN.extend(i, e); if (i && i.zoomCenter) { i.zoomCenter = iS.convertLL2MC(i.zoomCenter) } this.setZoomIn(T, i) }, flyTo: function (e, jU, T) { if (this.config.coordType === BMAP_COORD_GCJ02) { var jT = ic(e, 3); var i = iS.convertLL2MC(jT) } else { var i = iS.convertLL2MC(e) } this.flyToIn(i, jU, T) }, panTo: function (e, T) { var i = iS.convertLL2MC(e); this.panToIn(i, T) }, getCenter: function () { var e = this.getCenterIn(); if (this.config.coordType === BMAP_COORD_GCJ02) { var i = iS.convertMC2LL(e); return ex(i) } return iS.convertMC2LL(e) }, getBounds: function () { var e = this.getBoundsIn(); var i = new hJ(iS.convertMC2LL(e.getSouthWest()), iS.convertMC2LL(e.getNorthEast())); return i }, setMapStyleV2: function (e) { if (typeof e === "string") { this._setTextRenderType("image") } else { this._setTextRenderType("canvas") } this.setOptions({ style: e }) }, startViewAnimation: function (T) { var e = T._options.delay; var i = this; setTimeout(function () { T._start(i) }, e) }, pauseViewAnimation: function (e) { e._pause(this) }, continueViewAnimation: function (e) { e._continue(this) }, cancelViewAnimation: function (e) { e._cancel(this) }, getMapScreenshot: function () { return this._webglMapScene._painter._canvas.toDataURL() } }); window.BMAP_NORMAL_MAP = "B_NORMAL_MAP"; window.BMAPGL_NORMAL_MAP = "B_NORMAL_MAP"; window.BMAP_SATELLITE_MAP = "B_SATELLITE_MAP"; window.BMAP_HYBRID_MAP = "B_STREET_MAP"; window.BMAP_EARTH_MAP = "B_EARTH_MAP"; window.BMAP_NONE_MAP = "B_NONE_MAP"; window.BMAP_COORD_MERCATOR = 1; window.BMAP_COORD_GCJ02 = 2; window.BMAP_SYS_DRAWER = 0; window.BMAP_SVG_DRAWER = 1; window.BMAP_VML_DRAWER = 2; window.BMAP_CANVAS_DRAWER = 3; var u = { environment: "jsapi", map: null, ontilesloaded: false, onstyle_loaded: false, init: function (i) { var e = this; e.map = i; this.changeCopyright(); this.setEnvironment(e.map.config.style); this.resetEventListener() }, resetEventListener: function () { var e = this; this.ontilesloaded = false; this.onstyle_loaded = false; e.map.addEventListener("ontilesloaded", e.checkLoadedStatus); e.map.addEventListener("onstyle_loaded", e.checkLoadedStatus) }, checkLoadedStatus: function (i) { u[i.type] = true; if (u.ontilesloaded && u.onstyle_loaded) { this.dispatchEvent(new fy("onstylechangetilesloaded")); this.removeEventListener("ontilesloaded", u.checkLoadedStatus); this.removeEventListener("onstyle_loaded", u.checkLoadedStatus) } }, changeCopyright: function () { var e = this; if (e.map.cpyCtrl) { e.map.cpyCtrl.hide(); if (e.environment !== "customEditor") { e.map.setCopyrightOffset(new iJ(1, 1)) } } else { e.map.addEventListener("oncopyrightaddend", function () { e.map.cpyCtrl.hide(); if (e.environment !== "customEditor") { e.map.setCopyrightOffset(new iJ(1, 1)) } }) } }, setEnvironment: function (e) { if (e.customEditor) { this.environment = "customEditor"; aV.map = this.map } else { if (e.sharing) { this.environment = "sharing" } else { if (e.preview) { this.environment = "preview" } else { this.environment = "jsapi" } } } }, getStyleJson: function (jT, jV) { var jU = this; if (jT.styleJson) { jV && jV(jT.styleJson) } else { if (jT.styleId) { var i = jT.styleId; var e = (Math.random() * 100000).toFixed(0); bw["_cbk_si_phpui" + e] = function (jX) { var jW = []; if (jX.result && jX.result["error"] === 0 && jX.content && jX.content["status"] === 0) { jW = jU.parseJson(jX.content["data"]["json"]); jV && jV(jW) } else { jV && jV("default") } }; bw["_cbk_si_api" + e] = function (jX) { var jW = []; if (jX.status === 0) { if (jX.info) { jW = jU.parseJson(jX.info["json"]) } else { jW = jU.parseJson(jX.data["json"]) } jV && jV(jW) } else { jV && jV("default") } }; var T = ""; switch (this.environment) { case "jsapi": T = el.apiHost + "/?qt=custom_map&v=3.0&style_id=" + i + "&type=publish&ak=" + eD; T += "&callback=" + fi + "._cbk_si_phpui" + e; break; case "sharing": T += "/apiconsole/custommap/getSharingJson"; T += "?styleid=" + i + "&type=edit"; T += "&ck=" + fi + "._cbk_si_api" + e; break; case "preview": T += "/apiconsole/custommap/getJson"; T += "?styleid=" + i + "&type=edit"; T += "&ck=" + fi + "._cbk_si_api" + e; break }gA.load(T) } else { jV && jV("default") } } }, parseJson: function (T) { if (T === null || T === "") { return [] } var i = { t: "featureType", e: "elementType", v: "visibility", c: "color", o: "opacity", l: "lightness", s: "saturation", w: "weight", z: "level", h: "hue", f: "fontsize", zri: "curZoomRegionId", zr: "curZoomRegion" }; var jU = { all: "all", g: "geometry", "g.f": "geometry.fill", "g.s": "geometry.stroke", l: "labels", "l.t.f": "labels.text.fill", "l.t.s": "labels.text.stroke", "l.t": "labels.text", "l.i": "labels.icon", "g.tf": "geometry.topfill", "g.sf": "geometry.sidefill" }; var jT = T.split(","); var e = jT.map(function (jY) { var jX = jY.split("|").map(function (j4) { var j2 = i[j4.split(":")[0]]; var j1 = (jU[j4.split(":")[1]] ? jU[j4.split(":")[1]] : j4.split(":")[1]); switch (j1) { case "poi": j1 = "poilabel"; break; case "districtlabel": j1 = "districtlabel"; break }var j3 = {}; j3[j2] = j1; return j3 }); var jV = jX[0]; var j0 = 1; if (jX[1]["elementType"]) { j0 = 2; eN.extend(jV, jX[1]) } var jZ = {}; for (var jW = j0; jW < jX.length; jW++) { eN.extend(jZ, jX[jW]) } return eN.extend(jV, { stylers: jZ }) }); return e }, getStyleUrl: function (i, jW, jU, T, jT, jY) { this.styleJson = i; var e = B.apiHost + "/custom/v2/mapstyle?version=" + 4 + "&ak=" + jW + "&qt=custom_v2&is_all=true&is_new=1&"; var jX = this.styleJson2styleStringV2(i, T, jY); e += "styles=" + encodeURIComponent(jX); if (jT && jT.os && jT.sv) { e += "&os=" + jT.os + "&sv=" + jT.sv } var jV = new Date()["getTime"](); e += "&timeStamp=" + jV; e += i4()(e); return e }, styleJson2styleStringV2: function (e, j1, jX) { var j2 = { featureType: "t", elementType: "e", visibility: "v", color: "c", opacity: "o", lightness: "l", saturation: "s", weight: "w", level: "z", hue: "h", fontsize: "f" }; var j3 = { all: "all", geometry: "g", "geometry.fill": "g.f", "geometry.stroke": "g.s", labels: "l", "labels.text.fill": "l.t.f", "labels.text.stroke": "l.t.s", "labels.text": "l.t", "labels.icon": "l.i", "geometry.topfill": "g.tf", "geometry.sidefill": "g.sf" }; var j4 = []; for (var jT = this.map.getMinZoom(); jT <= this.map.getMaxZoom(); jT++) { jX.zoomFrontStyle[jT] = {} } jX.zoomFrontStyle.main = {}; var T = false; for (var jT = 0; !!e[jT]; jT++) { var j0 = e[jT]; if (this.isOnlyZoomStyler(j0)) { continue } j1 = this.getFrontZoom(j0, j1); if ((j0.featureType === "land" || j0.featureType === "all" || j0.featureType === "background") && typeof j0.elementType === "string" && (j0.elementType === "geometry" || j0.elementType === "geometry.fill" || j0.elementType === "all") && j0.stylers && !T) { if (j0.stylers["color"]) { jX.bmapLandColor = j0.stylers["color"] } if (j0.stylers["opacity"]) { jX.bmapLandColor = j0.stylers["opacity"] } if (j0.stylers["visibility"] && j0.stylers["visibility"] === "off") { jX.bmapLandColor = "#00000000" } if (j0.featureType === "land") { T = true } } if (j0.featureType === "building" && typeof j0.elementType === "string" && j0.elementType === "geometry.fill") { jX.buildingFill = true } if (j0.featureType === "roadarrow" && j0.elementType === "labels.icon" && j0.stylers) { var jY = j0.stylers["visibility"]; jX.zoomFrontStyle[j1]["bmapRoadarrowVisibility"] = jY } var jU = {}; eN.extend(jU, j0); var jW = jU.stylers; delete jU.stylers; eN.extend(jU, jW); var jV = []; for (var jZ in j2) { if (jU[jZ]) { if (this.isEditorZoomKeys(jZ)) { continue } if (jZ === "elementType") { jV.push(j2[jZ] + ":" + j3[jU[jZ]]) } else { switch (jU[jZ]) { case "poilabel": jU[jZ] = "poi"; break; case "districtlabel": jU[jZ] = "label"; break }jV.push(j2[jZ] + ":" + jU[jZ]) } } } if (jV.length > 2) { j4.push(jV.join("|")) } } return j4.join(",") }, getFrontZoom: function (i, e) { var T = i.stylers["level"]; if (T === undefined) { return "main" } else { return parseInt(T, 10) } }, isZoomConfig: function (e) { var i = e.stylers["level"]; if (i === undefined) { return false } else { return true } }, isOnlyZoomStyler: function (e) { var i = {}; eN.extend(i, e.stylers); delete i.curZoomRegionId; delete i.curZoomRegion; delete i.level; if (eN.isEmptyObject(i)) { return true } else { return false } }, isSelectZoom: function (i, e) { var T = i.stylers["level"]; if (T === undefined) { return true } else { if (T === e + "") { return true } else { return false } } }, isEditorZoomKeys: function (e) { var i = { curZoomRegionId: true, curZoomRegion: true }; if (i[e]) { return true } else { return false } }, getZoomRegion: function (e, i) { var jT = e.stylers["level"]; var T = {}; eN.extend(T, i); if (jT === undefined) { return T } else { T[parseInt(jT, 10)] = true; return T } }, onStyleDataBack: function (jU, e, i, jT, jW, T) { if (jU.status !== 0) { return } if (jU.data.style.length === 3) { if (!T.baseFs) { T.baseFs = jU.data.style } bw.StyleBody = jU.data.style[2] } else { bw.StyleBody = jU.data.style } var jV = T.baseFs; bw["FeatureStyle" + i] = jV; this.updateFrontFeatureStyle(T) }, updateFrontFeatureStyle: function (T) { if (T.zoomFrontStyle.main["bmapRoadarrowVisibility"]) { for (var e = this.map.getMinZoom(); e <= this.map.getMaxZoom(); e++) { if (!T.zoomFrontStyle[e]["bmapRoadarrowVisibility"]) { T.zoomFrontStyle[e]["bmapRoadarrowVisibility"] = T.zoomFrontStyle.main["bmapRoadarrowVisibility"] } } } } }; var aV = { map: null, labelCache: {}, calcDrawMc: function (T, i, e) { var jT = []; switch (i) { case "fill": jT = this.calcFill(T, e); break; case "line": break; case "building3d": jT = this.calcBuilding3d(T, e); break }return jT }, calcFill: function (jU, T) { var jV = []; for (var jT = 0; jT < jU.length; jT = jT + 5) { var e = this.coordToMc({ x: jU[jT], y: jU[jT + 1] }, T.row, T.col, T.mercatorSize, T.baseTileSize); jV.push(e[0], e[1]) } return jV }, calcLine: function (jU, T) { var jV = []; var jW = new Int16Array(jU.buffer); for (var jT = 0; jT < jW.length; jT = jT + 10) { var e = this.coordToMc({ x: jW[jT] / 10, y: jW[jT + 1] / 10 }, T.row, T.col, T.mercatorSize, T.baseTileSize); jV.push(e[0], e[1]) } return jV }, calcBuilding3d: function (jV, T) { var jW = []; var jT = {}; for (var jU = 0; jU < jV.length / 2; jU = jU + 7) { if (jV[jU] === jV[jU - 7] && jV[jU + 1] === jV[jU - 6]) { continue } if (jT[jV[jU].toString() + jV[jU + 1].toString()]) { continue } jT[jV[jU].toString() + jV[jU + 1].toString()] = true; var e = this.coordToMc({ x: jV[jU], y: jV[jU + 1] }, T.row, T.col, T.mercatorSize, T.baseTileSize); jW.push(e[0], e[1]) } return jW }, coordToMc: function (jU, jT, e, i, T) { return [jU.x * (i / T) + e * i, jU.y * (i / T) + jT * i] }, addDrawIntoAreaSpots: function (e, jU) { if (u.environment !== "customEditor") { return } if (!jU.styleIds) { return } for (var T = 0; T < jU.styleIds.length; T++) { var jX = 0; if (T > 0) { jX = jU.verticesLength[T - 1] } end = jU.verticesLength[T]; var jV = []; var jT = ""; if (jU.vertex) { jV = jU.vertex; jT = "building3d" } else { if (jU.data[0]) { jV = jU.data[0]; jT = jU.type } else { continue } } var jW = this.calcDrawMc(jV.slice(jX, end), jT, e); this.map.addAreaSpot(jW, { userData: { styleId: jU.styleIds[T], type: "mapstyle" } }) } }, addLabelIntoAreaSpots: function (e) { if (u.environment !== "customEditor") { return } for (var jU = 0; jU < e.length; jU++) { var jV = e[jU]; for (var jT = 0; jT < jV.fixedLabel.length; jT++) { var T = jV.fixedLabel[jT]; if (!T._mcBds) { continue } var jW = [T._mcBds[0].lng, T._mcBds[0].lat, T._mcBds[0].lng, T._mcBds[1].lat, T._mcBds[1].lng, T._mcBds[1].lat, T._mcBds[1].lng, T._mcBds[0].lat]; if (!this.labelCache[jW.join()]) { this.labelCache[jW.join()] = true; this.map.addAreaSpot(jW, { userData: { styleId: T.styleId, type: "mapstyle", name: T.name } }) } } } } }; function ch(i, e, jT, T) { this.cx = 3 * i; this.bx = 3 * (jT - i) - this.cx; this.ax = 1 - this.cx - this.bx; this.cy = 3 * e; this.by = 3 * (T - e) - this.cy; this.ay = 1 - this.cy - this.by; this.p1x = i; this.p1y = T; this.p2x = jT; this.p2y = T } ch.prototype.sampleCurveX = function (e) { return ((this.ax * e + this.bx) * e + this.cx) * e }; ch.prototype.sampleCurveY = function (e) { return ((this.ay * e + this.by) * e + this.cy) * e }; ch.prototype.sampleCurveDerivativeX = function (e) { return (3 * this.ax * e + 2 * this.bx) * e + this.cx }; ch.prototype.solveCurveX = function (e, jY) { if (typeof jY === "undefined") { jY = 0.000001 } var jX; var jW; var jU; var T; var jT; for (jU = e, jT = 0; jT < 8; jT++) { T = this.sampleCurveX(jU) - e; if (Math.abs(T) < jY) { return jU } var jV = this.sampleCurveDerivativeX(jU); if (Math.abs(jV) < 0.000001) { break } jU = jU - T / jV } jX = 0; jW = 1; jU = e; if (jU < jX) { return jX } if (jU > jW) { return jW } while (jX < jW) { T = this.sampleCurveX(jU); if (Math.abs(T - e) < jY) { return jU } if (e > T) { jX = jU } else { jW = jU } jU = (jW - jX) * 0.5 + jX } return jU }; ch.prototype.solve = function (e, i) { return this.sampleCurveY(this.solveCurveX(e, i)) }; var go = {}; function fo(T) { var e = { duration: 1000, fps: 30, delay: 0, transition: go.linear, dropLastAnimation: false }; if (T) { for (var jT in T) { e[jT] = T[jT] } } if (T.beginTime) { this._beginTime = T.beginTime } this._callbacks = []; this._options = e; if (e.delay) { var jU = this; setTimeout(function () { jU._doStart() }, e.delay) } else { this._doStart() } this._pauseTime = 0 } fo.INFINITE = "INFINITE"; fo.prototype._doStart = function () { if (this._isPausing) { var e = performance.now() || new Date().getTime(); this._pauseTime += e - this._isPausing; this._isPausing = undefined } if (window.requestAnimationFrame) { var i = this; i._timer = window.requestAnimationFrame(function (T) { i._loop(T) }) } else { this._beginTime = new Date().getTime(); if (this._options.duration === fo.INFINITE) { this._endTime = null } else { this._endTime = this._beginTime + this._options.duration } this._loop() } }; fo.prototype._loop = function (jT) { var jW = this; jT = jT || new Date().getTime(); jT = jT - this._pauseTime; if (!this._beginTime) { this._beginTime = jT } if (!this._endTime && typeof this._options.duration === "number") { this._endTime = this._beginTime + this._options.duration } if (jW._endTime !== null && jT >= jW._endTime) { if (jW._options.dropLastAnimation === false) { jW._options.render(jW._options.transition(1), 1, jT) } if (typeof jW._options.finish === "function") { jW._options.finish(jT, this) } for (var jV = 0, e = jW._callbacks.length; jV < e; jV++) { jW._callbacks[jV]() } return } var jU; if (typeof jW._options.duration === "number") { jU = (jT - jW._beginTime) / jW._options.duration; jW.schedule = jW._options.transition(jU) } else { jU = jT - jW._beginTime; jW.schedule = 0 } jW._options.render(jW.schedule, jU, jT); if (!jW.terminative) { if (window.requestAnimationFrame) { jW._timer = requestAnimationFrame(function T(i) { jW._loop(i) }) } else { jW._timer = setTimeout(function () { jW._loop() }, 1000 / jW._options.fps) } } }; fo.prototype.stop = function (i, e) { this.terminative = true; if (this._timer) { if (window.cancelAnimationFrame) { cancelAnimationFrame(this._timer) } else { clearTimeout(this._timer) } this._timer = null; if (typeof this._options.onStop === "function") { this._options.onStop(e) } } if (i) { this._endTime = this._beginTime; this._loop() } }; fo.prototype.pause = function () { if (!this._isPausing) { this.stop(); this.terminative = undefined; this._isPausing = performance.now() || new Date().getTime() } }; fo.prototype.cancel = function () { this.stop() }; fo.prototype.append = function (e) { this._callbacks.push(e); return this }; go = { _p1: 1, _p2: 1 * 1.525, linear: function (e) { return e }, reverse: function (e) { return 1 - e }, easeInQuad: function (e) { return e * e }, easeInCubic: function (e) { return Math.pow(e, 3) }, easeInBiquad: function (e) { return Math.pow(e, 4) }, easeInBack: function (e) { return e * e * ((go._p1 + 1) * e - go._p1) }, easeOutQuad: function (e) { return -(e * (e - 2)) }, easeOutCubic: function (e) { return Math.pow((e - 1), 3) + 1 }, easeOutBiquad: function (e) { return 1 - Math.pow((e - 1), 4) }, easeOutBack: function (e) { return ((e = e - 1) * e * ((go._p1 + 1) * e + go._p1) + 1) }, easeInOutQuad: function (e) { if (e < 0.5) { return e * e * 2 } else { return -2 * (e - 2) * e - 1 } }, easeInOutCubic: function (e) { if (e < 0.5) { return Math.pow(e, 3) * 4 } else { return Math.pow(e - 1, 3) * 4 + 1 } }, easeInOutBiquad: function (e) { if (e < 0.5) { return Math.pow(e, 4) * 8 } else { return 1 - (Math.pow(e - 1, 4) * 8) } }, easeInOutSine: function (e) { return (1 - Math.cos(Math.PI * e)) / 2 } }; go.ease = (function () { var e = new ch(0.4, 0, 0.6, 1); return function (i) { return e.solve(i) } })(); go["ease-in"] = go.easeInQuad; go["ease-out"] = go.easeOutQuad; var df = { start: function (jZ) { var jT = jZ.el; var e = jZ.style; var i = jZ.startValue; var jW = jZ.endValue; var jU = jZ.duration || 1400; var jV = jZ.transition || go.linear; var jY = jZ.callback; var jX = jW - i; var T = jZ.unit || ""; return new fo({ fps: 60, duration: jU, transition: jV, render: function (j0) { jT.style[e] = i + jX * j0 + T }, finish: function () { jY && jY() } }) } }; function q(jU, T) { c1.call(this); this.keyframes = jU; var e = { duration: 1000, delay: 0, transition: go.linear, interation: 1 }; if (T) { for (var jT in T) { e[jT] = T[jT] } } this._options = e } q.inherits(c1, "ViewAnimation"); q.prototype._start = function (jV) { var T = this; T.map = jV; var jU = new fy("onanimationstart"); T.dispatchEvent(jU); this._initStatus(T.map); var jT = this._options.duration; var i = this._options.interation; var jW = this._options.transition; var jX = 0; T.poiStatus = T.map._displayOptions.poi; if (T.poiStatus) { T.map.setDisplayOptions({ poi: false }) } T.map.viewAnimationTime = new Date().getTime(); this.animation = new fo({ duration: jT, transition: jW, start: function (e) { }, render: function (jY, e) { if (jY === 0) { T._initStatus(T.map) } else { T._setViewByRate(jY) } }, finish: function (jZ, jY) { if (++jX < i || i === "INFINITE") { var j0 = new fy("onanimationiterations"); T.dispatchEvent(j0); delete jY._beginTime; delete jY._endTime; jY._doStart() } else { var j0 = new fy("onanimationend"); T.dispatchEvent(j0); delete T.map.viewAnimationTime; T.map.setDisplayOptions({ poi: T.poiStatus }) } } }) }; q.prototype._getTotalDuration = function (e, i) { if (e === fo.INFINITE) { return fo.INFINITE } else { return e * i } }; q.prototype._initStatus = function (e) { if (this.keyframes[0]) { e.setCenter(this.keyframes[0].center, { noAnimation: true }); e.setZoom(this.keyframes[0].zoom, { noAnimation: true }); e.setTilt(this.keyframes[0].tilt, { noAnimation: true }); e.setHeading(this.keyframes[0].heading, { noAnimation: true }) } }; q.prototype._setViewByRate = function (jT) { for (var e = 0; e < this.keyframes.length - 1; e++) { var jU = this.keyframes[e]; var T = this.keyframes[e + 1]; if (jT >= jU.percentage && jT < T.percentage) { this.map.setHeading(this._getHeadingDelta(jU, T, jT), { noAnimation: true }); this.map.setTilt(this._getTiltDelta(jU, T, jT), { noAnimation: true }); this.map.setCenter(this._getCenterDelta(jU, T, jT), { noAnimation: true }); this.map.setZoom(this._getZoomDelta(jU, T, jT), { noAnimation: true }) } } }; q.prototype._getHeadingDelta = function (T, i, e) { var jU = (e - T.percentage) / (i.percentage - T.percentage); var jT = T.heading + (i.heading - T.heading) * jU; return jT }; q.prototype._getTiltDelta = function (T, i, e) { var jU = (e - T.percentage) / (i.percentage - T.percentage); var jT = T.tilt + (i.tilt - T.tilt) * jU; return jT }; q.prototype._getCenterDelta = function (T, i, e) { var jU = (e - T.percentage) / (i.percentage - T.percentage); var jT = T.center.add(i.center.sub(T.center).mult(jU)); return jT }; q.prototype._getZoomDelta = function (jT, T, i) { var jU = (i - jT.percentage) / (T.percentage - jT.percentage); var e = jT.zoom + (T.zoom - jT.zoom) * jU; return e }; q.prototype._pause = function (e) { this.animation.pause() }; q.prototype._continue = function (e) { this.animation._doStart() }; q.prototype._cancel = function (T) { T.setDisplayOptions({ poi: this.poiStatus }); this.animation.cancel(); delete T.viewAnimationTime; var i = new fy("onanimationcancel"); this.dispatchEvent(i) }; var cD = undefined; var fj = { is64Bit: function () { if (/Windows/.test(navigator.userAgent)) { if (/Win64; x64/.test(navigator.userAgent)) { return true } else { if (/WOW64/.test(navigator.userAgent)) { return true } else { return false } } } return true }, isIOS112: function a3(e) { return /11_2/.test(navigator.userAgent) }, canUseWebAssembly: function (i) { if (cD !== undefined) { i && i(cD); return } if (window.WebAssembly && this.is64Bit()) { if (window.disableWebAssembly === true) { cD = false; i && i(cD) } else { if (!cp()) { cD = true; i && i(cD) } else { if (this.isIOS112()) { cD = false; i && i(cD) } else { var e = new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 133, 128, 128, 128, 0, 1, 96, 0, 1, 127, 3, 130, 128, 128, 128, 0, 1, 0, 4, 132, 128, 128, 128, 0, 1, 112, 0, 0, 5, 131, 128, 128, 128, 0, 1, 0, 1, 6, 129, 128, 128, 128, 0, 0, 7, 145, 128, 128, 128, 0, 2, 6, 109, 101, 109, 111, 114, 121, 2, 0, 4, 109, 97, 105, 110, 0, 0, 10, 138, 128, 128, 128, 0, 1, 132, 128, 128, 128, 0, 0, 65, 42, 11]); WebAssembly.instantiate(e).then(function (T) { cD = true; i && i(cD) }, function (T) { cD = false; i && i(cD) }) } } } } else { cD = false; i && i(cD) } } }; var aH = {}; bw.Utils = aH; function jK(e) { return e.style } function hL(i) { if (eN.Browser.ie > 0) { i.unselectable = "on"; i.selectstart = function () { return false }; i.onmousedown = function (T) { T.preventDefault(); return false } } else { var e = jK(i); e.MozUserSelect = "none"; e.WebkitUserSelect = "none"; i.addEventListener("mousedown", function (T) { T.preventDefault() }, false) } } function aR(e) { return e && e.parentNode && e.parentNode.nodeType !== 11 } function bI(i, e) { i.insertAdjacentHTML("beforeEnd", e); return i.lastChild } function fB(T, i) { var jT = document.createElement("div"); jT.innerHTML = i; var e = jT.childNodes[0]; return T.parentNode.insertBefore(e, T) } function ah(i) { i = i || window.event; i.stopPropagation ? i.stopPropagation() : i.cancelBubble = true } function c(i) { i = i || window.event; i.preventDefault ? i.preventDefault() : i.returnValue = false; return false } function g9(i) { ah(i); return c(i) } function gF() { var e = document.documentElement; var i = document.body; if (e && (e.scrollTop || e.scrollLeft)) { return [e.scrollTop, e.scrollLeft] } else { if (i) { return [i.scrollTop, i.scrollLeft] } else { return [0, 0] } } } function h6(jU) { if (!jU) { return } jU.onload = jU.onerror = null; var T = jU.attributes, jT, e, jV; if (T) { e = T.length; for (jT = 0; jT < e; jT += 1) { jV = T[jT].name; if (typeof jU[jV] === "function") { jU[jV] = null } } } T = jU.children; if (T) { e = T.length; for (jT = 0; jT < e; jT += 1) { h6(jU.children[jT]) } } } function fE(i, jW, jV) { var jU = jW.lng - jV.lng; var jT = jW.lat - jV.lat; if (jU === 0) { return Math.abs(i.lng - jW.lng) } if (jT === 0) { return Math.abs(i.lat - jW.lat) } var T = jT / jU; var e = jW.lat - T * jW.lng; return Math.abs(T * i.lng - i.lat + e) / Math.sqrt(T * T + 1) } function ce(i, e) { if (!i || !e) { return } return Math.round(Math.sqrt(Math.pow(i.x - e.x, 2) + Math.pow(i.y - e.y, 2))) } function ej(i, e) { if (!i || !e) { return 0 } return Math.round(Math.sqrt(Math.pow(i.lng - e.lng, 2) + Math.pow(i.lat - e.lat, 2))) } function e0(T, i) { var e = Math.round((T.x + i.x) / 2); var jT = Math.round((T.y + i.y) / 2); return new e8(e, jT) } function i2(e, T) { var i = []; T = T || function (jU) { return jU }; for (var jT in e) { i.push(jT + "=" + T(e[jT])) } return i.join("&") } function bU(T, i, jV) { var jW = document.createElement(T); if (jV) { jW = document.createElementNS(jV, T) } i = i || {}; for (var jT in i) { var jU = { "for": "htmlFor", "class": "cssClass" }[jT] || jT; if (jT === "style") { jW.style.cssText = i[jT]; continue } if (jT === "class") { eN.ac(jW, i[jT]); continue } if (jW.setAttribute) { jW.setAttribute(jU, i[jT]) } else { try { jW[jU] = i[jT] } catch (jW) { } } } return jW } function cd(e) { if (e.currentStyle) { return e.currentStyle } else { if (e.ownerDocument && e.ownerDocument.defaultView) { return e.ownerDocument.defaultView.getComputedStyle(e, null) } } } function bP(e) { return typeof e === "function" } function f0(e) { return e === void 0 } function jj(e, i) { return Object.prototype.hasOwnProperty.call(e, i) } function g(jU, jV) { if (f0(jU.length)) { for (var jT in jU) { if (jj(jU, jT)) { jV.call(null, jT, jU[jT]) } } } else { var T = jU.length; if (T) { for (var e = 0; e < T; e++) { jV.call(null, e, jU[e]) } } } } function ap(i, e) { if (!e) { return i } g(e, function (T, jT) { i[T] = jT }); return i } var gS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="; function dc(jU) { var T = ""; var j1; var jZ; var jX = ""; var j0; var jY; var jW; var jV = ""; var jT = 0; var e = /[^A-Za-z0-9+/=]/g; if (!jU || e.exec(jU)) { return jU } jU = jU.replace(/[^A-Za-z0-9+/=]/g, ""); do { j0 = gS.indexOf(jU.charAt(jT++)); jY = gS.indexOf(jU.charAt(jT++)); jW = gS.indexOf(jU.charAt(jT++)); jV = gS.indexOf(jU.charAt(jT++)); j1 = (j0 << 2) | (jY >> 4); jZ = ((jY & 15) << 4) | (jW >> 2); jX = ((jW & 3) << 6) | jV; T = T + String.fromCharCode(j1); if (jW !== 64) { T = T + String.fromCharCode(jZ) } if (jV !== 64) { T = T + String.fromCharCode(jX) } j1 = jZ = jX = ""; j0 = jY = jW = jV = "" } while (jT < jU.length); return T } function i1(e) { return btoa(encodeURIComponent(e)) } function fL(e) { return decodeURIComponent(atob(e)) } (function (e) { if (!e.Utils) { e.Utils = {} } var i = e.Utils; i.format = (function () { function T(jW, jV, jX) { var jU = jX[+jV]; return typeof (jU) === "function" ? jU(jV) : jU } function jT(jW, jV, jX) { var jZ = jV; var j0 = []; var jU = jV.split(":"); if (jU.length === 2) { jZ = jU[0]; j0.push(jU[1]) } var jY = typeof (jX[jZ]); if (jY === "function") { return jX[jZ].apply(undefined, j0) } else { if (jY === "undefined") { return jW } else { return String(jX[jZ]) } } } return function (jU, jV) { var jX = jV.splice ? T : jT; var jW = jU.splice ? jU.join("") : jU; return jW.replace(/{([a-zA-Z0-9_$:.]+)}/g, function (jZ, jY) { return jX(jZ, jY, jV) }) } })(); i.ErrorMonitor = function (jT, T, jU) { }; fj.canUseWebAssembly(function (T) { i.canUseWebAssembly = T }) })(bw); function bT() { return (cp() || hD()) } function cp() { var e = navigator.userAgent; if (e.indexOf("iPhone") > -1 || e.indexOf("iPad") > -1) { return true } return false } function hD() { var e = navigator.userAgent; if (e.indexOf("Android") > -1) { return true } return false } function ik(e) { return e * Math.PI / 180 } function eZ(e) { return e / Math.PI * 180 } function bA(e, jU) { var jT = Math.pow(10, jU); if (typeof e === "number") { return Math.round(e * jT) / jT } for (var T = 0; T < e.length; T++) { e[T] = bA(e[T], jU) } return e } function b7(T, i, e) { if (T < i) { T = i } else { if (T > e) { T = e } } return T } function d5(e, i) { while (e < 0) { e += i } return e % i } function hA(i, e) { return (i >= 0 && e >= 0) || (i < 0 && e < 0) } function L(i) { if (i._gl) { return i._gl } var e = { alpha: true, antialias: false, failIfMajorPerformanceCaveat: false, preserveDrawingBuffer: false, stencil: false }; var T = i.getContext("webgl", e) || i.getContext("experimental-webgl", e); i._gl = T; return T } function ih(jT, T) { for (var e = 0; e < T.length; e++) { eN.on(jT, T[e], ah) } } function eH(i, T, e) { T[e] = i.getUniformLocation(T, e) } function bW(jU, jV, e, T, i) { var jT = ""; switch (i) { case "mat4": jU.uniformMatrix4fv(jV[e], false, T); return; case "v3": jT = "uniform3fv"; break; case "f": jT = "uniform1f"; break; case "i": jT = "uniform1i"; break }if (jT === "") { throw "error" } jU[jT](jV[e], T) } function hl(j1, e) { while (j1 < 0) { j1 += 360 } j1 = j1 % 360; var jT = e.width; var j0 = e.height; var jW = jT; var T = j0; if (j1 < 90) { var i = Math.sin(ik(j1)) * jT; var jY = Math.sin(ik(j1)) * j0; var jZ = Math.cos(ik(j1)) * jT; var jV = Math.cos(ik(j1)) * j0; var jW = Math.ceil(jZ + jY); var T = Math.ceil(i + jV) } else { if (j1 < 180) { var j1 = j1 - 90; var i = Math.sin(ik(j1)) * jT; var jY = Math.sin(ik(j1)) * j0; var jZ = Math.cos(ik(j1)) * jT; var jV = Math.cos(ik(j1)) * j0; var jW = Math.ceil(i + jV); var T = Math.ceil(jZ + jY) } else { if (j1 < 270) { var j1 = j1 - 180; var i = Math.sin(ik(j1)) * jT; var jY = Math.sin(ik(j1)) * j0; var jZ = Math.cos(ik(j1)) * jT; var jV = Math.cos(ik(j1)) * j0; var jW = Math.ceil(jZ + jY); var T = Math.ceil(i + jV) } else { var j1 = j1 - 270; var i = Math.sin(ik(j1)) * jT; var jY = Math.sin(ik(j1)) * j0; var jZ = Math.cos(ik(j1)) * jT; var jV = Math.cos(ik(j1)) * j0; var jW = Math.ceil(i + jV); var T = Math.ceil(jZ + jY) } } } var jX = jW - jT; var jU = T - j0; return [0 - jX / 2, 0 - jU / 2, jT + jX / 2, j0 + jU / 2] } function b6(e) { if (e.toDataURL() === b6._blankData) { return true } return false } function V(jU, jT, T) { var i = [T.lng - jU.lng, T.lat - jU.lat]; var e = [jT.lng - jU.lng, jT.lat - jU.lat]; return i[0] * e[1] - i[1] * e[0] } function iH(jV, jU, T) { var e; var jW; var jT; var i; if (jV.lng < jU.lng) { e = jV.lng; jT = jU.lng } else { e = jU.lng; jT = jV.lng } if (jV.lat < jU.lat) { jW = jV.lat; i = jU.lat } else { jW = jU.lat; i = jV.lat } if (T.lng < e || T.lng > jT || T.lat < jW || T.lat > i) { return false } return true } function iR(jX, jW, jV, jT) { var jU = V(jV, jT, jX); var T = V(jV, jT, jW); var i = V(jX, jW, jV); var e = V(jX, jW, jT); if (jU * T < 0 && i * e < 0) { return true } else { if (jU === 0 && iH(jV, jT, jX)) { return true } else { if (T === 0 && iH(jV, jT, jW)) { return true } else { if (i === 0 && iH(jX, jW, jV)) { return true } else { if (e === 0 && iH(jX, jW, jT)) { return true } else { return false } } } } } } function ho(T, i) { var e = i.parentNode; if (e.lastChild === i) { e.appendChild(T) } else { e.insertBefore(T, i.nextSibling) } } function dI(jZ, j0) { if (j0 === 0) { return jZ } var jY = 0; var jW = 0; if (!jZ) { throw "异常" } if (jZ.length === 0) { return [] } for (var jU = 1, T = jZ.length - 1; jU < T; jU++) { var jX = fE(jZ[jU], jZ[0], jZ[jZ.length - 1]); if (jX > jY) { jW = jU; jY = jX } } var e = []; if (jY >= j0) { var j2 = jZ.slice(0, jW); var j1 = jZ.slice(jW, jZ.length); var jV = dI(j2, j0); var jT = dI(j1, j0); for (var jU = 0, T = jV.length; jU < T; jU++) { e.push(jV[jU]) } for (var jU = 0, T = jT.length; jU < T; jU++) { e.push(jT[jU]) } } else { e.push(jZ[0]); e.push(jZ[jZ.length - 1]) } return e } function p(e) { if (Math.log2) { return Math.log2(e) } return Math.log(e) / Math.LN2 } function c5(T, i, e) { return Math.min(e, Math.max(i, T)) } function ao(e, i) { if (!i) { return e } var jV = i[0]; var jU = i[1]; var jT = i[2]; var T = i[3]; var jX = []; var jW = []; jX[0] = T * e[0] + jT * e[2]; jX[1] = e[1]; jX[2] = -jT * e[0] + T * e[2]; jW[0] = jX[0]; jW[1] = jU * jX[1] - jV * jX[2]; jW[2] = jV * jX[1] + jU * jX[2]; return jW } var n = Math.PI / 180; var gz = 180 / Math.PI; function fl(T) { var i = (T - Date.UTC(2000, 0, 1, 12)) / 86400000 / 36525; var e = (d3.utcDay.floor(T) - T) / 86400000 * 360 - 180; return [e - fb(i) * gz, dN(i) * gz] } function fb(jT) { var jU = bn(jT); var i = dV(jT); var T = ie(jT); var jV = Math.tan(id(jT) / 2); jV *= jV; return jV * Math.sin(2 * T) - 2 * jU * Math.sin(i) + 4 * jU * jV * Math.sin(i) * Math.cos(2 * T) - 0.5 * jV * jV * Math.sin(4 * T) - 1.25 * jU * jU * Math.sin(2 * i) } function dN(e) { return Math.asin(Math.sin(id(e)) * Math.sin(bs(e))) } function bs(e) { return jE(e) - (0.00569 + 0.00478 * Math.sin((125.04 - 1934.136 * e) * n)) * n } function jE(e) { return ie(e) + iW(e) } function dV(e) { return (357.52911 + e * (35999.05029 - 0.0001537 * e)) * n } function ie(i) { var e = (280.46646 + i * (36000.76983 + i * 0.0003032)) % 360; return (e < 0 ? e + 360 : e) / 180 * Math.PI } function iW(i) { var e = dV(i); return (Math.sin(e) * (1.914602 - i * (0.004817 + 0.000014 * i)) + Math.sin(e + e) * (0.019993 - 0.000101 * i) + Math.sin(e + e + e) * 0.000289) * n } function id(e) { return dl(e) + 0.00256 * Math.cos((125.04 - 1934.136 * e) * n) * n } function dl(e) { return (23 + (26 + (21.448 - e * (46.815 + e * (0.00059 - e * 0.001813))) / 60) / 60) * n } function bn(e) { return 0.016708634 - e * (0.000042037 + 1.267e-7 * e) } function f1() { return window.devicePixelRatio || 1 } function it(T) { var i; var e; var jT; if (T >= 0) { jT = Math.floor(T / 65536) * 65536; i = jT; e = T - jT } else { jT = Math.floor(-T / 65536) * 65536; i = -jT; e = T + jT } return [i, e] } function cz(e) { if (e.lng >= 0 && e.lat >= 0) { return new ct(e.lng - 10000000, e.lat - 6000000) } if (e.lng >= 0 && e.lat < 0) { return new ct(e.lng - 10000000, e.lat + 6000000) } if (e.lng < 0 && e.lat >= 0) { return new ct(e.lng + 10000000, e.lat - 6000000) } if (e.lng < 0 && e.lat < 0) { return new ct(e.lng + 10000000, e.lat + 6000000) } } var hV = null; if (window.performance && window.performance.now) { hV = function () { return performance.now() } } else { if (Date.now) { hV = function () { return Date.now() } } else { hV = function () { return (new Date).getTime() } } } function hz(jT, e, i) { var T = "mouseWheel"; if (eN.Platform.macintosh) { if (!isNaN(jT) && (jT < 10 || jT !== 120) && (e % 1 === 0 && e < 5)) { T = "padScroll" } if (eN.Browser.firefox && (e % 1 === 0 && e < 5 && i === 0)) { T = "padScroll" } } if (eN.Browser.safari && jT === 12) { T = "mouseWheel" } return T } function bJ(j2, jX) { var j1 = j2[0]; var j0 = j2[1]; var jT = false; for (var jW = 0, jV = jX.length - 2; jW < jX.length; jW += 2) { var jZ = jX[jW]; var jU = jX[jW + 1]; var jY = jX[jV]; var T = jX[jV + 1]; var e = ((jU > j0) !== (T > j0)) && (j1 < (jY - jZ) * (j0 - jU) / (T - jU) + jZ); if (e) { jT = !jT } jV = jW } return jT } function ar(jU, jW) { var e = jW.length; var T = 0; var jV = false; for (var jT = 0; jT < e; jT++) { T = (jT === e - 1) ? 0 : T + 1; if ((jW[jT].lat !== jW[T].lat) && (((jU.lat >= jW[jT].lat) && (jU.lat < jW[T].lat)) || ((jU.lat >= jW[T].lat) && (jU.lat < jW[jT].lat))) && (jU.lng < (jW[T].lng - jW[jT].lng) * (jU.lat - jW[jT].lat) / (jW[T].lat - jW[jT].lat) + jW[jT].lng)) { jV = !jV } } return jV } function dG(T, e, i, jT) { jT = jT || 0.4; if (T > i) { T = Math.pow(T - i + 1, jT) + i - 1 } else { if (T < e) { T = e - Math.pow(e - T + 1, jT) + 1 } } return T } function eJ(jX) { var jV = ""; for (var T = 0; T < jX.length; T++) { var jY = jX.charCodeAt(T) << 1; var e = jY.toString(2); var jU = e.length; var j1 = e; if (jU < 8) { j1 = "00000000" + e; j1 = j1.substr(e.length, 8) } jV += j1 } var jZ = 5 - jV.length % 5; var jT = []; for (var T = 0; T < jZ; T++) { jT[T] = "0" } jV = jT.join("") + jV; var j0 = []; for (var T = 0; T < jV.length / 5; T++) { var jY = jV.substr(T * 5, 5); var jW = parseInt(jY, 2) + 50; j0.push(String.fromCharCode(jW)) } return j0.join("") + jZ.toString() } function jw(T, i) { var e = bw.TILE_VERSION || window.TILE_VERSION; if (!e || !e[T] || !e[T][i] || !e[T][i].version || !e[T][i].updateDate) { e = B.tvc } return { ver: e[T][i].version, udt: e[T][i].updateDate } } function bx() { var e = bw.MSV || window.MSV; if (!e || !e.mapstyle || !e.mapstyle.updateDate || !e.mapstyle.version) { e = B.msv } return { ver: e.mapstyle.version, udt: e.mapstyle.updateDate } } function dq(e, jU) { var jT = e.slice(0); for (var T = 0; T < jT.length; T++) { jT[T] += jU } return jT } var gM = null; function g1(e) { if (gM) { return } e.fire(new fy("onloadtile")); gM = setTimeout(function () { gM = null }, 1000) } function aK() { if (D("//map.baidu.com") || D("//maps.baidu.com") || D("//ditu.baidu.com")) { return true } return false } aH.inMapHost = aK(); if (typeof window._inMapHost === "boolean") { aH.inMapHost = window._inMapHost } function D(i) { var T = window.location; var e = document.createElement("a"); e.href = i; return e.hostname === T.hostname && e.port === T.port && e.protocol === T.protocol } var dM = [72.685732, 0.193351, 136.10888, 54.392257]; var eM = [72.6892532, 0.1939743381, 136.1168614, 54.392257]; var t = [72.69566833, 0.1999420909, 136.1232863, 54.39791217]; var ig = 158; var de = [98.789081, 122.948721, 107.857301, 118.082148, 119.126627, 128.021934, 79.939914, 99.021873, 119.912937, 122.084572, 127.906381, 130.933385, 106.496057, 108.066113, 119.818772, 126.367919, 111.789929, 119.311401, 100.742164, 102.220151, 99.853589, 100.781289, 97.522631, 98.834615, 99.092638, 99.892947, 122.905967, 123.761867, 123.716213, 125.494726, 123.723977, 124.755034, 125.475833, 126.398284, 125.471687, 126.065118, 130.817003, 133.605851, 127.900156, 128.656536, 128.646633, 129.625389, 132.88057, 134.104549, 117.365548, 119.230813, 116.073074, 117.416898, 114.406274, 116.123791, 116.479038, 119.591534, 110.566812, 111.851324, 74.465162, 79.993155, 82.858046, 91.345214, 85.71485, 98.969834, 127.651377, 129.532029, 129.462275, 130.209769, 133.716214, 134.731053, 134.366834, 135.103133, 130.854579, 131.32966, 115.499125, 117.530421, 115.765224, 116.734157, 108.524336, 110.601747, 121.351282, 124.612037, 126.151954, 127.332751, 91.273562, 95.604179, 79.87318, 82.935667, 76.413314, 78.336484, 78.275229, 79.993668, 83.956612, 85.725267, 85.500637, 89.346601, 97.990127, 98.94176, 106.641956, 108.599215, 111.386259, 111.810312, 111.578597, 111.803167, 115.99273, 117.010413, 116.24461, 116.675246, 119.422198, 119.909078, 120.646056, 121.38098, 120.335038, 120.662183, 124.579855, 125.773243, 126.207803, 126.774849, 95.565331, 102.037736, 95.576121, 96.158028, 95.556699, 97.799055, 91.296205, 93.348146, 93.321994, 94.690522, 89.339313, 90.540241, 82.263039, 82.882528, 78.335615, 80.023512, 76.623947, 78.352608, 73.495149, 74.48155, 74.846872, 76.479412, 91.560058, 94.871116, 88.759515, 89.235995, 83.237883, 83.965264, 82.292123, 83.246813, 81.876477, 83.253307, 80.75212, 81.463265, 86.463409, 88.267232, 102.199623, 104.225963, 112.153727, 116.823265, 108.965663, 113.021145, 111.166575, 117.972799]; var dd = [22.548416, 42.276971, 17.227969, 22.7346, 41.292761, 50.741667, 30.365133, 42.324913, 21.701924, 22.69335, 42.4176, 48.936335, 21.429059, 22.648399, 50.650499, 52.914825, 42.20449, 45.199078, 21.13391, 22.568612, 21.441033, 22.583349, 23.73862, 25.298628, 22.00409, 22.563095, 38.97849, 41.338631, 40.287973, 41.330108, 39.732801, 40.343252, 40.966852, 41.323446, 40.719312, 41.05937, 44.869472, 48.009884, 41.336325, 42.443362, 42.008104, 42.434713, 45.873151, 48.205746, 45.132322, 46.784582, 45.133383, 46.392803, 45.148771, 45.740273, 47.478161, 50.064393, 42.216229, 43.461282, 37.014302, 40.662281, 42.219985, 47.31417, 27.726965, 30.466651, 48.911271, 49.642488, 48.831706, 49.434487, 46.941762, 48.37425, 47.651781, 48.463782, 42.851964, 44.905396, 47.598273, 48.438467, 48.409141, 48.901651, 42.22756, 42.906402, 52.821047, 53.578094, 50.701837, 51.654278, 42.292419, 44.392214, 42.295918, 45.385017, 34.680866, 37.027803, 30.743515, 37.066586, 28.245649, 30.406053, 47.270872, 48.497371, 25.238932, 27.778469, 42.215754, 42.540416, 43.427677, 44.689208, 44.685587, 44.994131, 48.878657, 49.318659, 49.281099, 49.624515, 50.710468, 51.306809, 52.90717, 53.331981, 52.903016, 53.107959, 52.900867, 53.250033, 51.638073, 52.400678, 42.229657, 42.691928, 43.061242, 43.891083, 42.663095, 43.074222, 44.37174, 45.180155, 44.375135, 44.974219, 47.3035, 48.053221, 45.352401, 46.807875, 40.563053, 42.040289, 40.581871, 41.405172, 38.516328, 40.178756, 35.790476, 37.02337, 26.825605, 27.761303, 27.197399, 27.74932, 29.147561, 30.37813, 29.570893, 30.062042, 30.045026, 30.380952, 29.998038, 30.385203, 48.487385, 49.16832, 22.395733, 22.598229, 7.441114, 11.501436, 3.767491, 9.000793, 12.642067, 17.406563]; var b3 = [98.795985, 122.960792, 107.867379, 118.093451, 119.139658, 128.035888, 79.948212, 99.029524, 119.923388, 122.094977, 127.918527, 130.94789, 106.50606, 108.076783, 119.8329, 126.382207, 111.803567, 119.324928, 100.749858, 102.227985, 99.860885, 100.788921, 97.529435, 98.841564, 99.100017, 99.90035, 122.917416, 123.774367, 123.728314, 125.507211, 123.736065, 124.767299, 125.488463, 126.410675, 125.484326, 126.07764, 130.830784, 133.620042, 127.912178, 128.668957, 128.658937, 129.638599, 132.894179, 134.119086, 117.379378, 119.244569, 116.086736, 117.431212, 114.420233, 116.137458, 116.492775, 119.605527, 110.579401, 111.86488, 74.468228, 80.001908, 82.867432, 91.353788, 85.721075, 98.976964, 127.664757, 129.546833, 129.476893, 130.22449, 133.730358, 134.745235, 134.381034, 135.1178, 130.868117, 131.34409, 115.513245, 117.544751, 115.779271, 116.748045, 108.536254, 110.614326, 121.365534, 124.626434, 126.165992, 127.347013, 91.281869, 95.611754, 79.879648, 82.945041, 76.413314, 78.345207, 78.275229, 80.002329, 83.956612, 85.734098, 85.510186, 89.356499, 97.997001, 98.948845, 106.653208, 108.610811, 111.400183, 111.824179, 111.592224, 111.817136, 116.00682, 117.024631, 116.258574, 116.689291, 119.436876, 119.922961, 120.659806, 121.395479, 120.349116, 120.676014, 124.59389, 125.787788, 126.221756, 126.788962, 95.572955, 102.046581, 95.583772, 96.165551, 95.564318, 97.806095, 91.30446, 93.356438, 93.330319, 94.698145, 89.349129, 90.548677, 82.268802, 82.892025, 78.335615, 80.032266, 76.625755, 78.361413, 73.498248, 74.490992, 74.846872, 76.488771, 91.563521, 94.878444, 88.768214, 89.244787, 83.247076, 83.974127, 82.29595, 83.256003, 81.885315, 83.26249, 80.760619, 81.472404, 86.470983, 88.276988, 102.207537, 104.234614, 112.164795, 116.833667, 108.965663, 113.032246, 111.166575, 117.983363]; var b1 = [22.551183, 42.284787, 17.227969, 22.738314, 41.300981, 50.749638, 30.368087, 42.332701, 21.705055, 22.696452, 42.426047, 48.944674, 21.432184, 22.651387, 50.657409, 52.92296, 42.212192, 45.206905, 21.137031, 22.57186, 21.444502, 22.586566, 23.741571, 25.301472, 22.006806, 22.56637, 38.985114, 41.346531, 40.295617, 41.338581, 39.740021, 40.351012, 40.974644, 41.331562, 40.726852, 41.067192, 44.877158, 48.018285, 41.344597, 42.451798, 42.016305, 42.443235, 45.880906, 48.214001, 45.140027, 46.792775, 45.141083, 46.400433, 45.156418, 45.748281, 47.485889, 50.071879, 42.223667, 43.469487, 37.019867, 40.668675, 42.226823, 47.321605, 27.72944, 30.469853, 48.919002, 49.650614, 48.840188, 49.443166, 46.949801, 48.382798, 47.660603, 48.472692, 42.859946, 44.913298, 47.605896, 48.445914, 48.41698, 48.909667, 42.23507, 42.914193, 52.8281, 53.585952, 50.709311, 51.662219, 42.29968, 44.399225, 42.302746, 45.391958, 34.680866, 37.03377, 30.743515, 37.07228, 28.245649, 30.408935, 47.277693, 48.504255, 25.241528, 27.780726, 42.223363, 42.548418, 43.435888, 44.696952, 44.693193, 45.00187, 48.886267, 49.326755, 49.288642, 49.632304, 50.717486, 51.314369, 52.914204, 53.33964, 52.910094, 53.115926, 52.908382, 53.258095, 51.64533, 52.408305, 42.236825, 42.699126, 43.068466, 43.898632, 42.670403, 43.082219, 44.379045, 45.187742, 44.382336, 44.981379, 47.310362, 48.06019, 45.359099, 46.814439, 40.569751, 42.047741, 40.587956, 41.41263, 38.519192, 40.185033, 35.790476, 37.029005, 26.825605, 27.763896, 27.199658, 27.751649, 29.150192, 30.381073, 29.573886, 30.065162, 30.047775, 30.384089, 30.001277, 30.388525, 48.494118, 49.173841, 22.398528, 22.601198, 7.441114, 11.505968, 3.767491, 9.005209, 12.642067, 17.410886]; var ac = 95; var cW = [110.3961374, 105.0743788, 96.8991824, 95.61810411, 93.82412598, 91.3892353, 91.38931858, 89.08325955, 87.22469808, 86.26278402, 85.17353, 85.23741211, 82.86627441, 81.90481038, 79.59687147, 80.39829237, 79.93319363, 77.80279948, 75.2557704, 73.49357829, 73.1892532, 73.87758816, 74.4064738, 74.10215224, 75.46409695, 76.77739692, 78.28299615, 78.15499485, 78.37920654, 78.89145345, 79.69282199, 81.19938178, 81.80830295, 83.89093424, 85.94149523, 87.86447266, 89.03414958, 90.05918132, 91.10026937, 92.15733832, 93.74361735, 95.82597331, 97.95655545, 97.12363037, 98.2129739, 99.2068571, 101.6587874, 102.5239084, 102.2356106, 105.0249238, 106.0992342, 107.8617093, 111.6439372, 109.591869, 112.284586, 117.7961157, 118.9495128, 114.2076584, 118.693565, 123.1475225, 122.730705, 120.9361393, 123.4207441, 122.3787782, 122.1385425, 121.5904281, 121.1773763, 120.6805404, 120.2483355, 122.795807, 122.8759077, 121.3060262, 122.1392177, 123.7418799, 126.4177599, 128.5647409, 129.7194884, 131.2259136, 131.9950494, 133.6289931, 135.6168614, 131.3875545, 130.8743365, 128.6303223, 126.0997773, 124.4015375, 122.22161, 119.6586483, 119.7866827, 118.5685878, 116.5177976, 114.819101, 119.0812964, 116.453265, 111.7431171]; var cU = [43.2190351, 42.38053385, 43.17417589, 44.42226915, 45.09863634, 45.56708116, 47.33599718, 48.68832709, 49.62448486, 48.9482175, 48.4800472, 47.33564399, 47.43948676, 46.03452067, 45.20221788, 43.34563043, 42.32965739, 41.39690972, 40.82972331, 39.95567654, 39.25892877, 38.36098768, 38.05441569, 37.16878445, 36.38899414, 35.36126817, 34.30953451, 32.58503879, 31.56975694, 30.77800266, 30.43559814, 29.7744892, 30.0931977, 28.71103299, 27.70739665, 27.5775472, 27.01096137, 27.77857883, 27.50707954, 26.50328315, 26.70387804, 27.95548557, 27.29428901, 23.64685493, 23.62310601, 21.67493381, 20.77751465, 21.32070991, 22.1824113, 22.31232964, 22.51316054, 16.80037679, 13.19749864, 0.6939743381, 1.541660428, 10.50208252, 15.58926975, 17.89090007, 19.94928467, 22.18490153, 25.37285292, 25.61456434, 30.62532552, 31.08099284, 31.89238173, 32.50092692, 32.80325765, 34.25546956, 35.15486138, 36.90170139, 37.8348272, 37.941604, 38.6480797, 38.96797201, 40.98146918, 41.25573296, 42.07218153, 42.49132813, 44.65259766, 44.69330702, 48.62286865, 48.09383952, 49.19628499, 50.03402317, 53.27678901, 53.62976345, 53.89420546, 52.98933322, 52.01872884, 50.23210259, 50.18807048, 47.49769857, 47.34362712, 46.50502143, 45.24770128]; var ev = [98.7895, 122.954182, 107.860913, 118.087007, 119.133165, 128.029533, 79.941749, 99.023087, 119.916883, 122.08841, 127.912143, 130.941471, 106.499502, 108.070244, 119.826245, 126.375818, 111.797006, 119.318387, 100.743285, 102.221517, 99.854448, 100.782445, 97.522928, 98.835028, 99.093518, 99.893783, 122.910927, 123.767769, 123.721954, 125.50077, 123.729657, 124.760724, 125.481902, 126.404079, 125.477737, 126.071019, 130.824331, 133.613395, 127.905767, 128.662524, 128.652527, 129.6321, 132.887552, 134.11249, 117.37297, 119.237999, 116.080154, 117.424589, 114.413586, 116.130948, 116.486264, 119.598927, 110.5728, 111.858437, 74.465162, 79.995337, 82.860821, 91.347291, 85.716024, 98.970481, 127.658331, 129.540202, 129.470528, 130.21808, 133.723748, 134.738785, 134.374555, 135.111443, 130.861475, 131.337438, 115.506627, 117.538123, 115.772783, 116.741632, 108.529656, 110.60782, 121.358945, 124.619773, 126.159424, 127.340582, 91.275275, 95.605228, 79.874427, 82.938601, 76.413314, 78.338763, 78.275229, 79.995765, 83.956612, 85.727511, 85.503554, 89.349858, 97.990418, 98.942257, 106.646704, 108.604437, 111.393667, 111.817723, 111.585811, 111.810645, 116.000232, 117.018216, 116.252108, 116.682705, 119.430384, 119.916417, 120.653168, 121.38883, 120.342727, 120.669383, 124.587426, 125.781376, 126.215282, 126.782323, 95.566367, 102.040026, 95.577158, 96.159009, 95.557772, 97.799728, 91.298032, 93.350057, 93.323794, 94.691771, 89.342471, 90.542019, 82.264229, 82.885485, 78.335615, 80.025844, 76.623947, 78.355027, 73.495149, 74.484473, 74.846872, 76.482208, 91.560117, 94.871859, 88.761692, 89.23822, 83.240549, 83.967602, 82.292367, 83.2495, 81.878825, 83.256003, 80.75421, 81.465955, 86.465421, 88.270356, 102.201019, 104.228033, 112.158282, 116.827153, 108.965663, 113.025767, 111.166575, 117.97687]; var eu = [22.545421, 42.279053, 17.226272, 22.731982, 41.294917, 50.743316, 30.361986, 42.326603, 21.699185, 22.690751, 42.419757, 48.938435, 21.426505, 22.64567, 50.651745, 52.916705, 42.20641, 45.201064, 21.131326, 22.565685, 21.438288, 22.580379, 23.735785, 25.295582, 22.001087, 22.560315, 38.979333, 41.340757, 40.28938, 41.332289, 39.734164, 40.344718, 40.968803, 41.325813, 40.721073, 41.061503, 44.871533, 48.012179, 41.338366, 42.445601, 42.010343, 42.436934, 45.875217, 48.208327, 45.134237, 46.786509, 45.135376, 46.394665, 45.150734, 45.742257, 47.480099, 50.065931, 42.217982, 43.46329, 37.014057, 40.662848, 42.221079, 47.315558, 27.723432, 30.46385, 48.913298, 49.644555, 48.83396, 49.436824, 46.944059, 48.376613, 47.654503, 48.466331, 42.854333, 44.907682, 47.600253, 48.440245, 48.410926, 48.903468, 42.229292, 42.908294, 52.822466, 53.58012, 50.703491, 51.656037, 42.29378, 44.393379, 42.296912, 45.385809, 34.679282, 37.027699, 30.740622, 37.066377, 28.241967, 30.403134, 47.271949, 48.49848, 25.235818, 27.774976, 42.217425, 42.542102, 43.429763, 44.691016, 44.687044, 44.995758, 48.880431, 49.320551, 49.282865, 49.626267, 50.711607, 51.308382, 52.908547, 53.333963, 52.904419, 53.109706, 52.902338, 53.251938, 51.639701, 52.402205, 42.231045, 42.693581, 43.062756, 43.892771, 42.664519, 43.075927, 44.372942, 45.1815, 44.376327, 44.975476, 47.304623, 48.054453, 45.353174, 46.808493, 40.563653, 42.041556, 40.582164, 41.4064, 38.51618, 40.179105, 35.789745, 37.023144, 26.825402, 27.757641, 27.193806, 27.745766, 29.144229, 30.375186, 29.567889, 30.059102, 30.041938, 30.378006, 29.995047, 30.382338, 48.48834, 49.169021, 22.392816, 22.595333, 7.439914, 11.500161, 3.766676, 9.000793, 12.640512, 17.406563]; var fx = 3000; var gE = 0.00002; var gD = 0.000003; var iE = 0.0174532925194; var hr = 0.0065; var hq = 0.006; var dy = 40000; var fk = 0; var iX = 1; var ax = 2; var hN = 3; var fd = 4; var g5 = 1e-10; var im = 6370996.81; var fA = 100000000; function he(T, jU, i, jT) { var e = arguments.length; this.ll = {}; this.ru = {}; if (e === 0) { } else { if (e === 4) { this.normalize(T, jU, i, jT) } } } he.prototype.contains = function (e) { if (e.lng > this.ll.lng && e.lng < this.ru.lng && e.lat > this.ll.lat && e.lat < this.ru.lat) { return hN } if (Math.abs(e.lng - this.ll.lng) < g5 || Math.abs(e.lng - this.ru.lng) < g5 || Math.abs(e.lat - this.ll.lat) < g5 || Math.abs(e.y - this.ru.lat) > g5) { return ax } return fk }; he.prototype.normalize = function (i, jT, e, T) { if (i > e) { this.ll.lng = e; this.ru.lng = i } else { this.ll.lng = i; this.ru.lng = e } if (jT > T) { this.ll.lat = T; this.ru.lat = jT } else { this.ll.lat = jT; this.ru.lat = T } }; function em(i, jT, e, T) { this.sp = { lng: i, lat: jT }; this.ep = { lng: e, lat: T }; this.mbr = new he(i, jT, e, T) } function hX(jT, e, jV, jU) { for (var T = 0; T < jU; T = T + 2) { if (jT.lng >= e[T] && jT.lng <= e[T + 1] && jT.lat >= jV[T] && jT.lat <= jV[T + 1]) { return true } } return false } function f7(jY) { var i = jY.lng; var jX = jY.lat; var jT = Math.sqrt(i * i + jX * jX); var jV = Math.atan2(jX, i); var T = jT + gi(jX); var jU = jV + gh(i); var e = T * Math.cos(jU); var jW = T * Math.sin(jU); return { lng: e + hr, lat: jW + hq } } function aY(jY) { var i = jY.lng - hr; var jX = jY.lat - hq; var jT = Math.sqrt(i * i + jX * jX); var jV = Math.atan2(jX, i); var T = jT - gi(jX); var jU = jV - gh(i); var e = T * Math.cos(jU); var jW = T * Math.sin(jU); return { lng: e, lat: jW } } function gi(e) { return Math.sin(e * fx * iE) * gE } function gh(e) { return Math.cos(e * fx * iE) * gD } function aq(T, i, e) { return ((i.lng - T.lng) * (e.lat - T.lat) - (e.lng - T.lng) * (i.lat - T.lat)) } function hw(i, e) { return Math.abs(i - e) <= g5 } function gp(jT, T) { var i = jT.lat * iE; var jY = jT.lng * iE; var e = T.lat * iE; var jX = T.lng * iE; var jV = Math.cos(i) * Math.cos(e); var jU = Math.cos(jY) * Math.cos(jX); var j0 = Math.sin(i) * Math.sin(e); var jZ = Math.sin(jY) * Math.sin(jX); var j1 = jV * jU + jV * jZ + j0; if (j1 < -1) { j1 = -1 } else { if (j1 > 1) { j1 = 1 } } var jW = Math.acos(j1) * im; return jW } function h(jX, jW) { var i = jX.lat * iE; var e = jW.lat * iE; var jT = jX.lng * iE; var T = jW.lng * iE; var jV = i - e; var jU = jT - T; var jY = Math.sin(jV / 2) * Math.sin(jV / 2) + Math.cos(i) * Math.cos(e) * Math.sin(jU / 2) * Math.sin(jU / 2); return 2 * Math.asin(Math.sqrt(jY)) * im } function gn(jY, T) { var j0 = by(jY, T); var jZ = 180; var jX = 90; var jW = -180; var jU = -90; var jV = T.sp; var jT = T.ep; jZ = jV.lng < jT.lng ? jV.lng : jT.lng; jX = jV.lat < jT.lat ? jV.lat : jT.lat; jW = jV.lng < jT.lng ? jV.lng : jT.lng; jU = jV.lat < jT.lat ? jV.lat : jT.lat; if (j0.lng <= jW && j0.lng >= jZ && j0.lng <= jU && j0.lat >= jX) { return gp(jY, j0) } else { var i = h(jY, T.sp); var e = h(jY, T.ep); return i < e ? i : e } } function aZ(i, e) { } function bC(i, jT, e, T) { return Math.sqrt((i - e) * (i - e) + (jT - T) * (jT - T)) } function by(j4, jW) { var jV = j4.lng; var j3 = j4.lat; var jU = jW.sp.lng; var j2 = jW.sp.lat; var T = jW.ep.lng; var j0 = jW.ep.lat; var j1 = j0 - j2; var jZ = jU - T; if (hw(j1, 0) && hw(jZ, 0)) { return jW.sp } var jY = T * j2 - jU * j0; var jX = jZ * jV - j1 * j3; var e = j1 * j1 - jZ * jZ; var jT = jZ * jX - j1 * jY; var i = j1 * jX + jZ * jY; return { lng: jT / e, lat: -i / e } } function bG(jT) { var T = 0; for (var e = 0; e < ac; ++e) { if (cU[e] <= jT.lat) { if (cU[(e + 1) % ac] > jT.lat) { if (aq({ lng: cW[e], lat: cU[e] }, { lng: cW[(e + 1) % ac], lat: cU[(e + 1) % ac] }, jT) > 0) { ++T } } } else { if (cU[(e + 1) % ac] <= jT.lat) { if (aq({ lng: cW[e], lat: cU[e] }, { lng: cW[(e + 1) % ac], lat: cU[(e + 1) % ac] }, jT) < 0) { --T } } } } return T === 0 ? fk : hN } function jz(jT) { var jW = {}; if (jT.lng < eM[0] - 0.4 || jT.lat < eM[1] - 0.4 || jT.lng > eM[2] + 0.4 || jT.lat > eM[3] + 0.4) { jW.lng = jT.lng; jW.lat = jT.lat; return jW } else { if (hX(jT, ev, eu, ig)) { jW = f7(jT); return jW } } var e = 0; var jZ = dy; var T = 0; var jX = new he(); var jY = 1; if (bG(jT) === fk) { for (var jV = 0; jV < ac; ++jV) { var jU = new em(cW[jV], cU[jV], cW[(jV + 1) % ac], cU[(jV + 1) % ac]); jX.ll.lng = jU.mbr.ll.lng - 0.5; jX.ll.lat = jU.mbr.ll.lat - 0.5; jX.ru.lng = jU.mbr.ru.lng + 0.5; jX.ru.lat = jU.mbr.ru.lat + 0.5; if (jX.contains(jT) === fk) { continue } T = gn(jT, jU); if (T < jZ) { jZ = T } } if (jZ < dy) { e = (dy - jZ) / dy; jY = 2 } } else { jY = 3; e = 1 } var j0 = f7(jT); jW = { lng: jT.lng + (j0.lng - jT.lng) * e, lat: jT.lat + (j0.lat - jT.lat) * e }; return jW } function eO(i) { var T = {}; if (i.lng < t[0] - 0.4 || i.lat < t[1] - 0.4 || i.lng > t[2] + 0.4 || i.lat > t[3] + 0.4) { T.lng = i.lng; T.lat = i.lat; return T } else { if (hX(i, b3, b1, ig)) { T = aY(i); return T } } var e = jz(i); if (i.lng === e.lng && i.lat === e.lng) { T.lng = i.lng; T.lat = i.lat; return T } return decryptPt1(i, jz) } function ic(i, e) { if (e === 3 && i instanceof ct) { var T = jz(i); return new ct(T.lng, T.lat) } else { return i } } function ex(i, e) { if (e === 3 && i instanceof ct) { var T = eO(i); return new ct(T.lng, T.lat) } else { if (e === 5 && i instanceof ct) { return new ct(i.lng, i.lat) } else { return i } } } function o(jV) { if (!jV) { jV = {} } var jW = JSON.stringify(jV); var jU = 0, T, jT, e; if (jW.length === 0) { return jU } for (T = 0, e = jW.length; T < e; T++) { jT = jW.charCodeAt(T); jU = ((jU << 5) - jU) + jT; jU |= 0 } return jU } function cX() { var i = new Date().getTime(); var e = "xxxyxxxy".replace(/[xy]/g, function (jT) { var T = (i + Math.random() * 16) % 16 | 0; i = Math.floor(i / 16); return (jT == "x" ? T : (T & 3 | 8)).toString(16) }); return e } var bX = 0; function fQ() { return bX++ } function i4() { var T = function (kd, kc) { var kb = { "\x61\x63\x69\x61\x78": function (kf, ke) { return kf < ke }, "\x63\x65\x6c\x78\x6d": function (kf, ke) { return kf(ke) }, "\x69\x6d\x78\x65\x61": function (kf, ke) { return kf + ke }, "\x61\x61\x6d\x6d\x65": function (kf, ke) { return kf + ke }, "\x6d\x64\x64\x78\x64": function (kf, ke) { return kf(ke) }, "\x61\x65\x65\x64\x61": function (kf, ke) { return kf + ke }, "\x64\x65\x6c\x78\x65": function (kg, kf, ke) { return kg(kf, ke) } }; var j7 = "\x31\x2e\x31\x2e\x32"; function j5(ki, ke) { var kj = ki["\x6c\x65\x6e\x67\x74\x68"]; var kh = []; for (var kg = 0; kb["\x61\x63\x69\x61\x78"](kg, kj); kg++) { var kf = kb["\x63\x65\x6c\x78\x6d"](ke, ki[kg]); kh["\x70\x75\x73\x68"](kf) } return kh } var ka, j9, j8, j6, j4, j3 = decodeURIComponent, j2 = "\x43\x68\x61\x72", j1 = ""; var j0 = [T]; ka = "\x64\x65"; j9 = "\x66\x72"; j8 = "\x6f"; j4 = kb["\x61\x65\x65\x64\x61"](j9, j8) + "\x6d"; j6 = kb["\x61\x65\x65\x64\x61"]("\x43\x6f", ka); var jZ = function (ke) { return kb["\x69\x6d\x78\x65\x61"](ke, j1)["\x63\x6f\x6e\x73\x74\x72\x75\x63\x74\x6f\x72"][kb["\x61\x61\x6d\x6d\x65"](j4 + j2, j6)](ke) }; var jY = function (ke) { return j5(ke, function (kf) { return jZ(kf) }) }; var jX = jY["\x63\x61\x6c\x6c"](jZ, [39, 34, 37, 96, 60, 120, 97, 65, 98, 66, 99, 67, 100, 68, 101, 69, 102, 70, 103, 110, 109, 111, 112, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57]); var jW = kb["\x64\x65\x6c\x78\x65"](j5, [28782, 27702, 26416, 25167, 24183], function (ke) { return j3(ke) }); var jV = jY["\x63\x61\x6c\x6c"](jW, [22354, 22749, 24415, 23346, 22257, 22688, 24306, 25174, 23595, 25547, 22984, 25690, 22212, 27547, 21594, 27210, 23090, 29193, 22394, 29368, 29532, 29459, 29530, 24146, 24500, 26352, 27441, 28788, 29370, 27673, 26925, 25249, 24430]), jU = {}; jW = jY(jW); var jT = new RegExp(jW["\x6a\x6f\x69\x6e"]("\x7c")); for (var ka = 0; kb["\x61\x63\x69\x61\x78"](ka, jX["\x6c\x65\x6e\x67\x74\x68"]); ka++) { jU[jV[ka]] = jX[ka] } kc = j5(kc["\x73\x70\x6c\x69\x74"](j1), function (ke) { return jU[ke] || ke })["\x6a\x6f\x69\x6e"](j1); return j5(kc["\x73\x70\x6c\x69\x74"](jT), function (ke) { return kb["\x6d\x64\x64\x78\x64"](j3, ke) }) }(this, "\x68\u56c4\u56c4\x69\u735c\u6c36\x73\x75\u5c2b\x73\x74\x72\u624f\u5ef2\u58a0\u5ef2\u5ef2\u59c8\u5e77\x69\u72b8\u56c4\u545a\u58a0\x4f\u5a32\u5e77\u58a0\u58a0\u5ef2\u735c\x6c\u624f\x6c\u545a\u56c4\u6c36\x69\u59c8\u5ef2\u5e77\u5f5f\u66f0\u6c19\x73\x69\u577a\u72b8\u5f5f\u6b31\u6b9b\u6730\x68\u545a\u545a\u6c36\x68\u59c8\u735c\x69\u706e\u735c\u59c8\u5ef2\x6c\u58a0\u5e77\u7209\u72ba\x4c\u66f0\x4f\u6c19\x52\u6c19\u6256\u6b9b\u62a1\u5f6e\u5f6e\u5e52\x4f\u5e77\u735c\u58a0\u56c4\u6730\u58a0\u545a\u735c\u545a\u58a0\u6c36\u59c8\u58a0\u5ef2\u56c4\u735c\u624f\x73\x75\u5c2b\x73\x74\x72\x69\u72b8\u577a\u706e\u735c\u545a\x69\u735c\u58a0\u6c36\x68\x6c\u5ef2"); (function (jV, jU) { var jT = function (jW) { while (--jW) { jV.push(jV.shift()) } }; jT(++jU) }(T, 437)); var i = function (jV, jU) { jV = jV - 0; var jT = T[jV]; return jT }; function e(jZ) { var jX = { "\x6d\x63\x61\x6c\x78": i("0x0"), "\x78\x65\x6d\x65\x78": i("0x1"), "\x63\x78\x61\x64\x6d": i("0x2"), "\x6d\x65\x69\x6d\x78": function (j1, j0) { return j1 - j0 }, "\x68\x64\x64\x69\x6d": function (j1, j0) { return j1(j0) }, "\x61\x78\x61\x61\x63": function (j1, j0) { return j1 + j0 }, "\x78\x78\x61\x6d\x6c": i("0x3") }; var jV = "\x6c\x65\x64"; while (jV !== i("0x4")) { switch (jV) { case jX[i("0x5")]: var jU = i("0x6"); jV = i("0x7"); break; case jX[i("0x8")]: return jX[i("0x9")] + jT[i("0xa")](jX[i("0xb")](jT["\x6c\x65\x6e\x67\x74\x68"], 12)); case i("0xc"): var jT = jX[i("0xd")](md5, md5(jX["\x61\x78\x61\x61\x63"](jY, jU)) + jW); jV = jX[i("0x8")]; break; case i("0x3"): var jY = jZ[i("0xe")](jX[i("0xf")](jZ[i("0x10")]("\x3f"), 1)); jV = i("0xc"); break; case i("0x7"): var jW = "\x48\x30\x41\x39\x50\x38\x50\x37\x59\x36\x41\x42\x51\x4f\x30"; jV = jX[i("0x11")]; break } } } return e } function gO() { } eN.extend(gO, { Request: { INITIAL: -1, WAITING: 0, LOADED: 1, COMPLETED: 2 }, Dependency: { poly: ["marker"], layer: ["poly"], hotspot: ["poly"], infowindow: ["marker", "hotspot"], simpleInfowindow: ["marker"], tools: ["marker", "poly"], mapgl: ["glcommon", "poly"], earth: ["glcommon"], control: ["scommon"], scommon: [], localSearch: ["scommon"], otherSearch: ["scommon"], route: ["scommon"], buslineSearch: ["route"], autocomplete: ["scommon"], mvtParse: ["marker", "poly", "style"] }, MD5Mapping: { control: "1hunma", marker: "wtcjh0", poly: "n0uwma", layer: "$layer$", infowindow: "pgln5b", simpleInfowindow: "erkeqf", hotspot: "5nfj0g", menu: "pi4amr", tools: "srs4ly", oppc: "giidzt", oppcgl: "j3dfgh", mapgl: "fquw05", markeranimation: "suwjqr", earth: "x24qxs", glcommon: "vxyt3b", localSearch: "zyjokt", scommon: "fiu3gg", otherSearch: "3mus2v", route: "2g5z20", buslineSearch: "oxpiqv", autocomplete: "kx2ija", style: "ogh1u4", mvtParse: "jnxvub" }, Config: { baseUrl: B.apiHost + "/getmodules?v=1.0&type=webgl", jsModPath: (aH.inMapHost ? "" : B.mapHost) + "/res/newui/", timeout: 5000 }, delayFlag: false, Module: { modules: {}, modulesNeedToLoad: [] }, _getMd5ModsStr: function (jV) { var jU = []; for (var jX = 0, T = jV.length; jX < T; jX++) { var jW = jV[jX]; var e = this.MD5Mapping[jW]; var jT = "$" + jW + "$"; if (e !== jT) { jU.push(jW + "_" + e) } } return jU.join(",") }, load: function (i, jV, jT) { var e = this.getModuleInfo(i); if (e.status === this.Request.COMPLETED) { if (jT === true) { jV() } } else { if (e.status === this.Request.INITIAL) { this.combine(i); this.addToLoadQueue(i); var T = this; if (T.delayFlag === false) { T.delayFlag = true; setTimeout(function () { var jW = T.Config.baseUrl + "&mod=" + T._getMd5ModsStr(T.Module.modulesNeedToLoad); gA.load(jW); T.Module.modulesNeedToLoad.length = 0; T.delayFlag = false }, 1) } e.status = this.Request.WAITING; function jU(jY) { var jX = T.getModuleInfo(i); if (jX.status !== T.Request.COMPLETED) { if (window.map) { var jW = new fy("onmod_timeout"); jW.timeout = jY / 1000; jW.moduleName = i; window.map.fire(jW) } } } setTimeout(jU, this.Config.timeout, this.Config.timeout); setTimeout(jU, this.Config.timeout * 2, this.Config.timeout * 2) } if (jV) { e.callbacks.push(jV) } } }, combine: function (e) { if (e && this.Dependency[e]) { var jT = this.Dependency[e]; for (var T = 0; T < jT.length; T++) { this.combine(jT[T]); if (!this.Module.modules[jT[T]]) { this.addToLoadQueue(jT[T]) } } } }, addToLoadQueue: function (e) { var i = this.getModuleInfo(e); if (i.status === this.Request.INITIAL) { i.status = this.Request.WAITING; this.Module.modulesNeedToLoad.push(e) } }, run: function (T, jT) { var jX = this.getModuleInfo(T); var j0 = this.Dependency[T]; if (j0) { for (var jV = 0; jV < j0.length; jV++) { var jW = this.getModuleInfo(j0[jV]); if (jW.status !== this.Request.COMPLETED) { jW.modsNeedToRun.push({ name: T, code: jT }); return } } } try { eval(jT) } catch (jY) { return } jX.status = this.Request.COMPLETED; for (var jV = 0, jU = jX.callbacks.length; jV < jU; jV++) { jX.callbacks[jV]() } jX.callbacks.length = 0; for (jV = 0; jV < jX.modsNeedToRun.length; jV++) { var jZ = jX.modsNeedToRun[jV]; this.run(jZ.name, jZ.code) } jX.modsNeedToRun.length = 0 }, getModuleInfo: function (i) { var e; if (!this.Module.modules[i]) { this.Module.modules[i] = { status: this.Request.INITIAL, callbacks: [], modsNeedToRun: [] } } e = this.Module.modules[i]; return e } }); window._jsload = function (jU, jV) { var i = gO.getModuleInfo(jU); i.status = gO.Request.LOADED; if (jV !== "") { gO.run(jU, jV) } else { if (window.map) { var e = new fy("ongetmodules_fail"); e.moduleName = jU; window.map.fire(e) } var T = document.createElement("script"); var jT = gO.MD5Mapping[jU]; T.src = gO.Config.jsModPath + jU + "_" + jT + ".js"; document.getElementsByTagName("head")[0].appendChild(T) } }; function cS() { this._timeData = {} } var bu; if (typeof window !== "undefined") { bu = window } else { bu = self } cS.prototype.mark = function (e) { this._timeData[e] = this._getTime() }; cS.prototype.getMark = function (e) { return this._timeData[e] }; cS.prototype.getTime = function (i, e) { return parseFloat((this._timeData[e] - this._timeData[i]).toFixed(2)) }; cS.prototype.print = function () { }; cS.prototype.clear = function () { this._timeData = {} }; if (bu.performance && bu.performance.now) { cS.prototype._getTime = function () { return performance.now() } } else { cS.prototype._getTime = function () { return Date.now() } } !function (i, T) { T(i.d3 = i.d3 || {}) }(window, function (kw) { function kO(kV, kW, T, kU) { function e(i) { return kV(i = new Date(+i)), i } return e.floor = e, e.ceil = function (i) { return kV(i = new Date(i - 1)), kW(i, 1), kV(i), i }, e.round = function (i) { var kX = e(i), kY = e.ceil(i); return kY - i > i - kX ? kX : kY }, e.offset = function (i, kX) { return kW(i = new Date(+i), null == kX ? 1 : Math.floor(kX)), i }, e.range = function (kY, i, kX) { var kZ = []; if (kY = e.ceil(kY), kX = null == kX ? 1 : Math.floor(kX), !(i > kY && kX > 0)) { return kZ } do { kZ.push(new Date(+kY)) } while (kW(kY, kX), kV(kY), i > kY); return kZ }, e.filter = function (i) { return kO(function (kX) { for (; kV(kX), !i(kX);) { kX.setTime(kX - 1) } }, function (kX, kY) { for (; --kY >= 0;) { for (; kW(kX, 1), !i(kX);) { } } }) }, T && (e.count = function (i, kX) { return ky.setTime(+i), kC.setTime(+kX), kV(ky), kV(kC), Math.floor(T(ky, kC)) }, e.every = function (i) { return i = Math.floor(i), isFinite(i) && i > 0 ? i > 1 ? e.filter(kU ? function (kX) { return kU(kX) % i === 0 } : function (kX) { return e.count(0, kX) % i === 0 }) : e : null }), e } function kD(e) { return kO(function (i) { i.setDate(i.getDate() - (i.getDay() + 7 - e) % 7), i.setHours(0, 0, 0, 0) }, function (i, T) { i.setDate(i.getDate() + 7 * T) }, function (i, T) { return (T - i - (T.getTimezoneOffset() - i.getTimezoneOffset()) * kx) / kL }) } function kv(e) { return kO(function (i) { i.setUTCDate(i.getUTCDate() - (i.getUTCDay() + 7 - e) % 7), i.setUTCHours(0, 0, 0, 0) }, function (i, T) { i.setUTCDate(i.getUTCDate() + 7 * T) }, function (i, T) { return (T - i) / kL }) } var ky = new Date, kC = new Date, kJ = kO(function () { }, function (i, T) { i.setTime(+i + T) }, function (i, T) { return T - i }); kJ.every = function (e) { return e = Math.floor(e), isFinite(e) && e > 0 ? e > 1 ? kO(function (i) { i.setTime(Math.floor(i / e) * e) }, function (i, T) { i.setTime(+i + T * e) }, function (i, T) { return (T - i) / e }) : kJ : null }; var kS = kJ.range, kQ = 1000, kx = 60000, kN = 3600000, kF = 86400000, kL = 604800000, jZ = kO(function (e) { e.setTime(Math.floor(e / kQ) * kQ) }, function (i, T) { i.setTime(+i + T * kQ) }, function (i, T) { return (T - i) / kQ }, function (e) { return e.getUTCSeconds() }), kP = jZ.range, kE = kO(function (e) { e.setTime(Math.floor(e / kx) * kx) }, function (i, T) { i.setTime(+i + T * kx) }, function (i, T) { return (T - i) / kx }, function (e) { return e.getMinutes() }), j7 = kE.range, kr = kO(function (i) { var T = i.getTimezoneOffset() * kx % kN; 0 > T && (T += kN), i.setTime(Math.floor((+i - T) / kN) * kN + T) }, function (i, T) { i.setTime(+i + T * kN) }, function (i, T) { return (T - i) / kN }, function (e) { return e.getHours() }), kK = kr.range, kh = kO(function (e) { e.setHours(0, 0, 0, 0) }, function (i, T) { i.setDate(i.getDate() + T) }, function (i, T) { return (T - i - (T.getTimezoneOffset() - i.getTimezoneOffset()) * kx) / kF }, function (e) { return e.getDate() - 1 }), jY = kh.range, ke = kD(0), kg = kD(1), jU = kD(2), kc = kD(3), j1 = kD(4), ku = kD(5), kB = kD(6), jW = ke.range, kt = kg.range, j5 = jU.range, kq = kc.range, kG = j1.range, ks = ku.range, kR = kB.range, kI = kO(function (e) { e.setDate(1), e.setHours(0, 0, 0, 0) }, function (i, T) { i.setMonth(i.getMonth() + T) }, function (i, T) { return T.getMonth() - i.getMonth() + 12 * (T.getFullYear() - i.getFullYear()) }, function (e) { return e.getMonth() }), kT = kI.range, kb = kO(function (e) { e.setMonth(0, 1), e.setHours(0, 0, 0, 0) }, function (i, T) { i.setFullYear(i.getFullYear() + T) }, function (i, T) { return T.getFullYear() - i.getFullYear() }, function (e) { return e.getFullYear() }); kb.every = function (e) { return isFinite(e = Math.floor(e)) && e > 0 ? kO(function (i) { i.setFullYear(Math.floor(i.getFullYear() / e) * e), i.setMonth(0, 1), i.setHours(0, 0, 0, 0) }, function (i, T) { i.setFullYear(i.getFullYear() + T * e) }) : null }; var j4 = kb.range, kz = kO(function (e) { e.setUTCSeconds(0, 0) }, function (i, T) { i.setTime(+i + T * kx) }, function (i, T) { return (T - i) / kx }, function (e) { return e.getUTCMinutes() }), kj = kz.range, ki = kO(function (e) { e.setUTCMinutes(0, 0, 0) }, function (i, T) { i.setTime(+i + T * kN) }, function (i, T) { return (T - i) / kN }, function (e) { return e.getUTCHours() }), kf = ki.range, kd = kO(function (e) { e.setUTCHours(0, 0, 0, 0) }, function (i, T) { i.setUTCDate(i.getUTCDate() + T) }, function (i, T) { return (T - i) / kF }, function (e) { return e.getUTCDate() - 1 }), ka = kd.range, j9 = kv(0), j8 = kv(1), j6 = kv(2), j3 = kv(3), j2 = kv(4), jX = kv(5), jV = kv(6), jT = j9.range, kp = j8.range, kM = j6.range, kA = j3.range, kH = j2.range, ko = jX.range, kn = jV.range, km = kO(function (e) { e.setUTCDate(1), e.setUTCHours(0, 0, 0, 0) }, function (i, T) { i.setUTCMonth(i.getUTCMonth() + T) }, function (i, T) { return T.getUTCMonth() - i.getUTCMonth() + 12 * (T.getUTCFullYear() - i.getUTCFullYear()) }, function (e) { return e.getUTCMonth() }), kl = km.range, j0 = kO(function (e) { e.setUTCMonth(0, 1), e.setUTCHours(0, 0, 0, 0) }, function (i, T) { i.setUTCFullYear(i.getUTCFullYear() + T) }, function (i, T) { return T.getUTCFullYear() - i.getUTCFullYear() }, function (e) { return e.getUTCFullYear() }); j0.every = function (e) { return isFinite(e = Math.floor(e)) && e > 0 ? kO(function (i) { i.setUTCFullYear(Math.floor(i.getUTCFullYear() / e) * e), i.setUTCMonth(0, 1), i.setUTCHours(0, 0, 0, 0) }, function (i, T) { i.setUTCFullYear(i.getUTCFullYear() + T * e) }) : null }; var kk = j0.range; kw.timeInterval = kO, kw.timeMillisecond = kJ, kw.timeMilliseconds = kS, kw.utcMillisecond = kJ, kw.utcMilliseconds = kS, kw.timeSecond = jZ, kw.timeSeconds = kP, kw.utcSecond = jZ, kw.utcSeconds = kP, kw.timeMinute = kE, kw.timeMinutes = j7, kw.timeHour = kr, kw.timeHours = kK, kw.timeDay = kh, kw.timeDays = jY, kw.timeWeek = ke, kw.timeWeeks = jW, kw.timeSunday = ke, kw.timeSundays = jW, kw.timeMonday = kg, kw.timeMondays = kt, kw.timeTuesday = jU, kw.timeTuesdays = j5, kw.timeWednesday = kc, kw.timeWednesdays = kq, kw.timeThursday = j1, kw.timeThursdays = kG, kw.timeFriday = ku, kw.timeFridays = ks, kw.timeSaturday = kB, kw.timeSaturdays = kR, kw.timeMonth = kI, kw.timeMonths = kT, kw.timeYear = kb, kw.timeYears = j4, kw.utcMinute = kz, kw.utcMinutes = kj, kw.utcHour = ki, kw.utcHours = kf, kw.utcDay = kd, kw.utcDays = ka, kw.utcWeek = j9, kw.utcWeeks = jT, kw.utcSunday = j9, kw.utcSundays = jT, kw.utcMonday = j8, kw.utcMondays = kp, kw.utcTuesday = j6, kw.utcTuesdays = kM, kw.utcWednesday = j3, kw.utcWednesdays = kA, kw.utcThursday = j2, kw.utcThursdays = kH, kw.utcFriday = jX, kw.utcFridays = ko, kw.utcSaturday = jV, kw.utcSaturdays = kn, kw.utcMonth = km, kw.utcMonths = kl, kw.utcYear = j0, kw.utcYears = kk, Object.defineProperty(kw, "__esModule", { value: !0 }) }); function eX(e) { this._elemType = e; this._objCollection = {} } eX.prototype.get = function () { var i = null; for (var e in this._objCollection) { if (this._objCollection[e] && this._objCollection[e]._free === true) { this._objCollection[e]._free = false; return this._objCollection[e] } } i = bU(this._elemType); e = bw.getGUID("obj_pool_"); this._objCollection[e] = i; return i }; eX.prototype.free = function (e) { if (!e) { return } e._free = true; if (e.tagName.toLowerCase() === "img") { e.src = ""; e.crossOrigin = null; e.onload = e.onerror = null } }; eX.prototype.clear = function () { for (var e in this._objCollection) { if (this._objCollection[e] && this._objCollection[e].tagName.toLowerCase === "img") { this._objCollection[e].onload = this._objCollection[e].onerror = null } } this._objCollection = {} }; var hQ = { get: function (i, jU, e, T) { var jT = new XMLHttpRequest(); jT.open("GET", i, true); jT.timeout = 10000; jT.ontimeout = function () { T && T() }; jT.onreadystatechange = function (jV) { if (this.readyState === 4) { if (this.status === 200) { jU && jU(jT.responseText) } else { e && e() } } }; jT.send() }, post: function (i, jV, jU, e, T) { var jT = new XMLHttpRequest(); jT.open("POST", i, true); jT.setRequestHeader("Content-type", "application/x-www-form-urlencoded"); jT.timeout = 10000; jT.ontimeout = function () { T && T() }; jT.onreadystatechange = function (jW) { if (this.readyState === 4) { if (this.status === 200) { jU && jU(jT.responseText, jV) } else { e && e() } } }; jT.send(jV); return jT } }; var gA = (function (e) { function i(jV, T, jU) { if (jV.indexOf("v=") === -1) { jV += "&v=gl" } var jT = bU("script", { src: jV, type: "text/javascript", charset: "utf-8" }); if (jT.addEventListener) { jT.addEventListener("load", function (jX) { var jW = jX.target; jW.parentNode.removeChild(jW); T && T() }, false); jT.addEventListener("error", function (jX) { if (jX) { var jW = jX.target; jW && jW.parentNode && jW.parentNode.removeChild(jW) } jU && jU(null) }, false) } else { if (jT.attachEvent) { jT.attachEvent("onreadystatechange", function (jX) { var jW = window.event.srcElement; if (jW && (jW.readyState === "loaded" || jW.readyState === "complete")) { jW.parentNode.removeChild(jW) } T && T() }) } } e.getElementsByTagName("head")[0].appendChild(jT) } return { load: function (jW, T, jT) { if (typeof jW === "string") { i(jW, T, jT) } else { if (jW.length > 0) { var jV = jW.length; for (var jU = 0; jU < jV; jU++) { i(jW[jU], function () { jV--; if (jV === 0 && T) { T() } }) } } } } } })(window.document); function hK() { } hK.instances = {}; hK.getInstance = function (i, T) { if (hK.instances[i]) { return hK.instances[i] } var e = new jO(i, T); hK.instances[i] = e; return e }; function jO(e, i) { this._name = e; this._baseZoom = 18; this._opts = { tileSize: 256 }; eN.extend(this._opts, i || {}) } jO.mapZoomBaseIndex = [8, 8, 8, 8, 7, 7, 6, 6, 5, 5, 4, 3, 3, 3, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]; jO.baseScaleZoom = [19, 17, 15, 12, 10, 9, 7, 5, 3]; jO.baseScaleZoomMercatorSize = [512, 2048, 4096, 32768, 65536, 262144, 1048576, 4194304, 8388608]; jO.mapZoomBaseZoomMapping = [3, 3, 3, 3, 5, 5, 7, 7, 9, 9, 10, 12, 12, 12, 15, 15, 17, 17, 19, 19, 19, 19, 19, 19, 19, 19]; jO.mapZoomStartZoomMapping = [3, 3, 3, 3, 4, 4, 6, 6, 8, 8, 10, 11, 11, 11, 14, 14, 16, 16, 18, 18, 18, 18, 18, 18, 18, 18]; jO.baseScaleTileSize = [1024, 1024, 512, 512, 256, 512, 512, 512, 256]; jO.mapZoomTileSize = [256, 256, 256, 256, 256, 512, 256, 512, 256, 512, 256, 256, 512, 1024, 256, 512, 512, 1024, 512, 1024, 2048, 4096, 4096 * 2, 4096 * 2 * 2, 4096 * 2 * 2 * 2, 4096 * 2 * 2 * 2 * 2]; jO.baseZoomInfo = { "3": [3], "5": [4, 5], "7": [6, 7], "9": [8, 9], "10": [10], "12": [11, 12, 13], "15": [14, 15], "17": [16, 17], "19": [18, 19, 20, 21, 22, 23, 24, 25] }; jO.prototype = { getName: function () { return this._name }, getTileSize: function (e) { e = Math.floor(e); if (e < 3) { e = 3 } if (this._name === "na") { return jO.mapZoomTileSize[e] } return this._opts.tileSize }, getBaseTileSize: function (i) { i = Math.floor(i); if (this._name === "na") { var e = jO.mapZoomBaseZoomMapping[i]; return jO.mapZoomTileSize[e] } return this._opts.tileSize }, getDataZoom: function (e) { e = Math.floor(e); if (this._name === "na") { return jO.mapZoomBaseZoomMapping[e] } return e }, getZoomUnits: function (e) { return Math.pow(2, (this._baseZoom - e)) }, getMercatorSize: function (T, i) { if (this._name === "na") { T = Math.floor(T); var e = jO.mapZoomBaseIndex[T]; return jO.baseScaleZoomMercatorSize[e] } return this._opts.tileSize * this.getZoomUnits(i) }, getBaseZoom: function () { return this._baseZoom }, getParentTile: function (jT, jZ, jY, T, i) { if (this._name === "na") { var jU = jO.baseZoomInfo[jY]; T--; if (jU.indexOf(T) > -1) { return { col: jT, row: jZ, zoom: jY, useZoom: T } } else { var jW = jO.mapZoomBaseIndex[jY]; var jV = jO.baseScaleZoom[jW + 1]; if (!jV) { return null } var jX = this.getFactorByZooms(jV, jY); var e = jO.baseZoomInfo[jV]; return { col: Math.floor(jT / jX), row: Math.floor(jZ / jX), zoom: jV, useZoom: e[e.length - 1] } } return null } if (jY - 1 < i) { return null } return { col: Math.floor(jT / 2), row: Math.floor(jZ / 2), zoom: jY - 1, useZoom: jY - 1 } }, getChildTiles: function (jU, jW, e, T, j3, j9) { if (this._name === "na") { var jT = jO.baseZoomInfo[e]; T += j9; if (jT.indexOf(T) > -1) { return [{ col: jU, row: jW, zoom: e, useZoom: T }] } else { var j7 = 0; var j4 = e; while (j7 < j9) { var j8 = jO.mapZoomBaseIndex[j4]; var jY = jO.baseScaleZoom[j8 - 1]; if (!jY) { return null } var jZ = jO.baseZoomInfo[jY]; if (jZ[j9 - 1]) { var j0 = []; var j2 = this.getFactorByZooms(e, jY); var i = jU * j2; var j1 = jW * j2; for (var j6 = 0; j6 < j2; j6++) { var jV = i + j6; for (var j5 = 0; j5 < j2; j5++) { var jX = j1 + j5; j0.push({ col: jV, row: jX, zoom: jY, useZoom: jZ[j9 - 1] }) } } return j0 } j7 += jZ.length; if (j9 === jZ.length) { j4 = jY } } } return null } var j0 = []; if (e + j9 > j3) { return null } var j2 = Math.pow(2, j9); var i = jU * j2; var j1 = jW * j2; var jY = e + j9; var j0 = []; for (var j6 = 0; j6 < 2; j6++) { var jV = i + j6; for (var j5 = 0; j5 < 2; j5++) { var jX = j1 + j5; j0.push({ col: jV, row: jX, zoom: jY, useZoom: jY }) } } return j0 }, getFactorByZooms: function (i, jT) { var T = jO.mapZoomBaseIndex[i]; var jU = jO.mapZoomBaseIndex[jT]; var e = jO.baseScaleZoomMercatorSize[T]; var jV = jO.baseScaleZoomMercatorSize[jU]; return e / jV } }; var cZ = {}; var Z = ["swiftshader", "microsoft basic render driver"]; var g8 = ["intel", "nvidia", "amd", "apple", "geforce"]; function gr(e) { e = e.toLowerCase(); if (Z.indexOf(e) >= 0) { return true } if (e.indexOf("mobile") >= 0) { return true } return false } function cv(T) { T = T.toLowerCase(); for (var e = 0; e < g8.length; e++) { if (T.indexOf(g8[e]) >= 0) { return true } } return false } function jM(e) { if (!e) { return false } if (gr(e)) { return false } if (cv(e)) { return true } return false } cZ.ifEnableEarth = function (i) { var e = cZ.ifEnableEarth; if (!i && typeof e._enable === "boolean") { return e._enable } if (cZ.ifSupportWebGL()) { e._enable = true; return true } e._enable = false; return false }; cZ.ifEnableWebGLMap = function (i) { var e = cZ.ifEnableWebGLMap; if (!i && typeof e._enable === "boolean") { return e._enable } if (cZ.ifSupportWebGL()) { if (aH.inMapHost) { e._enable = true; return true } else { if (window.Blob || window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder) { e._enable = true; return true } else { e._enable = false; return false } } } e._enable = false; return false }; cZ.params = {}; cZ.ifSupportWebGL = function () { var i = cZ.ifSupportWebGL; if (typeof i._supportWebGL === "boolean") { return i._supportWebGL } if (!window.WebGLRenderingContext) { i._supportWebGL = false; return false } var T = document.createElement("canvas"); T.width = 300; T.height = 150; var jU = null; var j0 = { alpha: true, antialias: false, failIfMajorPerformanceCaveat: false, preserveDrawingBuffer: false, stencil: false }; try { jU = T.getContext("webgl", j0) || T.getContext("experimental-webgl", j0) } catch (jW) { i._supportWebGL = false } if (jU === null) { i._supportWebGL = false } else { i._supportWebGL = true; var jY = jU.getExtension("WEBGL_debug_renderer_info"); var jX = ""; if (jY) { jX = jU.getParameter(jY.UNMASKED_RENDERER_WEBGL); if (jM(jX) === true) { i._supportWebGL = true } var jZ = jU.getParameter(jY.UNMASKED_VENDOR_WEBGL); i._renderer = jX; i._vendor = jZ } if (!jY && eN.Browser.firefox) { i._supportWebGL = true } if (!jY && eN.Platform.macintosh) { i._supportWebGL = true } if (jU.drawingBufferWidth !== T.width || jU.drawingBufferHeight !== T.height) { i._supportWebGL = false } if (jU.getParameter(jU.MAX_VERTEX_TEXTURE_IMAGE_UNITS) < 4) { i._supportWebGL = false } var jT = jU.getParameter(jU.MAX_TEXTURE_SIZE); cZ.params.maxTextureSize = jT; if (jT < 4096) { i._supportWebGL = false } var jV = jU.getParameter(jU.MAX_TEXTURE_IMAGE_UNITS); if (jV < 8) { i._supportWebGL = false } if (!jU.getShaderPrecisionFormat || jU.getShaderPrecisionFormat(jU.FRAGMENT_SHADER, jU.HIGH_FLOAT).precision < 23) { i._supportWebGL = false } } return i._supportWebGL }; cZ.ifSupportCanvas2d = function () { var jU = cZ.ifSupportCanvas2d; if (typeof jU.supportCanvas2d === "boolean") { return jU.supportCanvas2d } var T = document.createElement("canvas"); var i = null; try { i = T.getContext("2d") } catch (jT) { jU.supportCanvas2d = false } if (i === null) { jU.supportCanvas2d = false } else { jU.supportCanvas2d = true } return jU.supportCanvas2d }; cZ.ifCanvas2dInBlackList = function () { return true }; cZ.ifEnableCanvas2dMap = function () { return false; var i = navigator.userAgent; var e = 0; var jT = 0; var jU = 0; if (/macintosh/ig.test(i)) { var T = 0; if (/(\d+\.\d)?(?:\.\d)?\s+safari\/?(\d+\.\d+)?/i.test(i) && !/chrome/i.test(i)) { T = parseInt((RegExp["\x241"] || RegExp["\x242"]), 10) } if (T > 0) { return false } return true } if (/windows nt (\d+\.\d)/ig.test(i)) { jT = parseFloat(RegExp.$1); if (jT >= 6.1) { if (/chrome\/(\d+\.\d)/i.test(i)) { e = parseFloat(RegExp.$1); if (e >= 31) { return true } } if (/MSIE (\d+(\.\d+)?)/.test(i)) { jU = parseFloat(RegExp.$1); if (jU >= 10) { return true } } if (/Firefox/.test(i)) { return true } if (/rv:11.0/ig.test(i)) { return true } if (/edge/ig.test(i)) { return true } } } return false }; cZ.ifSupportCSS3 = function (jX, i) { var jW = document.createElement("div"); var jV = "Webkit Moz O ms".split(" "); var e = jV.length; var T = ""; var jT = jW.style; if (jX in jT) { T = jX } jX = jX.replace(/^[a-z]/, function (jY) { return jY.toUpperCase() }); while (e--) { var jU = jV[e] + jX; if (jU in jT) { T = jU; break } } if (i) { return T } else { return T.length > 0 ? true : false } }; cZ.isModernBrowser = cZ.ifSupportCanvas2d() && cZ.ifSupportCSS3("transform"); function ay(i, e) { this._size = i; this._curSize = 0; this._cache = {}; this._least = null; this._most = null; this._options = { clearCallback: null, removeOldCallback: null }; e = e || {}; for (var T in e) { this._options[T] = e[T] } this._getDataTimes = 0; this._hitTimes = 0 } ay.prototype.setData = function (jT, jV) { var i = this._cache; var T = this._size; if (T === 0) { return } var e = this._curSize; if (e === T) { this._removeOld() } var jU; if (!i[jT]) { jU = { key: jT, data: jV, older: null, newwer: null }; i[jT] = jU; if (this._least === null) { this._least = jU } if (this._most === null) { this._most = jU } this._curSize++ } else { jU = i[jT]; jU.data = jV; if (this._most === jU) { return } jU.older && (jU.older.newer = jU.newer); jU.newer && (jU.newer.older = jU.older); if (this._least === jU) { this._least = jU.newer } } if (this._most && this._most !== jU) { this._most.newer = jU; jU.older = this._most; this._most = jU; jU.newer = null } }; ay.prototype.getData = function (e) { var i = this._cache[e]; this._getDataTimes++; if (i) { this._hitTimes++; var T = i.data; if (this._most === i) { return T } i.older && (i.older.newer = i.newer); i.newer && (i.newer.older = i.older); if (this._least === i) { this._least = i.newer } this._most.newer = i; i.older = this._most; i.newer = null; this._most = i; return T } return null }; ay.prototype.getAllData = function () { return this._cache }; ay.prototype.getHitRate = function () { return this._hitTimes / this._getDataTimes }; ay.prototype.removeData = function (i) { var e = this._cache; var T = e[i]; if (!T) { return } if (this._options.clearCallback) { this._options.clearCallback(T.data, T.key) } T.older && (T.older.newer = T.newer); T.newer && (T.newer.older = T.older); if (this._least === T) { this._least = T.newer } if (this._most === T) { this._most = T.older } delete e[i]; this._curSize-- }; ay.prototype._removeOld = function () { var e = this._cache; var jT = Math.round(this._size * 0.6); var T = 0; while (this._least && T < jT) { var i = this._least; this._least = i.newer; i.newer && (i.newer.older = null); if (this._options.clearCallback) { this._options.clearCallback(i.data, i.key) } delete e[i.key]; T++ } this._curSize -= T; if (this._options.removeOldCallback) { this._options.removeOldCallback() } }; ay.prototype.clear = function () { var e = this._cache; var i = this._least; if (this._options.clearCallback) { while (i) { this._options.clearCallback(i.data, i.key); i = i.newer } } this._least = this._most = null; this._cache = {}; this._curSize = 0 }; ay.prototype.forEach = function (e) { var i = this._least; while (i) { e(i.data); i = i.newer } }; ay.prototype.clearExcept = function (i) { var e = this._cache; var T = this._least; while (T) { if (!i[T.key]) { if (this._options.clearCallback) { this._options.clearCallback(T.data, T.key) } T.older && (T.older.newer = T.newer); T.newer && (T.newer.older = T.older); if (this._least === T) { this._least = T.newer } if (this._most === T) { this._most = T.older } delete e[T.key]; this._curSize-- } T = T.newer } }; !function (T, i) { "object" == typeof bw && "undefined" != typeof module ? module.exports = i() : "function" == typeof define && define.amd ? define(i) : (T = "undefined" != typeof globalThis ? globalThis : T || self).gcoord = i() }(this, (function () { var kx = function () { return (kx = Object.assign || function (kC) { for (var i, T = 1, kE = arguments.length; T < kE; T++) { for (var kD in i = arguments[T]) { Object.prototype.hasOwnProperty.call(i, kD) && (kC[kD] = i[kD]) } } return kC }).apply(this, arguments) }, ki = Math.sin, kk = Math.cos, ko = Math.sqrt, kn = Math.abs, kB = Math.PI, kt = 6378245, kh = 0.006693421622965823; function kw(T, i) { return T >= 72.004 && T <= 137.8347 && i >= 0.8293 && i <= 55.8271 } function kz(kE, kD) { var kH, i, kJ, T = (kJ = 300 + (kH = kE - 105) + 2 * (i = kD - 35) + 0.1 * kH * kH + 0.1 * kH * i + 0.1 * ko(kn(kH)), kJ += 2 * (20 * ki(6 * kH * kB) + 20 * ki(2 * kH * kB)) / 3, (kJ += 2 * (20 * ki(kH * kB) + 40 * ki(kH / 3 * kB)) / 3) + 2 * (150 * ki(kH / 12 * kB) + 300 * ki(kH / 30 * kB)) / 3), kC = function (kM, kL) { var kK = 2 * kM - 100 + 3 * kL + 0.2 * kL * kL + 0.1 * kM * kL + 0.2 * ko(kn(kM)); return kK += 2 * (20 * ki(6 * kM * kB) + 20 * ki(2 * kM * kB)) / 3, kK += 2 * (20 * ki(kL * kB) + 40 * ki(kL / 3 * kB)) / 3, kK + 2 * (160 * ki(kL / 12 * kB) + 320 * ki(kL * kB / 30)) / 3 }(kE - 105, kD - 35), kG = kD / 180 * kB, kF = ki(kG), kI = ko(kF = 1 - kh * kF * kF); return [T = 180 * T / (kt / kI * kk(kG) * kB), kC = 180 * kC / (kt * (1 - kh) / (kF * kI) * kB)] } function kq(kC) { var i = kC[0], T = kC[1]; if (!kw(i, T)) { return [i, T] } var kD = kz(i, T); return [i + kD[0], T + kD[1]] } function kj(kE) { var kI = kE[0], T = kE[1]; if (!kw(kI, T)) { return [kI, T] } for (var kC = [kI, T], kG = kC[0], kD = kC[1], kH = kq([kG, kD]), kF = kH[0] - kI, kJ = kH[1] - T; kn(kF) > 0.000001 || kn(kJ) > 0.000001;) { kF = (kH = kq([kG -= kF, kD -= kJ]))[0] - kI, kJ = kH[1] - T } return [kG, kD] } var ku = Math.sin, kv = Math.cos, j1 = Math.atan2, ky = Math.sqrt, kg = 3000 * Math.PI / 180; function km(kC) { var i = kC[0] - 0.0065, T = kC[1] - 0.006, kE = ky(i * i + T * T) - 0.00002 * ku(T * kg), kD = j1(T, i) - 0.000003 * kv(i * kg); return [kE * kv(kD), kE * ku(kD)] } function j5(kC) { var i = kC[0], T = kC[1], kE = ky(i * i + T * T) + 0.00002 * ku(T * kg), kD = j1(T, i) + 0.000003 * kv(i * kg); return [kE * kv(kD) + 0.0065, kE * ku(kD) + 0.006] } var kd = 180 / Math.PI, jW = Math.PI / 180, jY = 6378137, kA = 20037508.342789244; function ka(i) { return [i[0] * kd / jY, (0.5 * Math.PI - 2 * Math.atan(Math.exp(-i[1] / jY))) * kd] } function kp(kC) { var i = Math.abs(kC[0]) <= 180 ? kC[0] : kC[0] - 360 * (kC[0] < 0 ? -1 : 1), T = [jY * i * jW, jY * Math.log(Math.tan(0.25 * Math.PI + 0.5 * kC[1] * jW))]; return T[0] > kA && (T[0] = kA), T[0] < -kA && (T[0] = -kA), T[1] > kA && (T[1] = kA), T[1] < -kA && (T[1] = -kA), T } var j9, j8, j7, kf, j4, jT, ke = Math.abs, kr = [12890594.86, 8362377.87, 5591021, 3481989.83, 1678043.12, 0], j3 = [75, 60, 45, 30, 15, 0], jV = [[1.410526172116255e-8, 0.00000898305509648872, -1.9939833816331, 200.9824383106796, -187.2403703815547, 91.6087516669843, -23.38765649603339, 2.57121317296198, -0.03801003308653, 17337981.2], [-7.435856389565537e-9, 0.000008983055097726239, -0.78625201886289, 96.32687599759846, -1.85204757529826, -59.36935905485877, 47.40033549296737, -16.50741931063887, 2.28786674699375, 10260144.86], [-3.030883460898826e-8, 0.00000898305509983578, 0.30071316287616, 59.74293618442277, 7.357984074871, -25.38371002664745, 13.45380521110908, -3.29883767235584, 0.32710905363475, 6856817.37], [-1.981981304930552e-8, 0.000008983055099779535, 0.03278182852591, 40.31678527705744, 0.65659298677277, -4.44255534477492, 0.85341911805263, 0.12923347998204, -0.04625736007561, 4482777.06], [3.09191371068437e-9, 0.000008983055096812155, 0.00006995724062, 23.10934304144901, -0.00023663490511, -0.6321817810242, -0.00663494467273, 0.03430082397953, -0.00466043876332, 2555164.4], [2.890871144776878e-9, 0.000008983055095805407, -3.068298e-8, 7.47137025468032, -0.00000353937994, -0.02145144861037, -0.00001234426596, 0.00010322952773, -0.00000323890364, 826088.5]], ks = [[-0.0015702102444, 111320.7020616939, 1704480524535203, -10338987376042340, 26112667856603880, -35149669176653700, 26595700718403920, -10725012454188240, 1800819912950474, 82.5], [0.0008277824516172526, 111320.7020463578, 647795574.6671607, -4082003173.641316, 10774905663.51142, -15171875531.51559, 12053065338.62167, -5124939663.577472, 913311935.9512032, 67.5], [0.00337398766765, 111320.7020202162, 4481351.045890365, -23393751.19931662, 79682215.47186455, -115964993.2797253, 97236711.15602145, -43661946.33752821, 8477230.501135234, 52.5], [0.00220636496208, 111320.7020209128, 51751.86112841131, 3796837.749470245, 992013.7397791013, -1221952.21711287, 1340652.697009075, -620943.6990984312, 144416.9293806241, 37.5], [-0.0003441963504368392, 111320.7020576856, 278.2353980772752, 2485758.690035394, 6070.750963243378, 54821.18345352118, 9540.606633304236, -2710.55326746645, 1405.483844121726, 22.5], [-0.0003218135878613132, 111320.7020701615, 0.00369383431289, 823725.6402795718, 0.46104986909093, 2351.343141331292, 1.58060784298199, 8.77738589078284, 0.37238884252424, 7.45]]; function j2(kD, T, kC) { var kF = ke(T) / kC[9], kE = kC[0] + kC[1] * ke(kD), i = kC[2] + kC[3] * kF + kC[4] * Math.pow(kF, 2) + kC[5] * Math.pow(kF, 3) + kC[6] * Math.pow(kF, 4) + kC[7] * Math.pow(kF, 5) + kC[8] * Math.pow(kF, 6); return [kE *= kD < 0 ? -1 : 1, i *= T < 0 ? -1 : 1] } function kl(kC) { for (var i = kC[0], T = kC[1], kE = [], kD = 0; kD < j3.length; kD++) { if (ke(T) > j3[kD]) { kE = ks[kD]; break } } return j2(i, T, kE) } function j0(kC) { for (var i = kC[0], T = kC[1], kE = [], kD = 0; kD < kr.length; kD++) { if (T >= kr[kD]) { kE = jV[kD]; break } } return j2(i, T, kE) } function jZ(T, i) { if (!T) { throw new Error(i) } } function kb(i) { return !!i && "[object Array]" === Object.prototype.toString.call(i) } function j6(i) { return !isNaN(Number(i)) && null !== i && !kb(i) } function jX() { for (var kC = [], i = 0; i < arguments.length; i++) { kC[i] = arguments[i] } var T = kC.length - 1; return function () { for (var kD = [], kF = 0; kF < arguments.length; kF++) { kD[kF] = arguments[kF] } for (var kE = T, e = kC[T].apply(null, kD); kE--;) { e = kC[kE].call(null, e) } return e } } function jU(kT, kI, kK) { if (void 0 === kK && (kK = !1), null !== kT) { for (var kN, kM, kW, kP, kH, kS, kV, kO, kJ = 0, kQ = 0, kR = kT.type, kD = "FeatureCollection" === kR, kU = "Feature" === kR, kG = kD ? kT.features.length : 1, kL = 0; kL < kG; kL++) { kH = (kO = !!(kV = kD ? kT.features[kL].geometry : kU ? kT.geometry : kT) && "GeometryCollection" === kV.type) ? kV.geometries.length : 1; for (var kF = 0; kF < kH; kF++) { var kE = 0, T = 0; if (null !== (kP = kO ? kV.geometries[kF] : kV)) { var kC = kP.type; switch (kJ = !kK || "Polygon" !== kC && "MultiPolygon" !== kC ? 0 : 1, kC) { case null: break; case "Point": if (!1 === kI(kS = kP.coordinates, kQ, kL, kE, T)) { return !1 } kQ++, kE++; break; case "LineString": case "MultiPoint": for (kS = kP.coordinates, kN = 0; kN < kS.length; kN++) { if (!1 === kI(kS[kN], kQ, kL, kE, T)) { return !1 } kQ++, "MultiPoint" === kC && kE++ } "LineString" === kC && kE++; break; case "Polygon": case "MultiLineString": for (kS = kP.coordinates, kN = 0; kN < kS.length; kN++) { for (kM = 0; kM < kS[kN].length - kJ; kM++) { if (!1 === kI(kS[kN][kM], kQ, kL, kE, T)) { return !1 } kQ++ } "MultiLineString" === kC && kE++, "Polygon" === kC && T++ } "Polygon" === kC && kE++; break; case "MultiPolygon": for (kS = kP.coordinates, kN = 0; kN < kS.length; kN++) { for (T = 0, kM = 0; kM < kS[kN].length; kM++) { for (kW = 0; kW < kS[kN][kM].length - kJ; kW++) { if (!1 === kI(kS[kN][kM][kW], kQ, kL, kE, T)) { return !1 } kQ++ } T++ } kE++ } break; case "GeometryCollection": for (kN = 0; kN < kP.geometries.length; kN++) { if (!1 === jU(kP.geometries[kN], kI, kK)) { return !1 } } break; default: throw new Error("Unknown Geometry Type") } } } } } } !function (i) { i.WGS84 = "WGS84", i.WGS1984 = "WGS84", i.EPSG4326 = "WGS84", i.GCJ02 = "GCJ02", i.AMap = "GCJ02", i.BD09 = "BD09", i.BD09LL = "BD09", i.Baidu = "BD09", i.BMap = "BD09", i.BD09MC = "BD09MC", i.BD09Meter = "BD09MC", i.EPSG3857 = "EPSG3857", i.EPSG900913 = "EPSG3857", i.EPSG102100 = "EPSG3857", i.WebMercator = "EPSG3857", i.WM = "EPSG3857" }(jT || (jT = {})); var kc = { WGS84: { to: (j9 = {}, j9[jT.GCJ02] = kq, j9[jT.BD09] = jX(j5, kq), j9[jT.BD09MC] = jX(kl, j5, kq), j9[jT.EPSG3857] = kp, j9) }, GCJ02: { to: (j8 = {}, j8[jT.WGS84] = kj, j8[jT.BD09] = j5, j8[jT.BD09MC] = jX(kl, j5), j8[jT.EPSG3857] = jX(kp, kj), j8) }, BD09: { to: (j7 = {}, j7[jT.WGS84] = jX(kj, km), j7[jT.GCJ02] = km, j7[jT.EPSG3857] = jX(kp, kj, km), j7[jT.BD09MC] = kl, j7) }, EPSG3857: { to: (kf = {}, kf[jT.WGS84] = ka, kf[jT.GCJ02] = jX(kq, ka), kf[jT.BD09] = jX(j5, kq, ka), kf[jT.BD09MC] = jX(kl, j5, kq, ka), kf) }, BD09MC: { to: (j4 = {}, j4[jT.WGS84] = jX(kj, km, j0), j4[jT.GCJ02] = jX(km, j0), j4[jT.EPSG3857] = jX(kp, kj, km, j0), j4[jT.BD09] = j0, j4) } }; return kx(kx({}, jT), { CRSTypes: jT, transform: function (kG, kE, kF) { if (jZ(!!kG, "The args[0] input coordinate is required"), jZ(!!kE, "The args[1] original coordinate system is required"), jZ(!!kF, "The args[2] target coordinate system is required"), kE === kF) { return kG } var kI = kc[kE]; jZ(!!kI, "Invalid original coordinate system: " + kE); var kH = kI.to[kF]; jZ(!!kH, "Invalid target coordinate system: " + kF); var T = typeof kG; if (jZ("string" === T || "object" === T, "Invalid input coordinate type: " + T), "string" === T) { try { kG = JSON.parse(kG) } catch (kE) { throw new Error("Invalid input coordinate: " + kG) } } var kD = !1; kb(kG) && (jZ(kG.length >= 2, "Invalid input coordinate: " + kG), jZ(j6(kG[0]) && j6(kG[1]), "Invalid input coordinate: " + kG), kG = kG.map(Number), kD = !0); var kC = kH; return kD ? kC(kG) : (jU(kG, (function (kJ) { var i; i = kC(kJ), kJ[0] = i[0], kJ[1] = i[1] })), kG) } }) })); var hm = { ColorRefTable: { aliceblue: ["#f0f8ff", "rgb(240,248,255)"], antiquewhite: ["#faebd7", "rgb(250,235,215)"], aqua: ["#00ffff", "rgb(0,255,255)"], aquamarine: ["#7fffd4", "rgb(127,255,212)"], azure: ["#f0ffff", "rgb(240,255,255)"], beige: ["#f5f5dc", "rgb(245,245,220)"], bisque: ["#ffe4c4", "rgb(255,228,196)"], black: ["#000000", "rgb(0,0,0)"], blanchedalmond: ["#ffebcd", "rgb(255,235,205)"], blue: ["#0000ff", "rgb(0,0,255)"], blueviolet: ["#8a2be2", "rgb(138,43,226)"], brown: ["#a52a2a", "rgb(165,42,42)"], burlywood: ["#deb887", "rgb(222,184,135)"], cadetblue: ["#5f9ea0", "rgb(95,158,160)"], chartreuse: ["#7fff00", "rgb(127,255,0)"], chocolate: ["#d2691e", "rgb(210,105,30)"], coral: ["#ff7f50", "rgb(255,127,80)"], cornflowerblue: ["#6495ed", "rgb(100,149,237)"], cornsilk: ["#fff8dc", "rgb(255,248,220)"], crimson: ["#dc143c", "rgb(220,20,60)"], cyan: ["#00ffff", "rgb(0,255,255)"], darkblue: ["#00008b", "rgb(0,0,139)"], darkcyan: ["#008b8b", "rgb(0,139,139)"], darkgoldenrod: ["#b8860b", "rgb(184,134,11)"], darkgray: ["#a9a9a9", "rgb(169,169,169)"], darkgreen: ["#006400", "rgb(0,100,0)"], darkgrey: ["#a9a9a9", "rgb(169,169,169)"], darkkhaki: ["#bdb76b", "rgb(189,183,107)"], darkmagenta: ["#8b008b", "rgb(139,0,139)"], darkolivegreen: ["#556b2f", "rgb(85,107,47)"], darkorange: ["#ff8c00", "rgb(255,140,0)"], darkorchid: ["#9932cc", "rgb(153,50,204)"], darkred: ["#8b0000", "rgb(139,0,0)"], darksalmon: ["#e9967a", "rgb(233,150,122)"], darkseagreen: ["#8fbc8f", "rgb(143,188,143)"], darkslateblue: ["#483d8b", "rgb(72,61,139)"], darkslategray: ["#2f4f4f", "rgb(47,79,79)"], darkslategrey: ["#2f4f4f", "rgb(47,79,79)"], darkturquoise: ["#00ced1", "rgb(0,206,209)"], darkviolet: ["#9400d3", "rgb(148,0,211)"], deeppink: ["#ff1493", "rgb(255,20,147)"], deepskyblue: ["#00bfff", "rgb(0,191,255)"], dimgray: ["#696969", "rgb(105,105,105)"], dimgrey: ["#696969", "rgb(105,105,105)"], dodgerblue: ["#1e90ff", "rgb(30,144,255)"], firebrick: ["#b22222", "rgb(178,34,34)"], floralwhite: ["#fffaf0", "rgb(255,250,240)"], forestgreen: ["#228b22", "rgb(34,139,34)"], fuchsia: ["#ff00ff", "rgb(255,0,255)"], gainsboro: ["#dcdcdc", "rgb(220,220,220)"], ghostwhite: ["#f8f8ff", "rgb(248,248,255)"], gold: ["#ffd700", "rgb(255,215,0)"], goldenrod: ["#daa520", "rgb(218,165,32)"], gray: ["#808080", "rgb(128,128,128)"], green: ["#008000", "rgb(0,128,0)"], greenyellow: ["#adff2f", "rgb(173,255,47)"], grey: ["#808080", "rgb(128,128,128)"], honeydew: ["#f0fff0", "rgb(240,255,240)"], hotpink: ["#ff69b4", "rgb(255,105,180)"], indianred: ["#cd5c5c", "rgb(205,92,92)"], indigo: ["#4b0082", "rgb(75,0,130)"], ivory: ["#fffff0", "rgb(255,255,240)"], khaki: ["#f0e68c", "rgb(240,230,140)"], lavender: ["#e6e6fa", "rgb(230,230,250)"], lavenderblush: ["#fff0f5", "rgb(255,240,245)"], lawngreen: ["#7cfc00", "rgb(124,252,0)"], lemonchiffon: ["#fffacd", "rgb(255,250,205)"], lightblue: ["#add8e6", "rgb(173,216,230)"], lightcoral: ["#f08080", "rgb(240,128,128)"], lightcyan: ["#e0ffff", "rgb(224,255,255)"], lightgoldenrodyellow: ["#fafad2", "rgb(250,250,210)"], lightgray: ["#d3d3d3", "rgb(211,211,211)"], lightgreen: ["#90ee90", "rgb(144,238,144)"], lightgrey: ["#d3d3d3", "rgb(211,211,211)"], lightpink: ["#ffb6c1", "rgb(255,182,193)"], lightsalmon: ["#ffa07a", "rgb(255,160,122)"], lightseagreen: ["#20b2aa", "rgb(32,178,170)"], lightskyblue: ["#87cefa", "rgb(135,206,250)"], lightslategray: ["#778899", "rgb(119,136,153)"], lightslategrey: ["#778899", "rgb(119,136,153)"], lightsteelblue: ["#b0c4de", "rgb(176,196,222)"], lightyellow: ["#ffffe0", "rgb(255,255,224)"], lime: ["#00ff00", "rgb(0,255,0)"], limegreen: ["#32cd32", "rgb(50,205,50)"], linen: ["#faf0e6", "rgb(250,240,230)"], magenta: ["#ff00ff", "rgb(255,0,255)"], maroon: ["#800000", "rgb(128,0,0)"], mediumaquamarine: ["#66cdaa", "rgb(102,205,170)"], mediumblue: ["#0000cd", "rgb(0,0,205)"], mediumorchid: ["#ba55d3", "rgb(186,85,211)"], mediumpurple: ["#9370db", "rgb(147,112,219)"], mediumseagreen: ["#3cb371", "rgb(60,179,113)"], mediumslateblue: ["#7b68ee", "rgb(123,104,238)"], mediumspringgreen: ["#00fa9a", "rgb(0,250,154)"], mediumturquoise: ["#48d1cc", "rgb(72,209,204)"], mediumvioletred: ["#c71585", "rgb(199,21,133)"], midnightblue: ["#191970", "rgb(25,25,112)"], mintcream: ["#f5fffa", "rgb(245,255,250)"], mistyrose: ["#ffe4e1", "rgb(255,228,225)"], moccasin: ["#ffe4b5", "rgb(255,228,181)"], navajowhite: ["#ffdead", "rgb(255,222,173)"], navy: ["#000080", "rgb(0,0,128)"], oldlace: ["#fdf5e6", "rgb(253,245,230)"], olive: ["#808000", "rgb(128,128,0)"], olivedrab: ["#6b8e23", "rgb(107,142,35)"], orange: ["#ffa500", "rgb(255,165,0)"], orangered: ["#ff4500", "rgb(255,69,0)"], orchid: ["#da70d6", "rgb(218,112,214)"], palegoldenrod: ["#eee8aa", "rgb(238,232,170)"], palegreen: ["#98fb98", "rgb(152,251,152)"], paleturquoise: ["#afeeee", "rgb(175,238,238)"], palevioletred: ["#db7093", "rgb(219,112,147)"], papayawhip: ["#ffefd5", "rgb(255,239,213)"], peachpuff: ["#ffdab9", "rgb(255,218,185)"], peru: ["#cd853f", "rgb(205,133,63)"], pink: ["#ffc0cb", "rgb(255,192,203)"], plum: ["#dda0dd", "rgb(221,160,221)"], powderblue: ["#b0e0e6", "rgb(176,224,230)"], purple: ["#800080", "rgb(128,0,128)"], red: ["#ff0000", "rgb(255,0,0)"], rosybrown: ["#bc8f8f", "rgb(188,143,143)"], royalblue: ["#4169e1", "rgb(65,105,225)"], saddlebrown: ["#8b4513", "rgb(139,69,19)"], salmon: ["#fa8072", "rgb(250,128,114)"], sandybrown: ["#f4a460", "rgb(244,164,96)"], seagreen: ["#2e8b57", "rgb(46,139,87)"], seashell: ["#fff5ee", "rgb(255,245,238)"], sienna: ["#a0522d", "rgb(160,82,45)"], silver: ["#c0c0c0", "rgb(192,192,192)"], skyblue: ["#87ceeb", "rgb(135,206,235)"], slateblue: ["#6a5acd", "rgb(106,90,205)"], slategray: ["#708090", "rgb(112,128,144)"], slategrey: ["#708090", "rgb(112,128,144)"], snow: ["#fffafa", "rgb(255,250,250)"], springgreen: ["#00ff7f", "rgb(0,255,127)"], steelblue: ["#4682b4", "rgb(70,130,180)"], tan: ["#d2b48c", "rgb(210,180,140)"], teal: ["#008080", "rgb(0,128,128)"], thistle: ["#d8bfd8", "rgb(216,191,216)"], tomato: ["#ff6347", "rgb(255,99,71)"], turquoise: ["#40e0d0", "rgb(64,224,208)"], violet: ["#ee82ee", "rgb(238,130,238)"], wheat: ["#f5deb3", "rgb(245,222,179)"], white: ["#ffffff", "rgb(255,255,255)"], whitesmoke: ["#f5f5f5", "rgb(245,245,245)"], yellow: ["#ffff00", "rgb(255,255,0)"], yellowgreen: ["#9acd32", "rgb(154,205,50)"] }, regGroup: { hex: /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/, rgb: /rgb\(\s*(\d|\d\d|1\d\d|2[0-4]\d|25[0-5])\s*,\s*(\d|\d\d|1\d\d|2[0-4]\d|25[0-5])\s*,\s*(\d|\d\d|1\d\d|2[0-4]\d|25[0-5])\s*\)/, rgba: /rgba\(\s*(\d|\d\d|1\d\d|2[0-4]\d|25[0-5])\s*,\s*(\d|\d\d|1\d\d|2[0-4]\d|25[0-5])\s*,\s*(\d|\d\d|1\d\d|2[0-4]\d|25[0-5])\s*,\s*(0|1|0\.[1-9])\s*\)/ }, parseHexToRgbaArray: function (jV) { var jW = jV.replace("#", ""); if (jW.length === 3) { jW += "f" } else { if (jW.length === 6) { jW += "ff" } } var e = []; var jU = jW.length; var jT = jU === 8 ? 2 : 1; for (var T = 0; T < jU; T = T + jT) { if (jT === 2) { e.push(parseInt(jW.slice(T, T + 2), 16)) } else { e.push(parseInt(jW.slice(T, T + 1) + jW.slice(T, T + 1), 16)) } } return e }, parseRgbaStrToArray: function (i) { var e = [0, 0, 0, 255]; if (i.indexOf("rgba(") === 0) { var jT = i.replace("rgba(", "").replace(")", ""); var T = jT.split(","); e[0] = parseInt(T[0], 10); e[1] = parseInt(T[1], 10); e[2] = parseInt(T[2], 10); e[3] = Math.round(parseFloat(T[3]) * 255) } else { if (i.indexOf("rgb(") === 0) { var jT = i.replace("rgb(", "").replace(")", ""); var jU = jT.split(","); e[0] = parseInt(jU[0], 10); e[1] = parseInt(jU[1], 10); e[2] = parseInt(jU[2], 10); e[3] = 255 } } return e }, parseHexAndOpacityToRgbaArray: function (jU, jV) { var T = []; var jY = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/; var jX = jU.toLowerCase(); if (jY.test(jX)) { if (jX.length === 4) { var e = "#"; for (var jW = 1; jW < 4; jW++) { e += jX.slice(jW, jW + 1).concat(jX.slice(jW, jW + 1)) } jX = e } for (var jT = 1; jT < 7; jT += 2) { T.push(parseInt(jX.slice(jT, jT + 2), 16)) } T.push(jV) } return T }, parseCSSColor: function (e) { if (e.indexOf("#") === 0) { return hm.parseHexToRgbaArray(e) } return hm.parseRgbaStrToArray(e) }, rgbToHSV: function (jU) { var e = jU[0] / 255; var T = jU[1] / 255; var jV = jU[2] / 255; var jY = Math.max(e, T, jV); var jT = Math.min(e, T, jV); var jX = jY - jT; var i; if (jX === 0) { i = 0 } else { if (jY === e) { i = 60 * (((T - jV) / jX) % 6) } else { if (jY === T) { i = 60 * ((jV - e) / jX + 2) } else { if (jY === jV) { i = 60 * ((e - T) / jX + 4) } } } } var jZ = jY === 0 ? 0 : (jX / jY); var jW = jY; while (i < 0) { i += 360 } return [i, jZ, jW] }, hsvToRGB: function (jT) { var jX = jT[2] * jT[1]; var T = jX * (1 - Math.abs((jT[0] / 60) % 2 - 1)); var i = jT[2] - jX; var jU = jT[0]; var jW; var jV; var e; if (jU >= 0 && jU < 60) { jW = jX; jV = T; e = 0 } else { if (jU >= 60 && jU < 120) { jW = T; jV = jX; e = 0 } else { if (jU >= 120 && jU < 180) { jW = 0; jV = jX; e = T } else { if (jU >= 180 && jU < 240) { jW = 0; jV = T; e = jX } else { if (jU >= 240 && jU < 300) { jW = T; jV = 0; e = jX } else { if (jU >= 300 && jU < 360) { jW = jX; jV = 0; e = T } } } } } } jW = (jW + i) * 255 > 255 ? 255 : (jW + i) * 255; jV = (jV + i) * 255 > 255 ? 255 : (jV + i) * 255; e = (e + i) * 255 > 255 ? 255 : (e + i) * 255; return [Math.round(jW), Math.round(jV), Math.round(e)] }, formatColorCssToRgbaArray: function (jV, T, jT) { jT = (typeof jT !== "boolean") ? true : jT; if (typeof jV !== "string") { return jT ? [0, 0, 0, 1] : [0, 0, 0, 255] } var i = (jV || "Black").trim().toLowerCase(); var e = []; var jU = hm.ColorRefTable[i]; if (jU !== undefined) { i = jU[0] } e = hm.parseCSSColor(i); if (T !== undefined && !isNaN(Number(T))) { T = Number(T); e[3] = hm.fitTo(T, 0, 1) } else { e[3] = Number((e[3] / 255).toFixed(2)) } if (!jT) { e[3] = Math.floor(e[3] * 255) } return e }, fitTo: function (T, i, e) { if (T < i) { T = i } else { if (T > e) { T = e } } return T }, generateColorRamp: function (e, jZ, j0, jT, j5) { j0 = j0 || []; jT = jT || "#ccc"; j5 = j5 || 1; const T = document.createElement("canvas"); const j6 = T.getContext("2d"); T.width = 256; T.height = j5; const jV = jZ[0]; const j2 = jZ[jZ.length - 1]; if (e.length === jZ.length) { const j3 = j6.createLinearGradient(0, 0, 256, 1); for (var jY = 0; jY < e.length; ++jY) { var j4 = (jZ[jY] - jV) / (j2 - jV); j3.addColorStop(j4, e[jY]) } j6.fillStyle = j3; j6.fillRect(0, 0, 256, j5) } else { if (e.length - jZ.length === -1) { var jX = 0; var jU = 1; for (var jY = 0; jY < e.length; ++jY) { var j1 = (jZ[jU] - jV) / (j2 - jV); var j4 = Math.floor(j1 * 256); j6.fillStyle = e[jY]; j6.fillRect(jX, 0, j4, j5); jX = j4; jU++ } } else { j6.fillStyle = jT || "#ccc"; j6.fillRect(0, 0, 256, j5) } } if (e.length - jZ.length <= -1 && j0.length === 2) { j6.fillStyle = jT || "#ccc"; var j1 = (j0[0] - jV) / (j2 - jV); var j4 = Math.floor(j1 * 256); j6.fillRect(0, 0, j4, j5); j1 = (j0[1] - jV) / (j2 - jV); j4 = Math.floor(j1 * 256); j6.fillRect(j4, 0, 255, j5) } var jW = new Uint8Array(new Uint8ClampedArray(j6.getImageData(0, 0, 256, j5).data)); return { canvas: T, data: jW, width: 256, height: j5 } }, validateColor: function (e, i) { return hm.regGroup[i].test(e) }, convert2rgba: function (e, i) { if (i === undefined) { i = 1 } if (hm.validateColor(e, "rgba")) { return e } if (hm.validateColor(e, "rgb")) { e = e.replace(/rgb/g, "rgba"); e = e.replace(/\)/, "," + i + ")"); return e } var T = hm.formatColorCssToRgbaArray(e, i, true); return "rgba(" + T.join(",") + ")" } }; (function (jV) { function j5(ka, kd) { var kc = (ka & 65535) + (kd & 65535); var kb = (ka >> 16) + (kd >> 16) + (kc >> 16); return (kb << 16) | (kc & 65535) } function j4(ka, kb) { return (ka << kb) | (ka >>> (32 - kb)) } function jZ(kf, kc, kb, ka, ke, kd) { return j5(j4(j5(j5(kc, kf), j5(ka, kd)), ke), kb) } function e(kc, kb, kg, kf, ka, ke, kd) { return jZ((kb & kg) | (~kb & kf), kc, kb, ka, ke, kd) } function jW(kc, kb, kg, kf, ka, ke, kd) { return jZ((kb & kf) | (kg & ~kf), kc, kb, ka, ke, kd) } function j2(kc, kb, kg, kf, ka, ke, kd) { return jZ(kb ^ kg ^ kf, kc, kb, ka, ke, kd) } function j8(kc, kb, kg, kf, ka, ke, kd) { return jZ(kg ^ (kb | ~kf), kc, kb, ka, ke, kd) } function T(kk, kf) { kk[kf >> 5] |= 128 << (kf % 32); kk[((kf + 64) >>> 9 << 4) + 14] = kf; var kc; var ke; var kd; var kb; var ka; var kj = 1732584193; var ki = -271733879; var kh = -1732584194; var kg = 271733878; for (kc = 0; kc < kk.length; kc += 16) { ke = kj; kd = ki; kb = kh; ka = kg; kj = e(kj, ki, kh, kg, kk[kc], 7, -680876936); kg = e(kg, kj, ki, kh, kk[kc + 1], 12, -389564586); kh = e(kh, kg, kj, ki, kk[kc + 2], 17, 606105819); ki = e(ki, kh, kg, kj, kk[kc + 3], 22, -1044525330); kj = e(kj, ki, kh, kg, kk[kc + 4], 7, -176418897); kg = e(kg, kj, ki, kh, kk[kc + 5], 12, 1200080426); kh = e(kh, kg, kj, ki, kk[kc + 6], 17, -1473231341); ki = e(ki, kh, kg, kj, kk[kc + 7], 22, -45705983); kj = e(kj, ki, kh, kg, kk[kc + 8], 7, 1770035416); kg = e(kg, kj, ki, kh, kk[kc + 9], 12, -1958414417); kh = e(kh, kg, kj, ki, kk[kc + 10], 17, -42063); ki = e(ki, kh, kg, kj, kk[kc + 11], 22, -1990404162); kj = e(kj, ki, kh, kg, kk[kc + 12], 7, 1804603682); kg = e(kg, kj, ki, kh, kk[kc + 13], 12, -40341101); kh = e(kh, kg, kj, ki, kk[kc + 14], 17, -1502002290); ki = e(ki, kh, kg, kj, kk[kc + 15], 22, 1236535329); kj = jW(kj, ki, kh, kg, kk[kc + 1], 5, -165796510); kg = jW(kg, kj, ki, kh, kk[kc + 6], 9, -1069501632); kh = jW(kh, kg, kj, ki, kk[kc + 11], 14, 643717713); ki = jW(ki, kh, kg, kj, kk[kc], 20, -373897302); kj = jW(kj, ki, kh, kg, kk[kc + 5], 5, -701558691); kg = jW(kg, kj, ki, kh, kk[kc + 10], 9, 38016083); kh = jW(kh, kg, kj, ki, kk[kc + 15], 14, -660478335); ki = jW(ki, kh, kg, kj, kk[kc + 4], 20, -405537848); kj = jW(kj, ki, kh, kg, kk[kc + 9], 5, 568446438); kg = jW(kg, kj, ki, kh, kk[kc + 14], 9, -1019803690); kh = jW(kh, kg, kj, ki, kk[kc + 3], 14, -187363961); ki = jW(ki, kh, kg, kj, kk[kc + 8], 20, 1163531501); kj = jW(kj, ki, kh, kg, kk[kc + 13], 5, -1444681467); kg = jW(kg, kj, ki, kh, kk[kc + 2], 9, -51403784); kh = jW(kh, kg, kj, ki, kk[kc + 7], 14, 1735328473); ki = jW(ki, kh, kg, kj, kk[kc + 12], 20, -1926607734); kj = j2(kj, ki, kh, kg, kk[kc + 5], 4, -378558); kg = j2(kg, kj, ki, kh, kk[kc + 8], 11, -2022574463); kh = j2(kh, kg, kj, ki, kk[kc + 11], 16, 1839030562); ki = j2(ki, kh, kg, kj, kk[kc + 14], 23, -35309556); kj = j2(kj, ki, kh, kg, kk[kc + 1], 4, -1530992060); kg = j2(kg, kj, ki, kh, kk[kc + 4], 11, 1272893353); kh = j2(kh, kg, kj, ki, kk[kc + 7], 16, -155497632); ki = j2(ki, kh, kg, kj, kk[kc + 10], 23, -1094730640); kj = j2(kj, ki, kh, kg, kk[kc + 13], 4, 681279174); kg = j2(kg, kj, ki, kh, kk[kc], 11, -358537222); kh = j2(kh, kg, kj, ki, kk[kc + 3], 16, -722521979); ki = j2(ki, kh, kg, kj, kk[kc + 6], 23, 76029189); kj = j2(kj, ki, kh, kg, kk[kc + 9], 4, -640364487); kg = j2(kg, kj, ki, kh, kk[kc + 12], 11, -421815835); kh = j2(kh, kg, kj, ki, kk[kc + 15], 16, 530742520); ki = j2(ki, kh, kg, kj, kk[kc + 2], 23, -995338651); kj = j8(kj, ki, kh, kg, kk[kc], 6, -198630844); kg = j8(kg, kj, ki, kh, kk[kc + 7], 10, 1126891415); kh = j8(kh, kg, kj, ki, kk[kc + 14], 15, -1416354905); ki = j8(ki, kh, kg, kj, kk[kc + 5], 21, -57434055); kj = j8(kj, ki, kh, kg, kk[kc + 12], 6, 1700485571); kg = j8(kg, kj, ki, kh, kk[kc + 3], 10, -1894986606); kh = j8(kh, kg, kj, ki, kk[kc + 10], 15, -1051523); ki = j8(ki, kh, kg, kj, kk[kc + 1], 21, -2054922799); kj = j8(kj, ki, kh, kg, kk[kc + 8], 6, 1873313359); kg = j8(kg, kj, ki, kh, kk[kc + 15], 10, -30611744); kh = j8(kh, kg, kj, ki, kk[kc + 6], 15, -1560198380); ki = j8(ki, kh, kg, kj, kk[kc + 13], 21, 1309151649); kj = j8(kj, ki, kh, kg, kk[kc + 4], 6, -145523070); kg = j8(kg, kj, ki, kh, kk[kc + 11], 10, -1120210379); kh = j8(kh, kg, kj, ki, kk[kc + 2], 15, 718787259); ki = j8(ki, kh, kg, kj, kk[kc + 9], 21, -343485551); kj = j5(kj, ke); ki = j5(ki, kd); kh = j5(kh, kb); kg = j5(kg, ka) } return [kj, ki, kh, kg] } function j3(kb) { var kc; var ka = ""; var kd = kb.length * 32; for (kc = 0; kc < kd; kc += 8) { ka += String.fromCharCode((kb[kc >> 5] >>> (kc % 32)) & 255) } return ka } function jY(kb) { var kd; var ka = []; ka[(kb.length >> 2) - 1] = undefined; for (kd = 0; kd < ka.length; kd += 1) { ka[kd] = 0 } var kc = kb.length * 8; for (kd = 0; kd < kc; kd += 8) { ka[kd >> 5] |= (kb.charCodeAt(kd / 8) & 255) << (kd % 32) } return ka } function jX(ka) { return j3(T(jY(ka), ka.length * 8)) } function j9(kc, kf) { var kb; var ke = jY(kc); var ka = []; var kd = []; var kg; ka[15] = kd[15] = undefined; if (ke.length > 16) { ke = T(ke, kc.length * 8) } for (kb = 0; kb < 16; kb += 1) { ka[kb] = ke[kb] ^ 909522486; kd[kb] = ke[kb] ^ 1549556828 } kg = T(ka.concat(jY(kf)), 512 + kf.length * 8); return j3(T(kd.concat(kg), 512 + 128)) } function j7(kd) { var kc = "0123456789abcdef"; var kb = ""; var ka; var ke; for (ke = 0; ke < kd.length; ke += 1) { ka = kd.charCodeAt(ke); kb += kc.charAt((ka >>> 4) & 15) + kc.charAt(ka & 15) } return kb } function j0(ka) { return unescape(encodeURIComponent(ka)) } function jT(ka) { return jX(j0(ka)) } function j1(ka) { return j7(jT(ka)) } function i(ka, kb) { return j9(j0(ka), j0(kb)) } function j6(ka, kb) { return j7(i(ka, kb)) } function jU(kb, kc, ka) { if (!kc) { if (!ka) { return j1(kb) } return jT(kb) } if (!ka) { return j6(kc, kb) } return i(kc, kb) } if (typeof define === "function" && define.amd) { define(function () { return jU }) } else { if (typeof module === "object" && module.exports) { module.exports = jU } else { jV.md5 = jU } } })(this); var cF = { levels: { INFO: "info", WARNING: "warning", ERROR: "error" }, category: { JS: "js", RESOURCE: "resource", AJAX: "ajax" }, config: { jsError: true, resourceError: true, ajaxError: true }, hosts: "api.map.baidu.com|webmap0.bdimg.com|maponline0.bdimg.com|", ignoreUrl: "api.map.baidu.com/images/blank.gif", sender: true, collections: [], sendError: function () { }, init: function (i, e, T) { this.hosts += i ? i : ""; ap && ap(this.config, e); this.sender = true; if (T) { this.sender = false } this.hosts = this.urlScope(this.hosts); this.sendError = this.notifyError(); var jT = typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {}; this.config.jsError && this.handleJavaScriptError(jT); this.config.resourceError && this.handleResourceError(jT); this.config.ajaxError && this.handleAjaxError(jT) }, handleJavaScriptError: function (T) { var e = this; var i = T.onerror; T.onerror = function (jX, jW, jT, jV, jU) { if (e.isFetch(e.category.JS) && e.hostExit(jW)) { if (jU && jU.stack) { e.sendError({ title: jX, msg: jU.stack, category: e.category.JS, level: e.levels.ERROR }) } else { if (typeof jX === "string") { e.sendError({ title: jX, msg: JSON.stringify({ resourceUrl: jW, rowNum: jT, colNum: jV }), category: "js", level: e.levels.ERROR }) } } } if (i && bP(i)) { i && i.apply(T, arguments) } } }, handleResourceError: function (i) { var e = this; i.addEventListener("error", function (jV) { if (jV) { var jW = jV.target || jV.srcElement; var jU = jW instanceof HTMLScriptElement || jW instanceof HTMLLinkElement || jW instanceof HTMLImageElement; if (!jU) { if (!i.onerror) { var T = jV.filename || null; if (!e.isFetch(e.category.JS) || !e.hostExit(T)) { return } if (jV.error && jV.error.stack) { e.sendError({ title: jV.message, msg: jV.error.stack, category: e.category.JS, level: e.levels.ERROR }) } else { if (typeof jV.message === "string") { e.sendError({ title: jV.message, msg: JSON.stringify({ resourceUrl: T, rowNum: jV.lineno, colNum: jV.cowno }), category: e.category.JS, level: e.levels.ERROR }) } } } return } var jT = jW.src || jW.href; if (e.isFetch(e.category.RESOURCE) && e.hostExit(jT)) { e.sendError({ title: jW.nodeName, msg: jT, category: e.category.RESOURCE, level: e.levels.ERROR }) } } }, true) }, handleAjaxError: function (jV) { var e = this; var jU = jV.location.protocol; if (jU === "file:") { return } if (!jV.XMLHttpRequest) { return } var i = jV.XMLHttpRequest; var T = i.prototype.send; var jT = function (jX) { if (jX && jX.currentTarget && jX.currentTarget.status !== 200) { var jW = jX.target.responseURL; if (e.isFetch(e.category.AJAX) && e.hostExit(jW)) { e.sendError({ title: jW, msg: JSON.stringify({ response: jX.target.response, responseURL: jW, status: jX.target.status, statusText: jX.target.statusText }), category: e.category.AJAX, level: e.levels.ERROR }) } } }; i.prototype.send = function () { if (this["addEventListener"]) { this["addEventListener"]("error", jT); this["addEventListener"]("load", jT); this["addEventListener"]("abort", jT) } else { var jW = this["onreadystatechange"]; this["onreadystatechange"] = function (jX) { if (this.readyState === 4) { jT(jX) } jW && jW.apply(this, arguments) } } return T.apply(this, arguments) } }, notifyError: function (T) { var i = T || 1000; this._idleWorkerTicker = (function (jT) { return function () { jT.runJob() } })(this); var e = this; return function (jU) { if (jU.url) { if (!e.isFetch(jU.category)) { return } var jT = jU.url || ""; if (!e.hostExit(jT)) { return } delete jU.url } if (!navigator.onLine) { return } e.collections.push(jU); e.checkJob(i) } }, runJob: function () { if (this.collections.length === 0) { clearInterval(this.idleWork); this.idleWork = null; return } var jU = this.collections.slice(0, 2); var T = i1(JSON.stringify({ dataset: jU })); var jT = new Date().getTime(); var i = el.apiIMG + "/blank.gif?product=jsapi&v=gl&l=" + T + "&ak=" + eD + "&t=" + jT; if (this.sender) { try { var jW = document.createElement("div"); jW.style = "width:0;height:0;visibility: hidden;opacity: 0;z-index:-999;background-image: url(" + i + ");"; document.querySelector("BODY").appendChild(jW); setTimeout(function () { document.querySelector("BODY").removeChild(jW) }) } catch (jV) { } } this.collections.splice(0, 2); if (this.collections.length === 0) { clearInterval(this.idleWork); this.idleWork = null } }, checkJob: function (e) { if (!this.idleWork && this._idleWorkerTicker) { this.idleWork = setInterval(this._idleWorkerTicker, e) } }, urlScope: function (jT) { var T = {}; var jV = Object.keys(B); if (B && jV.length > 0) { for (var jU in B) { if (B[jU] && (typeof B[jU] !== "function")) { T[jU] = B[jU] } } } try { var jX = JSON.stringify(T); if (jX.length > 2) { return jT + "|" + jX } else { return jT } } catch (jW) { return jT } }, hostExit: function (i) { try { if (i && i.indexOf("//") === 0) { i = window.location.protocol + i } var T = new URL(i); if (!T || !T.host) { return false } var jU = T.host + T.pathname; if (this.ignoreUrl.indexOf(jU) === -1 && this.hosts.indexOf(T.host) > -1) { return true } return false } catch (jT) { return false } }, isFetch: function (e) { return this.config[e + "Error"] || false } }; bw.fetchDebug = cF; var jC = { request: function (j1, jX, jT, j4, jV) { var jY = new Date()["getTime"](); var j0 = (Math.random() * 100000)["toFixed"](0); bw._rd["_cbk" + j0] = function (j5) { if (j5.result && j5.result["error"] && j5.result["error"] === 202) { alert("该AK因为恶意行为已经被管理员封禁！"); return } jT = jT || {}; j1 && j1(j5, jT); delete bw._rd["_cbk" + j0] }; j4 = j4 || ""; var j3; var jU; if (jT && jT.useEncodeURI) { j3 = i2(jX, encodeURI); jU = i2(jX) } else { j3 = i2(jX, encodeURIComponent); jU = i2(jX) } var i = B.apiHost + "/" + j4 + "?" + j3 + "&ie=utf-8&oue=1&fromproduct=jsapi"; var jZ = B.apiHost + "/" + j4 + "?" + jU + "&ie=utf-8&oue=1&fromproduct=jsapi"; if (!jV) { i += "&res=api"; jZ += "&res=api" } i += "&callback=" + fi + "._rd._cbk" + j0; jZ += "&callback=" + fi + "._rd._cbk" + j0; var jW = window.___abvk ? window.___abvk : jC.getSeckeyCidItem("SECKEY_ABVK"); var e = jC.getSeckeyCidItem("BMAP_SECKEY"); var j2 = encodeURIComponent(jW + "," + e); var T = jW + "," + e; i += "&ak=" + eD + "&v=gl&seckey=" + j2 + "&timeStamp=" + jY; jZ += "&ak=" + eD + "&v=gl&seckey=" + T + "&timeStamp=" + jY; i += i4()(jZ); gA.load(i) }, getSeckeyCidItem: function (i) { if (navigator.cookieEnabled) { var T = new RegExp("(^| )" + i + "=([^;]*)(;|$)"); var e = document.cookie.match(T); if (e) { return unescape(e[2]) } return -1 } if (localStorage) { return localStorage.getItem(i) ? localStorage.getItem(i) : -1 } if (sessionStorage) { return sessionStorage.getItem(i) ? localStorage.getItem(i) : -1 } } }; window.srqtimer = null; window.firstTime = true; window.srqcount = 0; bw._rd = {}; var c9 = { request: function (jW, e) { if (e) { var jV = (Math.random() * 100000).toFixed(0); BMapGL._rd["_cbk" + jV] = function (jY) { e && e(jY); delete BMapGL._rd["_cbk" + jV] }; jW += "&callback=BMapGL._rd._cbk" + jV } function jU(jZ) { var jY; var j0 = new RegExp("(^| )" + jZ + "=([^;]*)(;|$)"); if (jY = document.cookie.match(j0)) { return unescape(jY[2]) } else { return -1 } } if (jW.indexOf("v=") === -1) { jW += "&v=gl" } var T = window.___abvk ? window.___abvk : this.getSeckeyCidItem("SECKEY_ABVK"); var jX = this.getSeckeyCidItem("BMAP_SECKEY"); var i = encodeURIComponent(T + "," + jX); jW += "&seckey=" + i; var jT = bU("script", { src: jW, type: "text/javascript", charset: "utf-8" }); if (jT.addEventListener) { jT.addEventListener("load", function (jZ) { var jY = jZ.target; jY.parentNode.removeChild(jY) }, false); jT.addEventListener("error", function (jY) { e && e([, , , , ,]) }, false) } else { if (jT.attachEvent) { jT.attachEvent("onreadystatechange", function (jZ) { var jY = window.event.srcElement; if (jY && (jY.readyState == "loaded" || jY.readyState == "complete")) { jY.parentNode.removeChild(jY) } }) } } document.getElementsByTagName("head")[0].appendChild(jT); jT = null }, getSeckeyCidItem: function (i) { if (navigator.cookieEnabled) { var T = new RegExp("(^| )" + i + "=([^;]*)(;|$)"); var e = document.cookie.match(T); if (e) { return unescape(e[2]) } return -1 } if (localStorage) { return localStorage.getItem(i) ? localStorage.getItem(i) : -1 } if (sessionStorage) { return sessionStorage.getItem(i) ? localStorage.getItem(i) : -1 } } }; function gv() { this._map = null; this._container; this._type = "control"; this.blockInfoWindow = true; this._visible = true } gv.inherits(c1, "Control"); eN.extend(gv.prototype, { initialize: function (e) { this._map = e; if (this._container) { if (this._opts && this._opts.container) { this._opts.container.appendChild(this._container) } else { e.container.appendChild(this._container) } return this._container } return }, _i: function (e) { if (!this._container && this.initialize && bP(this.initialize)) { this._container = this.initialize(e) } this._opts = this._opts || { printable: false }; this._setStyle(); this._setPosition(); if (this._container) { this._container._jsobj = this } }, _setStyle: function () { var i = this._container; if (i) { var e = i.style; e.position = "absolute"; e.zIndex = this._cZIndex || "10"; e.MozUserSelect = "none"; if (!this._opts.printable) { eN.ac(i, "BMap_noprint") } eN.on(i, "contextmenu", g9) } }, remove: function () { this._map = null; if (!this._container) { return } this._container.parentNode && this._container.parentNode.removeChild(this._container); this._container._jsobj = null; this._container = null }, _render: function (e) { if (this._opts && this._opts.container) { this._container = bI(this._opts.container, '<div unselectable="on"></div>') } else { var i = '<div unselectable="on"></div>'; if (e && e.config.autoSafeArea && cp()) { this._safeAreaContainer = bI(this._map.container, i); this._safeAreaContainer.style.position = "absolute"; this._safeAreaContainer.style.bottom = "env(safe-area-inset-bottom)"; this._container = bI(this._safeAreaContainer, i) } else { this._container = bI(this._map.container, i) } } if (this._visible === false) { this._container.style.display = "none" } return this._container }, _setPosition: function () { this.setAnchor(this._opts.anchor) }, setAnchor: function (jT) { if (this.anchorFixed || typeof jT !== "number" || isNaN(jT) || jT < BMAP_ANCHOR_TOP_LEFT || jT > BMAP_ANCHOR_BOTTOM_RIGHT) { jT = this.defaultAnchor } this._opts.offset = this._opts.offset || this.defaultOffset; var T = this._opts.anchor; this._opts.anchor = jT; if (!this._container) { return } var jV = this._container; var e = this._opts.offset.width; var jU = this._opts.offset.height; jV.style.left = jV.style.top = jV.style.right = jV.style.bottom = "auto"; switch (jT) { case BMAP_ANCHOR_TOP_LEFT: jV.style.top = jU + "px"; jV.style.left = e + "px"; break; case BMAP_ANCHOR_TOP_RIGHT: jV.style.top = jU + "px"; jV.style.right = e + "px"; break; case BMAP_ANCHOR_BOTTOM_LEFT: jV.style.bottom = jU + "px"; jV.style.left = e + "px"; break; case BMAP_ANCHOR_BOTTOM_RIGHT: jV.style.bottom = jU + "px"; jV.style.right = e + "px"; break; default: break }var i = ["TL", "TR", "BL", "BR"]; eN.rc(this._container, "anchor" + i[T]); eN.ac(this._container, "anchor" + i[jT]) }, getAnchor: function () { return this._opts.anchor }, setOffset: function (e) { if (!e) { return } this._opts = this._opts || {}; this._opts.offset = new iJ(e.width, e.height); if (!this._container) { return } this.setAnchor(this._opts.anchor) }, getOffset: function () { return this._opts.offset }, getDom: function () { return this._container }, show: function () { if (this._visible === true) { return } this._visible = true; if (this._container) { this._container.style.display = "" } this.dispatchEvent(new fy("onshow")) }, hide: function () { if (this._visible === false) { return } this._visible = false; if (this._container) { this._container.style.display = "none" } this.dispatchEvent(new fy("onhide")) }, isPrintable: function () { return !!this._opts.printable }, isVisible: function () { if (!this._container && !this._map) { return false } return !!this._visible }, _asyncLoadCode: function () { var e = this; gO.load("control", function () { if (e._asyncDraw) { e._asyncDraw() } }) } }); var d7 = { TOP_LEFT: 0, TOP_RIGHT: 1, BOTTOM_LEFT: 2, BOTTOM_RIGHT: 3 }; bw.ControlAnchor = d7; window.BMAP_ANCHOR_TOP_LEFT = 0; window.BMAP_ANCHOR_TOP_RIGHT = 1; window.BMAP_ANCHOR_BOTTOM_LEFT = 2; window.BMAP_ANCHOR_BOTTOM_RIGHT = 3; function fT(e) { gv.call(this); e = e || {}; this._opts = { printable: false }; eN.extend(this._opts, e); this._copyrightCollection = []; this.defaultAnchor = BMAP_ANCHOR_BOTTOM_LEFT; this.defaultOffset = new iJ(5, 2); this.setAnchor(e.anchor); this._canShow = true; this.sateMapStyle = false; this.blockInfoWindow = false; this._asyncLoadCode() } fT.inherits(gv, "CopyrightControl"); eN.extend(fT.prototype, { initialize: function (e) { this._map = e; return this._container }, addCopyright: function (jT) { var e = { minZoom: 0, bounds: null, content: "", mapType: "" }; for (var T in jT) { e[T] = jT[T] } if (this._map) { var jW = e.minZoom; if (jW === -1 || jW < this._map.getMinZoom() || jW > this._map.getMaxZoom()) { e.minZoom = this._map.getMinZoom() } if (e.mapType !== "" && !ea[e.mapType]) { e.mapType = BMAPGL_NORMAL_MAP } } var jU = this.getCopyright(jT.id); if (jU) { for (var jV in e) { jU[jV] = e[jV] } } else { this._copyrightCollection.push(e) } }, getCopyright: function (jT) { for (var T = 0, e = this._copyrightCollection.length; T < e; T++) { if (this._copyrightCollection[T].id === jT) { return this._copyrightCollection[T] } } }, addSateMapStyle: function () { this.sateMapStyle = true; if (this._container) { eN.ac(this._container, "BMap_cpyCtrl_w") } }, removeSateMapStyle: function () { this.sateMapStyle = false; if (this._container) { eN.rc(this._container, "BMap_cpyCtrl_w") } } }); function br(e) { gv.call(this); e = e || {}; this.canCheckSize = e.canCheckSize === false ? false : true; this.curCityName = ""; this.curCityCode = ""; this.defaultOffset = new iJ(10, 10); this.defaultAnchor = d7.TOP_LEFT; this.onChangeBefore = []; this.onChangeAfter = []; this.onChangeSuccess = []; this._opts = { printable: false, offset: e.offset || this.defaultOffset, anchor: e.anchor || this.defaultAnchor, expand: !!(e.expand) }; if (e.onChangeBefore && bP(e.onChangeBefore)) { this.onChangeBefore.push(e.onChangeBefore) } if (e.onChangeAfter && bP(e.onChangeAfter)) { this.onChangeAfter.push(e.onChangeAfter) } if (e.onChangeSuccess && bP(e.onChangeSuccess)) { this.onChangeSuccess.push(e.onChangeSuccess) } this.setAnchor(e.anchor); this._asyncLoadCode() } br.inherits(gv, "CityListControl"); eN.extend(br.prototype, { initialize: function (e) { this._map = e; return this._container } }); function jS(e) { gv.call(this); e = e || {}; this._opts = { printable: false }; this._opts = eN.extend(eN.extend(this._opts, { unit: "metric" }), e); this.defaultAnchor = BMAP_ANCHOR_BOTTOM_LEFT; this.defaultOffset = new iJ(81, 18); if (bT()) { this.defaultOffset = new iJ(75, 10) } this.setAnchor(e.anchor); this._units = { metric: { name: "metric", conv: 1, incon: 1000, u1: "米", u2: "公里" }, us: { name: "us", conv: 3.2808, incon: 5280, u1: "英尺", u2: "英里" } }; this.sateMapStyle = false; if (!this._units[this._opts.unit]) { this._opts.unit = "metric" } this._scaleText = null; this._numberArray = {}; this._asyncLoadCode() } window.BMAP_UNIT_METRIC = "metric"; window.BMAP_UNIT_IMPERIAL = "us"; jS.inherits(gv, "ScaleControl"); eN.extend(jS.prototype, { initialize: function (e) { this._map = e; return this._container }, setUnit: function (e) { this._opts.unit = this._units[e] && this._units[e].name || this._opts.unit }, getUnit: function () { return this._opts.unit }, addSateMapStyle: function () { this.sateMapStyle = true; var e = this._container; if (e) { eN.ac(e.children[0], "dark") } }, removeSateMapStyle: function () { this.sateMapStyle = false; var e = this._container; if (e) { eN.rc(e.children[0], "dark") } } }); window.BMAP_NAVIGATION_CONTROL_LARGE = 0; window.BMAP_NAVIGATION_CONTROL_SMALL = 1; window.BMAP_NAVIGATION_CONTROL_PAN = 2; window.BMAP_NAVIGATION_CONTROL_ZOOM = 3; window.BMAP_NAVIGATION_CONTROL_ANIM = 4; function jp(e) { gv.call(this); e = e || {}; this._opts = { printable: false }; eN.extend(this._opts, e); this.controlHeight = [{ width: 65, height: 227, zoomHeight: 227, zoomWidth: 37, sliderHeight: 180 }, { width: 65, height: 47, zoomHeight: (this._opts.forceNew === true) ? 56 : 47, zoomWidth: 37, sliderHeight: 0 }, { width: 37, height: 57, zoomHeight: 0, zoomWidth: 0, sliderHeight: 0 }, { width: 26, height: 56, zoomHeight: 56, zoomWidth: 6, sliderHeight: 0 }, { width: 56, height: 47, zoomHeight: 47, zoomWidth: 37, sliderHeight: 180 }]; this.defaultAnchor = BMAP_ANCHOR_TOP_LEFT; this.defaultOffset = new iJ(10, 10); this.setAnchor(e.anchor); this.setType(e.type); this._maxTotalZoomLv = 19; this._minZoomLevel = -1; this._maxZoomLevel = -1; this._totalZoomLv = -1; this._sliderInterval = 10; this._sliderHeight = 180; this._minBarY = 1; this._maxBarY = -1; this._curBarY = -1; this._zoomDom = null; this._zoomBtnDom = null; this._sliderDom = null; this._sliderBaseDom = null; this._cZIndex = "1100"; this._asyncLoadCode() } jp.inherits(gv, "NavigationControl"); eN.extend(jp.prototype, { initialize: function (e) { this._map = e; return this._container }, setType: function (e) { if (typeof e == "number" && e >= BMAP_NAVIGATION_CONTROL_LARGE && e <= BMAP_NAVIGATION_CONTROL_ANIM) { this._opts.type = e } else { this._opts.type = BMAP_NAVIGATION_CONTROL_LARGE } }, getType: function () { return this._opts.type } }); function v(i) { gv.call(this); i = i || {}; this._opts = { printable: false }; this.defaultAnchor = BMAP_ANCHOR_TOP_RIGHT; this.defaultOffset = new iJ(10, 10); this.setAnchor(i.anchor); this._opts = eN.extend(eN.extend(this._opts, { offset: this.defaultOffset, enableSwitch: true }), i); var e = this; gO.load("control", function () { e._asyncDraw() }) } v.inherits(gv, "MapTypeControl"); eN.extend(v.prototype, { initialize: function (e) { this._map = e; return this._container }, showStreetLayer: function (e) { this._map.showStreetLayer(e) } }); function iV(e) { gv.call(this); e = e || {}; this._opts = {}; this._opts = eN.extend(this._opts, e); this._zoomInDisabled = false; this._zoomOutDisabled = false; this._zoomInTapped = false; this._zoomOutTapped = false; this.defaultAnchor = d7.BOTTOM_RIGHT; this.defaultOffset = new iJ(15, 20); this.setAnchor(e.anchor); this._asyncLoadCode() } iV.inherits(gv, "ZoomControl"); eN.extend(iV.prototype, { initialize: function (e) { this._map = e; return this._container } }); function gc(e) { gv.call(this); e = e || {}; this._opts = { autoZoom: true, autoViewport: true }; this._opts = eN.extend(this._opts, e); this.defaultAnchor = d7.BOTTOM_LEFT; this.defaultOffset = new iJ(10, 50); this.watchPosition = this._opts.watchPosition || false; this.useCompass = this._opts.useCompass || false; this.locMarker = null; this.locLevel = 16; this.setAnchor(this._opts.anchor); this.onLocationStart = e.onLocationStart || null; this._asyncLoadCode() } gc.inherits(gv, "LocationControl"); eN.extend(gc.prototype, { initialize: function (e) { this._map = e; return this._container }, startLocation: function () { this._startLocationCalled = true }, stopLocationTrace: function () { }, setOptions: function (e) { e = e || {}; eN.extend(this._opts, e) } }); function bz(e) { gv.call(this); e = e || {}; this._opts = {}; this._opts = eN.extend(this._opts, e); this.defaultAnchor = d7.BOTTOM_LEFT; this.defaultOffset = new iJ(5, 15); if (bT()) { this.defaultOffset = new iJ(10, 10) } this.setAnchor(e.anchor) } bz.inherits(gv, "LogoControl"); eN.extend(bz.prototype, { initialize: function (i) { this._map = i; var e = this._container = document.createElement("div"); e.innerHTML = '<img src="' + B.apiHost + '/images/logo_hd.png"  style="height:21px;width:62px;"/>'; i.getContainer().appendChild(e); return e } }); function at(e, i) { this._map = e; this._indoorInfo = i; this._visible = true; this._adjustVisible = true; this._isMobile = bT(); this._sizeConfig = { FLOOR_BTN_HEIGHT: this._isMobile ? 35 : 26, SWITCH_ARROW_HEIGHT: this._isMobile ? 20 : 15 }; this._init() } at.prototype._init = function () { this._render(); this._bindDom(); this._bind(); this._adjustDisplayHeight(); var e = new fy("onindoor_bar_show"); e.uid = this._indoorInfo.uid; this._map.dispatchEvent(e) }; at.prototype._render = function () { if (!this._indoorInfo) { return } var jX = this._isMobile; var e = this._div = bU("div"); eN.ac(e, "floor-select-container"); jX && eN.ac(e, "mobile"); jX && eN.ac(e, "all-border-radius"); var i = this._btnTop = bU("button"); eN.ac(i, "floor-switch-top"); eN.ac(i, "top-border-radius"); var jV = bU("div"); eN.ac(jV, "floor-switch-top-icon"); i.appendChild(jV); var jU = this._btnBottom = bU("button"); var T = bU("div"); eN.ac(T, "floor-switch-bottom-icon"); jU.appendChild(T); eN.ac(jU, "floor-switch-bottom"); eN.ac(jU, "bottom-border-radius"); var jT = this._floorsContainer = bU("div"); eN.ac(jT, "floors-container"); jT.appendChild(this._createFloorsDom()); this._div.appendChild(i); this._div.appendChild(jT); this._div.appendChild(jU); var jY = 0; if (this._btnTop.style.display === "") { jY = 2 * this._sizeConfig.SWITCH_ARROW_HEIGHT } this._div.style.height = parseInt(this._floorsContainer.style.height, 10) + jY + "px"; this._map.getContainer().appendChild(this._div); if (!jX) { var jW = this; setTimeout(function () { jW._div.style.right = "20px" }, 20) } }; at.prototype._createFloorsDom = function () { if (!this._indoorInfo) { return } var T = this._ol = bU("ol"); var jV = this._indoorInfo.currentFloor; for (var jU = this._indoorInfo.floors.length - 1; jU >= 0; jU--) { var jW = this._indoorInfo.floors[jU].floorName; var e = bU("li"); var jT = bU("button"); eN.ac(jT, "btn-select-floor"); if (jU === jV) { eN.ac(jT, "selected") } jT.setAttribute("data-floor", jU); jT.innerHTML = jW; e.appendChild(jT); T.appendChild(e) } return T }; at.prototype._updateUI = function () { if (!this._ol) { this._render(); this._bind(); this._adjustDisplayHeight(); return } this._ol = null; this._ol = this._createFloorsDom(); this._floorsContainer.innerHTML = ""; this._floorsContainer.appendChild(this._ol); this._adjustDisplayHeight() }; at.prototype._bindDom = function () { var e = this; eN.on(this._floorsContainer, "click", function (jT) { var T = jT.target || jT.srcElement; if (T.tagName.toLowerCase() === "button") { e._map.showIndoor(e._indoorInfo.uid, parseInt(T.getAttribute("data-floor"), 10)); var i = new fy("onindoor_bar_click"); i.uid = e._indoorInfo.uid; e._map.dispatchEvent(i) } }); eN.on(this._floorsContainer, "mouseover", function (T) { var i = T.target; if (i.tagName.toLowerCase() === "button") { eN.ac(i, "hover") } }); eN.on(this._floorsContainer, "mouseout", function (T) { var i = T.target; if (i.tagName.toLowerCase() === "button") { eN.rc(i, "hover") } }); eN.on(this._floorsContainer, "touchstart", function (T) { var i = T.target; if (i.tagName.toLowerCase() === "button") { eN.ac(i, "onmousedown") } }); eN.on(this._floorsContainer, "touchend", function (T) { var i = T.target; if (i.tagName.toLowerCase() === "button") { eN.rc(i, "onmousedown") } }); eN.on(this._btnTop, "mouseover", function (i) { if (this._disable) { return } eN.ac(this, "hover") }); eN.on(this._btnTop, "mouseout", function (i) { eN.rc(this, "hover") }); eN.on(this._btnBottom, "mouseover", function (i) { if (this._disable) { return } eN.ac(this, "hover") }); eN.on(this._btnBottom, "mouseout", function (i) { eN.rc(this, "hover") }); eN.on(this._btnTop, "touchstart", function (i) { if (this.className.indexOf("disable") > -1) { return } eN.ac(this, "onmousedown") }); eN.on(this._btnTop, "touchend", function (i) { eN.rc(this, "onmousedown") }); eN.on(this._btnBottom, "touchstart", function (i) { if (this.className.indexOf("disable") > -1) { return } eN.ac(this, "onmousedown") }); eN.on(this._btnBottom, "touchend", function (i) { eN.rc(this, "onmousedown") }); eN.on(this._btnTop, "click", function (i) { e._setBarSliderTop(parseInt(e._ol.style.top, 10) + 26) }); eN.on(this._btnBottom, "click", function (i) { e._setBarSliderTop(parseInt(e._ol.style.top, 10) - 26) }); eN.on(this._div, "mousemove", ah); eN.on(this._div, "wheel", g9); eN.on(this._div, "mousewheel", g9); this._map.addEventListener("resize", function () { e._adjustDisplayHeight() }) }; at.prototype._adjustDisplayHeight = function () { if (!this._indoorInfo) { return } var jV = this._map.getSize().height; var jW = this._sizeConfig.FLOOR_BTN_HEIGHT; var jX = jV - 291 - 100; if (this._isMobile) { jX = jV - 12 - 108 - this._map.config.bottomOffset } var e = this._indoorInfo.floors.length; var T = e * jW; var jT = e; var jZ = 0; var j0 = this._floorsContainer.children[0]; if (T > jX) { this._showArrow = true; eN.rc(j0.children[0].children[0], "top-border-radius"); eN.rc(j0.children[e - 1].children[0], "bottom-border-radius") } else { this._showArrow = false; eN.ac(j0.children[0].children[0], "top-border-radius"); eN.ac(j0.children[e - 1].children[0], "bottom-border-radius") } while (T > jX) { if (jT === 0) { break } jT--; jZ = 2 * this._sizeConfig.SWITCH_ARROW_HEIGHT; T = jT * jW + jZ } this._currentDisplayHeight = T; if (jT < 3) { this._setAdjustVisbile(false) } else { this._setAdjustVisbile(true) } this._floorsContainer.style.height = jT * jW + "px"; var jU = this._indoorInfo.currentFloor; var i = e - jU; var jY = jU - 1; this._div.style.height = parseInt(this._floorsContainer.style.height, 10) + jZ + "px"; var j1 = -(e - (jU + Math.round(jT / 2))) * jW; this._setBarSliderTop(j1); if (jT < e) { eN.show(this._btnTop); eN.show(this._btnBottom) } else { eN.hide(this._btnTop); eN.hide(this._btnBottom); this._setBarSliderTop(0) } if (this._isMobile) { this._div.style.bottom = 108 + this._map.config.bottomOffset + "px" } }; at.prototype._setBarSliderTop = function (jT) { var T = 26; var i = this._indoorInfo.floors.length; var e = i * T; if (this._currentDisplayHeight) { if (this._showArrow) { e = this._currentDisplayHeight - 30 } else { e = this._currentDisplayHeight } } if (e - jT >= i * T) { jT = e - i * T; eN.ac(this._btnBottom, "disable"); eN.rc(this._btnBottom, "hover"); this._btnBottom._disable = true } else { eN.rc(this._btnBottom, "disable"); this._btnBottom._disable = false } if (jT >= 0) { jT = 0; eN.ac(this._btnTop, "disable"); eN.rc(this._btnTop, "hover"); this._btnTop._disable = true } else { eN.rc(this._btnTop, "disable"); this._btnTop._disable = false } this._ol.style.top = jT + "px" }; at.prototype._setAdjustVisbile = function (e) { if (this._adjustVisible === e) { return } this._adjustVisible = e; if (e && this._visible) { this._div.style.right = "20px" } else { this._div.style.right = "-30px" } }; at.prototype._bind = function () { var i = this._map; var e = this; i.on("indoor_status_changed", function (jX) { if (e._visible === false) { return } var T = e._ol; var jV = jX.uid; if (!jV) { return } var jW = jX.floor; for (var jU = 0; jU < T.children.length; jU++) { var jT = T.children[jU].children[0]; if (parseInt(jT.getAttribute("data-floor"), 10) === jW) { eN.ac(jT, "selected") } else { eN.rc(jT, "selected") } } }); i.on("zoomend", function (T) { if (this.getZoom() < 17) { e._setAdjustVisbile(false) } else { e._setAdjustVisbile(true) } }) }; at.prototype.setInfo = function (e) { if (this._indoorInfo && this._indoorInfo.uid === e.uid) { return } this._indoorInfo = e; this._updateUI() }; at.prototype.show = function () { if (this._visible === true) { return } this._visible = true; if (!this._isMobile) { this._div.style.right = "20px" } else { this._div.style.display = "" } var e = new fy("onindoor_bar_show"); e.uid = this._indoorInfo.uid; this._map.dispatchEvent(e) }; at.prototype.hide = function () { if (this._visible === false) { return } this._visible = false; if (!this._isMobile) { this._div.style.right = "-30px" } else { this._div.style.display = "none" } }; function eP(e) { this._opts = e || {}; this.defaultOffset = new iJ(2, 80); this.defaultAnchor = BMAP_ANCHOR_TOP_RIGHT; if (this._opts.anchor === undefined) { this.setAnchor(this.defaultAnchor) } else { this.setAnchor(this._opts.anchor) } this._firstAnimation = true } eP.inherits(gv, "NavigationControl3D"); eN.extend(eP.prototype, { initialize: function (T) { this._map = T; this._createDom(); this._bindDom(); this._bind(); if (!bT()) { this._headingControl = new ip(this._map, this._div) } this._tiltControl = new cM(this._map, this._div); this._render(); var i = this._map.getMapType(); var e = this; if (i === "B_EARTH_MAP" || this._map._renderType === "webgl") { e._div.style.opacity = "1"; e._div.style.visibility = "visible" } else { e._div.style.opacity = "0"; e._div.style.visibility = "hidden" } return this._container }, _createDom: function () { var i = this._div = document.createElement("div"); this._container = i; var e = i.style; e.position = "absolute"; e.zIndex = 5; e.width = "52px"; e.height = "82px"; e.right = "-3px"; e.bottom = "79px"; e.opacity = "0"; e.visibility = "hidden"; e.WebkitTransition = e.transition = "opacity .3s ease-out,visibility .3s ease-out" }, _render: function () { var e = document.getElementById("map-operate"); if (e) { e.appendChild(this._div) } else { this._map.getContainer().appendChild(this._div) } }, _bindDom: function () { this._div.addEventListener("mousemove", ah) }, _bind: function () { if (this._map._renderType === "webgl") { return } var e = this; this._map.on("maptypechange", function () { if (this.mapType === "B_EARTH_MAP") { if (e._firstAnimation) { e._firstAnimation = false; setTimeout(function () { e._div.style.opacity = "1"; e._div.style.visibility = "visible" }, 300) } else { e._div.style.opacity = "1"; e._div.style.visibility = "visible" } } else { e._div.style.opacity = "0"; e._div.style.visibility = "hidden" } }) } }); function ip(T, i) { this._map = T; this._target = T; var jT = T.temp.originMapType || T.mapType; if (jT === "B_EARTH_MAP" && T._earth) { this._target = T._earth } this._outContainer = i || T.getContainer(); this._imgRatio = f1() >= hv.HIGH_RES_MIN_RATIO ? 2 : 1; this._imgPath = B.imgPath + "earth-navi-control-pc4" + (this._imgRatio === 2 ? "-2x.png" : ".png"); this._enabled = true; var e = this; this._setHeadingOptions = { callback: function () { e._target.setLock(false) } }; this._init() } eN.extend(ip.prototype, { _init: function () { this._createDom(); this._render(); this._bindDom(); this._bind(); this._updateUI(); this._checkEnable() }, _checkEnable: function () { if (this._target.getZoom() >= this._target._enableHeadingZoom) { this.enable() } else { this.disable() } }, _createDom: function () { var i = this._div = bU("div"); var e = i.style; e.position = "absolute"; e.zIndex = 5; e.top = "0"; e.left = "0"; e.width = "52px"; e.height = "54px"; e.background = "url(" + this._imgPath + ") no-repeat"; e.backgroundSize = "266px auto"; this._rotateCCW = this._createButton(); this._rotateCCW.title = "逆时针转动"; e = this._rotateCCW.style; e.left = "2px"; e.top = "5px"; e.zIndex = "1"; e.width = "15px"; e.height = "42px"; e.backgroundPosition = "-75px -5px"; this._rotateCW = this._createButton(); this._rotateCW.title = "顺时针转动"; e = this._rotateCW.style; e.right = "2px"; e.top = "5px"; e.zIndex = "1"; e.width = "15px"; e.height = "42px"; e.backgroundPosition = "-75px -5px"; e.WebkitTransform = e.transform = "scaleX(-1)"; this._compass = this._createButton(); this._compass.title = "恢复正北方向"; e = this._compass.style; e.left = "19px"; e.top = "4px"; e.width = "14px"; e.height = "44px"; e.backgroundPosition = "-56px -4px"; e.WebkitTransform = e.transform = "rotate(0deg)"; this._div.appendChild(this._rotateCCW); this._div.appendChild(this._compass); this._div.appendChild(this._rotateCW); this._domRendered = true }, _createButton: function () { var e = bU("button"); var i = e.style; i.position = "absolute"; i.outline = "none"; i.border = "none"; i.background = "url(" + this._imgPath + ") no-repeat"; i.backgroundSize = "266px auto"; i.cursor = "pointer"; return e }, _render: function () { this._outContainer.appendChild(this._div) }, enable: function () { this._enabled = true; if (this._domRendered) { this._rotateCCW.style.cursor = "pointer"; this._rotateCCW.style.opacity = 1; this._rotateCW.style.cursor = "pointer"; this._rotateCW.style.opacity = 1; this._compass.style.cursor = "pointer"; this._compass.style.opacity = 1 } }, disable: function () { this._enabled = false; if (this._domRendered) { this._rotateCCW.style.cursor = ""; this._rotateCCW.style.opacity = 0.4; this._rotateCW.style.cursor = ""; this._rotateCW.style.opacity = 0.4; this._compass.style.cursor = ""; this._compass.style.opacity = 0.4 } }, _bindDom: function () { ih(this._div, ["mousedown", "click", "dblclick"]); var i = this._map; var e = this; this._rotateCW.addEventListener("click", function () { if (e._isOperating || e._enabled === false) { return } if (e._target.getLock()) { return } if (e._target.getHeading() === 360) { e._target.setHeading(0) } e._target.setLock(true); e._target.setHeading(e._target.getHeading() + 90, e._setHeadingOptions); i.fire(new fy("onrotatecwclick")) }, false); this._rotateCCW.addEventListener("click", function () { if (e._isOperating || e._enabled === false) { return } if (e._target.getLock()) { return } if (e._target.getHeading() === -360) { e._target.setHeading(0) } e._target.setLock(true); e._target.setHeading(e._target.getHeading() - 90, e._setHeadingOptions); i.fire(new fy("onrotateccwclick")) }, false); this._rotateCW.addEventListener("mouseover", function () { if (e._enabled === false) { return } this.style.backgroundPosition = "-89px -5px" }, false); this._rotateCW.addEventListener("mouseout", function () { if (e._enabled === false) { return } this.style.backgroundPosition = "-75px -5px" }, false); this._rotateCCW.addEventListener("mouseover", function () { if (e._enabled === false) { return } this.style.backgroundPosition = "-89px -5px" }, false); this._rotateCCW.addEventListener("mouseout", function () { if (e._enabled === false) { return } this.style.backgroundPosition = "-75px -5px" }, false); this._compass.addEventListener("click", function () { if (e._isOperating || e._enabled === false) { return } if (e._target.getLock()) { return } e._target.setLock(true); var T = false; if (e._target.getTilt() !== 0) { T = true; e._target.setTilt(0, e._setHeadingOptions) } if (e._target.getHeading() % 360 !== 0) { T = true; e._target.resetHeading(e._setHeadingOptions) } if (!T) { e._target.setLock(false) } i.fire(new fy("oncompassclick")) }, false) }, _bind: function () { var e = this; this._bindTarget(this._target); if (this._map._renderType === "webgl") { this._map.addEventListener("maptypechange", function (i) { if (this.mapType === "B_EARTH_MAP") { e._target = e._map._earth } else { e._target = e._map } e._bindTarget(e._target); e._checkEnable() }) } }, _bindTarget: function (i) { if (i === this._map && this._mapBinded) { return } if (i === this._map._earth && this._earthBinded) { return } var e = this; i.addEventListener("heading_changed", function (T) { e._updateUI() }); i.addEventListener("animation_start", function (T) { e._isOperating = true }); i.addEventListener("animation_end", function (T) { e._isOperating = false }); i.on("load", function () { e._checkEnable() }); i.on("zoom_changed", function () { e._checkEnable() }); if (i === this._map) { this._mapBinded = true } else { this._earthBinded = true } }, _updateUI: function () { var e = this._target.getHeading(); var i = this._compass.style; i.WebkitTransform = i.transform = "rotate(" + e + "deg)" }, hide: function () { this._div.style.display = "none" }, show: function () { this._div.style.display = "block" } }); function cM(T, i) { this._map = T; this._target = T; var jT = T.temp.originMapType || T.mapType; if (jT === "B_EARTH_MAP" && T._earth) { this._target = T._earth } this._outContainer = i || T.getContainer(); this._imgRatio = f1() >= hv.HIGH_RES_MIN_RATIO ? 2 : 1; this._imgPath = B.imgPath + "gl-navi-control-pc4" + (this._imgRatio === 2 ? "-2x.png" : ".png"); this._enabled = true; var e = this; this._setTiltOptions = { callback: function () { e._target.setLock(false) } }; this._init() } eN.extend(cM.prototype, { _init: function () { this._createDom(); this._render(); this._bindDom(); this._bind(); this._checkEnable() }, _checkEnable: function () { if (this._target.getZoom() >= this._target._enableTiltZoom) { this.enable() } else { this.disable() } }, _createDom: function () { var e = this._div = bU("button"); e.title = "倾斜"; var i = e.style; i.position = "absolute"; i.zIndex = 5; i.outline = "none"; i.border = "none"; i.cursor = "pointer"; i.width = "26px"; i.height = "26px"; i.top = "56px"; i.right = "13px"; i.background = "url(" + this._imgPath + ") no-repeat #fff"; i.backgroundSize = "266px auto"; i.backgroundPosition = "-110px 1px"; i.boxShadow = "1px 2px 1px rgba(0, 0, 0, 0.15)" }, enable: function () { this._enabled = true; if (this._div) { this._div.style.cursor = "pointer" } this._updateUI() }, disable: function () { this._enabled = false; if (this._div) { this._div.style.cursor = "" } this._updateUI() }, _render: function () { this._outContainer.appendChild(this._div) }, _bindDom: function () { var e = this; this._div.addEventListener("mousedown", function (jT) { if (!e._enabled) { return } if (e._target.getLock()) { return } var i = e._target.getTilt(); var T; if (i === e._map.getCurrentMaxTilt()) { T = "out" } else { if (i === 0) { T = "in" } else { T = e._preTrend ? e._preTrend : "in" } } e._curTrend = T; e._clickTimer = setTimeout(function () { e._map.fire(new fy("ontiltmsdown")); e._tiltAni = new fo({ duration: 9999999, render: function (jU) { i = e._target.getTilt(); if (T === "in" && i < e._map.getCurrentMaxTilt()) { e._target.setTilt(i + 1, { noAnimation: true }) } else { if (T === "out" && i > 0) { e._target.setTilt(i - 1, { noAnimation: true }) } } }, finish: function () { e._tiltAni = null } }); e._clickTimer = null }, 200); jT.stopPropagation() }, false); this._div.addEventListener("mouseup", function (i) { if (!e._enabled) { return } if (e._tiltAni) { e._tiltAni.stop() } e._preTrend = e._curTrend }, false); this._div.addEventListener("click", function (jT) { if (!e._enabled) { return } if (!e._clickTimer) { return } if (e._target.getLock()) { return } clearTimeout(e._clickTimer); e._map.fire(new fy("ontiltclick")); var i = e._target.getTilt(); e._target.setLock(true); jT.stopPropagation(); var T = e._map.getCurrentMaxTilt(); if (e._curTrend === "in") { e._target.setTilt(T, e._setTiltOptions) } else { if (e._curTrend === "out") { e._target.setTilt(0, e._setTiltOptions) } else { if (i < T) { e._target.setTilt(T, e._setTiltOptions) } else { e._target.setTilt(0, e._setTiltOptions) } } } }, false); this._div.addEventListener("mouseover", function (i) { if (!e._enabled) { return } e._mouseOver = true; e._updateUI() }, false); this._div.addEventListener("mouseout", function (i) { if (!e._enabled) { return } e._mouseOver = false; e._updateUI() }, false); ih(this._div, ["mousedown", "click", "dblclick"]) }, _bind: function () { var e = this; var i = this._map; this._bindTarget(this._target); if (this._map._renderType === "webgl") { this._map.addEventListener("maptypechange", function (T) { if (this.mapType === "B_EARTH_MAP") { e._target = e._map._earth } else { e._target = e._map } e._bindTarget(e._target); e._checkEnable() }) } }, _bindTarget: function (i) { if (i === this._map && this._mapBinded) { return } if (i === this._map._earth && this._earthBinded) { return } var e = this; i.on("load", function () { e._checkEnable() }); i.on("zoom_changed", function () { e._checkEnable() }); i.on("tilt_changed", function () { e._updateUI() }); if (i === this._map) { this._mapBinded = true } else { this._earthBinded = true } }, _updateUI: function () { var T = this._target.getTilt(); var i = 0; var jT = 0; var e = 0; if (T > 0) { i = 78 } if (this._mouseOver) { e = 52 } if (this._enabled === false) { jT = 26; e = 0; i = 0 } var jU = "-" + (110 + i + jT + e) + "px 1px"; this._div && (this._div.style.backgroundPosition = jU); if (this._enabled) { if (T > 0) { this._div && (this._div.title = "恢复") } else { this._div && (this._div.title = "倾斜") } } else { this._div && (this._div.title = "请放大地图后操作") } }, hide: function () { this._div.style.display = "none" }, show: function () { this._div.style.display = "block" } }); function g7(i) { c1.call(this); this._opts = { container: null, cursor: "default", marker: true }; this._opts = eN.extend(this._opts, i); this._type = "contextmenu"; this._map = null; this._container; this._left = 0; this._top = 0; this._items = []; this._rItems = []; this._dividers = []; this._enable = true; this.curPixel = null; this.curPoint = null; this._isOpen = false; var e = this; gO.load("menu", function () { e._draw() }) } g7.inherits(c1, "ContextMenu"); eN.extend(g7.prototype, { initialize: function (i, e) { this._map = i; this._overlay = e || null }, remove: function () { this._map = this._overlay = null }, addItem: function (jU, e) { if (!jU || jU._type != "menuitem" || jU._text == "" || jU._width <= 0) { return } for (var jT = 0, T = this._items.length; jT < T; jT++) { if (this._items[jT] === jU) { return } } if (e === undefined || e > this._items.length - 1) { e = -1 } jU._insertIndex = e; if (e === -1) { this._items.push(jU); this._rItems.push(jU) } else { this._items.splice(e, 0, jU); this._rItems.splice(e, 0, jU) } }, removeItem: function (jT) { if (!jT || jT._type != "menuitem") { return } for (var T = 0, e = this._items.length; T < e; T++) { if (this._items[T] === jT) { this._items[T].remove(); this._items.splice(T, 1); delete jT._insertIndex; e-- } } for (var T = 0, e = this._rItems.length; T < e; T++) { if (this._rItems[T] === jT) { this._rItems[T].remove(); this._rItems.splice(T, 1); delete jT._insertIndex; e-- } } }, addSeparator: function (e) { if (e === undefined || e > this._items.length - 1) { e = -1 } var i = { _type: "divider", _dIndex: this._dividers.length, _insertIndex: e }; this._dividers.push({ dom: null }); if (e === -1) { this._items.push(i) } else { this._items.splice(e, 0, i) } }, removeSeparator: function (T) { if (!this._dividers[T]) { return } for (var jT = 0, e = this._items.length; jT < e; jT++) { if (this._items[jT] && this._items[jT]._type == "divider" && this._items[jT]._dIndex == T) { this._items.splice(jT, 1); e-- } if (this._items[jT] && this._items[jT]._type == "divider" && this._items[jT]._dIndex > T) { this._items[jT]._dIndex-- } } this._dividers.splice(T, 1) }, getDom: function () { return this._container }, show: function () { if (this._isOpen == true) { return } this._isOpen = true }, hide: function () { if (this._isOpen == false) { return } this._isOpen = false }, setCursor: function (e) { if (!e) { return } this._opts.cursor = e }, getItem: function (e) { return this._rItems[e] }, enable: function () { this._enable = true }, disable: function () { this._enable = false } }); function hH(T, jT, i) { if (!T || !jT || typeof jT != "function") { return } c1.call(this); this._opts = { width: 100, id: "" }; i = i || {}; this._opts.width = (i.width * 1) ? i.width : 100; this._opts.id = i.id ? i.id : ""; this._text = T + ""; this._callback = jT; this._map = null; this._type = "menuitem"; this._contextmenu = null; this._container = null; this._enabled = true; var e = this; gO.load("menu", function () { e._draw() }) } hH.inherits(c1, "MenuItem"); eN.extend(hH.prototype, { initialize: function (e, i) { this._map = e; this._contextmenu = i }, remove: function () { this._contextmenu = null; this._map = null }, setText: function (e) { if (!e) { return } this._text = e + "" }, getDom: function () { return this._container }, enable: function () { this._enabled = true }, disable: function () { this._enabled = false } }); function hJ(e, i) { this.setSouthWest(e); this.setNorthEast(i) } eN.extend(hJ.prototype, { isEmpty: function () { return this.sw === null && this.ne === null }, equals: function (e) { if (!e || e.isEmpty() || this.isEmpty()) { return false } return this.sw.equals(e.sw) && this.ne.equals(e.ne) }, containsBounds: function (e) { if (!e || e.isEmpty() || this.isEmpty()) { return false } return (e.sw.lng > this.sw.lng && e.ne.lng < this.ne.lng && e.sw.lat > this.sw.lat && e.ne.lat < this.ne.lat) }, getCenter: function () { if (this.isEmpty()) { return null } return new ct((this.sw.lng + this.ne.lng) / 2, (this.sw.lat + this.ne.lat) / 2) }, intersects: function (T) { if (!T || T.isEmpty() || this.isEmpty()) { return null } if (Math.max(T.sw.lng, T.ne.lng) < Math.min(this.sw.lng, this.ne.lng) || Math.min(T.sw.lng, T.ne.lng) > Math.max(this.sw.lng, this.ne.lng) || Math.max(T.sw.lat, T.ne.lat) < Math.min(this.sw.lat, this.ne.lat) || Math.min(T.sw.lat, T.ne.lat) > Math.max(this.sw.lat, this.ne.lat)) { return null } var jU = Math.max(this.sw.lng, T.sw.lng); var i = Math.min(this.ne.lng, T.ne.lng); var jT = Math.max(this.sw.lat, T.sw.lat); var e = Math.min(this.ne.lat, T.ne.lat); return new hJ(new ct(jU, jT), new ct(i, e)) }, setMinMax: function () { this.minX = this.sw ? this.sw.lng : null; this.minY = this.sw ? this.sw.lat : null; this.maxX = this.ne ? this.ne.lng : null; this.maxY = this.ne ? this.ne.lat : null }, containsPoint: function (e) { if (!e) { return } return (e.lng >= this.sw.lng && e.lng <= this.ne.lng && e.lat >= this.sw.lat && e.lat <= this.ne.lat) }, extend: function (e) { if (!e) { return } var i = e.lng; var T = e.lat; if (!this.sw) { this.sw = e.clone() } if (!this.ne) { this.ne = e.clone() } if (this.sw.lng > i) { this.sw.lng = i } if (this.ne.lng < i) { this.ne.lng = i } if (this.sw.lat > T) { this.sw.lat = T } if (this.ne.lat < T) { this.ne.lat = T } }, getMin: function () { return this.sw }, getMax: function () { return this.ne }, getSouthWest: function () { return this.sw }, getNorthEast: function () { return this.ne }, setSouthWest: function (e) { this.sw = e ? e.clone() : null }, setNorthEast: function (e) { this.ne = e ? e.clone() : null }, clone: function () { return new hJ(this.sw, this.ne) }, toSpan: function () { if (this.isEmpty()) { return new iJ(0, 0) } return new iJ(Math.abs(this.ne.lng - this.sw.lng), Math.abs(this.ne.lat - this.sw.lat)) }, div: function (e) { if (!e || e.isEmpty() || this.isEmpty()) { return 0 } return ((this.ne.lng - this.sw.lng) * (this.ne.lat - this.sw.lat)) / ((e.ne.lng - e.sw.lng) * (e.ne.lat - e.sw.lat)) }, makeNormalizedPoint: function (e) { this.normalizedTopLeft = this.pointTopLeft.clone(); this.normalizedTopRight = this.pointTopRight.clone(); this.normalizedBottomRight = this.pointBottomRight.clone(); this.normalizedBottomLeft = this.pointBottomLeft.clone(); while (e < 0) { e += 360 } e = e % 360; if (e >= 0 && e < 90 || e >= 270 && e < 360) { if (this.normalizedTopRight.lng < this.normalizedTopLeft.lng) { this.normalizedTopRight.lng += hv.WORLD_SIZE_MC } if (this.normalizedBottomRight.lng < this.normalizedBottomLeft.lng) { this.normalizedBottomRight.lng += hv.WORLD_SIZE_MC } } else { if (this.normalizedTopLeft.lng < this.normalizedTopRight.lng) { this.normalizedTopLeft.lng += hv.WORLD_SIZE_MC } if (this.normalizedBottomLeft.lng < this.normalizedBottomRight.lng) { this.normalizedBottomLeft.lng += hv.WORLD_SIZE_MC } } }, toString: function () { return "Bounds" } }); function ct(e, i) { if (isNaN(e)) { e = dc(e); e = isNaN(e) ? 0 : e } if (typeof e === "string") { e = parseFloat(e) } if (isNaN(i)) { i = dc(i); i = isNaN(i) ? 0 : i } if (typeof i === "string") { i = parseFloat(i) } this.lng = e; this.lat = i } ct.prototype.equals = function (i) { if (!i) { return false } var jT = Math.abs(this.lat - i.lat); var T = Math.abs(this.lng - i.lng); var e = 1e-8; if (jT < e && T < e) { return true } return false }; ct.prototype.clone = function () { return new ct(this.lng, this.lat) }; ct.prototype.add = function (e) { return new ct(this.lng + e.lng, this.lat + e.lat) }; ct.prototype.sub = function (e) { return new ct(this.lng - e.lng, this.lat - e.lat) }; ct.prototype.mult = function (e) { return new ct(this.lng * e, this.lat * e) }; ct.prototype.div = function (e) { return new ct(this.lng / e, this.lat / e) }; ct.prototype.mag = function () { return Math.sqrt(this.lng * this.lng + this.lat * this.lat) }; ct.prototype.toString = function () { return "Point" }; ct.serialize = function (i, e) { return [i.lng, i.lat] }; ct.deserialize = function (e) { return new ct(e[0], e[1]) }; function iS() { } eN.extend(iS, { EARTHRADIUS: 6370996.81, MCBAND: [12890594.86, 8362377.87, 5591021, 3481989.83, 1678043.12, 0], LLBAND: [86, 60, 45, 30, 15, 0], MC2LL: [[1.410526172116255e-8, 0.00000898305509648872, -1.9939833816331, 200.9824383106796, -187.2403703815547, 91.6087516669843, -23.38765649603339, 2.57121317296198, -0.03801003308653, 17337981.2], [-7.435856389565537e-9, 0.000008983055097726239, -0.78625201886289, 96.32687599759846, -1.85204757529826, -59.36935905485877, 47.40033549296737, -16.50741931063887, 2.28786674699375, 10260144.86], [-3.030883460898826e-8, 0.00000898305509983578, 0.30071316287616, 59.74293618442277, 7.357984074871, -25.38371002664745, 13.45380521110908, -3.29883767235584, 0.32710905363475, 6856817.37], [-1.981981304930552e-8, 0.000008983055099779535, 0.03278182852591, 40.31678527705744, 0.65659298677277, -4.44255534477492, 0.85341911805263, 0.12923347998204, -0.04625736007561, 4482777.06], [3.09191371068437e-9, 0.000008983055096812155, 0.00006995724062, 23.10934304144901, -0.00023663490511, -0.6321817810242, -0.00663494467273, 0.03430082397953, -0.00466043876332, 2555164.4], [2.890871144776878e-9, 0.000008983055095805407, -3.068298e-8, 7.47137025468032, -0.00000353937994, -0.02145144861037, -0.00001234426596, 0.00010322952773, -0.00000323890364, 826088.5]], LL2MC: [[-0.0015702102444, 111320.7020616939, 1704480524535203, -10338987376042340, 26112667856603880, -35149669176653700, 26595700718403920, -10725012454188240, 1800819912950474, 82.5], [0.0008277824516172526, 111320.7020463578, 647795574.6671607, -4082003173.641316, 10774905663.51142, -15171875531.51559, 12053065338.62167, -5124939663.577472, 913311935.9512032, 67.5], [0.00337398766765, 111320.7020202162, 4481351.045890365, -23393751.19931662, 79682215.47186455, -115964993.2797253, 97236711.15602145, -43661946.33752821, 8477230.501135234, 52.5], [0.00220636496208, 111320.7020209128, 51751.86112841131, 3796837.749470245, 992013.7397791013, -1221952.21711287, 1340652.697009075, -620943.6990984312, 144416.9293806241, 37.5], [-0.0003441963504368392, 111320.7020576856, 278.2353980772752, 2485758.690035394, 6070.750963243378, 54821.18345352118, 9540.606633304236, -2710.55326746645, 1405.483844121726, 22.5], [-0.0003218135878613132, 111320.7020701615, 0.00369383431289, 823725.6402795718, 0.46104986909093, 2351.343141331292, 1.58060784298199, 8.77738589078284, 0.37238884252424, 7.45]], getDistanceByMC: function (jV, jT) { if (!jV || !jT) { return 0 } var i; var jU; var e; var T; jV = this.convertMC2LL(jV); if (!jV) { return 0 } i = ik(jV.lng); jU = ik(jV.lat); jT = this.convertMC2LL(jT); if (!jT) { return 0 } e = ik(jT.lng); T = ik(jT.lat); return this.getDistance(i, e, jU, T) }, getDistanceByLL: function (jV, jT) { if (!jV || !jT) { return 0 } jV.lng = this.getLoop(jV.lng, -180, 180); jV.lat = this.getRange(jV.lat, -80, 84); jT.lng = this.getLoop(jT.lng, -180, 180); jT.lat = this.getRange(jT.lat, -80, 84); var i; var e; var jU; var T; i = ik(jV.lng); jU = ik(jV.lat); e = ik(jT.lng); T = ik(jT.lat); return this.getDistance(i, e, jU, T) }, proximityCovertMC2LL: function (e) { if (e === null) { return e } if (e.lng < 180 && e.lng > -180 && e.lat < 90 && e.lat > -90) { return e } return this.convertMC2LL(e) }, convertMC2LL: function (e) { if (e === null) { return e } if (!e) { return new ct(0, 0) } var T; var jU; T = new ct(Math.abs(e.lng), Math.abs(e.lat)); for (var jT = 0; jT < this.MCBAND.length; jT++) { if (T.lat >= this.MCBAND[jT]) { jU = this.MC2LL[jT]; break } } var jV = this.convertor(e, jU); return new cn(jV.lat, jV.lng) }, convertLL2MC: function (jW) { if (!jW) { return new ct(0, 0) } var jY = jW.lat; var jT = jW.lng; jT = this.getLoop(jW.lng, -180, 180); jY = b7(jY, -85, 85); var jV; for (var jU = 0; jU < this.LLBAND.length; jU++) { if (jY >= this.LLBAND[jU]) { jV = this.LL2MC[jU]; break } } if (!jV) { for (jU = 0; jU < this.LLBAND.length; jU++) { if (jY <= -this.LLBAND[jU]) { jV = this.LL2MC[jU]; break } } } var T = new ct(jT, jY); var jX = this.convertor(T, jV); var e = new ct(jX.lng, jX.lat); e.latLng = new cn(jW.lat, jW.lng); return e }, convertor: function (T, jT) { if (!T || !jT) { return } var e = jT[0] + jT[1] * Math.abs(T.lng); var i = Math.abs(T.lat) / jT[9]; var jU = jT[2] + jT[3] * i + jT[4] * i * i + jT[5] * i * i * i + jT[6] * i * i * i * i + jT[7] * i * i * i * i * i + jT[8] * i * i * i * i * i * i; e *= (T.lng < 0 ? -1 : 1); jU *= (T.lat < 0 ? -1 : 1); return new ct(e, jU) }, getDistance: function (i, e, jT, T) { return this.EARTHRADIUS * Math.acos((Math.sin(jT) * Math.sin(T) + Math.cos(jT) * Math.cos(T) * Math.cos(e - i))) }, getRange: function (T, i, e) { if (i != null) { T = Math.max(T, i) } if (e != null) { T = Math.min(T, e) } return T }, getLoop: function (T, i, e) { while (T > e) { T -= e - i } while (T < i) { T += e - i } return T }, tileToBoundRange: function (T) { var i = T.col; var j0 = T.row; var jZ = T.baseTileSize; var jX = Math.pow(2, (18 - T.zoom)); var jV = { lbx: i * jZ, lby: j0 * jZ, rtx: (i + 1) * jZ, rty: (j0 + 1) * jZ }; var e = { lbx: jV.lbx * jX, lby: jV.lby * jX, rtx: jV.rtx * jX, rty: jV.rty * jX }; var jY = new ct(e.lbx, e.lby); var jU = new ct(e.rtx, e.rty); var jT = this.convertMC2LL(jY); var jW = this.convertMC2LL(jU); return { MC: new hJ(jY, jU), LL: new hJ(jT, jW) } } }); eN.extend(iS.prototype, { lnglatToMercator: function (e) { return iS.convertLL2MC(e) }, lngLatToPoint: function (e) { var i = iS.convertLL2MC(e); return new e8(i.lng, i.lat) }, mercatorToLnglat: function (e) { return iS.convertMC2LL(e) }, pointToLngLat: function (i) { var e = new ct(i.x, i.y); var T = iS.convertMC2LL(e); return new cn(T.lat, T.lng) }, pointToPixel: function (i, jV, jU, jT) { if (!i) { return } i = this.lnglatToMercator(i); var T = this.getZoomUnits(jV); var e = Math.round((i.lng - jU.lng) / T + jT.width / 2); var jW = Math.round((jU.lat - i.lat) / T + jT.height / 2); return new e8(e, jW) }, mercatorToPixel: function (jV, jU, jT, T) { if (!jV) { return } var i = this.getZoomUnits(jU); var e = Math.round((jV.lng - jT.lng) / i + T.width / 2); var jW = Math.round((jT.lat - jV.lat) / i + T.height / 2); return new e8(e, jW) }, pixelToPoint: function (jT, jW, jV, jU) { if (!jT) { return } var i = this.getZoomUnits(jW); var T = jV.lng + i * (jT.x - jU.width / 2); var jX = jV.lat - i * (jT.y - jU.height / 2); var e = new ct(T, jX); return this.mercatorToLnglat(e) }, tileToBound: function (jT, jX) { var i = jT.col; var j0 = jT.row; var jZ = jT.baseTileSize; var jY = this.getZoomUnits(jT.zoom); var T = { x: Math.round(jX.lng / jY), y: Math.round(jX.lat / jY) }; var jV = { lbx: i * jZ, lby: j0 * jZ, rtx: (i + 1) * jZ, rty: (j0 + 1) * jZ }; var e = { lbx: jX.lng + (jV.lbx - T.x) * jY, lby: jX.lat + (jV.lby - T.y) * jY, rtx: jX.lng + (jV.rtx - T.x) * jY, rty: jX.lat + (jV.rty - T.y) * jY }; var jU = iS.convertMC2LL(new ct(e.lbx, e.lby)); var jW = iS.convertMC2LL(new ct(e.rtx, e.rty)); return { MC: new hJ(new ct(e.lbx, e.lby), new ct(e.rtx, e.rty)), LL: new hJ(jU, jW) } }, getZoomUnits: function (e) { return Math.pow(2, (18 - e)) }, setCoordType: function (e) { this.coordsType = e } }); function ds() { } eN.extend(ds, { RADIUS: 6378137, EXTENT4326: [-180, -90, 180, 90], WORLD_EXTENT: [-180, -85, 180, 85], HALF_SIZE: 20037508.342789244, METERS_PER_UNIT: 111319.49079327358, EXTENT3857: [-20037508.342789244, -20037508.342789244, 20037508.342789244, 20037508.342789244], MAX_SAFE_Y: 238107693.26496765, origin: [-20037508.342789244, 20037508.342789244], size: 156543.03392804097, gridSize: [256, 256], resolutions: [156543.03392804097, 78271.51696402048, 39135.75848201024, 19567.87924100512, 9783.93962050256, 4891.96981025128, 2445.98490512564, 1222.99245256282, 611.49622628141, 305.748113140705, 152.8740565703525, 76.43702828517625, 38.21851414258813, 19.109257071294063, 9.554628535647032, 4.777314267823516, 2.388657133911758, 1.194328566955879, 0.5971642834779395, 0.29858214173896974, 0.14929107086948487, 0.07464553543474244, 0.03732276771737122], gridScaleFrom3857ToBDMC: 0.5971642834779395, gridScaleFromBDMCTo3857: 1.674581061974954, calcResolutions: function (i) { if (this.resolutions.length - 1 < i) { this.resolutions = []; for (var e = 0; e < i; ++e) { this.resolutions.push(this.size / Math.pow(2, e)) } } return this.resolutions }, forEachTileCoord: function (jZ, jY, T, jW) { var e = this.getTileRangeForExtentFactory(jZ, jY, T); for (var jU = e.minX, jX = e.maxX; jU <= jX; ++jU) { for (var jT = e.minY, jV = e.maxY; jT <= jV; ++jT) { jW([jY, jU, jT]) } } }, getTileRangeForExtentFactory: function (T, jU, i, jT) { var e; switch (i.source) { case "BD09MC": if (i.target === "EPSG3857") { e = this.getBDTileRangeForExtentAndZ(T, jU, jT) } else { e = this.getTileRangeForExtentAndZ(T, jU, jT) } break; case "EPSG3857": e = this.getTileRangeForExtentAndZ(T, jU, jT); break; default: e = this.getTileRangeForExtentAndZ(T, jU, jT); break }return e }, getBDTileRangeForExtentAndZ: function (T, jU, jT) { var i = [0, 0, 0]; this.getBDTileCoordForXYAndZ_(T[0], T[1], jU, false, i); var e = i[1]; var jV = i[2]; this.getBDTileCoordForXYAndZ_(T[2], T[3], jU, true, i); return this.createOrUpdateTileRange(e, i[1], jV, i[2], jT) }, getTileRangeForExtentAndZ: function (T, jU, jT) { var i = [0, 0, 0]; this.getTileCoordForXYAndZ_(T[0], T[3], jU, false, i); var e = i[1]; var jV = i[2]; this.getTileCoordForXYAndZ_(T[2], T[1], jU, true, i); return this.createOrUpdateTileRange(e, i[1], jV, i[2], jT) }, getBDTileCoordForXYAndZ_: function (e, jX, jV, jU, jT) { var jW = 256 * Math.pow(2, (18 - jV)); var T = e / jW; var i = jX / jW; if (jU) { T = Math.ceil(T) - 1; i = Math.ceil(i) - 1 } else { T = Math.floor(T); i = Math.floor(i) } return this.createOrUpdateTileCoord(jV, T, i, jT) }, getTileCoordForXYAndZ_: function (j0, jZ, jX, jY, e) { var j1 = this.origin; var i = (this.resolutions.length === 0 ? this.calcResolutions(21)[jX] : this.resolutions[jX]); var j3 = this.gridSize; var jT = jY ? 0.5 : 0; var T = jY ? 0.5 : 0; var j2 = Math.floor((j0 - j1[0]) / i + jT); var jV = Math.floor((j1[1] - jZ) / i + T); var jW = j2 / j3[0]; var jU = jV / j3[1]; if (jY) { jW = Math.ceil(jW) - 1; jU = Math.ceil(jU) - 1 } else { jW = Math.floor(jW); jU = Math.floor(jU) } return this.createOrUpdateTileCoord(jX, jW, jU, e) }, getTileCoordForCoordAndZ: function (T, i, e) { return this.getTileCoordForXYAndZ_(T[0], T[1], i, false, e) }, getTileRangeExtent: function (T, jW) { var jX = this.origin; if (this.resolutions.length === 0) { this.calcResolutions(23) } var jU = this.resolutions[T[0]]; var jY = this.gridSize; var jV = jX[0] + T[1] * jY[0] * jU; var jT = jX[1] - (T[2] + 1) * jY[1] * jU; var i = jV + jY[0] * jU; var e = jT + jY[1] * jU; return this.createOrUpdateTileRange(jV, i, jT, e, jW) }, getTileLeftBottomMCPoint: function (jU, T) { var i = this.origin; if (this.resolutions.length === 0) { this.calcResolutions(23) } var jT = this.resolutions[jU[0]]; var jW = this.gridSize; var e = i[0] + jU[1] * jW[0] * jT; var jX = i[1] - (jU[2] + 1) * jW[1] * jT; var jV = gcoord.transform([e, jX], gcoord.EPSG3857, gcoord.BD09MC); return jV }, getRangeExtent: function (i, j1, jX, j3, jT) { var jY = this.calPiexlResolution(j3, jT); var jW = j1 / 2 * jY; var jZ = jX / 2 * jY; var jV = i[0] - jW; var T = i[0] + jW; var jU = i[1] - jZ; var e = i[1] + jZ; var j0 = gcoord.transform([jV, jU], gcoord[jT.target], gcoord[jT.source]); var j2 = gcoord.transform([T, e], gcoord[jT.target], gcoord[jT.source]); return this.createOrUpdateTileRange(j0[0], j2[0], j0[1], j2[1]) }, getMousePoint: function (jW, jV, i, jU, T) { var jT = jP(jW, jV); return this.calLngLatByMapViewPixelInverse(jT.clientPos, i, jV.width, jV.height, jU, T) }, calLngLatByMapViewPixelInverse: function (jT, e, i, j0, j1, T) { var jW = this.calPiexlResolution(j1, T); var jV = jT.x - i / 2; var jU = jT.y - j0 / 2; var jY = e[0] + jV * jW; var jX = e[1] - jU * jW; var jZ = gcoord.transform([jY, jX], gcoord[T.target], gcoord[T.source]); return jZ }, calPiexlResolution: function (T, i) { var e; switch (i.target) { case "BD09MC": e = Math.pow(2, (18 - T)); break; case "EPSG3857": e = this.resolutions[Math.floor(T)]; break; default: e = Math.pow(2, (18 - T)); break }return e }, getXYZCellPixelCoor: function (jW, jU, jT, i) { var jY = this.gridSize; var jX; var jV; switch (i.source) { case "GCJ02": case "EPSG3857": var T = Math.pow(2, jT - 1) - (jU + 1); var e = jW - Math.pow(2, jT - 1); jX = e * jY[0]; jV = T * jY[1]; break; case "BD09MC": if (i.target === "EPSG3857") { jX = jW * jY[0]; jV = jU * jY[1] } else { var T = Math.pow(2, jT - 1) - (jU + 1); var e = jW - Math.pow(2, jT - 1); jX = e * jY[0]; jV = T * jY[1] } default: break }return { x: jX, y: jV } }, mcToPixel: function (i) { var T = this.resolutions[Math.floor(zoom)]; var e = i.lng / T; var jT = i.lat / T; return [e, jT] }, getBaiduCellPixelCoor: function (e, jT, T) { var i = 256; return { x: e * i, y: jT * i } }, getRelativePixelCoor: function (jV, jT) { var i = this.origin; var jU = jV[0]; var T = this.resolutions[Math.floor(jU)]; var jW = this.gridSize; var e = i[0] / T + jV[1] * jW[0]; var jX = i[1] / T - (jV[2] + 1) * jW[1]; return [jT[0] - e, jT[1] - jX] }, getPointPixelCoor: function (e, jY, i) { var jW; var jV; var T = Math.pow(2, (18 - jY)); var jT = this.resolutions[Math.floor(jY)]; var jU = iS.convertMC2LL(e); switch (i.source) { case "GCJ02": var jX = gcoord.transform([jU.lng, jU.lat], gcoord.BD09LL, gcoord.GCJ02); jX = gcoord.transform(jX, gcoord.WGS84, gcoord.EPSG3857); jW = jX[0] / jT; jV = jX[1] / jT; break; case "BD09LL": case "EPSG3857": var jX = gcoord.transform([jU.lng, jU.lat], gcoord.BD09LL, gcoord.EPSG3857); jW = jX[0] / jT; jV = jX[1] / jT; break; case "BD09MC": jW = e.lng / T; jV = e.lat / T; if (i.target === "BD09MC") { jW *= ds.gridScaleFromBDMCTo3857; jV *= ds.gridScaleFromBDMCTo3857 } default: break }return [jW, jV] }, getResolutionScale: function (i, e) { var T; switch (e.target) { case "BD09MC": T = this.gridScaleFrom3857ToBDMC; break; case "EPSG3857": T = this.gridScaleFromBDMCTo3857; break; default: T = this.gridScaleFrom3857ToBDMC; break }return T }, getBaiduResolutionScale: function (T) { var i = this.resolutions[Math.floor(T)]; var e = Math.pow(2, (18 - T)); var jT = e / i; return jT }, getTileCoordCenter: function (T) { var e = this.origin; if (this.resolutions.length === 0) { this.calcResolutions(23) } var i = this.resolutions[T[0]]; var jT = this.gridSize; return [e[0] + (T[1] + 0.5) * jT[0] * i, e[1] - (T[2] + 0.5) * jT[1] * i,] }, transformBDmcPoint: function (jU, i) { i = i || {}; var T = i.source || "EPSG3857"; var jT = iS.convertMC2LL(new ct(jU.lng, jU.lat)); var e; switch (T) { case "GCJ02": e = gcoord.transform([jT.lng, jT.lat], gcoord.BD09LL, gcoord.GCJ02); e = gcoord.transform(e, gcoord.WGS84, gcoord.EPSG3857); break; case "EPSG3857": e = gcoord.transform([jT.lng, jT.lat], gcoord.BD09LL, gcoord.EPSG3857); break; case "BD09MC": if (i.target === "EPSG3857") { e = gcoord.transform([jT.lng, jT.lat], gcoord.BD09LL, gcoord.EPSG3857) } else { e = [jU.lng, jU.lat] } break; default: e = gcoord.transform([jT.lng, jT.lat], gcoord.BD09LL, gcoord[T]); break }return e }, transformPointArr: function (e, i, T) { return gcoord.transform(e, gcoord[i || "BD09LL"], gcoord[T || "BD09MC"]) }, getTilesLoop: function (T, e) { var i = Math.pow(2, T); while (e > i - 1) { e = e - i } while (e < 0) { e = e + i } return e }, getLoopBox: function (e, jT) { var i = this.HALF_SIZE * 2; if (e[0] > 0 && jT[2] < 0) { jT[2] = jT[2] + i } else { if (e[0] < 0 && jT[0] > 0) { jT[0] = jT[0] - i } } return jT }, createOrUpdateTileCoord: function (T, e, jT, i) { if (i !== undefined) { i[0] = T; i[1] = e; i[2] = jT; return i } else { return [T, e, jT] } }, createOrUpdateTileRange: function (e, jT, jU, T, i) { if (i !== undefined) { i.minX = e; i.maxX = jT; i.minY = jU; i.maxY = T; return i } else { return { minX: e, maxX: jT, minY: jU, maxY: T } } }, fromEPSG4326: function (T, jY, jW) { var jU = T.length; var jV = jW > 1 ? jW : 2; var e = jY; if (e === undefined) { if (jV > 2) { e = T.slice() } else { e = new Array(jU) } } for (var jT = 0; jT < jU; jT += jV) { e[jT] = (this.HALF_SIZE * T[jT]) / 180; var jX = this.RADIUS * Math.log(Math.tan((Math.PI * (+T[jT + 1] + 90)) / 360)); if (jX > this.MAX_SAFE_Y) { jX = this.MAX_SAFE_Y } else { if (jX < -this.MAX_SAFE_Y) { jX = -this.MAX_SAFE_Y } } e[jT + 1] = jX } return e }, toEPSG4326: function (T, jX, jW) { var jU = T.length; var jV = jW > 1 ? jW : 2; var e = jX; if (e === undefined) { if (jV > 2) { e = T.slice() } else { e = new Array(jU) } } for (var jT = 0; jT < jU; jT += jV) { e[jT] = (180 * T[jT]) / this.HALF_SIZE; e[jT + 1] = (360 * Math.atan(Math.exp(T[jT + 1] / this.RADIUS))) / Math.PI - 90 } return e }, findParentGridAndPosition: function (jT, j3, j2, jX, jY, j0, jW) { if (j2 - 1 < 0) { return false } var j4 = jT; var jZ = j3; var T = j2; for (var jV = 1; jV <= jW; jV++) { var e = this.findParent(j4, jZ, T, jV); if (!e) { return false } var j1 = this.getTileKey(e); var jU = jX.getData(j1); if (jU && jU.status === "ready") { if (jY[j1]) { continue } j0.setData(jU, this.drawIndex, 0); jY[j1] = true; return true } j4 = e.col; jZ = e.row; T = e.zoom } }, findParent: function (i, jU, T, jT) { if (T - 1 < 0) { return null } var e = i % 2; var jV = jU % 2; return { col: Math.floor(i / 2), row: Math.floor(jU / 2), sonX: e, sonY: jV, thumbLB: [e * 0.5, 1 - jV * 0.5 - 0.5], thumbRT: [e * 0.5 + 0.5, 1 - jV * 0.5], radio: Math.pow(2, jT), zoom: T - 1, useZoom: T - 1 } }, getTileKey: function (e, jT) { jT = jT || {}; var i = typeof jT.useZoom === "number" ? jT.useZoom : e.useZoom; var T = e.style || this.mapStyleId || "default"; return this.mapType + "_" + T + "_" + e.col + "_" + e.row + "_" + e.zoom + "_" + i }, lon2tile: function (i, e) { return (Math.floor((i + 180) / 360 * Math.pow(2, e))) }, lat2tile: function (T, i) { var e = Math.tan(T * Math.PI / 180) + 1 / Math.cos(T * Math.PI / 180); return (Math.floor((1 - Math.log(e) / Math.PI) / 2 * Math.pow(2, i))) }, tile2long: function (e, i) { return (e / Math.pow(2, i) * 360 - 180) }, tile2lat: function (T, e) { var i = Math.PI - 2 * Math.PI * T / Math.pow(2, e); return (180 / Math.PI * Math.atan(0.5 * (Math.exp(i) - Math.exp(-i)))) } }); function cn(i, e) { if (i < -90) { i = -90 } else { if (i > 90) { i = 90 } } while (e < -180) { e += 360 } while (e > 180) { e -= 360 } e = e || 0; i = i || 0; ct.call(this, e, i) } cn.inherits(ct, "LatLng"); eN.extend(cn.prototype, { equals: function (e) { return (this.lat === e.lat && this.lng === e.lng) }, clone: function () { return new cn(this.lat, this.lng) }, add: function (e) { return new cn(this.lng + e.lng, this.lat + e.lat) }, sub: function (e) { return new cn(this.lat - e.lat, this.lng - e.lng) }, mult: function (e) { return new cn(this.lng * e, this.lat * e) }, div: function (e) { return new cn(this.lng / e, this.lat / e) }, mag: function () { return Math.sqrt(this.lng * this.lng + this.lat * this.lat) }, getLngSpan: function (e) { var i = this.lng; var T = Math.abs(e - i); if (T > 180) { T = 360 - T } return T }, toString: function () { return "LatLng" } }); function cB(e, i) { if (e && !i) { i = e } this._sw = this._ne = null; this._swLng = this._swLat = null; this._neLng = this._neLat = null; if (e) { this._sw = new cn(e.lat, e.lng); this._ne = new cn(i.lat, i.lng); this._swLng = e.lng; this._swLat = e.lat; this._neLng = i.lng; this._neLat = i.lat } } eN.extend(cB.prototype, { isEmpty: function () { return !this._sw || !this._ne }, equals: function (e) { if (this.isEmpty()) { return false } return this.getSouthWest().equals(e.getSouthWest()) && this.getNorthEast().equals(e.getNorthEast()) }, getSouthWest: function () { return this._sw }, getNorthEast: function () { return this._ne }, containsBounds: function (e) { if (this.isEmpty() || e.isEmpty()) { return false } return (e._swLng > this._swLng && e._neLng < this._neLng && e._swLat > this._swLat && e._neLat < this._neLat) }, getCenter: function () { if (this.isEmpty()) { return null } return new cn((this._swLat + this._neLat) / 2, (this._swLng + this._neLng) / 2) }, intersects: function (T) { if (Math.max(T._swLng, T._neLng) < Math.min(this._swLng, this._neLng) || Math.min(T._swLng, T._neLng) > Math.max(this._swLng, this._neLng) || Math.max(T._swLat, T._neLat) < Math.min(this._swLat, this._neLat) || Math.min(T._swLat, T._neLat) > Math.max(this._swLat, this._neLat)) { return false } var jU = Math.max(this._swLng, T._swLng); var i = Math.min(this._neLng, T._neLng); var jT = Math.max(this._swLat, T._swLat); var e = Math.min(this._neLat, T._neLat); this._sw = new cn(jT, jU); this._ne = new cn(e, i); this._swLng = jU; this._swLat = jT; this._neLng = i; this._neLat = e; return true }, containsPoint: function (e) { if (this.isEmpty()) { return false } return (e.lng >= this._swLng && e.lng <= this._neLng && e.lat >= this._swLat && e.lat <= this._neLat) }, extend: function (e) { var i = e.lng; var T = e.lat; if (!this._sw) { this._sw = new cn(0, 0) } if (!this._ne) { this._ne = new cn(0, 0) } if (!this._swLng || this._swLng > i) { this._sw.lng = this._swLng = i } if (!this._neLng || this._neLng < i) { this._ne.lng = this._neLng = i } if (!this._swLat || this._swLat > T) { this._sw.lat = this._swLat = T } if (!this._neLat || this._neLat < T) { this._ne.lat = this._neLat = T } }, toSpan: function () { if (this.isEmpty()) { return new cn(0, 0) } return new cn(Math.abs(this._neLat - this._swLat), Math.abs(this._neLng - this._swLng)) }, union: function (i) { if (i.isEmpty()) { return false } var e = i.getSouthWest(); var T = i.getNorthEast(); if (this._swLat > e.lat) { this._swLat = e.lat } if (this._swLng > e.lng) { this._swLng = e.lng } if (this._neLat < T.lat) { this._neLat = T.lat } if (this._neLng < T.lng) { this._neLng = T.lng } this._sw = new cn(this._swLat, this._swLng); this._ne = new cn(this._neLat, this._neLng); return true }, toString: function () { return this._swLat + ", " + this._swLng + ", " + this._neLat + ", " + this._neLng } }); window.COORDINATES_WGS84 = 1; window.COORDINATES_WGS84_MC = 2; window.COORDINATES_GCJ02 = 3; window.COORDINATES_GCJ02_MC = 4; window.COORDINATES_BD09 = 5; window.COORDINATES_BD09_MC = 6; window.COORDINATES_MAPBAR = 7; window.COORDINATES_51 = 8; function fH() { } fH.inherits(c1, "Convertor"); eN.extend(fH.prototype, { translate: function (i, jU, jT, T) { jU = jU || 1; jT = jT || 5; if (i.length > 10) { T && T({ status: 25 }); return } var e = B.apiHost + "/geoconv/v1/?coords="; eN.each(i, function (jV) { e += jV.lng + "," + jV.lat + ";" }); e = e.replace(/;$/gi, ""); e = e + "&from=" + jU + "&to=" + jT + "&v=gl&type=webgl&ak=" + eD; c9.request(e, function (jW) { if (jW.status === 0) { var jV = []; eN.each(jW.result, function (jX) { jV.push(new ct(jX.x, jX.y)) }); delete jW.result; jW.points = jV } T && T(jW) }) } }); var d4 = { idle: 0, freeze: 1, zooming: 2, dragging: 3, moving: 4, readyToDrag: 5, readyToPinch: 6, pinching: 7, stdMapCtrlDrag: 8, KEY_LEFT: 37, KEY_UP: 38, KEY_RIGHT: 39, KEY_DOWN: 40, arrowOpCodes: { 37: 1, 38: 2, 39: 4, 40: 8 } }; var ai = { _map: null, _html: "<div class='BMap_opMask' unselectable='on'></div>", _maskElement: null, _cursor: "default", inUse: false, show: function (e) { if (!this._map) { this._map = e } this.inUse = true; if (!this._maskElement) { this._createMask(e) } this._maskElement.style.display = "block" }, _createMask: function (i) { if (!this._map) { this._map = i } if (!this._map) { return } var e = this._maskElement = bI(this._map.container, this._html); eN.on(e, "mouseup", function (T) { if (T.button == 2) { g9(T) } }); eN.on(e, "contextmenu", g9); e.style.display = "none" }, getDrawPoint: function (jT, jW, jU) { jT = window.event || jT; var i = jT.offsetX || jT.layerX || 0; var jV = parseInt(jT.offsetY) || parseInt(jT.layerY) || 0; var T = jT.target || jT.srcElement; if (T != ai.getDom(this._map) && jW == true) { while (T && T != this._map.container) { if (!(T.clientWidth == 0 && T.clientHeight == 0 && T.offsetParent && T.offsetParent.nodeName.toLowerCase() == "td")) { i += T.offsetLeft; jV += T.offsetTop } T = T.offsetParent } } if (T != ai.getDom(this._map) && T != this._map.container) { return } if (typeof i === "undefined" || typeof jV === "undefined") { return } if (isNaN(i) || isNaN(jV)) { return } if (jU) { i = i + jU.x; jV = jV + jU.y } return this._map.pixelToPointIn(new e8(i, jV)) }, hide: function () { if (!this._map) { return } this.inUse = false; if (this._maskElement) { this._maskElement.style.display = "none" } }, getDom: function (e) { if (!this._maskElement) { this._createMask(e) } return this._maskElement }, setCursor: function (e) { this._cursor = e || "default"; if (this._maskElement) { this._maskElement.style.cursor = this._cursor } } }; function aQ() { this._type = "overlay" } aQ.inherits(eN.BaseClass, "Overlay"); aQ.getZIndex = function (i, e) { i = i * 1; if (!i) { return 0 } if (e) { i = iS.convertMC2LL(new ct(0, i)).lat } return (i * -100000) << 1 }; eN.extend(aQ.prototype, { _i: function (e) { this._map = e; if (!this.domElement && bP(this.initialize)) { this.domElement = this.initialize(e); if (this.domElement) { this.domElement.style.WebkitUserSelect = "none" } } this.draw() }, initialize: function (e) { throw "initialize方法未实现" }, draw: function () { throw "draw方法未实现" }, remove: function () { if (this.domElement && this.domElement.parentNode) { this.domElement.parentNode.removeChild(this.domElement) } this.domElement = null; this.dispatchEvent(new fy("onremove")) }, hide: function () { this._visible = false; eN.hide(this.domElement) }, show: function () { this._visible = true; eN.show(this.domElement) }, getMap: function () { return this._map }, dispose: function () { eN.BaseClass.prototype.decontrol.call(this) } }); function er() { eN.BaseClass.call(this); aQ.call(this); this._visible = true; this._visibleInternal = true; this.zIndex = 0; this.infoWindow = null; this._dblclickTime = 0 } er.inherits(aQ, "OverlayInternal"); eN.extend(er.prototype, { initialize: function (e) { this.map = e; eN.BaseClass.call(this, this.hashCode); return null }, draw: function () { }, remove: function () { this.decontrol(); aQ.prototype.remove.call(this) }, destroy: function () { }, hide: function () { this._visible = false }, show: function () { this._visible = true }, getDom: function () { return this.domElement }, getContainer: function () { return this.domElement }, setClassName: function () { }, setConfig: function (i) { if (!i) { return } for (var e in i) { if (i.hasOwnProperty(e)) { this._config[e] = i[e] } } }, getPoint: function (T, jT) { if (!T) { return this.point } else { var e = jT ? jT.width : 0; var jU = jT ? jT.height : 0; if (this.map) { var i = this.map.pointToPixelIn(this.point); if (this._config && this._config.offset) { i.x = i.x + this._config.offset.width + e; i.y = i.y + this._config.offset.height + jU } else { i.x = i.x + e; i.y = i.y + jU } return this.map.pixelToPointIn(i) } } }, setZIndex: function (e) { this.zIndex = e }, isVisible: function () { if (!this.domElement) { return false } return !!this._visible }, enableMassClear: function () { this._config.enableMassClear = true }, disableMassClear: function () { this._config.enableMassClear = false }, showInternal: function () { this._visibleInternal = true }, hideInternal: function (e) { this._visibleInternal = false; this._hideInternalReason = e }, addContextMenu: function (e) { this._menu = e }, removeContextMenu: function (e) { this._menu = null } }); function aO(e) { this.map = e; this._overlays = {}; this._overlayArray = []; this._customOverlays = []; e._overlays = this._overlays; e._overlayArray = this._overlayArray; e._customOverlays = this._customOverlays; this._zoomingOrMoving = false; this._init() } aO.prototype._init = function () { if (this.map._renderType !== "webgl") { this._createOverlayContainers() } else { this._createWebGLOverlayContainers() } this._bind() }; aO.prototype._createOverlayContainers = function () { var e = this.map; e.temp.overlayDiv = e.overlayDiv = this._createOverlayDiv(e.platform, 200); e.temp.overlayDivEx = e.overlayDivEx = this._createOverlayDiv(e.platform, 50); e._panes.floatPane = this._createOverlayDiv(e.temp.overlayDiv, 800); e._panes.markerMouseTarget = this._createOverlayDiv(e.temp.overlayDiv, 700); e._panes.floatShadow = this._createOverlayDiv(e.temp.overlayDiv, 600); e._panes.labelPane = this._createOverlayDiv(e.temp.overlayDiv, 500); e._panes.markerPane = this._createOverlayDiv(e.temp.overlayDiv, 400); if (e.isCanvasMap()) { e._panes.mapPane = this._createOverlayDiv(e.temp.overlayDivEx, 50) } else { e._panes.mapPane = this._createOverlayDiv(e.temp.overlayDiv, 200) } }; aO.prototype._createWebGLOverlayContainers = function () { var e = this.map; e.temp.overlayDiv = e.overlayDiv = this._createOverlayDiv(e.platform, 200); e._panes.floatPane = this._createOverlayDiv(e.temp.overlayDiv, 800); e._panes.markerMouseTarget = this._createOverlayDiv(e.temp.overlayDiv, 700); e._panes.floatShadow = this._createOverlayDiv(e.temp.overlayDiv, 600); e._panes.labelPane = this._createOverlayDiv(e.temp.overlayDiv, 500); e._panes.markerPane = this._createOverlayDiv(e.temp.overlayDiv, 400) }; aO.prototype._createOverlayDiv = function (e, jT) { var T = bU("div"); var i = T.style; i.position = "absolute"; i.top = i.left = i.width = i.height = "0"; i.zIndex = jT; e.appendChild(T); return T }; aO.prototype._bind = function () { var jU = this.map; var jT = this; function i(jW) { jT.draw(jW) } if (jU._renderType !== "webgl") { jU.addEventListener("load", i); jU.addEventListener("moveend", i); jU.addEventListener("resize", i); jU.addEventListener("zoomend", i); jU.addEventListener("zooming_inner", i) } else { jU.on("update", i) } jU.on("destroy", function () { jU._overlays = null; jU._overlayArray = null; jU._customOverlays = null; jU.overlayDiv = null; jU.overlayDivEx = null; var jW = Object.keys(jU._panes); for (var jX = 0; jX < jW.length; jX++) { jU._panes[jW[jX]] = null } var jY = Object.keys(jU.temp); for (var jX = 0; jX < jY.length; jX++) { jU.temp[jY[jX]] = null } }); jU.addEventListener("zoomend", function (jW) { if (this.mapType === "B_EARTH_MAP") { if (this._earth.getZoom() < this._earth.zoomForNight + 1) { this.temp.overlayDiv.style.display = "none"; if (this.temp.overlayDivEx) { this.temp.overlayDivEx.style.display = "none" } } else { if (this.temp.overlayDiv.style.display === "none") { this.temp.overlayDiv.style.display = ""; if (this.temp.overlayDivEx) { this.temp.overlayDivEx.style.display = "" } if (this.temp.infoWin && this.temp.infoWin.isOpen()) { this.temp.infoWin.redraw() } } } } }); jU.addEventListener("oncenterandzoom", function (jW) { jT.draw(jW); if (this.mapType === "B_EARTH_MAP") { if (this._earth.getZoom() < this._earth.zoomForNight + 1) { this.temp.overlayDiv.style.display = "none"; if (this.temp.overlayDivEx) { this.temp.overlayDivEx.style.display = "none" } } else { if (this.temp.overlayDiv.style.display === "none") { this.temp.overlayDiv.style.display = ""; if (this.temp.overlayDivEx) { this.temp.overlayDivEx.style.display = "" } if (this.temp.infoWin && this.temp.infoWin.isOpen()) { this.temp.infoWin.redraw() } } } } }); jU.addEventListener("maptypechange", function (jW) { if (this.mapType === "B_EARTH_MAP") { if (this._panes.mapPane) { this._panes.mapPane.style.display = "none" } if (this._earth.getZoom() < this._earth.zoomForNight + 1) { this.temp.overlayDiv.style.display = "none"; if (this.temp.overlayDivEx) { this.temp.overlayDivEx.style.display = "none" } } else { if (this.temp.overlayDiv.style.display === "none") { this.temp.overlayDiv.style.display = ""; if (this.temp.overlayDivEx) { this.temp.overlayDivEx.style.display = "" } if (this.temp.infoWin && this.temp.infoWin.isOpen()) { this.temp.infoWin.redraw() } } } if (this._panes.markerPane) { this._panes.markerPane.style.display = "none" } } else { if (this._panes.mapPane) { this._panes.mapPane.style.display = "" } if (this._panes.markerPane) { this._panes.markerPane.style.display = "" } if (this.temp.overlayDiv.style.display === "none") { this.temp.overlayDiv.style.display = ""; if (this.temp.overlayDivEx) { this.temp.overlayDivEx.style.display = "" } if (this.temp.infoWin && this.temp.infoWin.isOpen()) { this.temp.infoWin.redraw() } } } jT.draw(jW) }); jU.on("earthstatuschange", function jV(jW) { jT.draw(jW) }); jU.addEventListener("addoverlay", function (j0) { var jX = j0.target; if (jX instanceof er) { if (!jT._overlays[jX.hashCode]) { jT._overlays[jX.hashCode] = jX; jT._overlayArray.push(jX) } } else { var jZ = false; for (var jY = 0, jW = jT._customOverlays.length; jY < jW; jY++) { if (jT._customOverlays[jY] === jX) { jZ = true; break } } if (!jZ) { jT._customOverlays.push(jX) } } }); jU.addEventListener("removeoverlay", function (jZ) { var jX = jZ.target; if (jX instanceof er) { delete jT._overlays[jX.hashCode]; for (var jY = 0; jY < jT._overlayArray.length; jY++) { if (jT._overlayArray[jY] === jX) { jT._overlayArray.splice(jY, 1); break } } } else { for (var jY = 0, jW = jT._customOverlays.length; jY < jW; jY++) { if (jT._customOverlays[jY] === jX) { jT._customOverlays.splice(jY, 1); break } } } }); jU.addEventListener("clearoverlays", function (jY) { this.closeInfoWindow(); this.closeSimpleInfoWindow(); for (var jX in jT._overlays) { if (jT._overlays[jX]._config.enableMassClear) { this.removeOverlay(jT._overlays[jX]) } } for (var jW = jT._customOverlays.length - 1; jW > 0; jW--) { if (jT._customOverlays[jW].enableMassClear !== false) { this.removeOverlay(jT._customOverlays[jW]); jT._customOverlays.splice(jW, 1) } } }); jU.addEventListener("infowindowopen", function (jX) { var jW = this.infoWindow; if (jW) { eN.hide(jW.popDom); eN.hide(jW.shadowDom) } }); function T() { if (this.getMapType() === "B_EARTH_MAP" || this._renderType === "webgl") { if (jT._zoomingOrMoving === false) { this._panes.markerMouseTarget.style.display = "none"; jT._zoomingOrMoving = true } } } function e(jY) { if (this.getMapType() === "B_EARTH_MAP" || this._renderType === "webgl") { if (jT._zoomingOrMoving === true) { this._panes.markerMouseTarget.style.display = ""; jT._zoomingOrMoving = false; for (var jX = 0; jX < jT._overlayArray.length; jX++) { var jW = jT._overlayArray[jX]; if (jW instanceof jx === true) { jW.draw(jY) } } } } } jU.addEventListener("movestart", T); jU.addEventListener("moveend", e); jU.addEventListener("zoomstart", T); jU.addEventListener("zoomend", e); jU.addEventListener("animation_start", T); jU.addEventListener("animation_end", e); jU.addEventListener("displayoptions_changed", function (jW) { if (this._displayOptions.overlay === false) { this.temp.overlayDiv.style.display = "none" } else { this.temp.overlayDiv.style.display = "" } }) }; aO.prototype.draw = function (jW) { jW = jW || {}; if (this.map.getMapType() === "B_EARTH_MAP") { for (var jU = 0; jU < this._overlayArray.length; jU++) { var T = this._overlayArray[jU]; if (T instanceof ii === true) { continue } if (this._zoomingOrMoving) { if (T instanceof jx === true) { continue } } T.draw(jW) } } else { for (var jU = 0, jT = this._overlayArray.length; jU < jT; jU++) { var T = this._overlayArray[jU]; if (this._zoomingOrMoving && T instanceof jx === true) { continue } T.draw(jW) } } eN.each(this._customOverlays, function (e) { e.draw(jW) }); if (this.map.temp.infoWin) { this.map.temp.infoWin.setPosition(jW.center, jW.zoom) } if (this.map.getMapType() !== "B_EARTH_MAP" && this.map._renderType !== "webgl") { if (bw.DrawerSelector) { var jV = bw.DrawerSelector.getDrawer(this.map); jV.setPalette() } } }; bw.register(function (e) { e._overlayMgr = new aO(e) }); function ii(e) { er.call(this); this._config = { strokeColor: "#000", strokeWeight: 2, strokeOpacity: 1, strokeStyle: "solid", dashArray: null, strokeLineCap: "round", strokeLineJoin: "round", enableMassClear: true, getParseTolerance: null, getParseCacheIndex: null, enableParse: true, enableEditing: false, mouseOverTolerance: 5, geodesic: false, linkRight: false, clip: true, texture: null, textureSize: null, textureZoomWithMap: false, textureRepeat: true }; this.setConfig(e); if (this._config.strokeOpacity < 0 || this._config.strokeOpacity > 1) { this._config.strokeOpacity = 1 } if (this._config.fillOpacity < 0 || this._config.fillOpacity > 1) { this._config.fillOpacity = 1 } if (this._config.strokeStyle !== "solid" && this._config.strokeStyle !== "dashed" && this._config.strokeStyle !== "dotted") { this._config.strokeStyle = "solid" } this.domElement = null; this._bounds = new hJ(); this.points = []; this.greatCirclePoints = []; this._parseCache = []; this._holesCache = []; this._parseCacheGL = []; this._parseCacheGLRaw = []; this._areaCacheGL = []; this._strokeStyleInfoForGL = [[]]; this._fillStyleInfoForGL = ""; this.vertexMarkers = []; this._temp = {} } ii.JOININDEX = { miter: 0, round: 1, bevel: 2 }; ii.CAPINDEX = { round: 0, butt: 1, square: 2 }; ii.inherits(er, "Graph"); ii.getGraphPoints = function (i) { var e = []; if (!i || i.length === 0) { return e } if (typeof i === "string") { var T = i.split(";"); eN.each(T, function (jU) { var jT = jU.split(","); e.push(new ct(jT[0], jT[1])) }) } if (i.constructor === Array && i.length > 0) { e = i } return e }; ii.parseTolerance = { 0: [0.09, 0.005, 0.0001, 0.00001], 1: [9000, 500, 20, 1] }; eN.extend(ii.prototype, { initialize: function (e) { this.map = e; return null }, draw: function () { }, setPoints: function (e) { this._clearCache(); this.points = ii.getGraphPoints(e).slice(0); this._calcBounds() }, setPathIn: function (e) { this.setPoints(e) }, _calcBounds: function () { if (!this.points) { return } var e = this; e._bounds = new hJ(); if (!this.hasMultipleParts) { eN.each(this.points, function (i) { e._bounds.extend(i) }) } else { eN.each(this.points, function (i) { eN.each(i, function (T) { e._bounds.extend(T) }) }) } }, getPoints: function () { return this.points }, getPathIn: function () { return this.points }, setPointAt: function (i, e) { if (!e || !this.points[i]) { return } this._clearCache(); this.points[i] = new ct(e.lng, e.lat); this._calcBounds() }, setPositionAt: function (i, e) { if (!e || !this.points[i]) { return } var T = iS.convertLL2MC(e); this.setPointAt(i, T) }, setOptions: function (i) { i = i || {}; for (var e in i) { if (i.hasOwnProperty(e)) { this._config[e] = i[e] } } }, setStrokeColor: function (e) { this._config.strokeColor = e }, getStrokeColor: function () { return this._config.strokeColor }, setStrokeLineCap: function (e) { this._config.strokeLineCap = e }, getStrokeLineCap: function () { return this._config.strokeLineCap }, setStrokeLineJoin: function (e) { this._config.strokeLineJoin = e }, getStrokeLineJoin: function () { return this._config.strokeLineJoin }, setStrokeWeight: function (e) { if (e > 0) { this._config.strokeWeight = e } }, getStrokeWeight: function () { return this._config.strokeWeight }, setStrokeOpacity: function (e) { if (!e || e > 1 || e < 0) { return } this._config.strokeOpacity = e }, getStrokeOpacity: function () { return this._config.strokeOpacity }, setFillOpacity: function (e) { if (e > 1 || e < 0) { return } this._config.fillOpacity = e }, getFillOpacity: function () { return this._config.fillOpacity }, setStrokeStyle: function (e) { if (e !== "solid" && e !== "dashed" && e !== "dotted") { return } this._config.strokeStyle = e }, getStrokeStyle: function () { return this._config.strokeStyle }, setFillColor: function (e) { this._config.fillColor = e || "" }, getFillColor: function () { return this._config.fillColor }, getBoundsIn: function () { this._bounds.setMinMax(); return this._bounds }, getBounds: function () { var e = this.getBoundsIn(); var i = new hJ(iS.convertMC2LL(e.getSouthWest()), iS.convertMC2LL(e.getNorthEast())); i.setMinMax(); return i }, remove: function () { if (this.map) { this.map.removeEventListener("onmousemove", this._graphMouseEvent); this.map.removeEventListener("onclick", this._graphClickEvent) } er.prototype.remove.call(this); this._clearCache(); var e = new fy("onlineupdate"); e.action = "remove"; e.overlay = this; this.fire(e) }, enableEditing: function () { if (this.points.length < 2) { return } this._config.enableEditing = true; var e = this; gO.load("poly", function () { e.addVertexs() }, true) }, disableEditing: function () { this._config.enableEditing = false; var e = this; gO.load("poly", function () { e.clearVertexs() }, true) }, getLength: function () { if (typeof this._length === "number") { return this._length } if (typeof this._config.totalLength === "number") { this._length = this._config.totalLength; return this._length } var T = 0; if (this.points.length <= 1) { this._length = 0; return T } for (var e = 0; e < this.points.length - 1; e++) { T += ej(this.points[e], this.points[e + 1]) } this._length = T; return T }, getParsedPoints: function () { var e = this._simplification(this.points); if (this.hasMultipleParts) { return e } return [e] }, _simplification: function (jY) { var e = this.map; var jX = this.getParseCacheIndex(e.getZoom()); var j0; if (this._parseCache[jX]) { j0 = this._parseCache[jX] } else { var jV = jY; if (this.greatCirclePoints.length > 0) { jV = this.greatCirclePoints } var jU = e.config.coordType === 2 ? 1 : e.config.coordType; var jW = this.getParseTolerance(e.getZoom(), jU); if (!this.hasMultipleParts) { var jZ = dI(jV, jW) } else { var jZ = []; for (var T = 0; T < jV.length; T++) { var jT = dI(jV[T], jW); jZ.push(jT) } } j0 = this._parseCache[jX] = jZ } return j0 }, _clearCache: function () { this._length = null; this._parseCache.length = 0; this._parseCacheGL.length = 0; this._parseCacheGLRaw.length = 0; this._areaCacheGL.length = 0 }, canRenderDataBeMerged: function () { var e = this._config; if (e.texture) { return false } return true } }); if (eN.Browser.ie && document.namespaces && !document.namespaces.olv) { document.namespaces.add("olv", "urn:schemas-microsoft-com:vml") } function bp(jV, jT, j2) { var jZ = false, jX = false, j0 = false, j4 = new e8(jV.x, jV.y), j3 = new e8(jT.x, jT.y), jU = fz(j4, j2), T = fz(j3, j2), j1; var j6, j5; var jY = j2.minX, jW = j2.minY, i = j2.maxX, e = j2.maxY; do { if (jU.all == 0 && T.all == 0) { jZ = true; j0 = true } else { if ((jU.all & T.all) != 0) { j0 = true } else { if (jU.all != 0) { j1 = jU } else { j1 = T } if (j1.top) { j6 = j4.x + (j3.x - j4.x) * (jW - j4.y) / (j3.y - j4.y); j5 = jW } else { if (j1.bottom) { j6 = j4.x + (j3.x - j4.x) * (e - j4.y) / (j3.y - j4.y); j5 = e } else { if (j1.right) { j5 = j4.y + (j3.y - j4.y) * (i - j4.x) / (j3.x - j4.x); j6 = i } else { if (j1.left) { j5 = j4.y + (j3.y - j4.y) * (jY - j4.x) / (j3.x - j4.x); j6 = jY } } } } jX = true; if (j1.all == jU.all) { j4.x = Math.round(j6); j4.y = Math.round(j5); jU = fz(j4, j2) } else { j3.x = Math.round(j6); j3.y = Math.round(j5); T = fz(j3, j2) } } } } while (!j0); if (jZ) { return { pixel0: new e8(j4.x, j4.y), pixel1: new e8(j3.x, j3.y), clip: jX ? true : false } } } function fz(i, jU) { var T = { top: 0, bottom: 0, right: 0, left: 0, all: 0 }; var e = i.x, jT = i.y; if (jT < jU.minY) { T.top = 8; T.all += T.top } else { if (jT > jU.maxY) { T.bottom = 4; T.all += T.bottom } } if (e > jU.maxX) { T.right = 2; T.all += T.right } else { if (e < jU.minX) { T.left = 1; T.all += T.left } } return T } function dz(e) { e = e.replace(/,/gm, " "); e = e.replace(/([MmZzLlHhVvCcSsQqTtAa])([MmZzLlHhVvCcSsQqTtAa])/gm, "$1 $2"); e = e.replace(/([MmZzLlHhVvCcSsQqTtAa])([MmZzLlHhVvCcSsQqTtAa])/gm, "$1 $2"); e = e.replace(/([MmZzLlHhVvCcSsQqTtAa])([^\s])/gm, "$1 $2"); e = e.replace(/([^\s])([MmZzLlHhVvCcSsQqTtAa])/gm, "$1 $2"); e = e.replace(/([0-9])([+\-])/gm, "$1 $2"); e = e.replace(/(\.[0-9]*)(\.)/gm, "$1 $2"); e = e.replace(/([Aa](\s+[0-9]+){3})\s+([01])\s*([01])/gm, "$1 $3 $4 "); e = dz.compressSpaces(e); e = dz.trim(e); this.PathParser = new (function (i) { this.tokens = i.split(" "); this.reset = function () { this.i = -1; this.command = ""; this.previousCommand = ""; this.start = new dz.Point(0, 0); this.control = new dz.Point(0, 0); this.current = new dz.Point(0, 0); this.points = []; this.angles = [] }; this.isEnd = function () { return this.i >= this.tokens.length - 1 }; this.isCommandOrEnd = function () { if (this.isEnd()) { return true } return this.tokens[this.i + 1].match(/^[A-Za-z]$/) != null }; this.isRelativeCommand = function () { switch (this.command) { case "m": case "l": case "h": case "v": case "c": case "s": case "q": case "t": case "a": case "z": return true; break }return false }; this.getToken = function () { this.i++; return this.tokens[this.i] }; this.getScalar = function () { return parseFloat(this.getToken()) }; this.nextCommand = function () { this.previousCommand = this.command; this.command = this.getToken() }; this.getPoint = function () { var T = new dz.Point(this.getScalar(), this.getScalar()); return this.makeAbsolute(T) }; this.getAsControlPoint = function () { var T = this.getPoint(); this.control = T; return T }; this.getAsCurrentPoint = function () { var T = this.getPoint(); this.current = T; return T }; this.getReflectedControlPoint = function () { if (this.previousCommand.toLowerCase() != "c" && this.previousCommand.toLowerCase() != "s" && this.previousCommand.toLowerCase() != "q" && this.previousCommand.toLowerCase() != "t") { return this.current } var T = new dz.Point(2 * this.current.x - this.control.x, 2 * this.current.y - this.control.y); return T }; this.makeAbsolute = function (T) { if (this.isRelativeCommand()) { T.x += this.current.x; T.y += this.current.y } return T }; this.addMarker = function (jT, jU, T) { if (T != null && this.angles.length > 0 && this.angles[this.angles.length - 1] == null) { this.angles[this.angles.length - 1] = this.points[this.points.length - 1].angleTo(T) } this.addMarkerAngle(jT, jU == null ? null : jU.angleTo(jT)) }; this.addMarkerAngle = function (jT, T) { this.points.push(jT); this.angles.push(T) }; this.getMarkerPoints = function () { return this.points }; this.getMarkerAngles = function () { for (var jT = 0; jT < this.angles.length; jT++) { if (this.angles[jT] == null) { for (var T = jT + 1; T < this.angles.length; T++) { if (this.angles[T] != null) { this.angles[jT] = this.angles[T]; break } } } } return this.angles } })(e); this.bounds = function () { return this.draw(null) }; this.draw = function (kd) { var kf = this.PathParser; kf.reset(); var j0 = new dz.BoundingBox(); if (kd != null) { kd.beginPath() } while (!kf.isEnd()) { kf.nextCommand(); switch (kf.command) { case "M": case "m": var ka = kf.getAsCurrentPoint(); kf.addMarker(ka); j0.addPoint(ka.x, ka.y); if (kd != null) { kd.moveTo(ka.x, ka.y) } kf.start = kf.current; while (!kf.isCommandOrEnd()) { var ka = kf.getAsCurrentPoint(); kf.addMarker(ka, kf.start); j0.addPoint(ka.x, ka.y); if (kd != null) { kd.lineTo(ka.x, ka.y) } } break; case "L": case "l": while (!kf.isCommandOrEnd()) { var kj = kf.current; var ka = kf.getAsCurrentPoint(); kf.addMarker(ka, kj); j0.addPoint(ka.x, ka.y); if (kd != null) { kd.lineTo(ka.x, ka.y) } } break; case "H": case "h": while (!kf.isCommandOrEnd()) { var jT = new dz.Point((kf.isRelativeCommand() ? kf.current.x : 0) + kf.getScalar(), kf.current.y); kf.addMarker(jT, kf.current); kf.current = jT; j0.addPoint(kf.current.x, kf.current.y); if (kd != null) { kd.lineTo(kf.current.x, kf.current.y) } } break; case "V": case "v": while (!kf.isCommandOrEnd()) { var jT = new dz.Point(kf.current.x, (kf.isRelativeCommand() ? kf.current.y : 0) + kf.getScalar()); kf.addMarker(jT, kf.current); kf.current = jT; j0.addPoint(kf.current.x, kf.current.y); if (kd != null) { kd.lineTo(kf.current.x, kf.current.y) } } break; case "C": case "c": while (!kf.isCommandOrEnd()) { var kh = kf.current; var jV = kf.getPoint(); var jW = kf.getAsControlPoint(); var j2 = kf.getAsCurrentPoint(); kf.addMarker(j2, jW, jV); j0.addBezierCurve(kh.x, kh.y, jV.x, jV.y, jW.x, jW.y, j2.x, j2.y); if (kd != null) { kd.bezierCurveTo(jV.x, jV.y, jW.x, jW.y, j2.x, j2.y) } } break; case "S": case "s": while (!kf.isCommandOrEnd()) { var kh = kf.current; var jV = kf.getReflectedControlPoint(); var jW = kf.getAsControlPoint(); var j2 = kf.getAsCurrentPoint(); kf.addMarker(j2, jW, jV); j0.addBezierCurve(kh.x, kh.y, jV.x, jV.y, jW.x, jW.y, j2.x, j2.y); if (kd != null) { kd.bezierCurveTo(jV.x, jV.y, jW.x, jW.y, j2.x, j2.y) } } break; case "Q": case "q": while (!kf.isCommandOrEnd()) { var kh = kf.current; var jW = kf.getAsControlPoint(); var j2 = kf.getAsCurrentPoint(); kf.addMarker(j2, jW, jW); j0.addQuadraticCurve(kh.x, kh.y, jW.x, jW.y, j2.x, j2.y); if (kd != null) { kd.quadraticCurveTo(jW.x, jW.y, j2.x, j2.y) } } break; case "T": case "t": while (!kf.isCommandOrEnd()) { var kh = kf.current; var jW = kf.getReflectedControlPoint(); kf.control = jW; var j2 = kf.getAsCurrentPoint(); kf.addMarker(j2, jW, jW); j0.addQuadraticCurve(kh.x, kh.y, jW.x, jW.y, j2.x, j2.y); if (kd != null) { kd.quadraticCurveTo(jW.x, jW.y, j2.x, j2.y) } } break; case "A": case "a": while (!kf.isCommandOrEnd()) { var kh = kf.current; var jZ = kf.getScalar(); var jY = kf.getScalar(); var T = kf.getScalar() * (Math.PI / 180); var j1 = kf.getScalar(); var jX = kf.getScalar(); var j2 = kf.getAsCurrentPoint(); var km = new dz.Point(Math.cos(T) * (kh.x - j2.x) / 2 + Math.sin(T) * (kh.y - j2.y) / 2, -Math.sin(T) * (kh.x - j2.x) / 2 + Math.cos(T) * (kh.y - j2.y) / 2); var ke = Math.pow(km.x, 2) / Math.pow(jZ, 2) + Math.pow(km.y, 2) / Math.pow(jY, 2); if (ke > 1) { jZ *= Math.sqrt(ke); jY *= Math.sqrt(ke) } var j6 = (j1 == jX ? -1 : 1) * Math.sqrt(((Math.pow(jZ, 2) * Math.pow(jY, 2)) - (Math.pow(jZ, 2) * Math.pow(km.y, 2)) - (Math.pow(jY, 2) * Math.pow(km.x, 2))) / (Math.pow(jZ, 2) * Math.pow(km.y, 2) + Math.pow(jY, 2) * Math.pow(km.x, 2))); if (isNaN(j6)) { j6 = 0 } var j5 = new dz.Point(j6 * jZ * km.y / jY, j6 * -jY * km.x / jZ); var jU = new dz.Point((kh.x + j2.x) / 2 + Math.cos(T) * j5.x - Math.sin(T) * j5.y, (kh.y + j2.y) / 2 + Math.sin(T) * j5.x + Math.cos(T) * j5.y); var kc = function (kn) { return Math.sqrt(Math.pow(kn[0], 2) + Math.pow(kn[1], 2)) }; var j8 = function (ko, kn) { return (ko[0] * kn[0] + ko[1] * kn[1]) / (kc(ko) * kc(kn)) }; var kk = function (ko, kn) { return (ko[0] * kn[1] < ko[1] * kn[0] ? -1 : 1) * Math.acos(j8(ko, kn)) }; var kl = kk([1, 0], [(km.x - j5.x) / jZ, (km.y - j5.y) / jY]); var j4 = [(km.x - j5.x) / jZ, (km.y - j5.y) / jY]; var j3 = [(-km.x - j5.x) / jZ, (-km.y - j5.y) / jY]; var ki = kk(j4, j3); if (j8(j4, j3) <= -1) { ki = Math.PI } if (j8(j4, j3) >= 1) { ki = 0 } var kb = 1 - jX ? 1 : -1; var kg = kl + kb * (ki / 2); var i = new dz.Point(jU.x + jZ * Math.cos(kg), jU.y + jY * Math.sin(kg)); kf.addMarkerAngle(i, kg - kb * Math.PI / 2); kf.addMarkerAngle(j2, kg - kb * Math.PI); j0.addPoint(j2.x, j2.y); if (kd != null) { var j8 = jZ > jY ? jZ : jY; var j9 = jZ > jY ? 1 : jZ / jY; var j7 = jZ > jY ? jY / jZ : 1; kd.translate(jU.x, jU.y); kd.rotate(T); kd.scale(j9, j7); kd.arc(0, 0, j8, kl, kl + ki, 1 - jX); kd.scale(1 / j9, 1 / j7); kd.rotate(-T); kd.translate(-jU.x, -jU.y) } } break; case "Z": case "z": if (kd != null) { kd.closePath() } kf.current = kf.start } } return j0 }; this.getMarkers = function () { var jT = this.PathParser.getMarkerPoints(); var jV = this.PathParser.getMarkerAngles(); var jU = []; for (var T = 0; T < jT.length; T++) { jU.push([jT[T], jV[T]]) } return jU } } dz.trim = function (e) { return e.replace(/^\s+|\s+$/g, "") }; dz.compressSpaces = function (e) { return e.replace(/[\s\r\t\n]+/gm, " ") }; dz.Point = function (e, i) { this.x = e; this.y = i }; dz.Point.prototype.angleTo = function (e) { return Math.atan2(e.y - this.y, e.x - this.x) }; dz.Point.prototype.applyTransform = function (e) { var i = this.x * e[0] + this.y * e[2] + e[4]; var T = this.x * e[1] + this.y * e[3] + e[5]; this.x = i; this.y = T }; dz.BoundingBox = function (i, jT, e, T) { this.x1 = Number.NaN; this.y1 = Number.NaN; this.x2 = Number.NaN; this.y2 = Number.NaN; this.x = function () { return this.x1 }; this.y = function () { return this.y1 }; this.width = function () { return this.x2 - this.x1 }; this.height = function () { return this.y2 - this.y1 }; this.addPoint = function (jU, jV) { if (jU != null) { if (isNaN(this.x1) || isNaN(this.x2)) { this.x1 = jU; this.x2 = jU } if (jU < this.x1) { this.x1 = jU } if (jU > this.x2) { this.x2 = jU } } if (jV != null) { if (isNaN(this.y1) || isNaN(this.y2)) { this.y1 = jV; this.y2 = jV } if (jV < this.y1) { this.y1 = jV } if (jV > this.y2) { this.y2 = jV } } }; this.addX = function (jU) { this.addPoint(jU, null) }; this.addY = function (jU) { this.addPoint(null, jU) }; this.addBoundingBox = function (jU) { this.addPoint(jU.x1, jU.y1); this.addPoint(jU.x2, jU.y2) }; this.addQuadraticCurve = function (jZ, jY, jV, jU, j1, j0) { var jX = jZ + 2 / 3 * (jV - jZ); var jW = jY + 2 / 3 * (jU - jY); var j3 = jX + 1 / 3 * (j1 - jZ); var j2 = jW + 1 / 3 * (j0 - jY); this.addBezierCurve(jZ, jY, jX, j3, jW, j2, j1, j0) }; this.addBezierCurve = function (j7, j6, jY, jW, j3, j1, j9, j8) { var jZ = [j7, j6], jX = [jY, jW], jV = [j3, j1], jU = [j9, j8]; this.addPoint(jZ[0], jZ[1]); this.addPoint(jU[0], jU[1]); for (i6 = 0; i6 <= 1; i6++) { var ka = function (ke) { return Math.pow(1 - ke, 3) * jZ[i6] + 3 * Math.pow(1 - ke, 2) * ke * jX[i6] + 3 * (1 - ke) * Math.pow(ke, 2) * jV[i6] + Math.pow(ke, 3) * jU[i6] }; var kc = 6 * jZ[i6] - 12 * jX[i6] + 6 * jV[i6]; var kd = -3 * jZ[i6] + 9 * jX[i6] - 9 * jV[i6] + 3 * jU[i6]; var kb = 3 * jX[i6] - 3 * jZ[i6]; if (kd == 0) { if (kc == 0) { continue } var j5 = -kb / kc; if (0 < j5 && j5 < 1) { if (i6 == 0) { this.addX(ka(j5)) } if (i6 == 1) { this.addY(ka(j5)) } } continue } var j0 = Math.pow(kc, 2) - 4 * kb * kd; if (j0 < 0) { continue } var j4 = (-kc + Math.sqrt(j0)) / (2 * kd); if (0 < j4 && j4 < 1) { if (i6 == 0) { this.addX(ka(j4)) } if (i6 == 1) { this.addY(ka(j4)) } } var j2 = (-kc - Math.sqrt(j0)) / (2 * kd); if (0 < j2 && j2 < 1) { if (i6 == 0) { this.addX(ka(j2)) } if (i6 == 1) { this.addY(ka(j2)) } } } }; this.isPointInBox = function (jU, jV) { return (this.x1 <= jU && jU <= this.x2 && this.y1 <= jV && jV <= this.y2) }; this.addPoint(i, jT); this.addPoint(e, T) }; function e6(i, e) { this.id = bw.getGUID("symbol_icon_"); this.size = (i instanceof iJ) ? i : new iJ(2, 2); this.anchor = (e instanceof iJ) ? e : new iJ(this.size.width / 2, this.size.height / 2); this.data = null; this.offset = this.anchor; this.imageSize = this.size; this.imageOffset = new iJ(0, 0); this.style = { scale: 1, rotation: 0 }; this.srcSetObject = {}; this._initOptions = { size: this.size, scale: this.style.scale, rotation: this.style.rotation }; this.overlay = null; this.isReDraw = false } e6.prototype.add = function () { const e = document.createElement("canvas"); e.width = this.size.width; e.height = this.size.height; this.context = e.getContext("2d") }; e6.prototype.remove = function () { if (this.context) { this.context.clearRect(0, 0, this.context.canvas.width, this.context.canvas.height); this.context.canvas.width = 0; this.context.canvas.height = 0 } this.context = null; this.data = null }; e6.prototype.render = function (e) { return true }; e6.prototype.resetInitOptions = function () { this._initOptions = new iJ(this.size.width, this.size.height); this._initOptions.scale = this.style.scale; this._initOptions.rotation = this.style.rotation }; e6.prototype.update = function () { var e = this.overlay; if (e) { if (e.domElement) { var jT = (this.style.scale - this._initOptions.scale) / this._initOptions.scale; if (jT >= 0) { jT = jT + 1 } else { jT = 1 + jT } var i = this._initOptions.rotation === 0 ? this.style.rotation : (this.style.rotation - this._initOptions.rotation); while (i < 0) { i += 360 } var T = e.domElement.style; T.width = this._initOptions.width + "px"; T.height = this._initOptions.height + "px"; T.transform = "rotate(" + i + "deg) scale(" + jT + ")" } if (!this.isReDraw) { this._refresh(e) } } }; e6.prototype._refresh = function (e) { e.textureCoord = e.textureCoordGLMap = null; var i = new fy("onstatus_change"); i.overlay = e; i.action = "setIcon"; i.imageUrlChanged = true; setTimeout(function () { e.fire(i) }, 100) }; e6.prototype.generateRenderData = function () { var i = this.offset = this.anchor; var e = this.size; var T = []; T.push(-i.width, i.height - e.height, 0); T.push(e.width - i.width, i.height - e.height, 0); T.push(e.width - i.width, i.height, 0); T.push(-i.width, i.height - e.height, 0); T.push(e.width - i.width, i.height, 0); T.push(-i.width, i.height, 0); return { vertex: T } }; e6.prototype.getCurrentImageUrl = function () { return this.id }; e6.prototype.getRenderData = function () { this._renderData = this.generateRenderData(); return this._renderData }; e6.prototype.toString = function () { return "Symbol" }; var fm = { 14: "m-0.00573,-10c-5.51975,0 -9.99427,4.47453 -9.99427,9.99428c0,5.51974 4.47452,9.99425 9.99427,9.99425c5.51972,0 9.99426,-4.47452 9.99426,-9.99425c0,-5.51975 -4.47453,-9.99428 -9.99426,-9.99428zm0,17.92491c-4.37412,0 -7.93132,-3.55788 -7.93132,-7.93063c0,-4.37345 3.5572,-7.93134 7.93132,-7.93134c4.37411,0 7.93062,3.55721 7.93062,7.93134c0,4.37412 -3.55789,7.93063 -7.93062,7.93063zm-0.00068,-15.4088c-0.38027,0 -0.68696,0.30807 -0.68696,0.68765l0,6.34078l-4.15752,1.81815c-0.34794,0.15266 -0.50611,0.55837 -0.35344,0.90632c0.11278,0.25787 0.36445,0.4119 0.6292,0.4119c0.09214,0 0.18635,-0.01857 0.27575,-0.05845l4.55635,-1.99279c0.00344,-0.00137 0.00619,-0.00275 0.00894,-0.00412l0.00275,-0.00138c0.01032,-0.00413 0.01581,-0.01376 0.02545,-0.01719c0.07151,-0.03576 0.13821,-0.07771 0.19185,-0.1341c0.02337,-0.02338 0.03644,-0.05364 0.05431,-0.08045c0.03301,-0.04401 0.06946,-0.08733 0.0894,-0.14028c0.0165,-0.04126 0.01787,-0.08596 0.02613,-0.12997c0.00894,-0.04469 0.02614,-0.08389 0.02614,-0.1286l0,-6.7905c0,-0.37889 -0.30807,-0.68697 -0.68833,-0.68697z", 13: "m-0.00706,-9.5c-5.24281,0 -9.49294,4.25065 -9.49294,9.49294c0,5.24331 4.25014,9.49294 9.49294,9.49294c5.24281,0 9.49294,-4.24964 9.49294,-9.49294c0,-5.2423 -4.25013,-9.49294 -9.49294,-9.49294zm3.08857,3.85997c0.61044,0 1.10279,0.96873 1.10279,2.16271s-0.49384,2.1647 -1.10279,2.1647c-0.60844,0 -1.10228,-0.96873 -1.10228,-2.16372s0.49434,-2.16369 1.10228,-2.16369zm-6.28628,0c0.60844,0 1.10228,0.96873 1.10228,2.16271s-0.49284,2.1647 -1.10228,2.1647s-1.10277,-0.96873 -1.10277,-2.16372s0.49383,-2.16369 1.10277,-2.16369zm3.21167,12.16493c-1.87667,0 -3.63373,-1.14814 -5.14663,-3.14239c1.56571,1.02156 3.27993,1.59064 5.07786,1.59064c1.90905,0 3.72343,-0.63985 5.36539,-1.78497c-1.54429,2.11685 -3.35767,3.33672 -5.29662,3.33672l-0.00001,0z", 12: "m9.27295,5.92958l-2.64443,-4.57961c-0.79727,-1.37992 -2.10131,-3.63983 -2.8986,-5.01973l-2.64441,-4.57858c-0.79782,-1.38093 -2.10186,-1.38093 -2.89913,0l-2.64335,4.57858c-0.79728,1.3799 -2.10188,3.63981 -2.89916,5.01973l-2.64387,4.57961c-0.79728,1.38101 -0.14472,2.50988 1.44983,2.50988l16.37221,0c1.59561,0 2.24711,-1.12887 1.45091,-2.50988l0,0zm-8.88166,0.70811l-1.56837,0l0,-1.50484l1.56837,0l0,1.50484zm-0.07527,-2.61447l-1.41621,0l-0.14044,-6.44231l1.68427,0l-0.12761,6.44231l0,0z", 11: "m8.08295,-6.56414l-3.59319,0l0,-1.43586l-8.98155,0l0,1.43586l-3.59321,0c-1.0569,0 -1.915,0.85509 -1.915,1.91159l0,9.92258c0,1.05357 0.8581,1.91158 1.915,1.91158l16.16796,0c1.05692,0 1.91501,-0.85801 1.91501,-1.91158l0,-9.92258c0,-1.0565 -0.85809,-1.91159 -1.91501,-1.91159l0,0zm-8.08397,12.66884c-3.20143,0 -5.80643,-2.60031 -5.80643,-5.79596c0,-3.19569 2.605,-5.79891 5.80643,-5.79891s5.80789,2.60322 5.80789,5.79891c0,3.19565 -2.60794,5.79596 -5.80789,5.79596zm0,-9.6804c-2.15036,0 -3.89142,1.7394 -3.89142,3.88444c0,2.14503 1.74252,3.8844 3.89142,3.8844c2.1489,0 3.89141,-1.73937 3.89141,-3.8844c0,-2.14503 -1.74105,-3.88444 -3.89141,-3.88444z", 10: "m0,-10c-0.20885,0 -0.39491,0.08583 -0.55177,0.24149c-0.15674,0.15536 -0.28646,0.37838 -0.39429,0.65665c-0.21586,0.55655 -0.34853,1.33844 -0.42114,2.27477c-0.07231,0.93446 -0.08474,2.02273 -0.05447,3.18765c-2.58175,1.05925 -7.81787,3.24648 -8.23854,3.73474c-0.56001,0.65029 -0.37908,1.3954 -0.15331,1.89002l8.608,-1.75235c0.18202,2.28374 0.4407,4.5455 0.66615,6.31771c-0.8418,0.24646 -2.41323,0.73303 -2.73754,1.03474c-0.4469,0.41562 -0.4469,1.75793 -0.4469,1.75793l3.52318,-0.28665c0.08286,0.57874 0.13486,0.9163 0.13486,0.9163l0.00511,0.03042l0.02778,0l0.06486,0l0.02778,0l0.00511,-0.03042c0,0 0.05185,-0.33756 0.13486,-0.9163l3.52424,0.28665c0,0 0,-1.34231 -0.44688,-1.75793c-0.32446,-0.30172 -1.89697,-0.7895 -2.73847,-1.0358c0.22484,-1.76681 0.4832,-4.02001 0.66507,-6.29634l8.50712,1.73203c0.22561,-0.49462 0.40765,-1.23973 -0.15237,-1.89002c-0.41538,-0.48221 -5.52504,-2.62071 -8.1386,-3.69423c0.03119,-1.17999 0.01971,-2.28285 -0.05353,-3.22816l0,-0.00233c-0.07263,-0.93523 -0.20545,-1.71635 -0.42114,-2.27244c-0.10784,-0.27827 -0.23634,-0.50114 -0.3932,-0.65665c-0.15689,-0.15567 -0.34293,-0.24149 -0.55195,-0.24149l0,0l0,0l0,0l0.00001,0l0,0l-0.00003,0.00001z", 3: "m-10,0l10,-10l10,10l-10,10l-10,-10z", 5: "M0,0 L-5,-15 0,-10 5,-15 z", 6: "M0,0 L5,15 0,10 -5,15z", 7: "M-5,-15 L0,0 5,-15", 8: "M-5,15 L0,0 5,15", 9: "m0,-24c-4.4183,0 -8,3.58167 -8,8c0,1.42102 0.3816,2.75 1.0312,3.90601c0.1079,0.19202 0.221,0.38098 0.3438,0.56299l6.625,11.53101l6.625,-11.53101c0.102,-0.151 0.19,-0.31097 0.281,-0.46899l0.063,-0.09399c0.649,-1.15601 1.031,-2.48499 1.031,-3.90601c0,-4.41833 -3.582,-8 -8,-8zm0,4c2.209,0 4,1.79089 4,4c0,2.20898 -1.791,4 -4,4c-2.2091,0 -4,-1.79102 -4,-4c0,-2.20911 1.7909,-4 4,-4z" }; var b2 = { BMap_Symbol_SHAPE_CIRCLE: 1, BMap_Symbol_SHAPE_RECTANGLE: 2, BMap_Symbol_SHAPE_RHOMBUS: 3, BMap_Symbol_SHAPE_STAR: 4, BMap_Symbol_SHAPE_BACKWARD_CLOSED_ARROW: 5, BMap_Symbol_SHAPE_FORWARD_CLOSED_ARROW: 6, BMap_Symbol_SHAPE_BACKWARD_OPEN_ARROW: 7, BMap_Symbol_SHAPE_FORWARD_OPEN_ARROW: 8, BMap_Symbol_SHAPE_POINT: 9, BMap_Symbol_SHAPE_PLANE: 10, BMap_Symbol_SHAPE_CAMERA: 11, BMap_Symbol_SHAPE_WARNING: 12, BMap_Symbol_SHAPE_SMILE: 13, BMap_Symbol_SHAPE_CLOCK: 14 }; function dB(i, e) { e6.call(this); e = e || {}; this.style = { anchor: e.anchor || new iJ(0, 0), fillColor: e.fillColor || "#000", fillOpacity: e.fillOpacity || 0, scale: e.scale || 1, rotation: e.rotation || 0, strokeColor: e.strokeColor || "#000", strokeOpacity: e.strokeOpacity === undefined ? 1 : e.strokeOpacity, strokeWeight: e.strokeWeight }; this._type = (typeof i === "number") ? i : "UserDefined"; this._anchor = this.style.anchor; this._originOffset = new iJ(0, 0); this.anchor = new iJ(0, 0); this._rawPath = i; this._buildPath(true) } dB.inherits(e6, "SVGSymbol"); dB.generateKey = function (jT, i) { if (!jT) { return null } if (parseInt(jT)) { jT = parseInt(jT) } if (typeof jT === "number") { if (!fm[jT] && ![0, 1, 2, 0, 4][jT]) { return null } } var e = { anchor: i.anchor || new iJ(0, 0), fillColor: i.fillColor || "#000", fillOpacity: i.fillOpacity || 0, scale: i.scale || 1, rotation: i.rotation || 0, strokeColor: i.strokeColor || "#000", strokeOpacity: i.strokeOpacity === undefined ? 1 : i.strokeOpacity, strokeWeight: i.strokeWeight }; var T = o({ path: jT, style: e }); return "symbol_svg_icon_" + T }; eN.extend(dB.prototype, { _buildPath: function (j4) { var jY = this; var j0 = jY._rawPath; if (parseInt(j0)) { j0 = parseInt(j0) } if (fm[j0]) { j0 = fm[j0] } jY.id = dB.generateKey(j0, jY.style); if (!jY.id) { return } switch (j0) { case b2.BMap_Symbol_SHAPE_CIRCLE: var j1 = jY._calSize(2), jZ = j1, j9 = jY.style.scale, jU = jY._anchor; this.size = new iJ(j1, jZ); this.anchor = new iJ(j1 / 2 + jU.width * j9, jZ / 2 + jU.height * j9); jY.path = b2.BMap_Symbol_SHAPE_CIRCLE; break; case b2.BMap_Symbol_SHAPE_RECTANGLE: var j1 = jY._calSize(4), jZ = jY._calSize(2), jU = jY._anchor, j6 = jY.style.strokeWeight !== undefined ? jY.style.strokeWeight : jY.style.scale, j9 = jY.style.scale; this.size = new iJ(j1, jZ); this._originOffset = new iJ(Math.floor(-j6 / 2), Math.floor(-j6 / 2)); this.anchor = new iJ(j1 / 2 + jU.width * j9, jZ / 2 + jU.height * j9); jY.path = b2.BMap_Symbol_SHAPE_RECTANGLE; break; case b2.BMap_Symbol_SHAPE_STAR: var j1 = jY._calSize(20), jZ = j1, jU = jY._anchor, j9 = jY.style.scale; this.size = new iJ(j1, jZ); this.anchor = new iJ(j1 / 2 + jU.width * j9, jZ / 2 + jU.height * j9); jY.path = b2.BMap_Symbol_SHAPE_STAR; break; default: var j0 = new dz(j0), jT = j0.bounds(), j3 = jY.style.rotation * Math.PI / 180, j6 = jY.style.strokeWeight !== undefined ? jY.style.strokeWeight : jY.style.scale, j9 = jY.style.scale, jU = jY._anchor; var j8 = new iJ(Math.floor(jT.x1 * j9 - j6 / 2), Math.floor(jT.y1 * j9 - j6 / 2)), e = { topleft: new e8(Math.floor(jT.x1 * j9 - j6 / 2) - j9 * jU.width, Math.floor(jT.y1 * j9 - j6 / 2) - j9 * jU.height), bottomleft: new e8(Math.floor(jT.x1 * j9 - j6 / 2) - j9 * jU.width, Math.ceil(jT.y2 * j9 - j6 / 2) - j9 * jU.height), topright: new e8(Math.ceil(jT.x2 * j9 + j6 / 2) - j9 * jU.width, Math.floor(jT.y1 * j9 - j6 / 2) - j9 * jU.height), bottomright: new e8(Math.ceil(jT.x2 * j9 + j6 / 2) - j9 * jU.width, Math.ceil(jT.y2 * j9 + j6 / 2) - j9 * jU.height) }, i = {}, j7 = [], jX = []; var j5 = e.topleft.x === 0 ? 0 : Math.atan(e.topleft.y / e.topleft.x), T = j5 + j3; for (var j2 in e) { var jW = Math.cos(j3) * e[j2].x - Math.sin(j3) * e[j2].y, jV = Math.sin(j3) * e[j2].x + Math.cos(j3) * e[j2].y; i[j2] = new e8(jW, jV); j7.push(jW); jX.push(jV) } xmax = Math.max.apply(Math, j7), ymax = Math.max.apply(Math, jX), xmin = Math.min.apply(Math, j7), ymin = Math.min.apply(Math, jX); this.size = new iJ(Math.ceil(xmax - xmin), Math.ceil(ymax - ymin)); this.anchor = new iJ(-xmin, -ymin); this._originOffset = new iJ(xmin - i.topleft.x, ymin - i.topleft.y); this._innerOffset = new e8(j8.width, j8.height); this._rotationAngle = j3; jY.path = j0; break }this.imageSize = new iJ(this.size.width, this.size.height); this.offset = this.anchor; if (j4) { this.resetInitOptions() } }, _calSize: function (e) { if (this.style.strokeWeight) { return e * this.style.scale + this.style.strokeWeight % 3 + this.style.strokeWeight } else { return e * this.style.scale + this.style.scale + this.style.scale % 2 } }, render: function (T) { var jZ = this, jT = this.style.scale, j0, j1 = this.size; if (this.context) { j0 = this.context; if (this.context.canvas.width / 2 !== this.size.width || this.context.canvas.height / 2 !== this.size.height) { this.context.canvas.width = this.size.width * 2; this.context.canvas.height = this.size.height * 2 } j0.clearRect(0, 0, this.size.width * 2, this.size.height * 2); j0.fillStyle = hm.convert2rgba(jZ.style.fillColor, jZ.style.fillOpacity); j0.strokeStyle = hm.convert2rgba(jZ.style.strokeColor, jZ.style.strokeOpacity); j0.save() } else { return false } j0.scale(2, 2); j0.lineCap = "round"; j0.lineJoin = "round"; j0.lineWidth = jZ.style.strokeWeight || jT; if (jZ._originOffset) { j0.translate(-jZ._originOffset.width, -jZ._originOffset.height) } if (jZ._rotationAngle) { j0.rotate(jZ._rotationAngle) } if (jZ._innerOffset) { j0.translate(-jZ._innerOffset.x, -jZ._innerOffset.y) } switch (jZ.path) { case b2.BMap_Symbol_SHAPE_CIRCLE: j0.arc(j1.width / 2, j1.height / 2, jT, 0, 2 * Math.PI); break; case b2.BMap_Symbol_SHAPE_RECTANGLE: j0.rect(0, 0, 4 * jT, 2 * jT); break; case b2.BMap_Symbol_SHAPE_STAR: j0.beginPath(); var jV = j1.width / 2, jX = jT * 10; var jU = (2 * Math.PI) / 10; for (var jW = 11; jW != 0; jW--) { var e = jX * (jW % 2 + 1) / 2; var jY = jU * jW; j0.lineTo((e * Math.sin(jY)) + jV, (e * Math.cos(jY)) + jV) } j0.closePath(); break; default: j0.lineWidth = j0.lineWidth / jT; j0.scale(jT, jT); jZ.path.draw(j0) }j0.fill(); j0.stroke(); j0.restore(); this.data = j0.getImageData(0, 0, this.size.width * 2, this.size.height * 2); return true }, setPath: function (e) { this._rawPath = e; this._buildPath(); this.update() }, setAnchor: function (e) { this._anchor = this.style.anchor = e; this._buildPath(); this.update() }, setRotation: function (e) { this.style.rotation = e; this._buildPath(); this.update() }, setScale: function (e) { this.style.scale = e; this._buildPath(); this.update() }, setStrokeWeight: function (e) { this.style.strokeWeight = e; this._buildPath(); this.update() }, setStrokeColor: function (e) { e = hm.convert2rgba(e, this.style.strokeOpacity); this.style.strokeColor = e; this._buildPath(); this.update() }, setStrokeOpacity: function (e) { this.style.strokeOpacity = e; this._buildPath(); this.update() }, setFillOpacity: function (e) { this.style.fillOpacity = e; this._buildPath(); this.update() }, setFillColor: function (e) { this.style.fillColor = e; this._buildPath(); this.update() } }); bw.SymbolShapeType = b2; function jb(jV, jT, T) { if (!jV || !jT) { return } this.imageUrl = null; this.imageDom = null; if (typeof jV === "string") { this.imageUrl = jV } else { this.imageDom = jV; if (!this.imageDom.id) { this.imageDom.id = bw.getGUID("icon_dom_") } } this.size = jT; var jU = new iJ(Math.floor(jT.width / 2), Math.floor(jT.height / 2)); var i = { offset: jU, imageOffset: new iJ(0, 0) }; T = T || {}; for (var e in T) { i[e] = T[e] } if (T.anchor) { i.offset = T.anchor } this.anchor = this.offset = i.offset; this.imageOffset = i.imageOffset; this.infoWindowOffset = T.infoWindowOffset || this.offset; this.printImageUrl = T.printImageUrl || ""; this.imageSize = T.imageSize || this.size; this.srcSetObject = {}; this.setImageSrcset(T.srcset || T.srcSet) } jb.prototype.setImageUrl = function (e) { if (!e) { return } this.imageUrl = e; this._renderData = null }; jb.prototype.getCurrentImageUrl = function () { if (window.devicePixelRatio > 1 && this.srcSetObject["2x"]) { return this.srcSetObject["2x"] } return this.imageUrl }; jb.prototype.setPrintImageUrl = function (e) { if (!e) { return } this.printImageUrl = e }; jb.prototype.setSize = function (e) { if (!e) { return } this.size = new iJ(e.width, e.height); this._renderData = null }; jb.prototype.setOffset = function (e) { if (!e) { return } this.anchor = this.offset = new iJ(e.width, e.height); this._renderData = null }; jb.prototype.setAnchor = function (e) { this.setOffset(e) }; jb.prototype.setImageOffset = function (e) { if (!e) { return } this.imageOffset = new iJ(e.width, e.height); this._renderData = null }; jb.prototype.setInfoWindowOffset = function (e) { if (!e) { return } this.infoWindowOffset = new iJ(e.width, e.height) }; jb.prototype.setImageSize = function (e) { if (!e) { return } this.imageSize = new iJ(e.width, e.height) }; jb.prototype.setImageSrcset = function (T) { var e = ""; if (!T) { return } for (var i in T) { if (T.hasOwnProperty(i)) { this.srcSetObject[i] = T[i]; e = T[i] + " " + i + "," } } this.srcSet = e }; jb.prototype.toString = function () { return "Icon" }; jb.prototype.generateRenderData = function (jV) { var T = this.offset; var e = this.size; var jX = this.imageOffset; var jW = []; jW.push(-T.width, T.height - e.height, 0); jW.push(e.width - T.width, T.height - e.height, 0); jW.push(e.width - T.width, T.height, 0); jW.push(-T.width, T.height - e.height, 0); jW.push(e.width - T.width, T.height, 0); jW.push(-T.width, T.height, 0); if (jV !== 0) { for (var jU = 0; jU < jW.length; jU += 3) { var jT = vec2.fromValues(jW[jU], jW[jU + 1]); vec2.rotate(jT, jT, [0, 0], ik(-jV)); jW[jU] = jT[0]; jW[jU + 1] = jT[1] } } return { vertex: jW } }; jb.prototype.getRenderData = function (e) { this._renderData = this.generateRenderData(e); return this._renderData }; function dT(T, i) { eN.BaseClass.call(this); this.content = T; this.map = null; this._config = { width: 0, height: 0, maxWidth: 600, offset: new iJ(0, 0), title: "", maxContent: "", enableMaximize: false, enableAutoPan: true, enableCloseOnClick: true, margin: [10, 10, 40, 10], collisions: [[10, 10], [10, 10], [10, 10], [10, 10]], ifMaxScene: false, onClosing: function () { return true } }; this.setConfig(i); if (this._config.width !== 0) { if (this._config.width < 220) { this._config.width = 220 } if (this._config.width > 730) { this._config.width = 730 } } if (this._config.height !== 0) { if (this._config.height < 60) { this._config.height = 60 } if (this._config.height > 650) { this._config.height = 650 } } if (this._config.maxWidth !== 0) { if (this._config.maxWidth < 220) { this._config.maxWidth = 220 } if (this._config.maxWidth > 730) { this._config.maxWidth = 730 } } this.isWinMax = false; this.IMG_PATH = B.imgPath; this.overlay = null; var e = this; gO.load("infowindow", function () { e._draw() }) } dT.inherits(eN.BaseClass, "InfoWindow"); eN.extend(dT.prototype, { setWidth: function (e) { e = e * 1; if (!e && e !== 0 || isNaN(e) || e < 0) { return } if (e !== 0) { if (e < 220) { e = 220 } if (e > 730) { e = 730 } } this._config.width = e }, setHeight: function (e) { e = e * 1; if (!e && e !== 0 || isNaN(e) || e < 0) { return } if (e !== 0) { if (e < 60) { e = 60 } if (e > 650) { e = 650 } } this._config.height = e }, setMaxWidth: function (e) { e = e * 1; if (!e && e !== 0 || isNaN(e) || e < 0) { return } if (e !== 0) { if (e < 220) { e = 220 } if (e > 730) { e = 730 } } this._config.maxWidth = e }, setTitle: function (e) { this._config.title = e || "" }, setContent: function (e) { this.content = e || "" }, getContent: function () { return this.content }, setMaxContent: function (e) { this._config.maxContent = e || "" }, redraw: function () { }, enableAutoPan: function () { this._config.enableAutoPan = true }, disableAutoPan: function () { this._config.enableAutoPan = false }, enableCloseOnClick: function () { this._config.enableCloseOnClick = true }, disableCloseOnClick: function () { this._config.enableCloseOnClick = false }, enableMaximize: function () { this._config.enableMaximize = true }, disableMaximize: function () { this._config.enableMaximize = false }, show: function () { this._visible = true }, hide: function () { this._visible = false }, close: function () { this.hide() }, dispose: function () { eN.BaseClass.prototype.decontrol.call(this) }, maximize: function () { this.isWinMax = true }, restore: function () { this.isWinMax = false }, setConfig: function (i) { if (!i) { return } for (var e in i) { if (typeof (this._config[e]) === typeof (i[e])) { this._config[e] = i[e] } } }, isVisible: function () { return this.isOpen() }, isOpen: function () { return false }, getPointIn: function () { if (this.overlay && this.overlay.getPoint) { return this.overlay.getPoint() } }, getTitle: function () { return this._config.title || "" }, getPosition: function () { return this.latLng }, getPoint: function () { var e = this.getPointIn(); if (this.map.config.coordType === BMAP_COORD_GCJ02) { var i = iS.convertMC2LL(e); return ex(i) } return iS.convertMC2LL(e) }, getOffset: function () { return this._config.offset }, dispose: function () { eN.BaseClass.prototype.decontrol.call(this) }, toString: function () { return "InfoWindow" } }); hv.prototype.openInfoWindow = function (T, e) { T.latLng = new cn(e.lat, e.lng); var i = iS.convertLL2MC(e); this.openInfoWindowIn(T, i) }; hv.prototype.closeInfoWindow = function () { var e = this.temp.infoWin || this.temp._infoWin; if (e && e.overlay) { e.overlay.closeInfoWindow() } }; hv.prototype.openInfoWindowIn = function (jT, e) { if (!jT || jT.toString() !== "InfoWindow" || !e || e.toString() !== "Point") { return } var i = this.temp; if (!i.marker) { var T = new jb(B.imgPath + "blank.gif", { width: 1, height: 1 }); i.marker = new jx(e, { icon: T, width: 1, height: 1, offset: new iJ(0, 0), infoWindowOffset: new iJ(0, 0), clickable: false }); i.marker._fromMap = 1 } else { i.marker.setPoint(e) } this.addOverlay(i.marker); i.marker.show(); i.marker.openInfoWindow(jT) }; er.prototype.openInfoWindow = function (e) { if (this.map) { this.map.closeInfoWindow(); e._visible = true; this.map.temp._infoWin = e; e.overlay = this; eN.BaseClass.call(e, e.hashCode) } }; er.prototype.closeInfoWindow = function () { if (this.map && this.map.temp._infoWin) { this.map.temp._infoWin._visible = false; this.map.temp._infoWin.decontrol(); this.map.temp._infoWin = null } }; function bc(T, i) { er.call(this); this.content = T; this.map = null; this.domElement = null; this._config = { width: 0, offset: new iJ(0, 0), styles: { backgroundColor: "#fff", border: "1px solid #f00", padding: "1px", whiteSpace: "nowrap", fontSize: "12px", zIndex: "80", MozUserSelect: "none" }, point: null, enableMassClear: true }; i = i || {}; this.setConfig(i); if (this._config.width < 0) { this._config.width = 0 } this.point = this._config.point; var e = this; gO.load("marker", function () { e._draw() }) } bc.inherits(er, "Label"); eN.extend(bc.prototype, { setPoint: function (e) { if (e && e.toString() === "Point" && !this.getMarker()) { if (this.coordType === BMAP_COORD_GCJ02) { var i = ic(e, 3); this.point = this._config.point = new ct(i.lng, i.lat) } else { this.point = this._config.point = new ct(e.lng, e.lat) } } }, setContent: function (e) { this.content = e }, getContent: function (e) { return this.content }, setOpacity: function (e) { if (e >= 0 && e <= 1) { this._config.opacity = e } }, setOffset: function (e) { if (!e || e.toString() !== "Size") { return } this._config.offset = new iJ(e.width, e.height) }, getOffset: function () { return this._config.offset }, setStyle: function (e) { e = e || {}; this._config.styles = eN.extend(this._config.styles, e) }, setStyles: function (e) { this.setStyle(e) }, setTitle: function (e) { this._config.title = e || "" }, getTitle: function () { return this._config.title }, setMarker: function (e) { if (this._marker && this._marker !== e) { this._marker._config.label = null } this._marker = e; if (e) { this.point = this._config.point = e.getPoint() } else { this.point = this._config.point = null } }, getMarker: function () { return this._marker || null }, getPositionIn: function () { return this.getPoint() }, }); function hC(T, i) { var jT = {}; for (var e in i) { if (i.hasOwnProperty(e)) { if (e === "position") { jT.point = iS.convertLL2MC(i[e]); this.latLng = new cn(i[e]["lat"], i[e]["lng"]) } else { jT[e] = i[e] } } } bc.call(this, T, jT) } hC.inherits(bc, "LabelOut"); eN.extend(hC.prototype, { toString: function () { return "Label" }, setPosition: function (e) { this.latLng = new cn(e.lat, e.lng); var i = iS.convertLL2MC(e); this.setPoint(i) }, getPosition: function () { return this.latLng } }); window.BMAP_ANIMATION_DROP = 1; window.BMAP_ANIMATION_BOUNCE = 2; function jx(e, i) { er.call(this); i = i || {}; this.delFlag = i.delFlag; this.point = e; this._rotation = 0; this.map = null; this._animation = null; this.domElement = null; this.iconDom = null; this.infoWindowDom = null; this.siblingElement = null; this.textureCoord = null; this.textureCoordGLMap = null; this.collisionDetectionFailed = false; this._config = { offset: new iJ(0, 0), opacity: 1, icon: null, title: "", infoWindow: null, label: null, baseZIndex: 0, clickable: true, zIndexFixed: false, isTop: false, enableMassClear: true, enableDragging: false, raiseOnDrag: false, restrictDraggingArea: false, startAnimation: "", enableCollisionDetection: false, rank: 0, enableDraggingMap: false }; this.setOptions(i); this._isDragging = false; var T = this; gO.load("marker", function () { T._draw() }) } jx.TOP_ZINDEX = aQ.getZIndex(-90) + 1000000; jx.DRAG_ZINDEX = jx.TOP_ZINDEX + 1000000; jx._injectMethond = function (e) { eN.extend(jx.prototype, e) }; jx.inherits(er, "Marker"); eN.extend(jx.prototype, { toString: function () { return "Marker" }, setOptions: function (e) { this.setConfig(e); if (!e.icon) { this._config.icon = new jb(B.imgPath + "marker_red.png", new iJ(23, 25), { offset: new iJ(10, 25), infoWindowOffset: new iJ(10, 0) }) } }, setIcon: function (e) { if (e) { this._config.icon = e; this.textureCoord = this.textureCoordGLMap = null } }, getIcon: function () { return this._config.icon }, setLabel: function (e) { if (!(e instanceof bc)) { return } this._config.label = e; e._config.enableMassClear = this._config.enableMassClear; e.setPoint(this.point) }, getLabel: function () { return this._config.label }, enableDragging: function () { this._config.enableDragging = true }, disableDragging: function () { this._config.enableDragging = false }, setPoint: function (e) { if (e) { if (this.map.config.coordType === BMAP_COORD_GCJ02) { var i = ic(e, 3); this.point = this._config.point = new ct(i.lng, i.lat); this.latLng = iS.convertMC2LL(i) } else { this.point = this._config.point = new ct(e.lng, e.lat); this.latLng = iS.convertMC2LL(e) } } }, setPositionIn: function (e) { this.setPoint(e) }, getPositionIn: function () { return this.getPoint() }, setTop: function (i, e) { this._config.isTop = !!i; if (i) { this._addi = e || 0 } }, setTitle: function (e) { this._config.title = e || "" }, getTitle: function () { return this._config.title }, setOffset: function (e) { if (e) { this._config.offset = e } }, getOffset: function () { return this._config.offset }, setAnimation: function (e) { this._animation = e }, setRank: function (e) { this._config.rank = e }, getRank: function () { return this._config.rank }, setRotation: function (e) { while (e < 0) { e += 360 } this._rotation = e % 360 }, getRotation: function () { return this._rotation } }); function s(e, T) { this.latLng = new cn(e.lat, e.lng); var i = iS.convertLL2MC(e); jx.call(this, i, T) } s.inherits(jx, "MarkerOut"); eN.extend(s.prototype, { toString: function () { return "Marker" }, toGeoJSON: function () { var i = "Point"; var T = [this.latLng.lng, this.latLng.lat]; var e = { type: "Feature", geometry: { type: i, coordinates: T }, properties: this.properties }; return e }, updateByGeoJSON: function (T) { var e = new gk(); var jV = e.readFeaturesFromObject(T) || []; for (var jT = 0, jU = jV.length; jT < jU; ++jT) { if (jV[jT] instanceof s) { this.properties = jV[jT].properties; this.setPosition(jV[jT].getPosition()); break } } }, setPosition: function (e) { this.latLng = new cn(e.lat, e.lng); var i = iS.convertLL2MC(e); this.setPositionIn(i) }, getPosition: function () { return this.latLng }, }); window.BMAP_SHAPE_CIRCLE = 1; window.BMAP_SHAPE_RECT = 2; function d6(i, e, T) { er.call(this, e, T); this.domElement = null; this.point = i; T = T || {}; this._config = {}; this._config.height = e || 0; this._config.size = typeof T.size === "number" ? T.size : 50; this._config.fillOpacity = typeof T.fillOpacity === "number" ? T.fillOpacity : 0.8; this._config.shape = typeof T.shape === "number" ? T.shape : 1; b7(this._config.fillOpacity, 0, 1); if (T.fillColor === "") { this._config.fillColor = "" } else { this._config.fillColor = T.fillColor ? T.fillColor : "#f00" } this._config.icon = T.icon instanceof jb ? T.icon : ""; this._config.enableMassClear = T.enableMassClear || true; var jT = this; gO.load("marker", function () { jT._draw() }) } d6.inherits(er, "Marker3D"); eN.extend(d6.prototype, { setPoint: function (e) { if (this.map.config.coordType === BMAP_COORD_GCJ02) { var T = ic(e, 3); this.point = this._config.point = new ct(T.lng, T.lat); this.latLng = iS.convertMC2LL(T) } else { this.point = this._config.point = new ct(e.lng, e.lat); this.latLng = iS.convertMC2LL(e) } var i = new fy("onstatus_change"); i.overlay = this; i.action = "setPoint"; this.fire(i) }, setPositionIn: function (e) { this.setPoint(e) }, getPositionIn: function () { return this.getPoint() }, setDomAttribute: function (i, T) { var e = new fy("onlineupdate"); e.overlay = this; this.dispatchEvent(e) } }); function d2(i, e, jT) { this.latLng = new cn(i.lat, i.lng); var T = iS.convertLL2MC(i); d6.call(this, T, e, jT) } d2.inherits(d6, "Marker3d"); eN.extend(d2.prototype, { toString: function () { return "Marker3D" }, setHeight: function (e) { this._config.height = Number(e); this.draw(); var i = new fy("onlineupdate"); i.overlay = this; this.dispatchEvent(i) }, getHeight: function () { return this._config.height }, setFillOpacity: function (e) { if (e > 1 || e < 0) { return } this._config.fillOpacity = e; this.setDomAttribute("fillopacity", e) }, getFillOpacity: function () { return this._config.fillOpacity }, setFillColor: function (e) { this._config.fillColor = e || ""; this.setDomAttribute("fillcolor", e) }, getFillColor: function () { return this._config.fillColor }, setIcon: function (i) { if (!i || !this.map) { return } this._config.icon = i; if (this._config.icon) { var e = this._config.icon.getCurrentImageUrl(); var jT = i.getCurrentImageUrl() !== e; this._config.icon = i; this.textureCoord = this.textureCoordGLMap = null; this.draw(); var T = new fy("onstatus_change"); T.overlay = this; T.action = "setIcon"; T.imageUrlChanged = jT; this.fire(T) } }, getIcon: function () { return this._config.icon }, setPosition: function (e) { this.latLng = new cn(e.lat, e.lng); var i = iS.convertLL2MC(e); this.setPositionIn(i) }, getPosition: function () { var e = this.getPositionIn(); return iS.convertMC2LL(e) } }); function fI(T, e) { ii.call(this, e); this._normalizedBounds = new hJ(); this.setPoints(T); var i = this; gO.load("poly", function () { i._draw() }) } fI.inherits(ii, "Polyline"); eN.extend(fI.prototype, { getBoundsIn: function (e) { if (!e) { this._bounds.setMinMax(); return this._bounds } this._normalizedBounds.setMinMax(); return this._normalizedBounds }, setPoints: function (jW) { this._clearCache(); this.points = ii.getGraphPoints(jW).slice(0); if (this._config.geodesic === true) { this.greatCirclePoints.length = 0; for (var jU = 0; jU < this.points.length - 1; jU++) { this.calcGreatCirclePoints(this.points[jU], this.points[jU + 1]) } } else { if (this._config.linkRight) { var jX = []; var jV = null; for (var jU = 0; jU < this.points.length - 1; jU++) { if (!jU) { jX.push(this.points[jU]) } var T = jV || this.points[jU]; jV = this.points[jU + 1]; var jT = ej(jV, T); if (jT > 15437726) { if (jV.lng < T.lng) { jV.lng += hv.WORLD_SIZE_MC } else { jV.lng -= hv.WORLD_SIZE_MC } } jX.push(jV) } this.points = jX } } this._calcBounds(); this.draw(); var e = new fy("onlineupdate"); e.overlay = this; this.dispatchEvent(e); if (this._visible && this._config.enableEditing === true && !this._config.geodesic) { this.clearVertexs && this.clearVertexs(); this.addVertexs && this.addVertexs() } }, _calcBounds: function () { if (!this.points) { return } var e = this; e._bounds.setNorthEast(null); e._bounds.setSouthWest(null); if (e.greatCirclePoints && e.greatCirclePoints.length > 0) { eN.each(e.greatCirclePoints, function (i) { e._bounds.extend(i) }) } else { eN.each(e.points, function (i) { e._bounds.extend(i) }) } e._normalizedBounds.setSouthWest(e._bounds.getSouthWest()); e._normalizedBounds.setNorthEast(e._bounds.getNorthEast()); if (e._normalizedBounds.sw.lng < -hv.WORLD_SIZE_MC_HALF || e._normalizedBounds.ne.lng > hv.WORLD_SIZE_MC_HALF) { e._normalizedBounds.sw.lng = -hv.WORLD_SIZE_MC_HALF; e._normalizedBounds.ne.lng = hv.WORLD_SIZE_MC_HALF } }, calcGreatCirclePoints: function (jT, T) { var jV = jT.latLng; var jU = T.latLng; if (jV.equals(jU)) { return } var e = iS.getDistance(ik(jV.lng), ik(jV.lat), ik(jU.lng), ik(jU.lat)); if (e < 250000) { return } var jZ = Math.round(e / 150000); var j3 = this.calcAngularDistance(jV, jU); this.greatCirclePoints.push(jT); var j2 = jV.lng; var j1 = jT; for (var jW = 0; jW < jZ; jW++) { var jY = this.calcMiddlePoint(jV, jU, jW / jZ, j3); var j0 = iS.convertLL2MC(jY); var jX = j0.lng; var j4 = ej(j0, j1); if (j4 > 30037726) { if (j0.lng < j1.lng) { j0.lng += hv.WORLD_SIZE_MC } else { j0.lng -= hv.WORLD_SIZE_MC } } this.greatCirclePoints.push(j0); j1 = j0 } var j4 = ej(T, j1); if (j4 > 30037726) { if (T.lng < j1.lng) { T.lng += hv.WORLD_SIZE_MC } else { T.lng -= hv.WORLD_SIZE_MC } } this.greatCirclePoints.push(T) }, calcMiddlePoint: function (j0, jZ, j1, j5) { var jU = j0.lat; var jT = jZ.lat; var j4 = j0.lng; var j2 = jZ.lng; var j6 = ik(jU); var j3 = ik(jT); var i = ik(j4); var e = ik(j2); var j8 = Math.sin((1 - j1) * j5) / Math.sin(j5); var j7 = Math.sin(j1 * j5) / Math.sin(j5); var jX = j8 * Math.cos(j6) * Math.cos(i) + j7 * Math.cos(j3) * Math.cos(e); var jW = j8 * Math.cos(j6) * Math.sin(i) + j7 * Math.cos(j3) * Math.sin(e); var jV = j8 * Math.sin(j6) + j7 * Math.sin(j3); var T = Math.atan2(jV, Math.sqrt(Math.pow(jX, 2) + Math.pow(jW, 2))); var jY = Math.atan2(jW, jX); return new ct(eZ(jY), eZ(T)) }, calcAngularDistance: function (jU, i) { var jV = ik(jU.lat); var jT = ik(i.lat); var T = ik(jU.lng); var e = ik(i.lng); return Math.acos(Math.sin(jV) * Math.sin(jT) + Math.cos(jV) * Math.cos(jT) * Math.cos(Math.abs(e - T))) } }); function bk(jU, e) { if (!jU || jU.length === 0) { return } var jT = []; for (var T = 0; T < jU.length; T++) { jT[T] = iS.convertLL2MC(jU[T]) } fI.call(this, jT, e) } bk.inherits(fI, "PolylineOut"); eN.extend(bk.prototype, { toString: function () { return "Polyline" }, toGeoJSON: function () { var jT = "LineString"; var jU = []; var jV = this.getPath(); for (var T = 0; T < jV.length; T++) { jU.push([jV[T].lng, jV[T].lat]) } var e = { type: "Feature", geometry: { type: jT, coordinates: jU }, properties: this.properties }; return e }, updateByGeoJSON: function (T) { var e = new gk(); var jV = e.readFeaturesFromObject(T) || []; for (var jT = 0, jU = jV.length; jT < jU; ++jT) { if (jV[jT] instanceof bk) { this.properties = jV[jT].properties; this.setPath(jV[jT].getPath()); break } } }, setPath: function (jT) { if (!jT || jT.length === 0) { return } var T = []; for (var e = 0; e < jT.length; e++) { T[e] = iS.convertLL2MC(jT[e]) } this.setPathIn(T); this._mouseEventPixels = null }, getPath: function () { var e = this.getPathIn(); if (!e || e.length === 0) { return [] } var jT = []; for (var T = 0; T < e.length; T++) { jT[T] = iS.convertMC2LL(e[T]) } return jT }, getBounds: function (i) { var e = this.getBoundsIn(i); var T = new hJ(iS.convertMC2LL(e.getSouthWest()), iS.convertMC2LL(e.getNorthEast())); return T } }); function gC(T, jT, e) { ii.call(this, e); this._normalizedBounds = new hJ(); this._cps = jT; this._path = T; this.setPoints(T); var i = this; gO.load("poly", function () { i._draw() }) } gC.inherits(fI, "BezierCurve"); eN.extend(gC.prototype, { getBoundsIn: function (e) { if (!e) { this._bounds.setMinMax(); return this._bounds } this._normalizedBounds.setMinMax(); return this._normalizedBounds }, setPoints: function (e) { this._clearCache(); this.points = ii.getGraphPoints(e).slice(0); this.points = this.calcBezierPoints(this.points, this._cps); this._calcBounds() }, _calcBounds: function () { if (!this.points) { return } var e = this; e._bounds.setNorthEast(null); e._bounds.setSouthWest(null); if (e.greatCirclePoints && e.greatCirclePoints.length > 0) { eN.each(e.greatCirclePoints, function (i) { e._bounds.extend(i) }) } else { eN.each(e.points, function (i) { e._bounds.extend(i) }) } e._normalizedBounds.setSouthWest(e._bounds.getSouthWest()); e._normalizedBounds.setNorthEast(e._bounds.getNorthEast()); if (e._normalizedBounds.sw.lng < -hv.WORLD_SIZE_MC_HALF || e._normalizedBounds.ne.lng > hv.WORLD_SIZE_MC_HALF) { e._normalizedBounds.sw.lng = -hv.WORLD_SIZE_MC_HALF; e._normalizedBounds.ne.lng = hv.WORLD_SIZE_MC_HALF } }, getPathIn: function () { return this._path }, setPathIn: function (e) { this._path = e; this.setPoints(e) }, getCpsIn: function () { return this._cps }, setCpsIn: function (e) { this._cps = e; this.setPoints(this._path) }, calcBezierPoints: function (jT, jV) { var T = []; for (var e = 0; e < jT.length - 1; e++) { var jU = [jT[e], jV[e][0], jV[e][1], jT[e + 1]]; T = T.concat((this.bezierbetweenTwoP(jU))) } return T }, bezierbetweenTwoP: function (jV) { var T = 100; var jU = 1 / T; var e = []; for (var jT = 0; jT < T; jT++) { e.push(this.getPointOnCubicBezier(jV, jT * jU)) } return e }, getPointOnCubicBezier: function (jW, j0) { var i; var jV; var jT; var j1; var jU; var T; var jZ; var e; var jY; var jX; jT = 3 * (jW[1].lng - jW[0].lng); jV = 3 * (jW[2].lng - jW[1].lng) - jT; i = jW[3].lng - jW[0].lng - jT - jV; T = 3 * (jW[1].lat - jW[0].lat); jU = 3 * (jW[2].lat - jW[1].lat) - T; j1 = jW[3].lat - jW[0].lat - T - jU; jZ = j0 * j0; e = jZ * j0; jY = (i * e) + (jV * jZ) + (jT * j0) + jW[0].lng; jX = (j1 * e) + (jU * jZ) + (T * j0) + jW[0].lat; return new ct(jY, jX) } }); function cC(jU, jW, e) { if (!jU || jU.length === 0) { return } this.userPath = jU; this.userCps = jW; var jT = []; for (var T = 0; T < jU.length; T++) { jT[T] = iS.convertLL2MC(jU[T]) } if (!jW || jW.length === 0) { return } var jV = []; for (var T = 0; T < jW.length; T++) { jV[T] = []; jV[T][0] = iS.convertLL2MC(jW[T][0]); if (jW[T][1]) { jV[T][1] = iS.convertLL2MC(jW[T][1]) } else { jV[T][1] = iS.convertLL2MC(jW[T][0]) } } gC.call(this, jT, jV, e) } cC.inherits(gC, "BezierCurveOut"); eN.extend(cC.prototype, { toString: function () { return "BezierCurve" }, setPath: function (jT) { if (!jT || jT.length === 0) { return } this.userPath = jT; var T = []; for (var e = 0; e < jT.length; e++) { T[e] = iS.convertLL2MC(jT[e]) } this.setPathIn(T); this._mouseEventPixels = null }, getPath: function () { return this.userPath; var e = this.getPathIn(); if (!e || e.length === 0) { return [] } var jT = []; for (var T = 0; T < e.length; T++) { jT[T] = iS.convertMC2LL(e[T]) } return jT }, getControlPoints: function () { return this.userCps; var e = this.getCpsIn(); if (!e || e.length === 0) { return [] } var jT = []; for (var T = 0; T < e.length; T++) { jT[T] = []; jT[T][0] = iS.convertMC2LL(e[T][0]); jT[T][1] = iS.convertMC2LL(e[T][1]) } return jT }, setControlPoints: function (jT) { if (!jT || jT.length === 0) { return } this.userCps = jT; var T = []; for (var e = 0; e < jT.length; e++) { T[e] = []; T[e][0] = iS.convertLL2MC(jT[e][0]); if (jT[e][1]) { T[e][1] = iS.convertLL2MC(jT[e][1]) } else { T[e][1] = iS.convertLL2MC(jT[e][0]) } } this.setCpsIn(T) }, getBounds: function (i) { var e = this.getBoundsIn(i); var T = new hJ(iS.convertMC2LL(e.getSouthWest()), iS.convertMC2LL(e.getNorthEast())); return T } }); function ec(e, T) { ii.call(this, T); this._normalizedBounds = new hJ(); this.setPoints(e); var i = this; gO.load("poly", function () { i._draw() }) } ec.inherits(fI, "PolylineMultipart"); eN.extend(ec.prototype, { setPoints: function (e) { if (!e) { return } this._clearCache(); this.points = this._unifyArgs(e); this._calcBounds() }, _unifyArgs: function (T) { var e = []; var i = []; if (T.constructor === Array) { if (T[0].constructor === ct) { i.push(T) } else { i = T } } else { if (typeof T === "string") { i.push(T) } } eN.each(i, function (jT) { e.push(ii.getGraphPoints(jT)) }); return e }, setPointAt: function (i, e, T) { T = T || 0; if (!e || !this.points[T] || !this.points[T][i]) { return } this._clearCache(); this.points[T][i] = new ct(e.lng, e.lat); this._calcBounds() }, getBoundsIn: function (e) { if (!e) { this._bounds.setMinMax(); return this._bounds } this._normalizedBounds.setMinMax(); return this._normalizedBounds }, _calcBounds: function () { if (!this.points) { return } var e = this; e._bounds.setNorthEast(null); e._bounds.setSouthWest(null); if (e.greatCirclePoints && e.greatCirclePoints.length > 0) { eN.each(e.greatCirclePoints, function (i) { e._bounds.extend(i) }) } else { eN.each(e.points, function (i) { eN.each(i, function (T) { e._bounds.extend(T) }) }) } e._normalizedBounds.setSouthWest(e._bounds.getSouthWest()); e._normalizedBounds.setNorthEast(e._bounds.getNorthEast()); if (e._normalizedBounds.sw.lng < -hv.WORLD_SIZE_MC_HALF || e._normalizedBounds.ne.lng > hv.WORLD_SIZE_MC_HALF) { e._normalizedBounds.sw.lng = -hv.WORLD_SIZE_MC_HALF; e._normalizedBounds.ne.lng = hv.WORLD_SIZE_MC_HALF } } }); function g2(T, e) { ii.call(this, e); e = e || {}; if (typeof e.fillOpacity === "number") { this._config.fillOpacity = e.fillOpacity } else { this._config.fillOpacity = 0.6 } b7(this._config.fillOpacity, 0, 1); if (e.fillColor === "") { this._config.fillColor = "" } else { this._config.fillColor = e.fillColor ? e.fillColor : "#fff" } this._parseFillCacheWebGL = []; this.setPoints(T, e); var i = this; gO.load("poly", function () { i._draw() }) } g2.inherits(ii, "Polygon"); eN.extend(g2.prototype, { setPoints: function (jV) { var jT = []; if (typeof jV === "string" || jV.length === 1 || jV[0] instanceof ct || jV[0] instanceof cn || this instanceof gJ || jV.length === 0) { if (jV.length === 1) { jV = jV[0] } var e = this._processSinglePointArray(jV); this._userPoints = e.userPoints; jT = e.innerPoints; this.hasMultipleParts = false } else { this._userPoints = []; for (var jU = 0; jU < jV.length; jU++) { var T = this._processSinglePointArray(jV[jU]); this._userPoints.push(T.userPoints); jT.push(T.innerPoints) } this.hasMultipleParts = true } ii.prototype.setPoints.call(this, jT) }, setPathIn: function (e) { this.setPoints(e) }, _processSinglePointArray: function (e) { var i = ii.getGraphPoints(e).slice(0); innerPoints = i.slice(0); if (innerPoints.length > 1 && !innerPoints[0].equals(innerPoints[innerPoints.length - 1])) { innerPoints.push(new ct(innerPoints[0].lng, innerPoints[0].lat)) } return { userPoints: i, innerPoints: innerPoints } }, setPointAt: function (i, e) { if (!this._userPoints[i]) { return } this._clearCache(); this._userPoints[i] = new ct(e.lng, e.lat); this.points[i] = new ct(e.lng, e.lat); if (i === 0 && !this.points[0].equals(this.points[this.points.length - 1])) { this.points[this.points.length - 1] = new ct(e.lng, e.lat) } this._calcBounds() }, setPositionAt: function (i, e) { if (!this._userPoints[i]) { return } var T = iS.convertLL2MC(e); this.setPointAt(i, T) }, getPoints: function () { var e = this._userPoints; if (e.length === 0) { e = this.points } return e }, getPathIn: function () { return this.getPoints() } }); function iq(T, e) { if (!T || T.length === 0) { return } var i = this.setPath(T, true); g2.call(this, i, e) } iq.inherits(g2, "PolygonOut"); eN.extend(iq.prototype, { toString: function () { return "Polygon" }, toGeoJSON: function () { var jU = "Polygon"; var jV = []; var jX = this.getPath(); if (this.hasMultipleParts) { jU = "Multi" + jU; for (var jT = 0; jT < jX.length; jT++) { var jW = []; for (var T = 0; T < jX.length; T++) { jW.push([jX[jT][T].lng, jX[jT][T].lat]) } jV.push(jW) } } else { for (var jT = 0; jT < jX.length; jT++) { jV.push([jX[jT].lng, jX[jT].lat]) } } var e = { type: "Feature", geometry: { type: jU, coordinates: [jV] }, properties: this.properties }; return e }, updateByGeoJSON: function (T) { var e = new gk(); var jV = e.readFeaturesFromObject(T) || []; for (var jT = 0, jU = jV.length; jT < jU; ++jT) { if (jV[jT] instanceof iq) { this.properties = jV[jT].properties; this.setPath(jV[jT].getPath()); break } } }, setPath: function (jY, T) { if (!jY || jY.length === 0) { return } var jX = []; if (typeof jY === "string" || jY[0] instanceof ct || jY[0] instanceof cn) { var e = this._processSinglePointArray(jY); for (var jW = 0; jW < e.innerPoints.length; jW++) { jX[jW] = iS.convertLL2MC(e.innerPoints[jW]) } } else { for (var jW = 0; jW < jY.length; jW++) { var jT = this._processSinglePointArray(jY[jW]); var jV = []; for (var jU = 0; jU < jT.innerPoints.length; jU++) { jV[jU] = iS.convertLL2MC(jT.innerPoints[jU]) } jX.push(jV) } } if (T) { return jX } this.setPathIn(jX); this._mouseEventPixels = null }, getPath: function () { var e = this.getPathIn(); if (!e || e.length === 0) { return [] } var jV = []; if (this.hasMultipleParts) { for (var jT = 0; jT < e.length; jT++) { var jU = []; for (var T = 0; T < e[jT].length; T++) { jU[T] = iS.convertMC2LL(e[jT][T]) } jV.push(jU) } } else { for (var jT = 0; jT < e.length; jT++) { jV[jT] = iS.convertMC2LL(e[jT]) } } return jV } }); function gJ(i, e, T) { this.point = i; this.radius = Math.abs(e); g2.call(this, [], T) } gJ.parseTolerance = { 0: [0.01, 0.0001, 0.00001, 0.000004], 1: [1000, 10, 1, 0.4] }; gJ.inherits(g2, "Circle"); eN.extend(gJ.prototype, { initialize: function (e) { this.map = e; this.points = this._getPerimeterPoints(this.point, this.radius); this._calcBounds(); return null }, getPoint: function () { return this.point }, setPoint: function (e) { if (!e) { return } this.point = e; this.latLng = iS.convertMC2LL(e) }, setCenterIn: function (e) { var i = arguments[1]; this.setPoint(e, i) }, setRadius: function (e) { this.radius = Math.abs(e) }, getCenterIn: function () { return this.point }, getRadius: function () { return this.radius }, _getPerimeterPoints: function (e, j0) { if (!e || !j0 || !this.map) { return [] } var T = this.map; var jX = e.lng; var jV = e.lat; var j6 = iS.convertMC2LL(e); jX = j6.lng; jV = j6.lat; var j7 = []; var j2 = j0 / iS.EARTHRADIUS; var jZ = (Math.PI / 180) * jV; var j5 = (Math.PI / 180) * jX; for (var jY = 0; jY < 360; jY += 9) { var jW = (Math.PI / 180) * jY; var j3 = Math.asin(Math.sin(jZ) * Math.cos(j2) + Math.cos(jZ) * Math.sin(j2) * Math.cos(jW)); var j1 = Math.atan2(Math.sin(jW) * Math.sin(j2) * Math.cos(jZ), Math.cos(j2) - Math.sin(jZ) * Math.sin(j3)); var j4 = ((j5 - j1 + Math.PI) % (2 * Math.PI)) - Math.PI; var jU = new cn(j3 * (180 / Math.PI), j4 * (180 / Math.PI)); j7.push(iS.convertLL2MC(jU)) } var jT = j7[0]; j7.push(new ct(jT.lng, jT.lat)); if (jT) { this._radiusMercator = Math.sqrt(Math.pow(jT.lng - this.point.lng, 2) + Math.pow(jT.lat - this.point.lat, 2)) } else { this._radiusMercator = this.radius } return j7 } }); function aT(i, e, jT) { this.latLng = new cn(i.lat, i.lng); var T = iS.convertLL2MC(i); gJ.call(this, T, e, jT) } aT.inherits(gJ, "CircleOut"); eN.extend(aT.prototype, { toString: function () { return "Circle" }, setCenter: function (e) { this.latLng = new cn(e.lat, e.lng); var i = iS.convertLL2MC(e); this.setCenterIn(i) }, getCenter: function () { return this.latLng }, getPath: function () { var e = this.getPathIn(); if (!e || e.length === 0) { return [] } var jT = []; for (var T = 0; T < e.length; T++) { jT[T] = iS.convertMC2LL(e[T]) } return jT }, toGeoJSON: function () { var jT = "Polygon"; var jU = []; var jV = this.getPath(); for (var T = 0; T < jV.length; T++) { jU.push([jV[T].lng, jV[T].lat]) } var e = { type: "Feature", geometry: { type: jT, coordinates: [jU] }, properties: this.properties }; return e }, updateByGeoJSON: function (e) { } }); function jI(jT, e, i) { ii.call(this, i); i = i || {}; if (typeof i.topFillOpacity === "number") { this._config.topFillOpacity = i.topFillOpacity } else { this._config.topFillOpacity = 0.6 } if (typeof i.sideFillOpacity === "number") { this._config.sideFillOpacity = i.sideFillOpacity } else { this._config.sideFillOpacity = 0.8 } b7(this._config.sideFillOpacity, 0, 1); if (i.topFillColor === "") { this._config.topFillColor = "" } else { this._config.topFillColor = i.topFillColor ? i.topFillColor : "#fff" } if (i.sideFillColor === "") { this._config.sideFillColor = "" } else { this._config.sideFillColor = i.sideFillColor ? i.sideFillColor : "#fff" } this._parseFillCacheWebGL = []; this.setPoints(jT, i); this._config.altitude = e || 0; var T = this; gO.load("poly", function () { T._draw() }) } jI.inherits(ii, "Prism"); eN.extend(jI.prototype, { setPoints: function (jV) { var jT = []; if (typeof jV === "string" || jV[0] instanceof ct || jV[0] instanceof cn || this instanceof gJ || jV.length === 0) { var e = this._processSinglePointArray(jV); this._userPoints = e.userPoints; jT = e.innerPoints; this.hasMultipleParts = false } else { this._userPoints = []; for (var jU = 0; jU < jV.length; jU++) { var T = this._processSinglePointArray(jV[jU]); this._userPoints.push(T.userPoints); jT.push(T.innerPoints) } this.hasMultipleParts = true } ii.prototype.setPoints.call(this, jT) }, setPathIn: function (e) { this.setPoints(e) }, _processSinglePointArray: function (e) { var i = ii.getGraphPoints(e).slice(0); innerPoints = i.slice(0); if (innerPoints.length > 1 && !innerPoints[0].equals(innerPoints[innerPoints.length - 1])) { innerPoints.push(new ct(innerPoints[0].lng, innerPoints[0].lat)) } return { userPoints: i, innerPoints: innerPoints } }, setPointAt: function (i, e) { if (!this._userPoints[i]) { return } this._clearCache(); this._userPoints[i] = new ct(e.lng, e.lat); this.points[i] = new ct(e.lng, e.lat); if (i === 0 && !this.points[0].equals(this.points[this.points.length - 1])) { this.points[this.points.length - 1] = new ct(e.lng, e.lat) } this._calcBounds() }, getPoints: function () { var e = this._userPoints; if (e.length === 0) { e = this.points } return e }, getPathIn: function () { return this.getPoints() }, setTopFillOpacity: function (e) { if (e > 1 || e < 0) { return } this._config.topFillOpacity = e; this._setDomAttribute("topfillopacity", e) }, getTopFillOpacity: function () { return this._config.topFillOpacity }, setSideFillOpacity: function (e) { if (e > 1 || e < 0) { return } this._config.sideFillOpacity = e; this._setDomAttribute("sidefillopacity", e) }, getSideFillOpacity: function () { return this._config.sideFillOpacity }, setTopFillColor: function (e) { this._config.topFillColor = e || ""; this._setDomAttribute("topfillcolor", e) }, getTopFillColor: function () { return this._config.topFillColor }, setSideFillColor: function (e) { this._config.sideFillColor = e || ""; this._setDomAttribute("sidefillcolor", e) }, getSideFillColor: function () { return this._config.sideFillColor }, setAltitude: function (e) { this._config.altitude = Number(e); this.draw(); var i = new fy("onlineupdate"); i.overlay = this; this.dispatchEvent(i) }, getAltitude: function () { return this._config.altitude } }); function bq(jX, jV, jY) { if (!jX || jX.length === 0) { return } this.userPath = jX; var e = []; if (typeof jX === "string" || jX[0] instanceof ct || jX[0] instanceof cn) { var jZ = this._processSinglePointArray(jX); for (var jU = 0; jU < jZ.innerPoints.length; jU++) { e[jU] = iS.convertLL2MC(jZ.innerPoints[jU]) } } else { for (var jU = 0; jU < jX.length; jU++) { var jW = this._processSinglePointArray(jX[jU]); var T = []; for (var jT = 0; jT < jW.innerPoints.length; jT++) { T[jT] = iS.convertLL2MC(jW.innerPoints[jT]) } e.push(T) } } jI.call(this, e, jV, jY) } bq.inherits(jI, "PrismOut"); eN.extend(bq.prototype, { toString: function () { return "Prism" }, setPath: function (jT) { if (!jT || jT.length === 0) { return } this.userPath = jT; var T = []; for (var e = 0; e < jT.length; e++) { T[e] = iS.convertLL2MC(jT[e]) } this.setPathIn(T); this._mouseEventPixels = null }, getPath: function () { return this.userPath; var e = this.getPathIn(); if (!e || e.length === 0) { return [] } var jT = []; for (var T = 0; T < e.length; T++) { jT[T] = iS.convertMC2LL(e[T]) } return jT } }); function bV(jU, i) { ii.call(this, i); i = i || {}; this._config.type = i.type || "image"; this._config.url = i.url || ""; this._config.opacity = typeof i.opacity === "number" ? i.opacity : 1; this.isReDraw = i.isReDraw || false; this.drawHook = (i.drawHook instanceof Function) ? i.drawHook : null; b7(this._config.opacity, 0, 1); if (i.type === "image" && i.isPixelMap) { this._config.isPixelMap = i.isPixelMap || false; var T = i.pixelMap || {}; this._config.colors = T.colors || ["#F9F871", "#FFC75F", "#FF9671", "#FF6F91", "#D65DB1", "#845EC2"]; this._config.positions = T.positions || [0, 0.2, 0.4, 0.6, 0.8, 1]; this._config.domain = T.domain || [0, 255]; this._config.clamp = T.clamp || this._config.domain; this._config.noData = (T.noData !== undefined) ? T.noData : -99999; this._config.fomularC = T.fomularC || "float generateValue(vec4 pixel){return pixel.r * 255.;}"; this._config.fomularJS = T.fomularJS || function (jV) { return jV.r }; this._config.maskPng = T.maskPng || null; this._config.maskData = T.maskData || -1; this._config.maskCoord = T.maskCoord || null; this.fHashcode = o({ str: this._config.fomularC }); var e = this.canPixelMap(); if (e) { this.isPixelMap = true; this.setPixelMap() } } this._parseFillCacheWebGL = []; this.setPoints(jU, i); var jT = this; gO.load("poly", function () { jT._draw() }) } bV.inherits(ii, "GroundOverlay"); eN.extend(bV.prototype, { setPoints: function (i) { var e = ii.getGraphPoints(i).slice(0); this.hasMultipleParts = false; ii.prototype.setPoints.call(this, e) }, setPathIn: function (e) { this.setPoints(e) }, getPoints: function () { return this.points }, getPathIn: function () { return this.getPoints() }, canPixelMap: function () { if (this._config.colors && this._config.positions) { return true } return false }, setPixelMap: function () { if (!this._config.isPixelMap || !this.canPixelMap()) { return } var i = this._config.colors; var e = this._config.positions; this.pHashcode = o({ colors: i, positions: e }); this.pixelColorMap = hm.generateColorRamp(i, e) }, setDomain: function (e) { if (e instanceof Array && e.length === 2) { this._config.domain = e; this.doOnceDraw() } }, setClamp: function (e) { if (e instanceof Array && e.length === 2) { this._config.clamp = e; this.doOnceDraw() } }, setMaskPng: function (i) { this._config.maskPng = i; if (this.map) { var e = new fy("hide"); e.overlay = this; this.dispatchEvent(e); var e = new fy("show"); e.overlay = this; this.dispatchEvent(e) } this.doOnceDraw() }, setMaskData: function (e) { this._config.maskData = e; this.doOnceDraw() }, setMaskCoord: function (e) { this._config.maskCoord = e; this.maskUV = null; this.doOnceDraw() }, setNoData: function (e) { this._config.noData = e; this.doOnceDraw() }, setPositions: function (e) { this._config.positions = e; this.setPixelMap(); this.doOnceDraw() }, setColors: function (e) { this._config.colors = e; this.setPixelMap(); this.doOnceDraw() }, setBounds: function (jT) { if (!(jT instanceof hJ)) { return } var jV = [new ct(jT.sw.lng, jT.ne.lat), new ct(jT.ne.lng, jT.ne.lat), new ct(jT.ne.lng, jT.sw.lat), new ct(jT.sw.lng, jT.sw.lat)]; var e = ii.getGraphPoints(jV).slice(0); var jU = []; for (var T = 0; T < e.length; T++) { jU[T] = iS.convertLL2MC(e[T]) } this.setPoints(jU); this.doOnceDraw() }, setOpacity: function (e) { if (e > 1 || e < 0) { return } this._config.opacity = e; this.doOnceDraw() }, getOpacity: function () { return this._config.opacity }, setFomular: function (e, i) { if (e && i) { this._config.fomularJS = e; this._config.fomularC = i; this.fHashcode = o({ str: this._config.fomularC }); this.doOnceDraw() } }, setIsPixelMap: function (e) { this.isPixelMap = e; this.doOnceDraw() }, getImagePixel: function (jT) { if (!this._config.isPixelMap || !this.canPixelMap()) { return null } if (!this.getImageMaskPixel(jT)) { return null } if (this.imageObject) { var T = Math.floor((jT.lng - this.points[3].lng) / this.lngMC); var e = Math.floor((-jT.lat + this.points[3].lat) / this.latMC); var i = Math.floor((e * this.imageObject.width + T) * 4); if (T > this.imageObject.width || T < 0) { return null } if (e > this.imageObject.height || e < 0) { return null } if (i + 3 > this.imageObject.data.data.length) { return null } return [this.imageObject.data.data[i], this.imageObject.data.data[i + 1], this.imageObject.data.data[i + 2], this.imageObject.data.data[i + 3],] } return null }, getValue: function (i) { if (this._config.isPixelMap && i && this._config.fomularJS) { if (!(i instanceof Array)) { i = this.getImagePixel(i.point) } var e = this._config.fomularJS({ r: i[0], g: i[1], b: i[2], a: i[3] }); if (e >= this._config.clamp[0] && e <= this._config.clamp[1]) { return e } } return null }, setImageObject: function (T) { var e = document.createElement("canvas"); e.width = T.width; e.height = T.height; var i = e.getContext("2d"); i.drawImage(T, 0, 0, T.width, T.height); this.imageObject = { width: T.width, height: T.height, data: i.getImageData(0, 0, T.width, T.height) }; this.updatePixelMc(); i = null; e = null }, updatePixelMc: function () { if (this.imageObject) { var e = Math.abs(this.points[2].lng - this.points[0].lng); var i = Math.abs(this.points[2].lat - this.points[0].lat); this.lngMC = e / this.imageObject.width; this.latMC = i / this.imageObject.height } }, setMaskImageObject: function (T) { var e = document.createElement("canvas"); e.width = T.width; e.height = T.height; var i = e.getContext("2d"); i.drawImage(T, 0, 0, T.width, T.height); this.imageMaskObject = { width: T.width, height: T.height, data: i.getImageData(0, 0, T.width, T.height) }; i = null; e = null }, getImageMaskPixel: function (e) { if (!this.imageMaskObject) { return true } var jT = this._toOverlayPixelsGL([e]); var jY = this.maskOverlayPixels; var jV = jY[1][0] - jY[0][0]; var jU = jY[1][1] - jY[0][1]; var T = Math.floor((jT[0][0] - jY[0][0]) / jV * this.imageMaskObject.width); var i = Math.floor((-jT[0][1] + jY[1][1]) / jU * this.imageMaskObject.height); var jX = Math.floor((i * this.imageMaskObject.width + T) * 4); if (T > this.imageMaskObject.width || T < 0) { return null } if (i > this.imageMaskObject.height || i < 0) { return null } var jW = this.imageMaskObject.data.data; if (jX + 3 > jW.length) { return false } if (jW[jX + 3] > 0) { if (this._config.maskData > -1 && this._config.maskData !== jW[jX]) { return false } return true } return false }, doOnceDraw: function () { var e = new fy("onlineupdate"); e.overlay = this; this.dispatchEvent(e) }, destroy: function () { this.points = []; this.imageMaskObject = null } }); function fN(jU, T) { if (!jU) { return } T = T || {}; var jW = [new ct(jU.sw.lng, jU.ne.lat), new ct(jU.ne.lng, jU.ne.lat), new ct(jU.ne.lng, jU.sw.lat), new ct(jU.sw.lng, jU.sw.lat)]; var e = ii.getGraphPoints(jW).slice(0); var jV = []; for (var jT = 0; jT < e.length; jT++) { jV[jT] = iS.convertLL2MC(e[jT]) } bV.call(this, jV, T) } fN.inherits(bV, "GroundOverlayOut"); eN.extend(fN.prototype, { toString: function () { return "GroundOverlay" } }); var au = {}; function hM(T, i) { eN.BaseClass.call(this); this.content = T; this.map = null; this._config = { width: 0, height: 0, maxWidth: 600, offset: new iJ(0, 0), title: "", maxContent: "", enableMaximize: false, enableAutoPan: true, enableCloseOnClick: true, margin: [10, 10, 40, 10], collisions: [[10, 10], [10, 10], [10, 10], [10, 10]], ifMaxScene: false, onClosing: function () { return true } }; this.setConfig(i); if (this._config.width < 50) { this._config.width = 50 } if (this._config.width > 730) { this._config.width = 730 } if (this._config.height != 0) { if (this._config.height < 50) { this._config.height = 50 } if (this._config.height > 650) { this._config.height = 650 } } if (this._config.maxWidth !== 0) { if (this._config.maxWidth < 50) { this._config.maxWidth = 50 } if (this._config.maxWidth > 730) { this._config.maxWidth = 730 } } this.isWinMax = false; this.IMG_PATH = B.imgPath; this.overlay = null; var e = this; gO.load("simpleInfowindow", function () { e._draw() }) } hM.inherits(eN.BaseClass, "SimpleInfoWindow"); eN.extend(hM.prototype, { setWidth: function (e) { e = e * 1; if (!e && e != 0 || isNaN(e) || e < 0) { return } if (e != 0) { if (e < 50) { e = 50 } if (e > 730) { e = 730 } } this._config.width = e }, setHeight: function (e) { e = e * 1; e -= 10; if (!e && e != 0 || isNaN(e) || e < 0) { return } if (e != 0) { if (e < 50) { e = 50 } if (e > 650) { e = 650 } } this._config.height = e }, setMaxWidth: function (e) { e = e * 1; if (!e && e != 0 || isNaN(e) || e < 0) { return } if (e != 0) { if (e < 50) { e = 50 } if (e > 730) { e = 730 } } this._config.maxWidth = e }, setTitle: function (e) { this._config.title = e || "" }, setContent: function (e) { this.content = e || "" }, setMaxContent: function (e) { this._config.maxContent = e || "" }, redraw: function () { }, enableAutoPan: function () { this._config.enableAutoPan = true }, disableAutoPan: function () { this._config.enableAutoPan = false }, enableCloseOnClick: function () { this._config.enableCloseOnClick = true }, disableCloseOnClick: function () { this._config.enableCloseOnClick = false }, enableMaximize: function () { this._config.enableMaximize = true }, disableMaximize: function () { this._config.enableMaximize = false }, show: function () { this._visible = true }, hide: function () { this._visible = false }, close: function () { this.hide() }, dispose: function () { eN.BaseClass.prototype.decontrol.call(this) }, maximize: function () { this.isWinMax = true }, restore: function () { this.isWinMax = false }, setConfig: function (i) { if (!i) { return } for (var e in i) { if (typeof (this._config[e]) == typeof (i[e])) { this._config[e] = i[e] } } }, isVisible: function () { return this.isOpen() }, isOpen: function () { return false }, getPoint: function () { if (this.overlay && this.overlay.getPoint) { return this.overlay.getPoint() } }, getOffset: function () { return this._config.offset }, dispose: function () { eN.BaseClass.prototype.decontrol.call(this) }, toString: function () { return "SimpleInfoWindow" } }); hv.prototype.openSimpleInfoWindow = function (jT, e) { if (!jT || jT.toString() != "SimpleInfoWindow" || !e || e.toString() != "Point") { return } var i = this.temp; if (!i.marker) { var T = new jb(B.imgPath + "blank.gif", { width: 1, height: 1 }); i.marker = new jx(e, { icon: T, width: 1, height: 1, offset: new iJ(0, 0), infoWindowOffset: new iJ(0, 0), clickable: false }); i.marker._fromMap = 1 } else { i.marker.setPoint(e) } this.addOverlay(i.marker); i.marker.show(); i.marker.openSimpleInfoWindow(jT) }; hv.prototype.closeSimpleInfoWindow = function () { var e = this.temp.infoWin || this.temp._infoWin; if (e && e.overlay) { e.overlay.closeSimpleInfoWindow() } }; er.prototype.openSimpleInfoWindow = function (e) { if (this.map) { this.map.closeSimpleInfoWindow(); e._visible = true; this.map.temp._infoWin = e; e.overlay = this; eN.BaseClass.call(e, e.hashCode) } }; er.prototype.closeSimpleInfoWindow = function () { if (this.map && this.map.temp._infoWin) { this.map.temp._infoWin._visible = false; this.map.temp._infoWin.decontrol(); this.map.temp._infoWin = null } }; function cf(T, e) { ii.call(this, e); e = e || {}; this._config.showRegion = e.showRegion || "inside"; this._config.isBuildingMask = e.isBuildingMask && true; this._config.isPoiMask = e.isPoiMask && true; this._config.isMapMask = e.isMapMask && true; this._config.path = T; this._parseFillCacheWebGL = []; this.setPoints(T, e); var i = this; gO.load("poly", function () { i._draw() }) } cf.inherits(ii, "MapMask"); eN.extend(cf.prototype, { setPoints: function (i) { var e = ii.getGraphPoints(i).slice(0); this.hasMultipleParts = false; ii.prototype.setPoints.call(this, e) }, setPathIn: function (e) { this.setPoints(e) }, _processSinglePointArray: function (e) { var i = ii.getGraphPoints(e).slice(0); innerPoints = i.slice(0); if (innerPoints.length > 1 && !innerPoints[0].equals(innerPoints[innerPoints.length - 1])) { innerPoints.push(new ct(innerPoints[0].lng, innerPoints[0].lat)) } return { userPoints: i, innerPoints: innerPoints } }, getPoints: function () { var e = this._userPoints; if (e.length === 0) { e = this.points } return e }, getPathIn: function () { return this.getPoints() } }); function jF(jV, T) { if (!jV || jV.length === 0) { return } var jU = []; if (jV[0] instanceof ct) { var e = this._processSinglePointArray(jV); for (var jT = 0; jT < e.innerPoints.length; jT++) { jU[jT] = iS.convertLL2MC(e.innerPoints[jT]) } } cf.call(this, jU, T) } jF.inherits(cf, "MapMaskOut"); eN.extend(jF.prototype, { toString: function () { return "MapMask" } }); function e8(e, i) { e = isNaN(e) ? 0 : e; i = isNaN(i) ? 0 : i; this.x = e; this.y = i } e8.prototype.equals = function (e) { if (!e) { return false } return e.x === this.x && e.y === this.y }; e8.prototype.clone = function () { return new e8(this.x, this.y) }; e8.prototype.toString = function () { return "Pixel" }; function iJ(i, e) { if (typeof i !== "number") { this.width = parseFloat(i) } else { this.width = i } if (typeof e !== "number") { this.height = parseFloat(e) } else { this.height = e } } iJ.prototype.equals = function (e) { return !!(e && this.width === e.width && this.height === e.height) }; iJ.prototype.toString = function () { return "Size" }; var jL = { B_NORMAL_MAP: { tileUrls: dq(B.tileDomain, B.rasterTilePath), vectorTileUrls: dq(B.tileDomain, B.vectorTilePath), tileSize: 256, baseUnits: 256, zoomLevelMin: 3, zoomLevelMax: 19, minDataZoom: 3, maxDataZoom: 19, minZoom: 3, maxZoom: 19, webgl: { minZoom: 3, maxZoom: 25 }, zoomLevelBase: 18, errorUrl: B.imgPath + "bg.png", bounds: new hJ(new ct(-21364736, -11708041.66), new ct(23855104, 12474104.17)), imgExtend: "png" }, B_SATELLITE_MAP: { tileUrls: ["//maponline0.bdimg.com/starpic/?qt=satepc&", "//maponline1.bdimg.com/starpic/?qt=satepc&", "//maponline2.bdimg.com/starpic/?qt=satepc&", "//maponline3.bdimg.com/starpic/?qt=satepc&"], tileSize: 256, baseUnits: 256, zoomLevelMin: 3, zoomLevelMax: 19, minDataZoom: 3, maxDataZoom: 19, minZoom: 3, maxZoom: 19, zoomLevelBase: 18, errorUrl: B.imgPath + "bg.png", bounds: new hJ(new ct(-21364736, -10616832), new ct(23855104, 15859712)), imgExtend: "png" }, B_STREET_MAP: { tileUrls: dq(B.tileDomain, B.rasterTilePath), tileSize: 256, baseUnits: 256, zoomLevelMin: 3, zoomLevelMax: 19, minDataZoom: 3, maxDataZoom: 19, minZoom: 3, maxZoom: 19, zoomLevelBase: 18, errorUrl: B.imgPath + "bg.png", bounds: new hJ(new ct(-21364736, -10616832), new ct(23855104, 15859712)), imgExtend: "png" }, BMAP_CUSTOM_LAYER: { tileUrls: [""], tileSize: 256, baseUnits: 256, zoomLevelMin: 1, zoomLevelMax: 19, minDataZoom: 3, maxDataZoom: 19, minZoom: 3, maxZoom: 19, zoomLevelBase: 18, errorUrl: B.imgPath + "blank.gif", bounds: new hJ(new ct(-21364736, -10616832), new ct(23855104, 15859712)), imgExtend: "png" }, B_EARTH_MAP: { tileUrls: [""], tileSize: 256, baseUnits: 256, zoomLevelMin: 3, zoomLevelMax: 19, minDataZoom: 3, maxDataZoom: 19, minZoom: 3, maxZoom: 19, webgl: { minZoom: 3, maxZoom: 21 }, zoomLevelBase: 18, errorUrl: B.imgPath + "blank.gif", bounds: new hJ(new ct(-21364736, -10616832), new ct(23855104, 15859712)), imgExtend: "png" }, B_NONE_MAP: { tileUrls: "", tileSize: 256, baseUnits: 256, zoomLevelMin: 3, zoomLevelMax: 19, minDataZoom: 3, maxDataZoom: 19, minZoom: 3, maxZoom: 19, zoomLevelBase: 18, errorUrl: B.imgPath + "bg.png", bounds: new hJ(new ct(-21364736, -11708041.66), new ct(23855104, 12474104.17)), imgExtend: "png" } }; var ea = jL; function cG(jW, jX, T, e, jV) { if (jV && ea[jV]) { this.mapTypeName = jV } else { this.mapTypeName = BMAP_NORMAL_MAP } if (jW && jW instanceof Array) { var jU = true; for (var jT = 0; jT < jW.length; jT++) { if (jW[jT] instanceof hJ) { continue } else { jU = false; break } } jU && (this.bounds = jW) } if (typeof jX === "number" && jX >= ea[this.mapTypeName].webgl.minZoom) { if (ea[this.mapTypeName].webgl) { if (jX >= ea[this.mapTypeName].webgl.minZoom) { this.minZoom = jX } else { this.minZoom = ea[this.mapTypeName].webgl.minZoom } } else { if (jX >= ea[this.mapTypeName].minZoom) { this.minZoom = jX } else { this.minZoom = ea[this.mapTypeName].minZoom } } } if (typeof T === "number") { if (ea[this.mapTypeName].webgl) { if (T <= ea[this.mapTypeName].webgl.maxZoom) { this.maxZoom = T } else { this.maxZoom = ea[this.mapTypeName].webgl.maxZoom } } else { if (T <= ea[this.mapTypeName].maxZoom) { this.maxZoom = T } else { this.maxZoom = ea[this.mapTypeName].maxZoom } } } if (this.maxZoom < this.minZoom) { this.maxZoom = null } if (e && typeof e === "function") { this.tileUrlFunction = e } } eN.extend(cG.prototype, { addBoundary: function (e) { if (e instanceof hJ) { if (this.bounds) { this.bounds.push(e) } else { this.bounds = [e] } } }, setTileUrlFunction: function (e) { if (e && typeof e === "function") { this.tileUrlFunction = e } }, crossPoint: function (e, jT, jU) { if (jU < this.minZoom || jU > this.maxZoom) { return false } var jV = this.containsPoint(e, jU); if (jV) { return jV } for (var T = 0; T < this.bounds.length; T++) { if (this.bounds[T].intersects(jT)) { jV = true; break } } return jV }, containsPoint: function (e, jT) { if (!e || !(e instanceof ct) || !this.isValid()) { return false } var jU = false; if (jT < this.minZoom || jT > this.maxZoom) { return jU } for (var T = 0; T < this.bounds.length; T++) { if (this.bounds[T].containsPoint(e)) { jU = true; break } } return jU }, isValid: function () { return this.bounds && this.minZoom && this.maxZoom && this.tileUrlFunction }, toString: function () { return "PrivateRegionDataModel" } }); function hu(jY, i, jU, T, jT) { this.mgr = jY; this.position = jU; this._cbks = []; this.name = jY.getTileName(T, jT, jY.map.config.style); this.info = T; this._transparentPng = jT.isTransparentPng(); var jZ = bU("img"); hL(jZ); jZ.galleryImg = false; var jX = jZ.style; jX.position = "absolute"; jX.width = jY.tileSize + "px"; jX.height = jY.tileSize + "px"; jX.left = jU[0] + "px"; jX.top = jU[1] + "px"; this.img = jZ; this.src = i; if (es && jU._offsetX === 0) { jX.opacity = 0; jX.willChange = "opacity" } var jW = this; this.img.onload = function (j7) { if (!jW.mgr) { return } var j2 = jW.mgr; var j0 = j2.bufferTiles; if (j2.bufferNumber > 0) { j0[jW.name] = jW; j0.push(jW.name) } var j4 = j0.length - j2.bufferNumber; for (var j5 = 0; j4 > 0 && j5 < j0.length; j5++) { var j6 = j0[j5]; if (!j2.mapTiles[j6]) { if (j0[j6]) { j0[j6].mgr = null; var j3 = j0[j6].img; if (j3.parentNode) { h6(j3); j3.parentNode.removeChild(j3) } j3 = null; j0[j6].img = null; j0[j6] = null; delete j0[j6] } j0.splice(j5, 1); j5--; j4-- } } jW.loaded = true; j2.imgNumber++; if (!aR(jW.img)) { if (jT.tilesDiv) { jT.tilesDiv.appendChild(jW.img) } } var j7 = new fy("onimagechange"); j7.action = "show"; j7.tile = jW.name; j2.map.dispatchEvent(j7); if (es && jU._offsetX === 0) { var j1 = new fo({ fps: 10, duration: 300, render: function (e) { if (jW.img && jW.img.style) { jW.img.style.opacity = e * 1 } }, finish: function () { if (jW.img && jW.img.style) { delete jW.img.style.opacity; jW.img.style.willChange = "auto" } } }) } jW._callCbks() }; this.img.onerror = function (j2) { jW.error = true; jW._callCbks(); if (!jW.mgr) { return } var j0 = jW.mgr; var j1 = ea[jT.mapType]; if (j1.errorUrl) { jW.img.src = j1.errorUrl } if (!aR(jW.img)) { if (jT.tilesDiv) { jT.tilesDiv.appendChild(jW.img) } } }; jZ = null; var jV = new fy("onimagebefore"); jV.tile = jW.name; jY.map.dispatchEvent(jV) } hu.prototype._addLoadCbk = function (e) { this._cbks.push(e) }; hu.prototype._load = function () { if (FeBrowser.ie <= 6 && FeBrowser.ie > 0 && this._transparentPng) { this.img.src = B.imgPath + "blank.gif" } else { this.img.src = this.src } }; hu.prototype._callCbks = function () { var T = this; for (var e = 0; e < T._cbks.length; e++) { T._cbks[e]() } T._cbks.length = 0 }; var es = (!eN.Browser.ie || eN.Browser.ie > 8); function i0(e) { this.tileLayers = []; this.map = e; this.bufferNumber = 300; this.mapTiles = []; this.bufferTiles = []; this.config = ea[this.map.mapType]; this.errorUrl = this.config.errorUrl; this.tileSize = this.config.tileSize; this.baseUnits = this.config.baseUnits; this.baseZoomLevel = this.config.zoomLevelBase; this.tileURLs = this.config.tileUrls; this.imgNumber = 0; this.numLoading = 0; this.temp = {} } bw.register(function (i) { if (i._renderType === "webgl") { return } var e = i.tileMgr = new i0(i); i.addEventListener("mousewheel", function (T) { e.mouseWheel(T) }); i.addEventListener("dblclick", function (T) { e.dblClick(T) }); i.addEventListener("rightdblclick", function (T) { e.dblClick(T) }); i.addEventListener("minuspress", function (T) { e.keypress(T) }); i.addEventListener("pluspress", function (T) { e.keypress(T) }); i.addEventListener("load", function (T) { if (this.mapType === BMAP_EARTH_MAP) { return } e.loadTiles() }); i.addEventListener("zoomstartcode", function (T) { if (this.mapType === BMAP_EARTH_MAP) { return } e._zoom(T) }); i.addEventListener("moving", function (T) { if (this.mapType === BMAP_EARTH_MAP) { return } e.moveGridTiles() }); i.addEventListener("resize", function (T) { if (this.mapType === BMAP_EARTH_MAP) { return } e.resizeMap(T) }); i.addEventListener("addtilelayer", function (T) { e.addTileLayer(T) }); i.addEventListener("removetilelayer", function (T) { e.removeTileLayer(T) }) }); eN.extend(i0.prototype, { addTileLayer: function (jT) { var T = this; var i = jT.target; T.tileLayers.push(i); if (T.map.loaded) { T.moveGridTiles() } }, removeTileLayer: function (j0) { var j1 = this; var jY = j0.target; var jW = jY.mapType; var jV = j1.mapTiles; var j3 = j1.bufferTiles; for (var T in j3) { var jT = T.split("-")[1]; if (jT == jW) { delete j3[T] } } for (var T in jV) { var jT = T.split("-")[1]; if (jT == jW) { delete jV[T] } } if (j1.zoomsDiv && j1.zoomsDiv.parentNode) { j1.zoomsDiv.parentNode.removeChild(j1.zoomsDiv); j1.zoomsDiv.innerHTML = "" } var jU = j1.map; if (jU.deepZoom) { var j2 = jU.deepZoom.preDeepZoomDiv; if (j2 && j2.parentNode) { j2.parentNode.removeChild(j2) } } for (var jZ = 0, jX = j1.tileLayers.length; jZ < jX; jZ++) { if (jY == j1.tileLayers[jZ]) { j1.tileLayers.splice(jZ, 1) } } j1.moveGridTiles() }, hideDeepZoomDiv: function () { var i = this, T = i.map; if (T.deepZoom) { var e = T.deepZoom.preDeepZoomDiv; if (e && e.style.display != "none") { e.style.display = "none" } } }, getTileLayer: function (jU) { var jT = this; for (var T = 0, e = jT.tileLayers.length; T < e; T++) { tilelayer = jT.tileLayers[T]; if (tilelayer.mapType == jU) { return tilelayer } } return null }, _zoom: function (T) { var i = this; if (i.zoomsDiv && i.zoomsDiv.style.display != "none") { i.zoomsDiv.style.display = "none" } i.hideDeepZoomDiv(); i.moveGridTiles() }, resizeMap: function (i) { this.loaded = false; this.moveGridTiles() }, _checkTilesLoaded: function () { this.numLoading--; var e = this; if (this.numLoading == 0) { if (this._checkLoadedTimer) { clearTimeout(this._checkLoadedTimer); this._checkLoadedTimer = null } this._checkLoadedTimer = setTimeout(function () { if (e.numLoading == 0) { e.map.dispatchEvent(new fy("ontilesloaded")) } e._checkLoadedTimer = null }, 80) } }, getTileName: function (e, T, i) { var jU = T.mapType; var jT = "TILE-" + jU + "-" + i + "-" + e[0] + "-" + e[1] + "-" + e[2]; return jT }, hideTile: function (jT, T) { var i = jT.img; if (aR(i)) { if (jT.loaded) { this.imgNumber-- } if (i.parentNode) { h6(i); i.parentNode.removeChild(i) } } var jU = new fy("onimagechange"); jU.tile = this.getTileName(jT.info, T, this.map.config.style); jU.action = "hide"; delete this.mapTiles[jT.name]; if (!jT.loaded) { h6(i); jT._callCbks(); i = null; jT.img = null; jT.mgr = null } this.map.dispatchEvent(jU) }, loadTiles: function () { var i = this; if (eN.Browser.ie) { try { document.execCommand("BackgroundImageCache", false, true) } catch (T) { } } if (this.zoomsDiv && this.zoomsDiv.style.display != "none") { this.zoomsDiv.style.display = "none" } i.hideDeepZoomDiv(); i.moveGridTiles() }, getCell: function (jU, jT) { var e = this.baseUnits * Math.pow(2, (this.baseZoomLevel - jT)); var T = parseInt(jU.lng / e); var i = parseInt(jU.lat / e); return [T, i, e * (T + 0.5), e * (i + 0.5)] }, moveGridTiles: function () { var j7 = this.map, kg = j7.getMapType(), ke = this.tileLayers.length; var kc = j7.centerPoint; if (kg !== BMAP_SATELLITE_MAP) { kc = eQ.calcLoopCenterPoint(kc) } var jY = j7.width; var ks = j7.getZoomUnits(); var kd = ks * jY; var ki = kc.lng - kd / 2; var j3 = kc.lng + kd / 2; var j6 = eQ.isAddWidth(ki, j3); for (var kk = 0; kk < ke; kk++) { var jU = this.tileLayers[kk]; if (jU.baseLayer || ke == 1) { this.tilesDiv = jU.tilesDiv } var j8 = ea[jU.mapType]; var jT = j7.zoomLevel; var kn = j7.getZoomUnits(j7.zoomLevel); var j2 = j8.baseUnits * Math.pow(2, (j8.zoomLevelBase - jT)); var j0 = Math.floor(kc.lng / j2); var kj = Math.floor(kc.lat / j2); var j5 = j8.tileSize; var j9 = [j0, kj, (kc.lng - j0 * j2) / j2 * j5, (kc.lat - kj * j2) / j2 * j5]; var j1 = j6 ? j7.width / 2 * 1.5 : j7.width / 2; var j4 = j9[0] - Math.ceil((j1 - j9[2]) / j5); var kr = j9[1] - Math.ceil((j7.height / 2 - j9[3]) / j5); var kl = j9[0] + Math.ceil((j1 + j9[2]) / j5); var ka = j9[1] + Math.ceil((j7.height / 2 + j9[3]) / j5); var jZ = []; for (var kp = j4; kp < kl; kp++) { for (var ko = kr; ko < ka; ko++) { jZ.push([kp, ko]); var kf = "id_" + kp + "_" + ko + "_" + jT; jZ[kf] = true } } if (jU.mapType !== BMAP_SATELLITE_MAP) { jZ = eQ.calcLoopTiles(jZ, jT) } jZ.sort((function (i) { return function (ku, kv) { return ((0.4 * Math.abs(ku[0] - i[0]) + 0.6 * Math.abs(ku[1] - i[1])) - (0.4 * Math.abs(kv[0] - i[0]) + 0.6 * Math.abs(kv[1] - i[1]))) } })([j9[0], j9[1]])); var T = this.mapTiles; var e = -kc.lng / kn; var kt = kc.lat / kn; var kh = [e, kt]; for (var kb in T) { var jW = T[kb]; var kq = jW.info; if (!kq) { continue } var kf = "id_" + kq[0] + "_" + kq[1] + "_" + kq[2]; if (!jZ[kf]) { this.hideTile(jW, jU) } } var jV = -j7.offsetX + j7.width / 2; var jX = -j7.offsetY + j7.height / 2; jU.tilesDiv.style.left = Math.round(e + jV) - kh[0] + "px"; jU.tilesDiv.style.top = Math.round(kt + jX) - kh[1] + "px"; this.numLoading += jZ.length; for (var kp = 0, km = jZ.length; kp < km; kp++) { this.showTile([jZ[kp][0], jZ[kp][1], j7.zoomLevel], kh, jU, kp, j7.config.style) } } }, showTile: function (jW, jV, jZ, j4) { this.centerPos = jV; var jX = ea[jZ.mapType]; var j0 = this.map.config.style; var jT = this.getTileName(jW, jZ, j0); var jU = (jW[0] * jX.tileSize) + jV[0]; var T = (-1 - jW[1]) * jX.tileSize + jV[1]; var j3 = [jU, T]; var jY = null; if (jZ.mapType !== BMAP_SATELLITE_MAP) { jY = eQ.calcLoopParam(jW[0], jW[2]); var j2 = jY.offsetX; j3[0] += j2; j3._offsetX = j2 } var j7 = this; var j6 = this.mapTiles[jT]; if (j6) { j6.img.style.left = j3[0] + "px"; j6.img.style.top = j3[1] + "px"; if (j6.loaded) { this._checkTilesLoaded() } else { j6._addLoadCbk(function () { j7._checkTilesLoaded() }) } return } j6 = this.bufferTiles[jT]; if (j6) { this.imgNumber++; jZ.tilesDiv.insertBefore(j6.img, jZ.tilesDiv.lastChild); this.mapTiles[jT] = j6; j6.img.style.left = j3[0] + "px"; j6.img.style.top = j3[1] + "px"; if (j6.loaded) { this._checkTilesLoaded() } else { j6._addLoadCbk(function () { j7._checkTilesLoaded() }) } var j5 = new fy("onimagechange"); j5.action = "cache"; j5.tile = this.getTileName(jW, jZ, j0); this.map.dispatchEvent(j5) } else { var j1 = new e8(jW[0], jW[1]); if (jY) { j1.x = jY.col } var i = jZ.getTilesUrl(j1, jW[2]); j6 = new hu(this, i, j3, jW, jZ); j6._addLoadCbk(function () { j7._checkTilesLoaded() }); j6._load(); this.mapTiles[jT] = j6; g1(this.map) } }, mouseWheel: function (jX) { var jW = this.map; if (!jW.config.enableWheelZoom) { return } var jY = jW.zoomLevel + (jX.trend === true ? 1 : -1); var jU = jW._getProperZoom(jY); if (jU.exceeded) { var T = new fy("onzoomexceeded"); T.targetZoom = jY; jW.dispatchEvent(T); return } jW.dispatchEvent(new fy("onzoomstart")); jW.lastLevel = jW.zoomLevel; jW.zoomLevel = jU.zoom; var i = jX.pixel; var jT = jW.pixelToPointIn(i, { zoom: jW.lastLevel }); var jV = jW.getZoomUnits(jW.zoomLevel); jW.centerPoint = new ct(jT.lng + jV * (jW.width / 2 - i.x), jT.lat - jV * (jW.height / 2 - i.y)); this.zoom(i) }, dblClick: function (T) { var i = this.map; if (!i.config.enableDblclickZoom) { return } if (i.mapType === "B_EARTH_MAP") { return } if (i.currentOperation === d4.dragging) { return } if (T.type == "onrightdblclick") { i.zoomOut(T.point) } else { i.zoomIn(T.point) } }, keypress: function (T) { var i = this.map; if (i.getMapType() === BMAP_EARTH_MAP) { return } T.type == "onpluspress" ? i.zoomIn() : i.zoomOut() } }); function hg(jT) { this.opts = jT || {}; this.copyright = this.opts.copyright || {}; this.transparentPng = this.opts.transparentPng || false; this.png8 = this.opts.png8 || false; this.baseLayer = this.opts.baseLayer || false; this.dataType = this.opts.dataType || 1; this.transform = this.opts.transform || 0; this.spanLevel = this.opts.spanLevel || 0; this.isFlat = !this.opts.isFlat ? false : true; this.showLabel = this.opts.showLabel === false ? false : true; var e = this.opts.tileTypeName || "web"; this.tileType = hK.getInstance(e); this.clipTile = this.opts.clipTile || false; this._type = "tilelayer"; var i = bT() ? 128 : 256; this.cacheSize = this.opts.cacheSize || i; var T = this; this.tileCache = new ay(this.cacheSize, { clearCallback: function (jU) { if (jU.label) { if (jU.label.textImageBitmap) { jU.label.textImageBitmap.close() } if (jU.label.indoorTextImageBitmap) { jU.label.indoorTextImageBitmap.close() } } T._removeIndoorData(jU) } }); this.scaler = f1() >= 1.5 ? 2 : 1; this.normalUdt = jw("ditu", "normal").udt; this.numLoading = 0; this.useThumbData = false; this.useThumbData = this.opts.useThumbData || false; if (this.baseLayer) { this.useThumbData = true } if (typeof this.opts.customLayer === "boolean") { this.customLayer = this.opts.customLayer } else { this.customLayer = true } } hg.inherits(c1, "TileLayer"); eN.extend(hg.prototype, { isTransparentPng: function () { return this.transparentPng }, getTilesUrl: function (j0, e) { var T = ea[this.mapType]; if (typeof T !== "object") { return null } var jT = j0.x; var j1 = j0.y; if (this.mapType !== BMAP_SATELLITE_MAP) { var j1 = eQ.calcLoopParam(j1, e).col } var i = ""; if (this.opts.tileUrlTemplate) { i = this.opts.tileUrlTemplate; i = i.replace(/\{X\}/, j1); i = i.replace(/\{Y\}/, jT); i = i.replace(/\{Z\}/, e) } else { if (this.mapType === BMAPGL_NORMAL_MAP) { var jZ = this.isCanvasMap ? 0 : 1; var jV = T.tileUrls[Math.abs(j1 + jT) % T.tileUrls.length]; if (window.offLineIPAddress) { jV = window.offLineIPAddress + "tile5/" } var jU = this.map.config.style; i = jV + "?qt=vtile&x=" + jT + "&y=" + j1 + "&z=" + e + (jU === "default" ? "" : ("&styleId=1")) + "&styles=pl&udt=" + this.normalUdt + "&scaler=" + this.scaler + "&showtext=" + jZ; i = i.replace(/-(\d+)/gi, "M$1") } if (this.mapType === BMAP_SATELLITE_MAP) { var jW = jw("ditu", "satellite"); var jY = jW.ver; var jX = jW.udt; i = T.tileUrls[Math.abs(j1 + jT) % T.tileUrls.length] + "u=x=" + jT + ";y=" + j1 + ";z=" + e + ";v=" + jY + ";type=sate&fm=46&udt=" + jX; i = i.replace(/-(\d+)/gi, "M$1") } } return i }, initialize: function (jW) { this.map = jW; if (jW._renderType === "webgl") { var jV = null; if (this.customLayer !== false) { jV = this.getTilesUrl } eN.extend(this, e4); this.labelProcessor = new iU(this); this.callbackDataQueue = []; if (jV) { this.getTilesUrl = jV } var T = this; jW.on("indoor_data_refresh", function (jX) { if (!T.baseLayer) { return } T._refreshIndoorData(jX.uid, jX.floor) }); jW.on("custom_labels_ready", function (jX) { if (!T.baseLayer && jX.model === "custom") { return } if ((jX.model === "custom" && T.drawIndex === 0) || jX.model === "mvt_" + T.drawIndex) { T._doWorkAfterLabelImageLoad(jX.virtualTile, jX.labelCanvas, null, jX.imgKey) } }); jW.on("glmoduleloaded", function () { if (!T.baseLayer) { return } T.updateAllIconsTextureCoords() }); jW.on("layer_update", function (jY) { if (T.dataType === 2 && jW.customLoaded) { T.clearCache(); var jX = new fy("onlayer_clear"); jW.fire(jX) } }); if (this.ontology && this.ontology._initEvent) { this.ontology._initEvent(jW) } } if (!jW.temp.layerZIndex) { jW.temp.layerZIndex = 0 } this.zIndex = this.zIndex || 0; if (jW.getRenderType() === "dom") { this.zIndex = jW.tileMgr.tileLayers.length } else { if (this.baseLayer) { this.zIndex = 0 } else { if (this.zIndex > 0) { this.adjustZIndex() } else { var e = jW._featureMgr.result.bkData; this.zIndex = e.length || 1 } } } if (!jW.temp.layid) { jW.temp.layid = 0 } if (!this.opts.mapType) { this.mapType = "BMAP_CUSTOM_LAYER_" + jW.temp.layid; jW.temp.layid++ } else { this.mapType = this.opts.mapType } var jT = ea[this.mapType]; if (!jT) { ea[this.mapType] = { tileUrls: [], tileSize: 256, baseUnits: 256, zoomLevelMin: 1, zoomLevelMax: 19, minZoom: 3, maxZoom: 19, minDataZoom: 3, maxDataZoom: 19, zoomLevelBase: 18, errorUrl: B.imgPath + "/blank.gif", bounds: new hJ(new ct(-21364736, -10616832), new ct(23855104, 15859712)), imgExtend: "png" } } if (jW._renderType !== "webgl") { var jU = bI(jW.platform, '<div style="position:absolute;z-index:' + this.zIndex + '"></div>'); jU.style.display = ""; jU.style.left = Math.ceil(-jW.offsetX + jW.width / 2) + "px"; jU.style.top = Math.ceil(-jW.offsetY + jW.height / 2) + "px"; this.tilesDiv = jU } this.isCanvasMap = jW.isCanvasMap(); this.lastZoom = jW.getZoom(); var i = this; this.addEventListener("initDrawData", function (jX) { if (i.opts.boundary) { i.addBoundary(i.opts.boundary) } }); jW.on("destroy", function () { i.destroy() }) }, clearCache: function () { this.tileCache.clear(); this.map._featureMgr.clearData(this.drawIndex); this.map._featureMgr.setLabelData([], this.drawIndex); this.map._featureMgr.clearLabelOverlayData(this.drawIndex); this.labelProcessor.iconCache.clear() }, remove: function () { if (this.tilesDiv && this.tilesDiv.parentNode) { this.tilesDiv.innerHTML = ""; this.tilesDiv.parentNode.removeChild(this.tilesDiv) } delete this.tilesDiv }, getCopyright: function () { return this.copyright }, getMapType: function () { return this.mapType }, adjustZIndex: function () { if (this.map && this.map._featureMgr) { var e = this.map._featureMgr.result.bkData; while (e[this.zIndex]) { this.zIndex += 1 } } }, _getAdjoinZIndex: function (jU) { var T = this.zIndex; if (this.map && this.map._featureMgr) { var e = this.map._featureMgr.result.bkData; if (jU === "up") { for (var jT = this.zIndex + 1; jT < e.length; jT++) { if (e[jT]) { T = jT + 1; break } } } else { for (var jT = this.zIndex - 1; jT > 0; jT--) { if (e[jT]) { T = jT; break } } } } return T }, setZIndex: function (e) { this.setTargetZIndex(e) }, setTargetZIndex: function (e) { this.removeLabel && this.removeLabel(this.zIndex); this.zIndex = e; this.drawIndex = e; if (this.tilesDiv) { this.tilesDiv.style.zIndex = e } }, calcLoopParam: function (e, i) { return eQ.calcLoopParam(e, i) }, addBoundary: function (jV) { if (!jV || !this.map) { return } if (typeof jV === "string") { jV = [jV] } for (var jT = 0; jT < jV.length; jT++) { var T = new BMapGL.Polygon(jV[jT]); if (T && bP(T._i)) { var jU = new fy("onbeforeaddoverlay", T); jU.overlay = T; jU.isLayerMask = true; this.map.dispatchEvent(jU); T._i(this.map); if (this.boundary) { this.boundary.push(T) } else { this.boundary = [T] } } } this.updateBoundary() }, clearBoundary: function () { this.boundary = false; this.updateBoundary() }, updateBoundary: function () { if (this.boundary === undefined || !this.map) { return } var i = this.map._featureMgr.result.bkData; if (i[this.zIndex]) { i[this.zIndex].boundary = this.boundary; this.map.dispatchEvent(new fy("onrefresh")); if (this.boundary === false) { var T = new fy("onremoveLayerMask"); T.hasLayerBoundary = this.map._featureMgr.hasLayerBoundary(); this.map.dispatchEvent(T) } } }, destroy: function () { this.copyright = null; this.clearCache() } }); function m(i, e, T) { this.bounds = i; this.content = e; this.mapType = T } m.inherits(c1, "Copyright"); var eg = { get: function (e) { if (!eg.singleton) { eg.singleton = new fS(e) } return eg.singleton } }; function fS(i) { this._map = i; this._tileMgr = i.tileMgr; this._animationDiv = null; this._preAnimationDiv = null; this._animation = null; this._baseLayerDiv = null; this._transformStyleName = cZ.ifSupportCSS3("transform", true); this._transformOriginStyleName = cZ.ifSupportCSS3("transformOrigin", true); this._preZoomTimes = 1; this._preRenderTick = 1; this._enableCanvas2dMap = !!(i.getRenderType() === "canvas"); this._isIE9 = !!(eN.Browser.ie === 9); var e = this; i.addEventListener("maptypechange", function () { e.hide() }); i.addEventListener("load", function () { e.hide() }) } eN.extend(fS.prototype, { prepareLayer: function () { var jT = this._map; var e = this._tileMgr; this._canvas2dMapMgr = jT.canvas2dMapMgr; var T = this._baseLayerDiv = e.tilesDiv; if (!this._animationDiv) { var i = this._preAnimationDiv; if (i) { i.parentNode && i.parentNode.removeChild(i); this._preAnimationDiv = null } this._preAnimationDiv = this._animationDiv = T.cloneNode(true); jT.platform.insertBefore(this._animationDiv, jT.platform.firstChild) } this.show() }, prepareAniParam: function () { var jT = this._animationDiv; if (!jT) { return } var e = jT.children.length; var T; this._zoomAniInfo = []; for (var jU = e - 1; jU > -1; jU--) { var jV = {}; T = jT.children[jU].style; jV.top = parseInt(T.top, 10); jV.left = parseInt(T.left, 10); this._zoomAniInfo[jU] = jV } }, prepareLabelLayer: function () { var jU = this._map; if (this._enableCanvas2dMap && jU.canvas2dMapMgr) { if (this.touchZoomLabelCanvas) { this.touchZoomLabelCanvas.parentNode.removeChild(this.touchZoomLabelCanvas) } var i = jU.canvas2dMapMgr._labelCanvas; this.touchZoomLabelCanvas = i.cloneNode(false); var e = this.touchZoomLabelCanvas.getContext("2d"); e.drawImage(i, 0, 0); jU.platform.insertBefore(this.touchZoomLabelCanvas, jU.platform.firstChild); var jT = parseInt(i.style.left, 10); var T = parseInt(i.style.top, 10); this.touchZoomLabelCanvas.style.zIndex = 9; this.touchZoomLabelCanvas.style[this._transformOriginStyleName] = (this._fixPosition.x - (jU.offsetX + jT)) + "px " + (this._fixPosition.y - (jU.offsetY + T)) + "px"; i.style.visibility = "hidden" } }, show: function () { if (this._animationDiv) { this._animationDiv.style.visibility = "" } }, showLabel: function () { var i = this._map; if (this._enableCanvas2dMap && i.canvas2dMapMgr) { var e = i.canvas2dMapMgr._labelCanvas; if (e) { e.style.visibility = "" } if (this.touchZoomLabelCanvas) { this.touchZoomLabelCanvas.style.zIndex = -2; this.touchZoomLabelCanvas.style.visibility = "hidden" } } }, hide: function () { if (this._animationDiv) { this._animationDiv.style.visibility = "hidden" } if (this._preAnimationDiv) { this._preAnimationDiv.style.visibility = "hidden" } }, hideNonAnimationLayers: function () { var jT = this._map; if (jT.getRenderType() === "dom") { if (jT.overlayDiv) { jT.overlayDiv.style.visibility = "hidden" } if (jT.overlayDivEx) { jT.overlayDivEx.style.visibility = "hidden" } } var jV = jT.tileMgr.tileLayers; var jU; for (var T = 0, e = jV.length; T < e; T++) { jU = jV[T]; jU.tilesDiv.style.visibility = "hidden" } }, showNonAnimationLayers: function () { var jT = this._map; if (jT.getRenderType() === "dom") { if (jT.overlayDiv) { jT.overlayDiv.style.visibility = "" } if (jT.overlayDivEx) { jT.overlayDivEx.style.visibility = "" } } var jV = jT.tileMgr.tileLayers; var jU; for (var T = 0, e = jV.length; T < e; T++) { jU = jV[T]; jU.tilesDiv.style.visibility = "" } }, setFixPosition: function (e) { this._fixPosition = e }, setZoom: function (e, jZ) { var jW = this._fixPosition; var j5 = this._map; var j6 = this._baseLayerDiv; var jX = { x: jW.x - parseInt(j6.style.left, 10) - j5.offsetX, y: jW.y - parseInt(j6.style.top, 10) - j5.offsetY }; var jT = this._animationDiv; if (!jT) { return } var j3 = jT.children.length; var j1; var j4 = this._transformStyleName; var jV = this._transformOriginStyleName; var j7 = this; var j9; var jY; for (var j2 = j3 - 1; j2 > -1; j2--) { var j0 = this._zoomAniInfo[j2]; j1 = jT.children[j2].style; var jU = j0.left - jX.x; var T = j0.top - jX.y; j0.dx = jU * e - jU; j0.dy = T * e - T; j0.preDx = jU - jU; j0.preDy = T - T; j9 = j0.preDx + (j0.dx - j0.preDx); jY = j0.preDy + (j0.dy - j0.preDy) + jZ; j1.left = j0.left + j9 + "px"; j1.top = j0.top + jY + "px"; j1.width = j1.height = 256 * e + "px" } if (this._enableCanvas2dMap) { var j8 = !j7._isIE9 ? "translate3d(0px, " + jZ + "px, 0) scale(" + e + ")" : "translate(0px, " + jZ + "px) scale(" + e + ")"; this.touchZoomLabelCanvas.style[j4] = j8 } }, setZoomFinish: function () { this._animationDiv = null }, startAnimation: function (jW) { this.prepareLayer(); this.hideNonAnimationLayers(); var kf = this._map; if (this.touchZoomLabelCanvas) { this.touchZoomLabelCanvas.style.display = "none" } jW = jW || {}; var kd = jW.zoomCount || 0; var j1 = jW.fixPosition; var kb = jW.fixMCPosition; var jZ = jW.pixOffset; this._zoomCount = kd; var jT = kf.getZoom(); var ke = jT + kd; var e = kf.config.enableContinuousZoom; var j5 = 0.5; var j0 = 5; var T = Math.pow(2, kd); var kh = this._baseLayerDiv; var j2 = { x: j1.x - parseInt(kh.style.left, 10) - kf.offsetX, y: j1.y - parseInt(kh.style.top, 10) - kf.offsetY }; var jX = this._animationDiv; var j9 = jX.children.length; var kj = this._preZoomTimes; var kc = []; var ka = this._transformStyleName; var jY = this._transformOriginStyleName; for (var j8 = j9 - 1; j8 > -1; j8--) { var j6 = {}; var j7 = jX.children[j8].style; j6.top = parseInt(j7.top, 10); j6.left = parseInt(j7.left, 10); var jV = j6.left - j2.x; var jU = j6.top - j2.y; j6.dx = jV * T - jV; j6.dy = jU * T - jU; j6.preDx = jV * kj - jV; j6.preDy = jU * kj - jU; kc[j8] = j6 } var kg = this; var j4; var ki; var j3; this._zoomAni = new fo({ fps: 60, duration: e ? 500 : 1, transition: function (i) { i = i * j0 / (2 * j5); return j0 * i - j5 * i * i }, render: function (ks) { ks = ks * (4 * j5) / (j0 * j0); j4 = kj + ks * (T - kj); var kl = jT + p(j4); var kq = null; var kp = 0; var kt = 0; if (jW.onAnimationBeforeLooping) { var ku = jW.onAnimationBeforeLooping(ks, kl); kq = ku.loopingCenter; kp = ku.yDiff; kt = ku.totalYDiff } for (var km = kc.length - 1; km > -1; km--) { var kn = kc[km]; if (jX.children[km]) { var kr = jX.children[km].style; ki = kn.preDx + (kn.dx - kn.preDx) * ks - jZ.width * ks; j3 = kn.preDy + (kn.dy - kn.preDy) * ks - jZ.height * ks + kp; kr.left = kn.left + ki + "px"; kr.top = kn.top + j3 + "px"; kr.height = kr.width = 256 * j4 + "px" } } var kk = jZ.width * ks; var ko = jZ.height * ks; if (kf.isRestrict) { kg._enableCanvas2dMap && kg._canvas2dMapMgr.clearLabel() } else { kg._enableCanvas2dMap && kg._canvas2dMapMgr.drawLabel(j4, j1, jT, ke, kd, ks, kk, ko, kt, kp) } kg._preZoomTimes = j4; kg._preRenderTick = ks; jW.onAnimationLooping && jW.onAnimationLooping(ks, kl, kq) }, finish: function () { kg._preZoomTimes = 1; kg._zoomAni = null; kg._animationDiv = null; jW.onAnimationFinish && jW.onAnimationFinish(); kg.showNonAnimationLayers() } }); return this._zoomAni }, stopAnimation: function () { if (this._zoomAni) { this._zoomAni.stop(); this._zoomAni = null } } }); function jQ(e) { this._initVars(e); this._initColorCanvas(); this._bindEvent(e) } eN.extend(jQ.prototype, { _initVars: function (e) { this._map = e._map; this._canvas2dMapMgr = e; this._labelCtx = e._labelCtx; this.ratio = this._map.config.ratio; this.sizeRatio = this.ratio > 1 ? 2 : 1; this.RANK1 = 1000000; this.RANK2 = 2000000; this.RANK3 = 3000000; this.RANK4 = 4000000; this.RANK5 = 5000000 }, _initColorCanvas: function () { var i = 256, T = bU("canvas"), e = T.style; e.width = i + "px"; e.height = i + "px"; T.width = i; T.height = i; this._colorCvsSize = i; this._colorCvs = T; this._colorCtx = T.getContext("2d") }, getLabelImageData: function (j6) { var j5 = j6.textImg; var T = j6.textPos; var j3 = this.ratio; var j1 = this.sizeRatio / j3; var jU = this._colorCtx; var jY = this._colorCvsSize; jU.clearRect(0, 0, jY, jY); var j0 = 0; var e = 0; var jX = 0; for (var jZ = 0; jZ < T.length; jZ++) { if (T[jZ].width > j0) { j0 = T[jZ].width; e = jZ; jX = T[jZ].drawX } } j0 /= j1; var j2 = 0; for (var jZ = 0, jW = T.length; jZ < jW; jZ++) { var j4 = T[jZ]; var j7; if (jZ === e) { j7 = 0 } else { j7 = j4.drawX - jX } jU.drawImage(j5, j4.srcX, j4.srcY, j4.width, j4.height, j7, j2, j4.width / j1, j4.height / j1); if (j4.width / j1 > j0) { j0 = j4.width / j1 } j2 += j4.height / j1 + 2 * j3 } var jT = jU.getImageData(0, 0, j0, j2); var jV = jU.getImageData(0, 0, j0, j2); return [jT, jV] }, _bindEvent: function (i) { var e = this, T = i._map; T.addEventListener("onspotmouseover", function (jW) { if (!this.isCanvasMap() || !this.temp.isPermitSpotOver) { return } if (jW.spots.length > 0) { var jV = jW.spots[0].userdata.uid; var jU = jW.spots[0].userdata.name; var jT = e.findLabelByUid(jV, jU); jT && e._toHighLightColor(jT) } }); T.addEventListener("onspotmouseout", function (jW) { if (!this.isCanvasMap() || !this.temp.isPermitSpotOver) { return } if (jW.spots.length > 0) { var jV = jW.spots[0].userdata.uid; var jU = jW.spots[0].userdata.name; var jT = e.findLabelByUid(jV, jU); jT && e._toDefaultColor(jT) } }); T.addEventListener("onspotclick", function (jW) { if (!this.isCanvasMap() || !this.temp.isPermitSpotOver) { return } if (jW.spots && jW.spots.length > 0) { var jV = jW.spots[0].userdata.uid; var jU = jW.spots[0].userdata.name; var jT = e.findLabelByUid(jV, jU); jT && e._changeBaseMapState(jT) } else { e._recoverNormalState() } }); T.on("spot_status_reset", function () { e._recoverNormalState() }); T.on("spot_highlight", function (jU) { var jT = e.findLabelByUid(jU.uid); jT && e._changeBaseMapState(jT) }) }, _getTextBound: function (j4) { if (!j4.textPos) { return null } var j2 = this.ratio; var j0 = this.sizeRatio / j2; var T = j4.textPos; var j3 = j4.baseDrawX; var j1 = j4.baseDrawY; var jY = j3 * j2 + (T[0].drawX - j3) / j0; var jW = j1 * j2 + (T[0].drawY - j1) / j0; var jU = jY + T[0].width / j0; var e = jW + T[0].height / j0; for (var jZ = 0, jX = T.length; jZ < jX; jZ++) { var j5 = T[jZ]; var jV = j3 * j2 + (j5.drawX - j3) / j0; if (jV < jY) { jY = jV } var jT = j1 * j2 + (j5.drawY - j1) / j0; if (jT < jW) { jW = jT } if (jV + j5.width > jU) { jU = jV + j5.width } if (jT + j5.height > e) { e = jT + j5.height } } return [jY, jW, jU, e] }, _toHighLightColor: function (T) { if (T._tempRank && T._tempRank == this.RANK5) { return } var jX = this._getTextBound(T); if (!jX) { return } var jT = Math.round(jX[0]); var i = Math.round(jX[1]); var e = this.getLabelImageData(T); var jV = e[0]; var jU = e[1]; var jW = this._canvas2dMapMgr.getFilterImageData(jV, this.RANK5); T._oldImgData = jU; this._labelCtx.putImageData(jW, jT, i) }, _toDefaultColor: function (e) { if (e._tempRank && e._tempRank == this.RANK5) { return } if (e._oldImgData) { var i = this.sizeRatio; var T = this._getTextBound(e); if (!T) { return } this._labelCtx.putImageData(e._oldImgData, Math.round(T[0]), Math.round(T[1])); e._oldImgData = null } }, _changeBaseMapState: function (jT) { var T = this._canvas2dMapMgr; var i = jT.guid; var e = jT.guidExt; var jU = { guid: i, name: jT.name, guidExt: e }; T._labelStrategy.setStrategyInfo(jU); T._loadData() }, _recoverNormalState: function () { var e = this._canvas2dMapMgr; e._labelStrategy.setStrategyInfo(null); e._loadData() }, findLabelByUid: function (jV, jT) { var jX = this._canvas2dMapMgr, e = jX._computedLabel; for (var jU = 0, T = e.length; jU < T; jU++) { var jW = e[jU]; if (!jX.isClickableLabel(jW)) { continue } if (jV && jW.guid === jV) { return jW } if (jT && jW.name === jT) { return jW } } return null } }); function E(e) { this._initVars(e) } eN.extend(E.prototype, { _initVars: function (e) { this._map = e._map; this._canvas2dMapMgr = e; this.ratio = this._map.config.ratio; this._strategyInfo = null; this.RANK1 = 1000000; this.RANK2 = 2000000; this.RANK3 = 3000000; this.RANK4 = 4000000; this.RANK5 = 5000000 }, setStrategyInfo: function (e) { this._strategyInfo = e }, preComputeLabel: function (jZ, kQ, kz, kb, kK, k4) { var kt = [], j7 = jZ._centerX, j5 = jZ._centerY, k5 = kb * kK; var kF = this.ratio; var jY = this._map.getZoom(); var ko = 0; if (jY === 5) { ko = 4 } if (jY === 8) { ko = -6 } jZ.sort(function (k6, i) { if (k6.x * k6.y < i.x * i.y) { return -1 } else { return 1 } }); for (var kq = 0, km = jZ.length; kq < km; kq++) { var kV = jZ[kq], kh = kV.x, ke = kV.y, kc = kV.z; var kj = eQ.calcLoopParam(kh, kc).offsetX; var kD = kh * k5, kC = (ke + 1) * k5, jT = (kD - j7) / kb + kQ / 2 + kj, T = (j5 - kC) / kb + kz / 2; for (var kn = 0, kZ = kV.length; kn < kZ; kn++) { var j1 = kV[kn], j8 = undefined, j6 = undefined, kX = undefined, kW = undefined; var kM = j1.baseDrawX = jT + j1.baseX; var kL = j1.baseDrawY = T + j1.baseY; if (j1.type == "fixed") { var kx = j1.iconPos, ka = j1.textPos, k1 = j1.textImg; if (kx) { kx.drawX = jT + kx.destX; kx.drawY = T + kx.destY; j8 = kx.drawX; j6 = kx.drawY; kX = kx.drawX + kx.width; kW = kx.drawY + kx.height } if (ka && k1) { for (var kN = 0; kN < ka.length; kN++) { var k0 = ka[kN]; k0.drawX = jT + k0.destX; k0.drawY = T + k0.destY; if (!j8) { j8 = k0.drawX; j6 = k0.drawY; kX = k0.drawX + k0.width; kW = k0.drawY + k0.height } else { if (k0.drawX < j8) { j8 = k0.drawX } if (k0.drawY < j6) { j6 = k0.drawY } if (k0.drawX + k0.width > kX) { kX = k0.drawX + k0.width } if (k0.drawY + k0.height > kW) { kW = k0.drawY + k0.height } } } } } else { j1.tileX = jT; j1.tileY = T; j8 = jT + j1.minXOriginal; j6 = T + j1.minYOriginal; kX = jT + j1.maxXOriginal; kW = T + j1.maxYOriginal } if (j8 != undefined) { var kP = kM + (j8 - kM) / kF; var kO = kL + (j6 - kL) / kF; var kr = kM + (kX - kM) / kF; var kp = kL + (kW - kL) / kF; j1.minX = kP; j1.minY = kO; j1.maxX = kr; j1.maxY = kp; var kT = (kP + kr) / 2, kS = (kO + kp) / 2, kA = j7 + (kT - kQ / 2) * kb, ky = j5 + (kz / 2 - kS) * kb; j1.geoX = kA; j1.geoY = ky; kt.push(j1) } } } if (k4) { for (var kq = 0, km = k4.length; kq < km; kq++) { var kl = k4[kq]; var kI = kl[0]; var j2 = kl[1]; var kx = kI.iconPos; var jW = kx.geoX; var jU = kx.geoY; var kM = (jW - j7) / kb + kQ / 2; var kL = (j5 - jU) / kb + kz / 2; var j8 = kM + kx.destX; var j6 = kL + kx.destY; var kX = j8 + kx.width; var kW = j6 + kx.height; kI.textPos = kI.textPos || kI._textPos; var ka = kI.textPos; var kR = ka[0]; var kg = kM + kR.destX; var j4 = kL + kR.destY; if (j4 < j6) { j6 = j4 } if (kg + kR.width > kX) { kX = kg + kR.width } if (j4 + kR.height > kW) { kW = j4 + kR.height } if (ka.length === 2) { var kf = ka[1]; var kd = kM + kf.destX; var j3 = kL + kf.destY; if (j3 < j6) { j6 = j3 } if (kd + kf.width > kX) { kX = kd + kf.width } if (j3 + kf.height > kW) { kW = j3 + kf.height } } kI._tempBounds = [j8, j6, kX, kW]; var kx = j2.iconPos; var jW = kx.geoX; var jU = kx.geoY; var kM = (jW - j7) / kb + kQ / 2; var kL = (j5 - jU) / kb + kz / 2; var j8 = kM + kx.destX; var j6 = kL + kx.destY; var kX = j8 + kx.width; var kW = j6 + kx.height; j2.textPos = j2.textPos || j2._textPos; var ka = j2.textPos; var kR = ka[0]; var kg = kM + kR.destX; var j4 = kL + kR.destY; if (kg < j8) { j8 = kg } if (j4 < j6) { j6 = j4 } if (j4 + kR.height > kW) { kW = j4 + kR.height } if (ka.length === 2) { var kf = ka[1]; var kd = kM + kf.destX; var j3 = kL + kf.destY; if (kd < j8) { j8 = kd } if (j3 < j6) { j6 = j3 } if (j3 + kf.height > kW) { kW = j3 + kf.height } } j2._tempBounds = [j8, j6, kX, kW] } for (var kq = 0, km = k4.length; kq < km; kq++) { var kl = k4[kq]; var kI = kl[0]; var j2 = kl[1]; if (kq === 0 && j2.textPos) { j2._textPos = j2.textPos; delete j2.textPos } var kU = kI; if (!kI.textPos && j2.textPos) { kU = j2 } var kY = kU._tempBounds; for (kn = kq + 1; kn < km; kn++) { var kk = k4[kn]; var ku = kk[0]; var k3 = kk[1]; var j9 = 0; var k2 = ku._tempBounds; if (!(kY[2] < k2[0] || kY[0] > k2[2] || kY[3] < k2[1] || kY[1] > k2[3])) { j9++; if (ku.textPos) { ku._textPos = ku.textPos; delete ku.textPos } } var k2 = k3._tempBounds; if (!(kY[2] < k2[0] || kY[0] > k2[2] || kY[3] < k2[1] || kY[1] > k2[3])) { j9++; if (k3.textPos) { k3._textPos = k3.textPos; delete k3.textPos } } if (j9 >= 2) { if (kU.textPos) { kU._textPos = kU.textPos; delete kU.textPos } } } } for (var kq = 0, km = k4.length; kq < km; kq++) { var kl = k4[kq]; var kI = kl[0]; var j2 = kl[1]; var kv = kI; if (!kI.textPos && j2.textPos) { kv = j2 } var kx = kv.iconPos; var jW = kx.geoX; var jU = kx.geoY; var kM = kv.baseDrawX = (jW - j7) / kb + kQ / 2; var kL = kv.baseDrawY = (j5 - jU) / kb + kz / 2; kx.drawX = kM + kx.destX; kx.drawY = kL + kx.destY; var j8 = kx.drawX; var j6 = kx.drawY; var kX = kx.drawX + kx.width; var kW = kx.drawY + kx.height; var ka = kv.textPos; if (ka) { var kR = ka[0]; kR.drawX = kM + kR.destX; kR.drawY = kL + kR.destY; if (kR.drawX < j8) { j8 = kR.drawX } if (kR.drawY < j6) { j6 = kR.drawY } if (kR.drawX + kR.width > kX) { kX = kR.drawX + kR.width } if (kR.drawY + kR.height > kW) { kW = kR.drawY + kR.height } if (ka.length === 2) { var kf = ka[1]; kf.drawX = kM + kf.destX; kf.drawY = kL + kf.destY; if (kf.drawX < j8) { j8 = kf.drawX } if (kf.drawY < j6) { j6 = kf.drawY } if (kf.drawX + kf.width > kX) { kX = kf.drawX + kf.width } if (kf.drawY + kf.height > kW) { kW = kf.drawY + kf.height } } } var kP = kM + (j8 - kM) / kF; var kO = kL + (j6 - kL) / kF; var kr = kM + (kX - kM) / kF; var kp = kL + (kW - kL) / kF; kv.minX = kP; kv.minY = kO; kv.maxX = kr; kv.maxY = kp; var kH = (kP + kr) / 2; var kG = (kO + kp) / 2; var jX = j7 + (kH - kQ / 2) * kb; var jV = j5 + (kz / 2 - kG) * kb; kv.geoX = jX; kv.geoY = jV; kt.push(kv) } } var kJ = this._strategyInfo; if (kJ) { var ks = kJ.guid; var kB = kJ.name; var ki = kJ.guidExt; for (var kq = 0, km = kt.length; kq < km; kq++) { var j0 = kt[kq]; delete j0._tempRank; if (!this._canvas2dMapMgr.isClickableLabel(j0) || (ki === 1 && !j0.guidExt)) { continue } if ((ks && ks === j0.guid) || (kB && kB === j0.name)) { j0._tempRank = this.RANK5 } } } else { for (var kq = 0, km = kt.length; kq < km; kq++) { var j0 = kt[kq]; if (j0.type == "line" || !j0.iconPos) { continue } delete j0._tempRank } } kt.sort(function (k7, k6) { var k8 = k7._tempRank ? k7._tempRank : k7.rank, i = k6._tempRank ? k6._tempRank : k6.rank; if (k8 === i) { return k7.baseX - k6.baseX } return i - k8 }); for (var kq = 0, km = kt.length; kq < km; kq++) { var kU = kt[kq]; kU.isDel = false; kU.isFadeout = false; kU._schedule = 0; kU._isIgnore = false; kU.arrIntersectIndex = []; for (kn = kq + 1; kn < km; kn++) { var kw = kt[kn]; if (!(kU.maxX - ko < kw.minX || kU.minX > kw.maxX - ko || kU.maxY - ko < kw.minY || kU.minY > kw.maxY - ko)) { kU.arrIntersectIndex.push(kn) } } } for (var kq = 0, km = kt.length; kq < km; kq++) { var j0 = kt[kq]; if (j0.isDel == false) { var e = j0.arrIntersectIndex; for (var kn = 0, kZ = e.length; kn < kZ; kn++) { var kE = kt[e[kn]]; kE.isDel = true; if (kE.guidExt === 1) { kE.isDel = false } } } } return kt } }); function X(e) { this._map = e; this._initCanvas(); this._initVars(); this._bindEvent(); this._tileType = hK.getInstance("na") } bw.register(function (i) { if (i.getRenderType() === "canvas") { var e = i.config.style; if (bw["FeatureStyle" + e]) { i.canvas2dMapMgr = new X(i) } else { i.loadMapStyleFiles(function () { i.canvas2dMapMgr = new X(i); i.canvas2dMapMgr._loadData() }) } } }); eN.extend(X.prototype, { _initCanvas: function () { var jW = this._map, jU = jW.getSize(), jT = jU.width, i = jU.height, e = jW.platform, jX = bU("canvas"), jV = jX.style; var T = this.ratio = jW.config.ratio; this._width = jT; this._height = i; jV.cssText = "position: absolute;left:0;top:0;width:" + jT + "px;height:" + i + "px;z-index:100;"; jX.width = jT * T; jX.height = i * T; this._labelCanvas = jX; this._labelCtx = jX.getContext("2d"); e.appendChild(jX) }, _initVars: function () { var e = jw("ditu", "normal"); this._udt = e.udt; this._version = e.ver; this._labelDataUrls = ea.B_NORMAL_MAP.vectorTileUrls; this._style = bw["FeatureStyle" + this._map.config.style]; this._labelCount = 0; this._vectorDrawLib = new gN(this); this._cache = { maxNum: 500, delNum: 50, arrCache: [] }; this._computedLabel = null; this._spotData = null; this._labelStrategy = new E(this); this._labelClick = new jQ(this); this._biz = new ei(this); this._map.temp.isPermitSpotOver = true; this.labelStyleParam = "pl"; if (this._map.getMapType() === BMAP_SATELLITE_MAP) { this.labelStyleParam = "sl" } this.statRequestCount = 0; this.statResponseCount = 0 }, _resizeHandler: function (jV) { var jX = this, i = jX._map, jU = i.getSize(), T = jU.width, jZ = jU.height; var jW = this.ratio; var j0 = this._labelCanvas, jT = j0.style; jT.width = T + "px"; jT.height = jZ + "px"; j0.width = T * jW; j0.height = jZ * jW; jX._width = T; jX._height = jZ; var jY = true; jX._loadData(jY) }, _bindEvent: function () { var e = this, i = e._map; i.addEventListener("load", function (T) { e.clearLabel(); e._loadData() }); i.addEventListener("zoomend", function (T) { if (!T.notClearLabel) { e.clearLabel() } e._loadData() }); i.addEventListener("moveend", function (T) { e._loadData() }); i.addEventListener("resize", function (T) { e._resizeHandler(T) }); i.addEventListener("maptypechange", function (T) { if (T.mapType === BMAP_EARTH_MAP) { e.hideLabelCanvas() } else { e.showLabelCanvas(); if (T.mapType === BMAPGL_NORMAL_MAP) { e.labelStyleParam = "pl" } else { if (T.mapType === BMAP_SATELLITE_MAP) { e.labelStyleParam = "sl" } } e._loadData() } }); i.addEventListener("streetlayer_show", function (T) { if (this.isCanvasMap()) { e.showLabelCanvas() } }); i.addEventListener("streetlayer_hide", function (T) { if (this.isCanvasMap()) { e.hideLabelCanvas() } }); i.addEventListener("loadbizdata", function (jT) { var T = jT.data; e._biz.proecessBizData(T, function () { e.updateLabel() }) }); i.addEventListener("unloadbizdata", function (T) { e._biz.clearBizData(); e.updateLabel() }); e.isDrawText = false; setTimeout(function () { if (!e.isDrawText) { i.dispatchEvent(new fy("onmapwhitescreen")) } }, 10000) }, getStyle: function () { return this._style }, _getZoomUnits: function (e) { return Math.pow(2, 18 - e) }, _createCacheForm: function (T, jX, jW, i) { var jV = this; var e = jV._cache; var jT = e.arrCache; var jY = this._getLabelId(T, jX, jW, i); var jU = { id: jY, updateLabelCounter: 0 }; jT.push(jU); jT[jY] = jU; return jU }, _getLabelId: function (i, jT, T, e) { return "_" + i + "_" + jT + "_" + T + "_" + e + "_" + this.labelStyleParam }, _getCache: function (i, jT, T, e) { return this._cache.arrCache[this._getLabelId(i, jT, T, e)] }, _setCacheValue: function (jU, j7, j5, jT, j0) { var j2 = this; var e = j2._cache; var jW = e.arrCache; var jY = e.maxNum; var jV = e.delNum; var j6 = this._getLabelId(jU, j7, j5, jT); var j1 = jW[j6]; if (j0) { j1.lb = j0 } if (jW.length > jY) { var T = jW.splice(0, jV); for (var jZ = 0, jX = T.length; jZ < jX; jZ++) { var j3 = T[jZ], j4 = j3.id; if (jW[j4].lb) { jW[j4].lb = null } jW[j4] = null; delete jW[j4] } T = null } }, _loadData: function (j5) { var ko = this._map; if (!ko.isCanvasMap()) { return } var jY = ko.getCenterIn(); var kn = eQ.calcLoopCenterPoint(jY); var jX = this._tileType; var j0 = this._width / 2; var kc = this._height; var kd = ko.getZoom(); var j9 = jX.getDataZoom(kd); var j2 = ko.getZoomUnits(kd); var j8 = j2 * j0; var km = kn.lng - j8; var kl = kn.lng + j8; var j6 = eQ.isAddWidth(km, kl); j0 = j6 ? j0 * 1.5 : j0; var j7 = jX.getTileSize(kd); var jU = jX.getMercatorSize(kd, j9); var j1 = Math.floor(kn.lng / jU); var j3 = Math.floor(kn.lat / jU); var jV = [j1, j3, (kn.lng - j1 * jU) / jU * j7, (kn.lat - j3 * jU) / jU * j7]; var kf = jV[0] - Math.ceil((j0 - jV[2]) / j7); var kj = jV[1] - Math.ceil((kc / 2 - jV[3]) / j7); var kb = jV[0] + Math.ceil((j0 + jV[2]) / j7); var kg = jV[1] + Math.ceil((kc / 2 + jV[3]) / j7); ko.temp.isPermitSpotOver = false; var e = []; for (var ki = kf; ki < kb; ki++) { for (var kh = kj; kh < kg; kh++) { e.push([ki, kh, j9]); var ka = "id_" + ki + "_" + kh + "_" + kd; e[ka] = true } } e._zoom = j9; e = eQ.calcLoopTiles(e, kd); e.sort((function (i) { return function (kq, kr) { return ((0.4 * Math.abs(kq[0] - i[0]) + 0.6 * Math.abs(kq[1] - i[1])) - (0.4 * Math.abs(kr[0] - i[0]) + 0.6 * Math.abs(kr[1] - i[1]))) } })([jV[0], jV[1]])); var j4 = this._cache.arrCache; this._curViewLabels = []; var jT = "viewKey_" + Math.floor(jY.lng) + "_" + Math.floor(jY.lat) + "_" + kd; this.statRequestCount = 0; this.statResponseCount = 0; this._labelCount += e.length; var jZ = kd; for (var ki = 0, ke = e.length; ki < ke; ki++) { var j1 = e[ki][0]; var j3 = e[ki][1]; var T = e[ki][2]; var jW = this._getLabelId(j1, j3, T, jZ); var kk = j4[jW]; if (!kk) { kk = this._createCacheForm(j1, j3, T, jZ) } if (typeof kk.lb === "undefined") { kk.lb = null; this._loadLabelData(j1, j3, T, jZ, j7, jT); this.statRequestCount++ } else { if (kk.lb) { this._curViewLabels.push(kk.lb); this._labelCount-- } else { if (j5) { this._loadLabelData(j1, j3, T, jZ, j7, jT) } kk.updateLabelCounter++ } } } if (this._labelCount === 0) { this.updateLabel() } var kp = this; if (kp.errorTimer) { clearTimeout(kp.errorTimer) } kp.errorTimer = setTimeout(function () { if (kp._labelCount !== 0) { kp._labelCount = 0; kp.updateLabel() } var kr = new fy("onloaddatatimeout"); var ks = 0; var kq = 0; var kt = 0; var i = 0; if (kp.statRequestCount === kp.statResponseCount) { ks = 1 } else { kq = 1 } if (kq === 1) { i = kp.statRequestCount - kp.statResponseCount; kt = kp.statResponseCount } kr.noTimeoutCount = ks; kr.timeoutCount = kq; kr.timeoutNoLoaded = i; kr.timeoutLoaded = kt; kp._map.dispatchEvent(kr) }, 500) }, clearLabel: function () { var e = this._width; var T = this._height; var i = this.ratio; this._labelCtx.clearRect(0, 0, e * i, T * i) }, updateLabel: function () { var i = this._map; var e = i.getCenterIn(); var jT = this._width; var jW = this._height; var jZ = i.getZoom(); var jY = this._tileType.getTileSize(jZ); var jX = this._getZoomUnits(jZ); var T = this._labelCtx; this._labelCanvas.style.left = -i.offsetX + "px"; this._labelCanvas.style.top = -i.offsetY + "px"; var jV = this._curViewLabels; jV._centerX = e.lng; jV._centerY = e.lat; var jU = this._biz.bizLabels; this._computedLabel = this._labelStrategy.preComputeLabel(jV, jT, jW, jX, jY, jU); this._computedLabel._zoom = jZ; this.clearLabel(); this._vectorDrawLib.drawIconAndText(T, this._computedLabel, jZ); this._addSpotData(); i.temp.isPermitSpotOver = true; if (jV.length > 0) { this.isDrawText = true } }, _loadLabelData: function (j2, j1, j0, T, j3, e) { var jV = j2.toString(); var jT = j1.toString(); var jX = "cbk_" + jV.replace("-", "_") + "_" + jT.replace("-", "__") + "_" + Math.floor(j0); var j7 = fi + "." + jX; var j6 = this._labelDataUrls; var jZ = Math.abs(j2 + j1) % j6.length; var kc = j6[jZ]; if (window.offLineIPAddress) { kc = window.offLineIPAddress + "pvd/" } var i = this.labelStyleParam; var j5 = "?qt=vtile"; var j8 = ""; if (this._map.config.style !== "default") { j8 = "&styleId=1" } var j4 = "x={x}&y={y}&z={z}&udt={udt}&v={v}&styles={styles}" + j8 + "&textonly=1&textimg=1&scaler={scaler}&fn=" + encodeURIComponent(j7); var j9 = eQ.calcLoopParam(j2, j0).col; var jY = this.ratio > 1 ? 2 : 1; var jW = j4.replace(/{x}/, j9).replace(/{y}/, j1).replace(/{z}/, Math.floor(j0)).replace(/{styles}/, i).replace(/{udt}/, this._udt).replace(/{v}/, this._version).replace(/{scaler}/, jY); var jU = kc + j5 + "&param=" + window.encodeURIComponent(eJ(jW)); var kb = this; var ka = kb._map; bw[jX] = function (kd) { kb._vectorDrawLib.parseLabelData(kd, j2, j1, j0, T, j3, function (ki) { var kf = ka.getCenterIn(); var kj = ka.getZoom(); var kl = "viewKey_" + Math.floor(kf.lng) + "_" + Math.floor(kf.lat) + "_" + kj; kb._labelCount--; var km = kb._getCache(j2, j1, j0, T).updateLabelCounter; kb._labelCount -= km; var kg = kb._curViewLabels; if (kl === e || (kb._labelCount < 0 && kj === j0)) { kg.push(ki) } if (kl === e) { kb.statResponseCount++ } if (kb._labelCount <= 0) { var ke = (new Date()).getTime(); kb.updateLabel(); var kh = (new Date()).getTime(); var kk = new fy("oncanvasmaploaded"); kk.drawTime = kh - ke; if (kb.statResponseCount === kb.statRequestCount) { kk.isAllLoadedDrawing = true } ka.dispatchEvent(kk) } kb._setCacheValue(j2, j1, j0, T, ki); delete bw[jX] }) }; gA.load(jU) }, drawLabel: function (T, jT, j0, i, jY, jU, e, jV, jZ, jW) { var jX = this; if (!jX._computedLabel) { return } if (jX._computedLabel._zoom !== j0) { jX.clearLabel(); return } jX._map.temp.isPermitSpotOver = false; jX.clearLabel(); jX._vectorDrawLib.zoomingIconAndText(this._labelCtx, jX._computedLabel, T, jT, i, jY, jU, e, jV, jZ, jW) }, _addSpotData: function () { this._spotData = []; var j0 = this._map.getZoom(); for (var jV = 0, jU = this._computedLabel.length; jV < jU; jV++) { var jX = this._computedLabel[jV]; if (!this.isClickableLabel(jX) || (jX.guidExt === 1 && jX.startScale > j0)) { continue } var jW = []; jW[0] = (jX.minX - jX.maxX) / 2; jW[1] = (jX.minY - jX.maxY) / 2; jW[2] = (jX.maxX - jX.minX) / 2; jW[3] = (jX.maxY - jX.minY) / 2; var jT = null; if (jX.iconPos) { jT = new ct(jX.iconPos.geoX, jX.iconPos.geoY) } var T = jX.name ? jX.name.replace("\\\\", "<br>") : ""; if (jX.iconPos && jX.iconPos.iconType.indexOf("ditie") > -1 && this._map.getZoom() > 14) { T = "" } var jZ = { n: T, pt: new ct(jX.geoX, jX.geoY), userdata: { iconPoint: jT, uid: jX.guid, name: T, type: jX.iconPos ? jX.iconPos.iconType : "", iconImg: jX.iconImg, mapPoi: true, adver_log: jX.adver_log || "" }, bd: jW, tag: "MAP_SPOT_INFO" }; this._spotData.push(jZ) } var jY = new fy("onspotsdataready"); jY.spots = this._spotData; this._map._spotDataOnCanvas = this._spotData; this._map.dispatchEvent(jY) }, isClickableLabel: function (e) { if (e.isDel || (!e.guid && !e.name)) { return false } return true }, getFilterImageData: function (T, jW) { var jX = T.data, jV = this._labelStrategy, jW = parseInt(jW); for (var jY = 0, jU = jX.length; jY < jU; jY += 4) { var e = jX[jY], jZ = jX[jY + 1], j0 = jX[jY + 2], j1 = jX[jY + 3]; if (j1 === 0) { continue } var jT = Math.round((e + jZ + j0) / 3); var j2 = jT - 90; j2 = j2 < 0 ? 0 : j2; if (jW === jV.RANK5) { jX[jY] = 51 + j2 * 1.3; jX[jY + 1] = 133 + j2 * 0.8; jX[jY + 2] = 255 } } return T }, showLabelCanvas: function () { this._labelCanvas.style.visibility = "" }, hideLabelCanvas: function () { this._labelCanvas.style.visibility = "hidden" } }); var aS = 5; var iO = 4; var gm = 3; var M = 2; var eh = 1; var hf = 0; var jR = 3; var h7 = 5; var e7 = { 3: { start: 3, base: 3 }, 4: { start: 4, base: 5 }, 5: { start: 4, base: 5 }, 6: { start: 6, base: 7 }, 7: { start: 6, base: 7 }, 8: { start: 8, base: 9 }, 9: { start: 8, base: 9 }, 10: { start: 10, base: 10 }, 11: { start: 11, base: 12 }, 12: { start: 11, base: 12 }, 13: { start: 11, base: 12 }, 14: { start: 14, base: 15 }, 15: { start: 14, base: 15 }, 16: { start: 16, base: 17 }, 17: { start: 16, base: 17 }, 18: { start: 18, base: 19 }, 19: { start: 18, base: 19 }, 20: { start: 18, base: 19 }, 21: { start: 18, base: 19 } }; function gN(jT) { this._canvas2dMapMgr = jT; var i = this.ratio = jT._map.config.ratio; this._featureStyle = null; this._map = jT._map; var T = bx(); var e = "udt=" + T.udt + "&v=" + T.ver; this.sizeRatio = this.ratio > 1 ? 2 : 1; this._binaryCache = {}; this._iconCache = {}; this._initColorCanvas() } eN.extend(gN.prototype, { _initColorCanvas: function () { var i = 256, T = bU("canvas"), e = T.style; e.width = i + "px"; e.height = i + "px"; T.width = i; T.height = i; this._colorCvs = T; this._colorCtx = T.getContext("2d") }, parseLabelData: function (i, jV, jU, jT, e, jY, jX) { if (!this._featureStyle) { this._featureStyle = this._canvas2dMapMgr.getStyle() } if (!i || !i[0]) { jX([]); return } var jW = this._map.getZoomUnits(); var T = this; this.loadTextPng(i, jY, jV, jU, jT, e, jW, jX) }, loadTextPng: function (ka, j1, jZ, jY, jW, i, jU, jT) { var j9 = this; var e = ka[5]; var j8 = this._map; var j5 = j8.getZoom(); var T = j8.getSize(); var j6 = T.width; var j4 = T.height; var j7 = j8.getCenterIn(); var jX = j7.lng; var jV = j7.lat; var j3 = jZ * j1 * jU; var j2 = (jY + 1) * j1 * jU; if (e) { var j0 = new Image(); j0.onload = function () { j9.calcIconAndTextInfo(ka, j0, j1, jZ, jY, jW, i, jU, j3, j2, jT); delete this.onload }; j0.src = e } else { setTimeout(function () { j9.calcIconAndTextInfo(ka, null, j1, jZ, jY, jW, i, jU, j3, j2, jT) }, 1) } }, calcIconAndTextInfo: function (kc, j3, j4, j2, jZ, jX, jT, jV, j6, j5, jU) { var kb = this; var ka = kb._featureStyle; var j0 = []; j0.x = j2; j0.y = jZ; j0.z = jX; var j1 = kb._canvas2dMapMgr, T = j2 * jV * j4, j9 = (jZ + 1) * jV * j4, jW = { tileLeft: T, tileTop: j9, zoomUnits: jV }; var e = []; if (kc[0]) { for (var j7 = 0; j7 < kc[0].length; j7++) { if (kc[0][j7][0] === jR) { e.push(kc[0][j7]) } } } var jY = kc[2] || []; for (var j7 = 0; j7 < e.length; j7++) { this._getFixedLabelInfo(e[j7], j3, jT, jV, j4, j6, j5, j0) } var j8 = Math.pow(2, jT - jX); for (j7 = 0; j7 < jY.length; j7++) { this._getLineLabelInfo(jY[j7], j3, jX, jT, jV, j4, j6, j5, j8, j0) } jU(j0) }, _getFixedLabelInfo: function (j3, j7, jU, jY, j8, kb, ka, kd) { var j2 = j3[1]; if (!j2) { return } var kf = this._map.getZoom(); var kn = this._map.config.style; var ko = this._featureStyle; var jZ = jU; if (jZ === 9) { jZ = 8 } for (var kk = 0; kk < j2.length; kk++) { var kp = j2[kk]; var e = kp[0]; var jT = aW.getStyleFromCache(kn, e, "point", jZ, ko); var kj = aW.getStyleFromCache(kn, e, "pointText", jZ, ko); if ((!kj || kj.length === 0) && (!jT || jT.length === 0)) { if (jZ === 5) { var jX = kp[1]; if (!jX) { continue } for (var kg = 0; kg < jX.length; kg++) { var ke = jX[kg][4]; if (ke && ke[7] === "北京") { jT = aW.getStyleFromCache(kn, e, "point", 6, ko); kj = aW.getStyleFromCache(kn, e, "pointText", 6, ko); break } else { continue } } } else { continue } } var jX = kp[1]; if (!jX) { continue } var kl = null; var j0 = 1; var T = 0; var j6 = 0; if (jT && jT[0]) { jT = jT[0]; kl = jT.icon; j0 = jT.zoom ? jT.zoom / 100 : 1 } else { jT = null } for (var kg = 0; kg < jX.length; kg++) { var ke = jX[kg][4]; if (!ke) { continue } var ki = ke[2]; if (!this._isVisible(ki, kf)) { continue } var j1 = ke[12]; if (kj && kj.length > 0 && !j1) { continue } var j5 = Math.round(ke[0] / 100); var j4 = Math.round(ke[1] / 100); var kh = { lng: kb + j5, lat: ka - (j8 * jY - j4) }; var jW = j5 / jY; var jV = j8 - j4 / jY; var j9 = ke[7] || ""; var km = ke[5]; var kc = { type: "fixed", name: j9, textImg: j7, rank: ke[4], baseX: jW, baseY: jV, iconPos: null, textPos: null, guid: ke[3] || "", tracer: ki, direction: km, startScale: 3 }; if ((km !== iO && j1 || !j1) && kl !== null) { kc.iconPos = this._getIconPosition(kl, j0, jW, jV, kh); if (kc.iconPos) { T = kc.iconPos.width; j6 = kc.iconPos.height } } if (T === 0) { kc.direction = iO } if (j1) { kc.textPos = this._getTextDrawData(ke, jW, jV, T, j6) } if (kc.textPos || kc.iconPos) { kd.push(kc) } } } }, _isVisible: function (e, i) { var jT; if (!this._binaryCache[e]) { jT = e.toString(2); if (jT.length < 8) { jT = new Array(8 - jT.length + 1).join("0") + jT } this._binaryCache[e] = jT } jT = this._binaryCache[e]; var T = e7[i].start; return jT[i - T] === "1" }, _getIconPosition: function (jX, jV, T, i, e) { var jT = this._map.config.style; var jY = bw["iconSetInfo" + jT][jX]; if (!jY) { if (jX.charCodeAt(0) >= 48 && jX.charCodeAt(0) <= 57) { jY = bw["iconSetInfo" + jT]["_" + jX] } } if (!jY) { return null } var jU = jY[0]; var jW = jY[1]; jU = jU * jV; jW = jW * jV; return { srcX: 0, srcY: 0, destX: T - jU / 2, destY: i - jW / 2, width: jU, height: jW, geoX: e.lng, geoY: e.lat, mcPt: e, iconType: jX } }, _getTextDrawData: function (j4, j3, j2, jT, j0) { var j9 = j4[5]; if (typeof j9 !== "number") { j9 = 0 } var jY = this.ratio; var jX = jY / 2; jT *= jX; j0 *= jX; var jZ = j4[12]; var jU = jZ.length; var kc = 0; var kb = 0; var j8 = []; var j7 = 0; var ka = 0; for (var j6 = 0; j6 < jU; j6++) { ka += Math.round(jZ[j6][3]) } for (var j6 = 0; j6 < jU; j6++) { var jW = jZ[j6]; var jV = jW[0]; var i = jW[1]; var T = jW[2]; var e = jW[3]; var kd = 2 * jY; var j5 = 0; if (jT !== 0) { j5 = 2 * jY } if (jT === 0) { j9 = iO } switch (j9) { case gm: var j1 = j2 - ka / 2 - kd * (jU - 1) / 2; kc = j3 - T - jT / 2 - j5; kb = j1 + j7 + kd * j6; break; case eh: var j1 = j2 - ka / 2 - kd * (jU - 1) / 2; kc = j3 + jT / 2 + j5; kb = j1 + j7 + kd * j6; break; case M: var j1 = j2 - j0 / 2 - ka - kd * (jU - 1) - kd; kc = j3 - T / 2; kb = j1 + j7 + kd * j6; break; case hf: var j1 = j2 + j0 / 2 + kd / 2; kc = j3 - T / 2; kb = j1 + j7 + kd * j6; break; case iO: var j1 = j2 - e / 2 - kd * (jU - 1) / 2; kc = j3 - T / 2; kb = j1 + j7 + kd * j6; break }j7 += e; if (T > 0 && e > 0) { j8.push({ srcX: jV, srcY: i, destX: kc, destY: kb, width: T, height: e }) } } if (j8.length > 0) { return j8 } return null }, _getLineLabelInfo: function (j1, jT, jU, kg, kt, j8, ke, kd, kf, j7) { if (j1.length !== 10) { return } var ki = this.ratio; var T = this.ratio; var kp = j1[7].length; var j9 = j1[1]; var kr = j1[3]; var kx = j1[8]; var jX = j1[4]; var e = 2; var jV = jX.slice(0, e); for (var ku = e; ku < jX.length; ku += e) { jV[ku] = jV[ku - e] + jX[ku]; jV[ku + 1] = jV[ku - (e - 1)] + jX[ku + 1] } for (var ku = e; ku < jX.length; ku += e) { if (ku % (kr * e) === 0 || ku % (kr * e) === 1) { continue } jV[ku] = jV[ku - e] + jX[ku] / kf; jV[ku + 1] = jV[ku - (e - 1)] + jX[ku + 1] / kf } for (var kw = 0; kw < kp; kw++) { var ks = j1[7][kw]; if (!this._isVisible(ks, kg)) { continue } var kk = j1[6][kw]; var j6 = kw * kr * e; jX = jV.slice(j6, j6 + kr * e); var ka = []; var kj = undefined; var kh = undefined; var j5 = undefined; var j4 = undefined; var kx = j1[9].slice(0); if (kk) { kx.reverse() } var kn; var kl; for (var kv = 0; kv < kr; kv++) { var j3 = j1[5][kr * kw + kv]; var ko = jX[kv * e] / 100; var km = jX[kv * e + 1] / 100; var j2 = kx[kv]; var jY = j2[0]; var j0 = j2[1]; var jW = j2[2]; var jZ = j2[3]; var kc; var kb; var kz; var ky; if (kv === 0) { kn = kz = ko / kt; kl = j8 - km / kt; ky = km / kt } else { kz = ko / kt; ky = km / kt } var kB = kn + (kz - kn) * T - jW / 2; var kA = kl + (j8 - ky - kl) * T - jZ / 2; if (kj === undefined) { kj = kn - jW / 2; kh = kl - jZ / 2; j5 = kj + jW; j4 = kh + jZ } else { if (kB < kj) { kj = kB } if (kA < kh) { kh = kA } if (kB + jW > j5) { j5 = kB + jW } if (kA + jZ > j4) { j4 = kA + jZ } } ka.push({ angle: j3, srcX: jY, srcY: j0, destX: kB, destY: kA, width: jW, height: jZ }) } var kq = { type: "line", textImg: jT, rank: j9, baseX: kn, baseY: kl, arrWordPos: ka, minXOriginal: kj, minYOriginal: kh, maxXOriginal: j5, maxYOriginal: j4, text: "" }; j7.push(kq) } }, alterColor: function (jW, e, jV) { var T = this._colorCtx, i = this._canvas2dMapMgr; T.clearRect(0, 0, jW.width, jW.height); T.drawImage(e, jW.srcX, jW.srcY, jW.width, jW.height, 0, 0, jW.width, jW.height); var jU = T.getImageData(0, 0, jW.width, jW.height), jT = i.getFilterImageData(jU, jV); T.putImageData(jT, 0, 0) }, drawIconAndText: function (j8, j7, e) { var jZ = this.ratio; var jX = this.sizeRatio / jZ; var j1 = 2 / jZ; var kj = this; for (var kb = 0, j9 = j7.length; kb < j9; kb++) { var j0 = j7[kb]; if (j0.isDel == false) { var jU = j0.baseDrawX; var jT = j0.baseDrawY; if (j0.type == "fixed") { var jW = j0.iconPos, kc = j0.textPos, j5 = j0.textImg, kf = j0.startScale; if (jW && kf <= e) { var T = this._iconCache[jW.iconType]; if (T) { if (T.img) { j8.drawImage(T.img, 0, 0, T.img.width, T.img.height, Math.round(jU * jZ + (jW.drawX - jU) / j1), Math.round(jT * jZ + (jW.drawY - jT) / j1), jW.width / j1, jW.height / j1) } else { T.drawLabels.push(j0) } } else { if (!T) { this._iconCache[jW.iconType] = { img: null, drawLabels: [j0] }; var kl = new Image(); kl._iconName = jW.iconType; kl.onload = function () { var kr = kj._iconCache[this._iconName]; kr.img = this; this.onload = null; for (var kn = 0; kn < kr.drawLabels.length; kn++) { var kp = kr.drawLabels[kn]; var ko = kp.baseDrawX; var km = kp.baseDrawY; var kq = kp.iconPos; j8.drawImage(this, 0, 0, this.width, this.height, Math.round(ko * jZ + (kq.drawX - ko) / j1), Math.round(km * jZ + (kq.drawY - km) / j1), kq.width / j1, kq.height / j1) } kr.drawPos = [] }; kl.src = B.getIconSetPath(kj._map.config.style) + jW.iconType + ".png" } } } if (kc && j5 && kf <= e) { for (var jY = 0; jY < kc.length; jY++) { var j6 = kc[jY]; if (!j0._tempRank) { j8.drawImage(j5, j6.srcX, j6.srcY, j6.width, j6.height, Math.round(jU * jZ + (j6.drawX - jU) / jX), Math.round(jT * jZ + (j6.drawY - jT) / jX), j6.width / jX, j6.height / jX) } else { this.alterColor(j6, j5, j0._tempRank); j8.drawImage(this._colorCvs, 0, 0, j6.width, j6.height, Math.round(jU * jZ + (j6.drawX - jU) / jX), Math.round(jT * jZ + (j6.drawY - jT) / jX), j6.width / jX, j6.height / jX) } } } } else { var jV = j0.arrWordPos, j5 = j0.textImg, j4 = j0.tileX, j2 = j0.tileY; for (var ka = 0, j3 = jV.length; ka < j3; ka++) { var kd = jV[ka]; var kk = Math.round(j4 + kd.destX); var ki = Math.round(j2 + kd.destY); var ke = kd.angle; kk = jU * jZ + kk - jU; ki = jT * jZ + ki - jT; if (ke > 10 && ke < 350) { j8.save(); var kh = Math.round(kk + kd.width / 2); var kg = Math.round(ki + kd.height / 2); j8.translate(kh, kg); j8.rotate(-ke / 180 * Math.PI); j8.drawImage(j5, kd.srcX, kd.srcY, kd.width, kd.height, -Math.round(kd.width / 2), -Math.round(kd.height / 2), kd.width / jX, kd.height / jX); j8.restore() } else { j8.drawImage(j5, kd.srcX, kd.srcY, kd.width, kd.height, kk, ki, kd.width / jX, kd.height / jX) } } } } } }, isCollide: function (jV, j4, j3, e, jX, T, jZ) { for (var jU = 0, jT = T.length; jU < jT; jU++) { var jY = T[jU], jW = 1 / Math.pow(2, jZ + 1), j2 = jW * jY[3] / 2, j1 = jW * jY[4] / 2, j0 = jY[0]; if (j0 != jV) { if (!(j4 + e < jY[1] - j2 || j4 > jY[1] + jY[3] + j2 || j3 + jX < jY[2] - j1 || j3 > jY[2] + jY[4] + j1)) { return true } } } return false }, zoomingIconAndText: function (kj, kd, jT, kh, ki, kK, kq, j1, kw, kp, ka) { var kL = this.ratio; var j2 = this.sizeRatio / kL; var kM = 2 / kL; var kW = kL / 2; var kG = kh.x; var kF = kh.y; var kk = 2 * kL; if (ka !== 0) { kF += kp } var j5 = undefined, jY = undefined, jV = undefined, j0 = undefined, j9 = undefined; var kv = kK > 0 ? true : false; if (!kv) { j5 = []; var kz = 1 - kq } for (var kS = 0, kQ = kd.length; kS < kQ; kS++) { var kN = kd[kS]; if (kN.isDel == false) { var kX = kN.baseDrawX; var kU = kN.baseDrawY; kj.save(); kj.translate(-j1 * kL, -kw * kL); if (kN.isFadeout) { if (!kv && kN._schedule <= kq && !kN._isIgnore) { kj.globalAlpha = kz; kN._schedule = kq } else { kN._isIgnore = true; continue } } if (kN.type == "fixed") { var kl = kN.iconPos, ks = kN.textPos, jW = kN.textImg, km = kN.startScale; var T; var kD = 0; if (kl) { kD = kk } if (kl && !kN.iconImg && this._iconCache[kl.iconType]) { T = this._iconCache[kl.iconType].img } if (kl && km <= ki && T) { j0 = kl.width; j9 = kl.height; jY = (kG + (kX - kG) * jT) * kL - j0 / 2 / kM; jV = (kF + (kU - kF) * jT) * kL - j9 / 2 / kM + ka; if (!kv && this.isCollide(kS, jY, jV, j0, j9, j5, kK)) { kN.isFadeout = true } kj.drawImage(T, kl.srcX, kl.srcY, T.width, T.height, Math.round(jY), Math.round(jV), j0 / kM, j9 / kM); !kv && j5.push([kS, jY, jV, j0, j9]) } if (ks && jW && km <= ki) { var kr; var kt; var kc = 0; var ko = 0; if (kl) { kc = kl.width; ko = kl.height } var kE = ks.length; var j4 = 0; var ku = 0; for (var ke = 0; ke < kE; ke++) { var kP = ks[ke]; ku += kP.height; if (j4 < kP.width) { j4 = kP.width } } ku += (ke - 1) * kk; if (!kv && this.isCollide(kS, jY, jV, j4, ku, j5, kK)) { kN.isFadeout = true } var kO = 0; for (var ke = 0; ke < kE; ke++) { var kP = ks[ke]; switch (kN.direction) { case gm: kr = -(kc / 2 / kM + kP.width + kD); kt = -ku / 2 + kO + kk * ke; break; case eh: kr = kc / 2 / kM + kD; kt = -ku / 2 + kO + kk * ke; break; case M: kr = -kP.width / 2; kt = -ko / 2 / kM - ku + kO - kk * (ke + 1); break; case hf: kr = -kP.width / 2; kt = ko / 2 / kM + kO + kk * (ke + 1); break; case iO: kr = -kP.width / 2; kt = -ku / 2 + kO + kk * ke; break }kO += kP.height; jY = (kG + (kX - kG) * jT) * kL + kr / j2; jV = (kF + (kU - kF) * jT) * kL + kt / j2; +ka; j0 = kP.width; j9 = kP.height; if (!kN._tempRank) { kj.drawImage(jW, kP.srcX, kP.srcY, j0, j9, Math.round(jY), Math.round(jV), j0 / j2, j9 / j2) } else { this.alterColor(kP, jW, kN._tempRank); kj.drawImage(this._colorCvs, 0, 0, j0, j9, Math.round(jY), Math.round(jV), j0 / j2, j9 / j2) } !kv && j5.push([kS, jY, jV, j0, j9]) } } } else { var kb = kN.arrWordPos, jW = kN.textImg, kV = kN.tileX, kT = kN.tileY; var j3 = kb[0]; var jZ = Math.round(kV + j3.destX); var jX = Math.round(kT + j3.destY); for (var kR = 0, kC = kb.length; kR < kC; kR++) { var kJ = kb[kR]; var kZ = Math.round(kV + kJ.destX); var kY = Math.round(kT + kJ.destY); var kg = kJ.angle; var kB = Math.round((kG + (kX - kG) * jT) * kL - j3.width / 2 + kZ - jZ); var kA = Math.round((kF + (kU - kF) * jT) * kL - j3.height / 2 + kY - jX); jY = kB; jV = kA; j0 = kJ.width; j9 = kJ.height; if (!kv && this.isCollide(kS, jY, jV, j0, j9, j5, kK)) { kN.isFadeout = true } if (kg > 10 && kg < 350) { var kI = kB + kJ.width / 2; var kH = kA + kJ.height / 2; var jU = kg / 180 * Math.PI; var kn = Math.cos(jU); var j6 = Math.sin(jU); var ky = kn; var j7 = kn; var kx = j6; var j8 = -j6; var kf = kI - kI * kn - kH * j6; var e = kH + kI * j6 - kH * kn; kj.save(); kj.transform(ky, j8, kx, j7, kf, e); kj.drawImage(jW, kJ.srcX, kJ.srcY, j0, j9, jY, jV, j0 / j2, j9 / j2); kj.restore() } else { kj.drawImage(jW, kJ.srcX, kJ.srcY, j0, j9, jY, jV, j0 / j2, j9 / j2) } !kv && j5.push([kS, jY, jV, j0, j9]) } } kj.restore() } } } }); function ei(e) { this.initVars(e) } eN.extend(ei.prototype, { initVars: function (e) { this._map = e._map; this._canvas2dMapMgr = e; this.base64Prefix = "data:image/png;base64,"; this.bizData = null; this.objTextsPng = null; this.arrIconsPng = null; this.bizLabels = null }, proecessBizData: function (jV, jZ) { var jX = this; this.bizData = jV; this.objTextsPng = null; this.arrIconsPng = null; var T = jV.textsPng; var j1 = jV.iconsPng; if (!T || !j1) { return } var jY = new Image(); jY.onload = function () { jX.objTextsPng = this; jX.calcIconAndTextInfo(jZ); this.onload = null }; jY.src = this.base64Prefix + T; var j0 = j1.length; var e = []; for (var jU = 0; jU < j0; jU++) { var jW = j1[jU]; var jT = new Image(); (function (i) { jT.onload = function () { j0--; e[i] = this; if (j0 === 0) { jX.arrIconsPng = e; jX.calcIconAndTextInfo(jZ) } this.onload = null } })(jU); jT.src = this.base64Prefix + jW } }, calcIconAndTextInfo: function (j2) { if (this.objTextsPng && this.arrIconsPng) { var jY = this.bizData; var jW = jY.pois; var e = []; for (var jZ = 0, jV = jW.length; jZ < jV; jZ++) { var jT = jW[jZ]; var jX = this.arrIconsPng[jT.iconPng]; var jU = jX.height / 2; var j1 = { type: "fixed", name: "", textImg: this.objTextsPng, iconImg: jX, rank: jT.rank, iconPos: { srcX: 0, srcY: 0, destX: -jX.width / 2, destY: -jU / 2, width: jX.width, height: jU, geoX: jT.x, geoY: jT.y, iconType: "vectorCustom" }, textPos: this.calcTextPos(jT.pos, jX), startScale: jT.from < 12 ? 12 : jT.from, guid: jT.guid, guidExt: 1, adver_log: jT.adver_log || "" }; var T = { type: "fixed", textDirLeft: "left", name: "", textImg: this.objTextsPng, iconImg: jX, rank: jT.rank, iconPos: { srcX: 0, srcY: 0, destX: -jX.width / 2, destY: -jU / 2, width: jX.width, height: jU, geoX: jT.x, geoY: jT.y, iconType: "vectorCustom" }, textPos: this.calcTextPosLeft(jT.pos, jX), startScale: jT.from < 12 ? 12 : jT.from, guid: jT.guid, guidExt: 1, adver_log: jT.adver_log || "" }; var j0 = [j1, T]; e.push(j0) } this.bizLabels = e; j2 && j2() } }, calcTextPos: function (jW, T) { var i = []; var jV = jW.length / 4; var jU = T.width / 2; if (jV === 1) { var jT = { srcX: jW[0], srcY: jW[1], destX: jU, destY: -jW[3] / 2, width: jW[2], height: jW[3] }; i.push(jT) } else { var jT = { srcX: jW[0], srcY: jW[1], destX: jU, destY: -jW[3], width: jW[2], height: jW[3] }; var e = { srcX: jW[4], srcY: jW[5], destX: jU, destY: 0, width: jW[6], height: jW[7] }; i.push(jT); i.push(e) } return i }, calcTextPosLeft: function (jW, T) { var i = []; var jV = jW.length / 4; var jU = T.width / 2; if (jV === 1) { var jT = { srcX: jW[0], srcY: jW[1], destX: -jU - jW[2], destY: -jW[3] / 2, width: jW[2], height: jW[3] }; i.push(jT) } else { var jT = { srcX: jW[0], srcY: jW[1], destX: -jU - jW[2], destY: -jW[3], width: jW[2], height: jW[3] }; var e = { srcX: jW[4], srcY: jW[5], destX: -jU - jW[2], destY: 0, width: jW[6], height: jW[7] }; i.push(jT); i.push(e) } return i }, clearBizData: function () { this.bizData = null; this.bizLabels = null } }); var jg = { Int8: "BYTE", Uint8: "UNSIGNED_BYTE", Int16: "SHORT", Uint16: "UNSIGNED_SHORT", Float32: "FLOAT" }; var hO = { Int8: 1, Uint8: 1, Int16: 2, Uint16: 2, Float32: 4 }; function w(jT, jV, T, jU) { this.arrayBuffer = jT; this.attributes = jV.members; this.bytesPerElement = 0; if (this.attributes) { for (var e = 0; e < this.attributes.length; e++) { this.bytesPerElement += hO[this.attributes[e].type] * this.attributes[e].components } } else { this.bytesPerElement = jT.BYTES_PER_ELEMENT * jV.components } this.length = jU || jT.byteLength / this.bytesPerElement; this.type = T; this.arrayType = jV } w.prototype.bind = function (i) { var e = i[this.type]; if (!this.buffer) { this.buffer = i.createBuffer(); i.bindBuffer(e, this.buffer); i.bufferData(e, this.arrayBuffer, i.STATIC_DRAW); this.arrayBuffer = null } else { i.bindBuffer(e, this.buffer) } }; w.prototype.setVertexAttribPointers = function (jT, e) { for (var i = 0; i < this.attributes.length; i++) { var jU = this.attributes[i]; var T = e.attributes[jU.name]; jT.vertexAttribPointer(T, jU.components, jT[jg[jU.type]], jU.normalize, this.bytesPerElement, jU.offset) } }; w.prototype.updateVertexData = function (jT, i, T) { this.arrayBuffer = i; if (!this.buffer) { return this.bind(jT) } if (T <= this.length) { var e = jT[this.type]; jT.bindBuffer(e, this.buffer); jT.bufferData(e, this.arrayBuffer, jT.STATIC_DRAW) } else { this.destroy(jT); this.bind(jT) } this.length = T }; w.prototype.destroy = function (e) { if (this.buffer) { e.deleteBuffer(this.buffer); this.buffer = null } }; w.BufferType = { VERTEX: "ARRAY_BUFFER", ELEMENT: "ELEMENT_ARRAY_BUFFER" }; w.ELEMENT_ATTRIBUTE_TYPE = "Uint16"; w.VERTEX_ATTRIBUTE_ALIGNMENT = 4; function dF() { this.boundProgram = null; this.boundVertexBuffer = null; this.boundElementBuffer = null; this.vao = null } dF.prototype.bind = function (jX, e, jT, jW) { var jU = jX.extVertexArrayObject; if (jU === undefined) { jU = jX.extVertexArrayObject = jX.getExtension("OES_vertex_array_object") } if (jU) { if (!this.vao) { this.vao = jU.createVertexArrayOES() } jU.bindVertexArrayOES(this.vao) } else { } if (!this.boundProgram) { var jY = jU ? 0 : (jX.currentNumAttributes || 0); var jV = e.numAttributes; var T; for (T = jY; T < jV; T++) { jX.enableVertexAttribArray(T) } if (!jU) { for (T = jV; T < jY; T++) { jX.disableVertexAttribArray(T) } jX.currentNumAttributes = jV } jT.bind(jX); jT.setVertexAttribPointers(jX, e); if (jW) { jW.bind(jX) } if (jU) { this.boundProgram = e; this.boundVertexBuffer = jT; this.boundElementBuffer = jW } } }; dF.prototype.update = function (jX, jT, T, jW, e, i, jV) { var jU = jX.extVertexArrayObject; if (jU === undefined) { jU = jX.extVertexArrayObject = jX.getExtension("OES_vertex_array_object") } if (jU) { jU.bindVertexArrayOES(this.vao); if (this.boundVertexBuffer) { this.boundVertexBuffer.updateVertexData(jX, T, jW); this.boundVertexBuffer.setVertexAttribPointers(jX, this.boundProgram) } if (e && this.boundElementBuffer) { this.boundElementBuffer.updateVertexData(jX, i, jV) } } else { jT.updateVertexData(jX, T, jW); if (e) { e.updateVertexData(jX, i, jV) } } }; dF.prototype.unbind = function (i) { var e = i.extVertexArrayObject; if (e) { e.bindVertexArrayOES(null); this.boundProgram = null; this.boundVertexBuffer = null; this.boundElementBuffer = null } }; dF.prototype.destroy = function (i) { var e = i.extVertexArrayObject; if (e && this.vao) { e.deleteVertexArrayOES(this.vao); this.vao = null; this.boundProgram = null; this.boundVertexBuffer = null; this.boundElementBuffer = null } }; function C() { } eN.extend(C.prototype, { centerAndZoomIn: function (T, jZ, j0) { j0 = j0 || {}; if (!this.loaded) { this.firstTileLoad = false } jZ = this._getProperZoom(jZ).zoom; if (j0.noAnimation !== true && this.loaded) { var jV = this._ifUseAnimation(T, jZ); if (jV) { this.flyToIn(T, jZ, j0); return } } var jX = this; if (!T && !jZ) { return } this._stopAllAnimations(); if (T && !T.equals(this.centerPoint)) { this.fire(new fy("oncenter_changed")) } if (jZ && jZ !== this.zoomLevel) { this.fire(new fy("onzoom_changed")) } T = T || this.centerPoint; jZ = jZ || this.zoomLevel; jZ = this._getProperZoom(jZ).zoom; if (this.mapType === BMAP_EARTH_MAP) { if (!this._earth) { this.mapType = BMAPGL_NORMAL_MAP; this.temp.originMapType = BMAP_EARTH_MAP; function jY() { jX._earth = new bw.Earth(jX, { showRealSunlight: jX.config.showRealSunlight, showMilkyway: jX.config.showMilkyway, earthBackground: jX.config.earthBackground }); jX._proxyEarthEvents(); jX._changeEarthMapType(BMAP_EARTH_MAP); eN.extend(jX, bw.EarthView.prototype); delete jX.temp.originMapType } gO.load("earth", function () { if (bw["FeatureStyle" + jX.config.style]) { jY() } else { jX.loadMapStyleFiles(function () { jY() }) } }) } } this.lastLevel = this.zoomLevel || jZ; this.zoomLevel = jZ; var jW = new fy("onload"); jW.point = T; jW.zoom = jZ; this.centerPoint = new ct(T.lng, T.lat); this.defaultZoomLevel = this.defaultZoomLevel || this.zoomLevel; this.defaultCenter = this.defaultCenter || this.centerPoint; if (this.mapType !== BMAP_EARTH_MAP) { this.centerPoint = this.restrictCenter(this.centerPoint) } if (!this.loaded && !(this.temp.originMapType === BMAP_EARTH_MAP)) { var i = this.config.defaultMaxBounds; var jU = new m(i, "baidu", this.mapType); if (this.mapType !== BMAP_NONE_MAP) { var jT = new hg({ mapType: this.mapType, copyright: jU, dataType: this.mapType === BMAP_SATELLITE_MAP ? gt : ht, customLayer: this.mapType === BMAP_SATELLITE_MAP, baseLayer: true, transparentPng: false, tileTypeName: this.mapType === BMAP_SATELLITE_MAP ? "web" : "na" }); jT._isInnerLayer = true; this.addTileLayer(jT); this.baseLayerAdded = true } if (this.mapType === BMAP_SATELLITE_MAP && this._isHybridShow === true) { this._addHybirdMap() } this.on("zoom_changed", function () { if (this._heading === 0) { return } if (this.getZoom() < 7 && this.config.restrictCenter === true) { jX.resetHeading() } }) } this.loaded = true; this.dispatchEvent(jW); j0.callback && j0.callback() }, _ifUseAnimation: function (jT, jY) { var jX = this.getSize(); var T = { zoom: this.zoomLevel }; var j0 = { zoom: jY }; var jZ = this.pointToPixelIn(this.centerPoint); var jU = this.pointToPixelIn(jT, T); var jW = this.pointToPixelIn(this.centerPoint, j0); var j2 = this.pointToPixelIn(jT, j0); var jV = Math.abs(jZ.x - jU.x); var i = Math.abs(jZ.y - jU.y); var e = Math.abs(jW.x - j2.x); var j1 = Math.abs(jW.y - j2.y); if ((jV > jX.width || i > jX.height) && (e > jX.width || j1 > jX.height)) { return false } return true }, _setPlatformPosition: function (j0, jZ, j2) { j2 = j2 || {}; if (j0 === 0 && jZ === 0 && !j2.point) { return } if (isNaN(j2.initMapOffsetX)) { j2.initMapOffsetX = this.offsetX } if (isNaN(j2.initMapOffsetY)) { j2.initMapOffsetY = this.offsetY } var jW = ik(this._heading); if (this._tilt > 0) { jZ = jZ / Math.cos(ik(this._tilt)) } var j1 = j0 * Math.cos(jW) + jZ * Math.sin(jW); var jY = -j0 * Math.sin(jW) + jZ * Math.cos(jW); j1 = j1 + j2.initMapOffsetX; jY = jY + j2.initMapOffsetY; if (j2.point) { var i = this.restrictCenter(j2.point); if (!i.equals(this.centerPoint)) { this.centerPoint = i.clone(); this.fire(new fy("oncenter_changed")) } } else { var jT = this.offsetX - j1; var e = this.offsetY - jY; var jX = this.centerPoint.lng; var jV = this.centerPoint.lat; var jU = new ct(jX, jV); var T = this.getZoomUnits(); this.centerPoint = this.restrictCenter(new ct(jU.lng + jT * T, jU.lat - e * T), T); this.fire(new fy("oncenter_changed")) } this.offsetX = j1; this.offsetY = jY; this.dispatchEvent(new fy("onmoving")) }, restrictCenter: function (j1, e) { if (this.config.restrictCenter === false) { return j1 } e = e || this.getZoomUnits(); var jZ = this.pixelToPointIn(new e8(this.width, 0), { center: j1 }); var jW = this.pixelToPointIn(new e8(0, this.height), { center: j1 }); var j2 = j1.lng; var j7 = j1.lat; if (this.config.restrictBounds !== null && !this.config.restrictBounds.isEmpty()) { var j6 = this.config.restrictBounds; var T = j6.getSouthWest(); var j4 = j6.getNorthEast(); var j0 = iS.convertLL2MC(T); var jU = iS.convertLL2MC(j4); var jX = this.calcNewZoomByRestriction(j2, j7, jW, jZ, j0.lng, jU.lng, j0.lat, jU.lat); if (jX > this.zoomLevel) { this.zoomLevel = jX; return j1 } j1.lng = this.calcNewLngByBounds(j2, jW, jZ, j0.lng, jU.lng, e); j1.lat = this.calcNewLatByBounds(j7, jW, jZ, j0.lat, jU.lat, e); return j1 } var jY = this.pixelToPointIn(new e8(0, 0), { center: j1 }); var jT = this.pixelToPointIn(new e8(0, this.height), { center: j1 }); if (this.zoomLevel < 5) { if (jY.lat > hv.MAX_LAT && jT.lat < hv.MIN_LAT) { var i = hv.MAX_LAT - j1.lat; var jV = j1.lat - hv.MIN_LAT; var j5; if (i < jV) { j5 = i / (this.height / 2) } else { j5 = jV / (this.height / 2) } var j3 = 18 - p(j5); this.zoomLevel = j3; return j1 } } if (jY.lat > hv.MAX_LAT) { j1.lat = hv.MAX_LAT - this.height / 2 * e } else { if (jT.lat < hv.MIN_LAT) { j1.lat = hv.MIN_LAT + this.height / 2 * e } } return j1 }, calcNewZoomByRestriction: function (j0, jZ, e, jY, jU, jW, jT, jV) { var j3 = 0; var j4 = 0; if (typeof jT === "number" && typeof jV === "number" && jY.lat > jV && e.lat < jT) { var T = jV - jZ; var i = jZ - jT; var jX; if (T < i) { jX = T / (this.height / 2) } else { jX = i / (this.height / 2) } j3 = 18 - p(jX) } if (typeof jU === "number" && typeof jW === "number" && jY.lng > jW && e.lng < jU) { var j2 = jW - j0; var j1 = j0 - jU; var jX; if (j2 < j1) { jX = j2 / (this.width / 2) } else { jX = j1 / (this.width / 2) } j4 = 18 - p(jX) } return Math.max(j3, j4) || this.zoomLevel }, calcNewLatByBounds: function (i, jT, T, jW, jV, e) { var jU = i; if (T.lat > jV) { jU = jV - this.height / 2 * e } else { if (jT.lat < jW) { jU = jW + this.height / 2 * e } } return jU }, calcNewLngByBounds: function (jW, jV, jT, jU, T, e) { var i = jW; if (jT.lng > T) { i = T - this.width / 2 * e } else { if (jV.lng < jU) { i = jU + this.width / 2 * e } } return i }, zoomTo: function (e, j4, j5) { var j0 = ea[this.mapType]; if (!j0) { return } var jZ = this._getProperZoom(e); e = jZ.zoom; if (this.zoomLevel === e) { j5 && j5.callback && j5.callback(); return } var jV = e; this.lastLevel = this.zoomLevel; j5 = j5 || {}; if (this.zoomEventStatus === "idle") { this.fire(new fy("onzoomstart")); this.zoomEventStatus = "zooming" } if (!j4 && (this.getInfoWindow() && this.temp.infoWin && this.temp.infoWin.isOpen())) { j4 = iS.convertLL2MC(this.getInfoWindow().getPoint()) } var T = null; if (j5.fixPixel) { T = j5.fixPixel } else { if (j4) { T = this.pointToPixelIn(j4, { useRound: false }) } } var jW = this.pixelToPointIn(T); var jX = this.centerPoint.clone(); this.fixPoint = j4; this.fixPixel = T; this.fixCenter = jX; this.mousePosMCPoint = jW; if (j5.noAnimation) { e = jZ.zoom; this.zoomLevel = e; this.fire(new fy("onzoom_changed")); var jU = this.getCurrentMaxTilt(); if (this._tilt > jU) { this._tilt = jU } if (j4) { if (this._heading % 360 !== 0 || this._tilt > 0) { var i = this._webglMapCamera.fromScreenPixelToMC(T.x, T.y, { center: jX, zoom: this.zoomLevel }); if (i) { var j1 = i.sub(jW); var jT = jX.sub(j1); this.centerPoint = this.restrictCenter(jT) } } else { var jY = this.getZoomUnits(); var jT = new ct(j4.lng - jY * (T.x - this.width / 2), j4.lat + jY * (T.y - this.height / 2)); this.centerPoint = this.restrictCenter(jT, jY) } this.fire(new fy("oncenter_changed")) } this._checkFireZoomend(); j5.callback && j5.callback(); return } this._animationInfo.zoom = { current: this.zoomLevel, diff: e - this.zoomLevel, target: e }; var j2 = this; j2._checkFireZoomend(); var j3 = this._tilt; if (this.fixPoint || j3 > hv.MAX_DRAG_TILT_L2) { j5.renderCallback = function () { var j9 = j2.getCurrentMaxTilt(); if (j2._tilt > j9) { j2._tilt = j9 } var ka = j2.fixPixel; if (!j2.fixPixel || !j2.fixPoint) { return } var j6 = j2.fixPixel; var kg = j2.fixPoint; var kd = j2.fixCenter; var kb = j2.mousePosMCPoint; if (j2._heading % 360 !== 0 || j2._tilt > 0) { var j7 = j2._webglMapCamera.fromScreenPixelToMC(j6.x, j6.y, { center: kd, zoom: j2.zoomLevel, tilt: j2._tilt }); if (j7) { var kf = j7.sub(kb); var j8 = kd.sub(kf); j2.centerPoint = j2.restrictCenter(j8) } } else { var kc = j6; var ke = j2.getZoomUnits(); var j8 = new ct(kg.lng - ke * (kc.x - j2.width / 2), kg.lat + ke * (kc.y - j2.height / 2)); j2.centerPoint = j2.restrictCenter(j8, ke) } j2.fire(new fy("oncenter_changed")) } } if (j5.fromMouseWheel === true) { this._startInfiniteZoomAnimation(j5); j5.callback && j5.callback(); return } this._startAnimation(j5) }, _checkFireZoomend: function () { var e = this; if (e.fireZoomendTimer) { clearTimeout(e.fireZoomendTimer) } e.fireZoomendTimer = setTimeout(function () { if (e.zoomEventStatus === "zooming") { e.fire(new fy("onzoomend")); e.zoomEventStatus = "idle" } e.fireZoomendTimer = null }, 150) }, deepZoomMedia: function (e) { var i = this; if (!i.temp.isStdCtrlBusy) { i.temp.isStdCtrlBusy = true; i.deepZoomTo(i.zoomLevel + e); setTimeout(function () { i.temp.isStdCtrlBusy = false }, 400) } }, deepZoomTo: function (e) { this.zoomTo(e) }, flyToIn: function (T, kn, j8) { j8 = j8 || {}; var jU = this._getProperZoom(kn); kn = jU.zoom; if (this.centerPoint.equals(T) && this.zoomLevel === kn && typeof j8.heading !== "number" && typeof j8.tilt !== "number") { return } var e = this.getHeading() % 360; var j0 = this.getTilt(); var j6 = 0; var ka = 0; var j3 = this.getBounds().containsPoint(T); if (typeof j8.heading === "number") { j6 = j8.heading } else { if (j3) { j6 = e } } if (typeof j8.tilt === "number") { ka = j8.tilt } else { if (j3) { ka = j0 } } this._heading = e; var kk = j6 - e; var kg = ka - j0; var j4 = this; var jW = this.zoomLevel; var jX = 1.42; var kc = this.zoomScale(kn - jW); var kp = this.getZoomUnits(); var j2 = this.centerPoint.div(kp); var kq = T.div(kp); var kj = this.worldSize(); var kf = jX; var ke = Math.max(this.width, this.height); var kd = ke / kc; var j1 = kq.sub(j2).mag(); var i = kf * kf; function km(ks) { var kr = (kd * kd - ke * ke + (ks ? -1 : 1) * i * i * j1 * j1) / (2 * (ks ? kd : ke) * i * j1); return Math.log(Math.sqrt(kr * kr + 1) - kr) } function jT(kr) { return (Math.exp(kr) - Math.exp(-kr)) / 2 } function jY(kr) { return (Math.exp(kr) + Math.exp(-kr)) / 2 } function j7(kr) { return jT(kr) / jY(kr) } var jZ = km(0); var kh = function (kr) { return (jY(jZ) / jY(jZ + kf * kr)) }; var ki = function (kr) { return ke * ((jY(jZ) * j7(jZ + kf * kr) - jT(jZ)) / i) / j1 }; var jV = (km(1) - jZ) / kf; if (Math.abs(j1) < 0.000001 || jV === Infinity || isNaN(jV)) { if (Math.abs(ke - kd) < 0.000001) { this._animationInfo.zoom = { current: this.zoomLevel, diff: kn - this.zoomLevel }; this._animationInfo.center = { current: this.centerPoint, diff: T.sub(this.centerPoint) }; this._animationInfo.heading = { current: e, diff: j6 - e }; this._animationInfo.tilt = { current: j0, diff: ka - j0 }; this.setLock(true); this._startAnimation({ callback: function (kr) { j4.setLock(false); if (j8.callback) { j8.callback(kr) } }, duration: j8.duration }); return } var ko = kd < ke ? -1 : 1; jV = Math.abs(Math.log(kd / ke)) / kf; ki = function () { return 0 }; kh = function (kr) { return Math.exp(ko * kf * kr) } } var kl = 1.7; if (jV < 0.3) { kl = 0.8 } else { if (jV > 5) { kl = (jV - 5) / 2 + kl } } var j9 = j8.duration || 1000 * jV / kl; if (isNaN(j9)) { var kb = {}; for (var j5 in j8) { kb[j5] = j8[j5]; kb.noAnimation = true } this.centerAndZoomIn(T, kn, kb); return } this.fire(new fy("onmovestart")); this.fire(new fy("onzoomstart")); this.setLock(true); this._startAnimation({ duration: j9, renderCallback: function (kr, ks) { var kt = kr * jV; var kw = ki(kt); var kv = jW + j4.scaleZoom(1 / kh(kt)); if (kv < j4.getMinZoom()) { kv = j4.getMinZoom() } if (kv > j4.getMaxZoom()) { kv = j4.getMaxZoom() } if (kv !== j4.zoomLevel) { j4.zoomLevel = kv; j4.fire(new fy("onzoom_changed")) } j4.centerPoint = j2.add(kq.sub(j2).mult(kw)).mult(kp); j4.fire(new fy("oncenter_changed")); if (typeof j6 === "number") { var ku = kr / 0.7; if (ku > 1) { ku = 1 } j4.setHeading(e + kk * kr, { noAnimation: true }) } if (typeof ka === "number") { j4.setTilt(j0 + kg * kr, { noAnimation: true }) } }, callback: function (kr, ks) { j4.setLock(false); if (ks && ks.stop === true) { j4.fire(new fy("onmoveend")); j4.fire(new fy("onzoomend")); j8.callback && j8.callback(kr); return } if (kn !== j4.zoomLevel) { j4.zoomLevel = kn; j4.fire(new fy("onzoom_changed")) } j4.fire(new fy("onmoveend")); j4.fire(new fy("onzoomend")); j8.callback && j8.callback(kr) } }) }, zoomScale: function (e) { return Math.pow(2, e) }, scaleZoom: function (e) { return Math.log(e) / Math.LN2 }, panToIn: function (i, T) { T = T || {}; if (!i || i.equals(this.centerPoint)) { T.callback && T.callback(); return } var jT = this.pointToPixelIn(i); var e = Math.round(this.width / 2); var jV = Math.round(this.height / 2); var jU = this._ifUseAnimation(i, this.zoomLevel); if (T.noAnimation === true || jU === false) { this._stopAllAnimations(); this._panToIn(e - jT.x, jV - jT.y, i); T.callback && T.callback(); return } this.flyToIn(i, this.zoomLevel, T) }, _panToIn: function (i, e, jT) { var T = this.temp; if (T.operating === true) { return } if (T.dragAni) { T.dragAni.stop(false, { readyToMove: true }); T.dragAni = null } this.dispatchEvent(new fy("onmovestart")); this._setPlatformPosition(i, e, { point: jT }); this.dispatchEvent(new fy("onmoveend")) }, _stopAllAnimations: function (e) { e = e || {}; if (this._ani) { this._ani.stop(!!e.goToEnd, { stopCurrentAnimation: e.stopCurrentAnimation }); this._ani = null } if (this._infiniteAni) { this._infiniteAni.stop(); this._infiniteAni = null } }, panBy: function (i, e, T) { i = Math.round(i) || 0; e = Math.round(e) || 0; T = T || {}; if (Math.abs(i) <= this.width && Math.abs(e) <= this.height && T.noAnimation !== true) { this._panBy(i, e, T) } else { this._panToIn(i, e, T.point); T.callback && T.callback() } }, _panBy: function (i, e, jU) { if (this.temp.operating === true) { return } jU = jU || {}; this.dispatchEvent(new fy("onmovestart")); var jT = this; var T = jT.temp; T.pl = jT.offsetX; T.pt = jT.offsetY; if (T.tlPan) { T.tlPan.cancel() } if (T.dragAni) { T.dragAni.stop(false, { readyToMove: true }); T.dragAni = null } T.tlPan = new fo({ fps: jU.fps || jT.config.fps, duration: jU.duration || jT.config.actionDuration, transition: jU.transition || go.easeInOutQuad, render: function (jV) { this.terminative = jT.temp.operating; if (jT.temp.operating) { return } jT._setPlatformPosition(i * jV, e * jV, { initMapOffsetX: T.pl, initMapOffsetY: T.pt }) }, finish: function (jV) { jT.dispatchEvent(new fy("onmoveend")); jT.temp.tlPan = false; if (jT.temp.stopArrow === true) { jT.temp.stopArrow = false; if (jT.temp.arrow !== 0) { jT._arrow() } } } }) }, _startAnimation: function (i) { var jU = this._animationInfo; var T = this; i = i || {}; if (T._ani) { T._ani.stop(!!i.goToEnd, { stopCurrentAnimation: i.stopCurrentAnimation }) } if (T._infiniteAni) { T._infiniteAni.stop(); T._infiniteAni = null } var jV = i.duration || 500; var jW = i.transition || go.ease; var e = new fy("onanimation_start"); this.fire(e); if (i.unstopable) { jU = this._animationInfoUnstopable } var jT = new fo({ duration: jV, transition: jW, render: function (jZ, jY) { for (var jX in jU) { if (!jU.hasOwnProperty(jX)) { continue } var j1 = jU[jX].current; var j0 = jU[jX].diff; T._setValueTick(jX, j1, j0, jZ) } if (i.renderCallback) { i.renderCallback(jZ, jY) } }, finish: function (jX) { T.fire(new fy("onanimation_end")); if (i.unstopable) { T._animationInfoUnstopable = {}; T._unstopableAni = null } else { T._ani = null; T._animationInfo = {} } if (i.mapNeedCbk) { i.mapNeedCbk() } if (i.callback) { i.callback(jX) } }, onStop: function (jX) { jX = jX || {}; T.fire(new fy("onanimation_end")); if (jX.stopCurrentAnimation) { T._animationInfo = {} } T._ani = null; if (i.mapNeedCbk) { i.mapNeedCbk() } if (i.callback) { i.callback(null, { stop: true }) } } }); if (i.unstopable) { T._unstopableAni = jT } else { T._ani = jT } }, _startInfiniteZoomAnimation: function (e) { var i = this; if (i._ani) { i._ani.stop(!!e.goToEnd, { stopCurrentAnimation: e.stopCurrentAnimation }) } if (i._infiniteAni) { return } this.fire(new fy("onanimation_start")); i._infiniteAni = new fo({ duration: 10000, transition: go.linear, render: function () { var T = i._animationInfo.zoom; if (Math.abs(T.current - T.target) < 0.001) { i._setValue("zoom", T.target); i._infiniteAni && i._infiniteAni.stop(); return } T.current += (T.target - T.current) * 0.35; i._setValue("zoom", T.current); if (e.renderCallback) { e.renderCallback() } }, finish: function () { i._infiniteAni = null; i._animationInfo = {}; i.fire(new fy("onanimation_end")); if (e.callback) { e.callback() } }, onStop: function () { i._infiniteAni = null; i._animationInfo = {}; i.fire(new fy("onanimation_end")); if (e.callback) { e.callback() } } }) }, _setValue: function (e, T) { if (e === "zoom") { this._preZoomLevel = this.zoomLevel; var i = this._getProperZoom(T); T = i.zoom; if (T !== this.zoomLevel) { this.zoomLevel = T; if (T < 5) { this.restrictCenter(this.centerPoint) } this.fire(new fy("on" + e + "_changed")) } return } else { if (e === "center") { this.centerPoint = T } } this["_" + e] = T; this.fire(new fy("on" + e + "_changed")) }, _setValueTick: function (e, jU, jT, i) { if (e === "center") { var T = new ct(jU.lng + jT.lng * i, jU.lat + jT.lat * i); this._setValue(e, T); return } if (e === "zoom") { this._setValue(e, Math.pow(jU, 1 - i) * Math.pow(jU + jT, i)); return } this._setValue(e, jU + jT * i) }, setHeading: function (jT, i) { i = i || {}; if (jT === this._heading) { i.callback && i.callback(); return } var T = d5(this._heading, 360); var e = d5(jT, 360); if (e === T) { this._heading = jT; i.callback && i.callback(); return } if (i.noAnimation) { this._setValue("heading", jT); i.callback && i.callback(); return } if (i.unstopable) { this._animationInfoUnstopable.heading = { current: this._heading, diff: jT - this._heading } } else { this._animationInfo.heading = { current: this._heading, diff: jT - this._heading } } this._startAnimation(i) }, resetHeading: function (e) { var i = this._heading; while (i < 0) { i += 360 } i = i % 360; if (i > 180) { i -= 360 } this._heading = i; e = e || {}; e.unstopable = true; this.setHeading(0, e) }, getHeading: function () { return this._heading }, setTilt: function (e, i) { i = i || {}; if (e === this._tilt) { i.callback && i.callback(); return } if (e > hv.MAX_TILT) { e = hv.MAX_TILT } if (e < hv.MIN_TILT) { e = hv.MIN_TILT } if (i && i.noAnimation) { this._setValue("tilt", e); i.callback && i.callback(); return } this._animationInfo.tilt = { current: this._tilt, diff: e - this._tilt }; this._startAnimation(i) }, getTilt: function () { return this._tilt }, getCenterIn: function () { return this.centerPoint }, getZoom: function () { return this.zoomLevel }, getCameraPosition: function (T) { T = T || {}; var e = T.center || this.centerPoint; var jT = T.zoom || this.zoomLevel; var jW = typeof T.heading === "number" ? T.heading : this._heading; var i = typeof T.tilt === "number" ? T.tilt : this._tilt; var jV = this._webglMapCamera.generateMVMatrix(e, jT, jW, i); var jU = mat4.create(Float32Array); mat4.invert(jU, jV); return this._webglMapCamera.getPosition(jU) } }); function bi(i) { this._jobQueue = []; this._idleOnlyJobQueue = []; var e = this; this.isIdle = true; i.on("updateframe", function (jT) { var T = 12 - jT.frameTime; T = T < 1 ? 1 : T; e.isIdle = false; if (e.idleWorkTimer) { clearInterval(e.idleWorkTimer); e.idleWorkTimer = null } e.runJobs(T) }); this._idleWorkerTicker = (function (T) { return function () { if (T.isIdle) { T.runJobs(); T.runIdleOnlyJobs() } } })(this); i.on("mapglidle", function () { e.isIdle = true; e.runJobs(); e.runIdleOnlyJobs(); e.idleWorkTimer = setInterval(e._idleWorkerTicker, bi.MAX_IDLE_TIME) }); i.on("destroy", function () { if (e.idleWorkTimer) { clearInterval(e.idleWorkTimer); e.idleWorkTimer = null } }) } bi.MAX_IDLE_TIME = 50; bi.MAX_FRAME_TIME = 6; bi.prototype.runJobs = function (i) { if (this._jobQueue.length === 0) { return } var jT = hV(); var e = 0; i = i || bi.MAX_FRAME_TIME; while (this._jobQueue.length && e < i) { var T = this._jobQueue.shift(); if (T.state !== "invalid") { T.call() } e = hV() - jT } }; bi.prototype.runIdleOnlyJobs = function () { if (this._idleOnlyJobQueue.length === 0) { return } var T = hV(); var e = 0; while (this._idleOnlyJobQueue.length && e < bi.MAX_IDLE_TIME) { var i = this._idleOnlyJobQueue.shift(); if (i.state !== "invalid") { i.call() } e = hV() - T } }; bi.prototype.checkIdleRunning = function () { if (this.isIdle && !this.idleWorkTimer) { this.runJobs(); this.runIdleOnlyJobs(); this.idleWorkTimer = setInterval(this._idleWorkerTicker, 50) } }; bi.prototype.addJob = function (e) { this._jobQueue.push(e); this.checkIdleRunning() }; bi.prototype.clearJobs = function () { this._jobQueue.length = 0; this._idleOnlyJobQueue.length = 0 }; bi.prototype.addIdleOnlyJob = function (e) { this._idleOnlyJobQueue.push(e); this.checkIdleRunning() }; var dJ = {}; (function (jW) { if (!j0) { var j0 = 0.000001 } if (!i) { var i = (typeof Float32Array !== "undefined") ? Float32Array : Array } if (!jU) { var jU = Math.random } var T = {}; var jV = Math.PI / 180; T.toRadian = function (j1) { return j1 * jV }; var jZ = {}; jZ.create = function (j2) { j2 = j2 || i; var j1 = new j2(2); j1[0] = 0; j1[1] = 0; return j1 }; jZ.clone = function (j1, j3) { j3 = j3 || i; var j2 = new j3(2); j2[0] = j1[0]; j2[1] = j1[1]; return j2 }; jZ.fromValues = function (j1, j4, j3) { j3 = j3 || i; var j2 = new j3(2); j2[0] = j1; j2[1] = j4; return j2 }; jZ.copy = function (j2, j1) { j2[0] = j1[0]; j2[1] = j1[1]; return j2 }; jZ.set = function (j2, j1, j3) { j2[0] = j1; j2[1] = j3; return j2 }; jZ.add = function (j3, j2, j1) { j3[0] = j2[0] + j1[0]; j3[1] = j2[1] + j1[1]; return j3 }; jZ.subtract = function (j3, j2, j1) { j3[0] = j2[0] - j1[0]; j3[1] = j2[1] - j1[1]; return j3 }; jZ.sub = jZ.subtract; jZ.multiply = function (j3, j2, j1) { j3[0] = j2[0] * j1[0]; j3[1] = j2[1] * j1[1]; return j3 }; jZ.mul = jZ.multiply; jZ.divide = function (j3, j2, j1) { j3[0] = j2[0] / j1[0]; j3[1] = j2[1] / j1[1]; return j3 }; jZ.div = jZ.divide; jZ.min = function (j3, j2, j1) { j3[0] = Math.min(j2[0], j1[0]); j3[1] = Math.min(j2[1], j1[1]); return j3 }; jZ.max = function (j3, j2, j1) { j3[0] = Math.max(j2[0], j1[0]); j3[1] = Math.max(j2[1], j1[1]); return j3 }; jZ.scale = function (j3, j2, j1) { j3[0] = j2[0] * j1; j3[1] = j2[1] * j1; return j3 }; jZ.scaleAndAdd = function (j3, j2, j1, j4) { j3[0] = j2[0] + (j1[0] * j4); j3[1] = j2[1] + (j1[1] * j4); return j3 }; jZ.distance = function (j3, j2) { var j1 = j2[0] - j3[0], j4 = j2[1] - j3[1]; return Math.sqrt(j1 * j1 + j4 * j4) }; jZ.dist = jZ.distance; jZ.squaredDistance = function (j3, j2) { var j1 = j2[0] - j3[0], j4 = j2[1] - j3[1]; return j1 * j1 + j4 * j4 }; jZ.sqrDist = jZ.squaredDistance; jZ.length = function (j2) { var j1 = j2[0], j3 = j2[1]; return Math.sqrt(j1 * j1 + j3 * j3) }; jZ.len = jZ.length; jZ.squaredLength = function (j2) { var j1 = j2[0], j3 = j2[1]; return j1 * j1 + j3 * j3 }; jZ.sqrLen = jZ.squaredLength; jZ.negate = function (j2, j1) { j2[0] = -j1[0]; j2[1] = -j1[1]; return j2 }; jZ.normalize = function (j4, j3) { var j2 = j3[0], j5 = j3[1]; var j1 = j2 * j2 + j5 * j5; if (j1 > 0) { j1 = 1 / Math.sqrt(j1); j4[0] = j3[0] * j1; j4[1] = j3[1] * j1 } return j4 }; jZ.dot = function (j2, j1) { return j2[0] * j1[0] + j2[1] * j1[1] }; jZ.cross = function (j3, j2, j1) { var j4 = j2[0] * j1[1] - j2[1] * j1[0]; j3[0] = j3[1] = 0; j3[2] = j4; return j3 }; jZ.lerp = function (j3, j2, j1, j4) { var j6 = j2[0], j5 = j2[1]; j3[0] = j6 + j4 * (j1[0] - j6); j3[1] = j5 + j4 * (j1[1] - j5); return j3 }; jZ.random = function (j1, j3) { j3 = j3 || 1; var j2 = jU() * 2 * Math.PI; j1[0] = Math.cos(j2) * j3; j1[1] = Math.sin(j2) * j3; return j1 }; jZ.transformMat2 = function (j4, j3, j2) { var j1 = j3[0], j5 = j3[1]; j4[0] = j2[0] * j1 + j2[2] * j5; j4[1] = j2[1] * j1 + j2[3] * j5; return j4 }; jZ.transformMat2d = function (j4, j3, j2) { var j1 = j3[0], j5 = j3[1]; j4[0] = j2[0] * j1 + j2[2] * j5 + j2[4]; j4[1] = j2[1] * j1 + j2[3] * j5 + j2[5]; return j4 }; jZ.transformMat3 = function (j4, j3, j2) { var j1 = j3[0], j5 = j3[1]; j4[0] = j2[0] * j1 + j2[3] * j5 + j2[6]; j4[1] = j2[1] * j1 + j2[4] * j5 + j2[7]; return j4 }; jZ.transformMat4 = function (j4, j3, j2) { var j1 = j3[0], j5 = j3[1]; j4[0] = j2[0] * j1 + j2[4] * j5 + j2[12]; j4[1] = j2[1] * j1 + j2[5] * j5 + j2[13]; return j4 }; jZ.rotate = function (j4, j2, j1, j8) { var j7 = j2[0] - j1[0]; var j6 = j2[1] - j1[1]; var j3 = Math.sin(j8); var j5 = Math.cos(j8); j4[0] = j7 * j5 - j6 * j3 + j1[0]; j4[1] = j7 * j3 + j6 * j5 + j1[1]; return j4 }; jZ.forEach = (function () { var j1 = jZ.create(); return function (j4, j8, j9, j7, j6, j2) { var j5, j3; if (!j8) { j8 = 2 } if (!j9) { j9 = 0 } if (j7) { j3 = Math.min((j7 * j8) + j9, j4.length) } else { j3 = j4.length } for (j5 = j9; j5 < j3; j5 += j8) { j1[0] = j4[j5]; j1[1] = j4[j5 + 1]; j6(j1, j1, j2); j4[j5] = j1[0]; j4[j5 + 1] = j1[1] } return j4 } })(); jZ.str = function (j1) { return "vec2(" + j1[0] + ", " + j1[1] + ")" }; jW.vec2 = jZ; var jY = {}; jY.create = function (j2) { j2 = j2 || i; var j1 = new j2(3); j1[0] = 0; j1[1] = 0; j1[2] = 0; return j1 }; jY.clone = function (j1, j3) { j3 = j3 || i; var j2 = new j3(3); j2[0] = j1[0]; j2[1] = j1[1]; j2[2] = j1[2]; return j2 }; jY.fromValues = function (j1, j5, j3, j4) { j4 = j4 || i; var j2 = new j4(3); j2[0] = j1; j2[1] = j5; j2[2] = j3; return j2 }; jY.copy = function (j2, j1) { j2[0] = j1[0]; j2[1] = j1[1]; j2[2] = j1[2]; return j2 }; jY.set = function (j2, j1, j4, j3) { j2[0] = j1; j2[1] = j4; j2[2] = j3; return j2 }; jY.add = function (j3, j2, j1) { j3[0] = j2[0] + j1[0]; j3[1] = j2[1] + j1[1]; j3[2] = j2[2] + j1[2]; return j3 }; jY.subtract = function (j3, j2, j1) { j3[0] = j2[0] - j1[0]; j3[1] = j2[1] - j1[1]; j3[2] = j2[2] - j1[2]; return j3 }; jY.sub = jY.subtract; jY.multiply = function (j3, j2, j1) { j3[0] = j2[0] * j1[0]; j3[1] = j2[1] * j1[1]; j3[2] = j2[2] * j1[2]; return j3 }; jY.mul = jY.multiply; jY.divide = function (j3, j2, j1) { j3[0] = j2[0] / j1[0]; j3[1] = j2[1] / j1[1]; j3[2] = j2[2] / j1[2]; return j3 }; jY.div = jY.divide; jY.min = function (j3, j2, j1) { j3[0] = Math.min(j2[0], j1[0]); j3[1] = Math.min(j2[1], j1[1]); j3[2] = Math.min(j2[2], j1[2]); return j3 }; jY.max = function (j3, j2, j1) { j3[0] = Math.max(j2[0], j1[0]); j3[1] = Math.max(j2[1], j1[1]); j3[2] = Math.max(j2[2], j1[2]); return j3 }; jY.scale = function (j3, j2, j1) { j3[0] = j2[0] * j1; j3[1] = j2[1] * j1; j3[2] = j2[2] * j1; return j3 }; jY.scaleAndAdd = function (j3, j2, j1, j4) { j3[0] = j2[0] + (j1[0] * j4); j3[1] = j2[1] + (j1[1] * j4); j3[2] = j2[2] + (j1[2] * j4); return j3 }; jY.distance = function (j3, j2) { var j1 = j2[0] - j3[0], j5 = j2[1] - j3[1], j4 = j2[2] - j3[2]; return Math.sqrt(j1 * j1 + j5 * j5 + j4 * j4) }; jY.dist = jY.distance; jY.squaredDistance = function (j3, j2) { var j1 = j2[0] - j3[0], j5 = j2[1] - j3[1], j4 = j2[2] - j3[2]; return j1 * j1 + j5 * j5 + j4 * j4 }; jY.sqrDist = jY.squaredDistance; jY.length = function (j2) { var j1 = j2[0], j4 = j2[1], j3 = j2[2]; return Math.sqrt(j1 * j1 + j4 * j4 + j3 * j3) }; jY.len = jY.length; jY.squaredLength = function (j2) { var j1 = j2[0], j4 = j2[1], j3 = j2[2]; return j1 * j1 + j4 * j4 + j3 * j3 }; jY.sqrLen = jY.squaredLength; jY.negate = function (j2, j1) { j2[0] = -j1[0]; j2[1] = -j1[1]; j2[2] = -j1[2]; return j2 }; jY.normalize = function (j4, j3) { var j2 = j3[0], j6 = j3[1], j5 = j3[2]; var j1 = j2 * j2 + j6 * j6 + j5 * j5; if (j1 > 0) { j1 = 1 / Math.sqrt(j1); j4[0] = j3[0] * j1; j4[1] = j3[1] * j1; j4[2] = j3[2] * j1 } return j4 }; jY.dot = function (j2, j1) { return j2[0] * j1[0] + j2[1] * j1[1] + j2[2] * j1[2] }; jY.cross = function (j2, j7, j6) { var j1 = j7[0], j9 = j7[1], j8 = j7[2], j5 = j6[0], j4 = j6[1], j3 = j6[2]; j2[0] = j9 * j3 - j8 * j4; j2[1] = j8 * j5 - j1 * j3; j2[2] = j1 * j4 - j9 * j5; return j2 }; jY.lerp = function (j3, j2, j1, j4) { var j7 = j2[0], j6 = j2[1], j5 = j2[2]; j3[0] = j7 + j4 * (j1[0] - j7); j3[1] = j6 + j4 * (j1[1] - j6); j3[2] = j5 + j4 * (j1[2] - j5); return j3 }; jY.random = function (j1, j5) { j5 = j5 || 1; var j3 = jU() * 2 * Math.PI; var j4 = (jU() * 2) - 1; var j2 = Math.sqrt(1 - j4 * j4) * j5; j1[0] = Math.cos(j3) * j2; j1[1] = Math.sin(j3) * j2; j1[2] = j4 * j5; return j1 }; jY.transformMat4 = function (j4, j3, j2) { var j1 = j3[0], j6 = j3[1], j5 = j3[2]; j4[0] = j2[0] * j1 + j2[4] * j6 + j2[8] * j5 + j2[12]; j4[1] = j2[1] * j1 + j2[5] * j6 + j2[9] * j5 + j2[13]; j4[2] = j2[2] * j1 + j2[6] * j6 + j2[10] * j5 + j2[14]; return j4 }; jY.transformMat3 = function (j4, j3, j2) { var j1 = j3[0], j6 = j3[1], j5 = j3[2]; j4[0] = j1 * j2[0] + j6 * j2[3] + j5 * j2[6]; j4[1] = j1 * j2[1] + j6 * j2[4] + j5 * j2[7]; j4[2] = j1 * j2[2] + j6 * j2[5] + j5 * j2[8]; return j4 }; jY.transformQuat = function (j7, kd, j1) { var ke = kd[0], kc = kd[1], kb = kd[2], j9 = j1[0], j8 = j1[1], j6 = j1[2], ka = j1[3], j4 = ka * ke + j8 * kb - j6 * kc, j3 = ka * kc + j6 * ke - j9 * kb, j2 = ka * kb + j9 * kc - j8 * ke, j5 = -j9 * ke - j8 * kc - j6 * kb; j7[0] = j4 * ka + j5 * -j9 + j3 * -j6 - j2 * -j8; j7[1] = j3 * ka + j5 * -j8 + j2 * -j9 - j4 * -j6; j7[2] = j2 * ka + j5 * -j6 + j4 * -j8 - j3 * -j9; return j7 }; jY.rotateX = function (j3, j2, j1, j6) { var j5 = [], j4 = []; j5[0] = j2[0] - j1[0]; j5[1] = j2[1] - j1[1]; j5[2] = j2[2] - j1[2]; j4[0] = j5[0]; j4[1] = j5[1] * Math.cos(j6) - j5[2] * Math.sin(j6); j4[2] = j5[1] * Math.sin(j6) + j5[2] * Math.cos(j6); j3[0] = j4[0] + j1[0]; j3[1] = j4[1] + j1[1]; j3[2] = j4[2] + j1[2]; return j3 }; jY.rotateY = function (j3, j2, j1, j6) { var j5 = [], j4 = []; j5[0] = j2[0] - j1[0]; j5[1] = j2[1] - j1[1]; j5[2] = j2[2] - j1[2]; j4[0] = j5[2] * Math.sin(j6) + j5[0] * Math.cos(j6); j4[1] = j5[1]; j4[2] = j5[2] * Math.cos(j6) - j5[0] * Math.sin(j6); j3[0] = j4[0] + j1[0]; j3[1] = j4[1] + j1[1]; j3[2] = j4[2] + j1[2]; return j3 }; jY.rotateZ = function (j3, j2, j1, j6) { var j5 = [], j4 = []; j5[0] = j2[0] - j1[0]; j5[1] = j2[1] - j1[1]; j5[2] = j2[2] - j1[2]; j4[0] = j5[0] * Math.cos(j6) - j5[1] * Math.sin(j6); j4[1] = j5[0] * Math.sin(j6) + j5[1] * Math.cos(j6); j4[2] = j5[2]; j3[0] = j4[0] + j1[0]; j3[1] = j4[1] + j1[1]; j3[2] = j4[2] + j1[2]; return j3 }; jY.forEach = (function () { var j1 = jY.create(); return function (j4, j8, j9, j7, j6, j2) { var j5, j3; if (!j8) { j8 = 3 } if (!j9) { j9 = 0 } if (j7) { j3 = Math.min((j7 * j8) + j9, j4.length) } else { j3 = j4.length } for (j5 = j9; j5 < j3; j5 += j8) { j1[0] = j4[j5]; j1[1] = j4[j5 + 1]; j1[2] = j4[j5 + 2]; j6(j1, j1, j2); j4[j5] = j1[0]; j4[j5 + 1] = j1[1]; j4[j5 + 2] = j1[2] } return j4 } })(); jY.str = function (j1) { return "vec3(" + j1[0] + ", " + j1[1] + ", " + j1[2] + ")" }; jW.vec3 = jY; var jX = {}; jX.create = function (j2) { j2 = j2 || i; var j1 = new j2(4); j1[0] = 0; j1[1] = 0; j1[2] = 0; j1[3] = 0; return j1 }; jX.clone = function (j1, j3) { j3 = j3 || i; var j2 = new j3(4); j2[0] = j1[0]; j2[1] = j1[1]; j2[2] = j1[2]; j2[3] = j1[3]; return j2 }; jX.fromValues = function (j1, j6, j4, j2, j5) { j5 = j5 || i; var j3 = new j5(4); j3[0] = j1; j3[1] = j6; j3[2] = j4; j3[3] = j2; return j3 }; jX.copy = function (j2, j1) { j2[0] = j1[0]; j2[1] = j1[1]; j2[2] = j1[2]; j2[3] = j1[3]; return j2 }; jX.set = function (j3, j1, j5, j4, j2) { j3[0] = j1; j3[1] = j5; j3[2] = j4; j3[3] = j2; return j3 }; jX.add = function (j3, j2, j1) { j3[0] = j2[0] + j1[0]; j3[1] = j2[1] + j1[1]; j3[2] = j2[2] + j1[2]; j3[3] = j2[3] + j1[3]; return j3 }; jX.subtract = function (j3, j2, j1) { j3[0] = j2[0] - j1[0]; j3[1] = j2[1] - j1[1]; j3[2] = j2[2] - j1[2]; j3[3] = j2[3] - j1[3]; return j3 }; jX.sub = jX.subtract; jX.multiply = function (j3, j2, j1) { j3[0] = j2[0] * j1[0]; j3[1] = j2[1] * j1[1]; j3[2] = j2[2] * j1[2]; j3[3] = j2[3] * j1[3]; return j3 }; jX.mul = jX.multiply; jX.divide = function (j3, j2, j1) { j3[0] = j2[0] / j1[0]; j3[1] = j2[1] / j1[1]; j3[2] = j2[2] / j1[2]; j3[3] = j2[3] / j1[3]; return j3 }; jX.div = jX.divide; jX.min = function (j3, j2, j1) { j3[0] = Math.min(j2[0], j1[0]); j3[1] = Math.min(j2[1], j1[1]); j3[2] = Math.min(j2[2], j1[2]); j3[3] = Math.min(j2[3], j1[3]); return j3 }; jX.max = function (j3, j2, j1) { j3[0] = Math.max(j2[0], j1[0]); j3[1] = Math.max(j2[1], j1[1]); j3[2] = Math.max(j2[2], j1[2]); j3[3] = Math.max(j2[3], j1[3]); return j3 }; jX.scale = function (j3, j2, j1) { j3[0] = j2[0] * j1; j3[1] = j2[1] * j1; j3[2] = j2[2] * j1; j3[3] = j2[3] * j1; return j3 }; jX.scaleAndAdd = function (j3, j2, j1, j4) { j3[0] = j2[0] + (j1[0] * j4); j3[1] = j2[1] + (j1[1] * j4); j3[2] = j2[2] + (j1[2] * j4); j3[3] = j2[3] + (j1[3] * j4); return j3 }; jX.distance = function (j4, j2) { var j1 = j2[0] - j4[0], j6 = j2[1] - j4[1], j5 = j2[2] - j4[2], j3 = j2[3] - j4[3]; return Math.sqrt(j1 * j1 + j6 * j6 + j5 * j5 + j3 * j3) }; jX.dist = jX.distance; jX.squaredDistance = function (j4, j2) { var j1 = j2[0] - j4[0], j6 = j2[1] - j4[1], j5 = j2[2] - j4[2], j3 = j2[3] - j4[3]; return j1 * j1 + j6 * j6 + j5 * j5 + j3 * j3 }; jX.sqrDist = jX.squaredDistance; jX.length = function (j3) { var j1 = j3[0], j5 = j3[1], j4 = j3[2], j2 = j3[3]; return Math.sqrt(j1 * j1 + j5 * j5 + j4 * j4 + j2 * j2) }; jX.len = jX.length; jX.squaredLength = function (j3) { var j1 = j3[0], j5 = j3[1], j4 = j3[2], j2 = j3[3]; return j1 * j1 + j5 * j5 + j4 * j4 + j2 * j2 }; jX.sqrLen = jX.squaredLength; jX.negate = function (j2, j1) { j2[0] = -j1[0]; j2[1] = -j1[1]; j2[2] = -j1[2]; j2[3] = -j1[3]; return j2 }; jX.normalize = function (j5, j4) { var j2 = j4[0], j7 = j4[1], j6 = j4[2], j3 = j4[3]; var j1 = j2 * j2 + j7 * j7 + j6 * j6 + j3 * j3; if (j1 > 0) { j1 = 1 / Math.sqrt(j1); j5[0] = j4[0] * j1; j5[1] = j4[1] * j1; j5[2] = j4[2] * j1; j5[3] = j4[3] * j1 } return j5 }; jX.dot = function (j2, j1) { return j2[0] * j1[0] + j2[1] * j1[1] + j2[2] * j1[2] + j2[3] * j1[3] }; jX.lerp = function (j3, j2, j1, j4) { var j7 = j2[0], j6 = j2[1], j5 = j2[2], j8 = j2[3]; j3[0] = j7 + j4 * (j1[0] - j7); j3[1] = j6 + j4 * (j1[1] - j6); j3[2] = j5 + j4 * (j1[2] - j5); j3[3] = j8 + j4 * (j1[3] - j8); return j3 }; jX.random = function (j1, j2) { j2 = j2 || 1; j1[0] = jU(); j1[1] = jU(); j1[2] = jU(); j1[3] = jU(); jX.normalize(j1, j1); jX.scale(j1, j1, j2); return j1 }; jX.transformMat4 = function (j5, j4, j2) { var j1 = j4[0], j7 = j4[1], j6 = j4[2], j3 = j4[3]; j5[0] = j2[0] * j1 + j2[4] * j7 + j2[8] * j6 + j2[12] * j3; j5[1] = j2[1] * j1 + j2[5] * j7 + j2[9] * j6 + j2[13] * j3; j5[2] = j2[2] * j1 + j2[6] * j7 + j2[10] * j6 + j2[14] * j3; j5[3] = j2[3] * j1 + j2[7] * j7 + j2[11] * j6 + j2[15] * j3; return j5 }; jX.transformQuat = function (j7, kd, j1) { var ke = kd[0], kc = kd[1], kb = kd[2], j9 = j1[0], j8 = j1[1], j6 = j1[2], ka = j1[3], j4 = ka * ke + j8 * kb - j6 * kc, j3 = ka * kc + j6 * ke - j9 * kb, j2 = ka * kb + j9 * kc - j8 * ke, j5 = -j9 * ke - j8 * kc - j6 * kb; j7[0] = j4 * ka + j5 * -j9 + j3 * -j6 - j2 * -j8; j7[1] = j3 * ka + j5 * -j8 + j2 * -j9 - j4 * -j6; j7[2] = j2 * ka + j5 * -j6 + j4 * -j8 - j3 * -j9; return j7 }; jX.forEach = (function () { var j1 = jX.create(); return function (j4, j8, j9, j7, j6, j2) { var j5, j3; if (!j8) { j8 = 4 } if (!j9) { j9 = 0 } if (j7) { j3 = Math.min((j7 * j8) + j9, j4.length) } else { j3 = j4.length } for (j5 = j9; j5 < j3; j5 += j8) { j1[0] = j4[j5]; j1[1] = j4[j5 + 1]; j1[2] = j4[j5 + 2]; j1[3] = j4[j5 + 3]; j6(j1, j1, j2); j4[j5] = j1[0]; j4[j5 + 1] = j1[1]; j4[j5 + 2] = j1[2]; j4[j5 + 3] = j1[3] } return j4 } })(); jX.str = function (j1) { return "vec4(" + j1[0] + ", " + j1[1] + ", " + j1[2] + ", " + j1[3] + ")" }; jW.vec4 = jX; var jT = {}; jT.create = function (j2) { j2 = j2 || i; var j1 = new j2(4); j1[0] = 1; j1[1] = 0; j1[2] = 0; j1[3] = 1; return j1 }; jT.clone = function (j1, j3) { j3 = j3 || i; var j2 = new j3(4); j2[0] = j1[0]; j2[1] = j1[1]; j2[2] = j1[2]; j2[3] = j1[3]; return j2 }; jT.copy = function (j2, j1) { j2[0] = j1[0]; j2[1] = j1[1]; j2[2] = j1[2]; j2[3] = j1[3]; return j2 }; jT.identity = function (j1) { j1[0] = 1; j1[1] = 0; j1[2] = 0; j1[3] = 1; return j1 }; jT.transpose = function (j3, j2) { if (j3 === j2) { var j1 = j2[1]; j3[1] = j2[2]; j3[2] = j1 } else { j3[0] = j2[0]; j3[1] = j2[2]; j3[2] = j2[1]; j3[3] = j2[3] } return j3 }; jT.invert = function (j5, j3) { var j4 = j3[0], j2 = j3[1], j1 = j3[2], j7 = j3[3], j6 = j4 * j7 - j1 * j2; if (!j6) { return null } j6 = 1 / j6; j5[0] = j7 * j6; j5[1] = -j2 * j6; j5[2] = -j1 * j6; j5[3] = j4 * j6; return j5 }; jT.adjoint = function (j3, j1) { var j2 = j1[0]; j3[0] = j1[3]; j3[1] = -j1[1]; j3[2] = -j1[2]; j3[3] = j2; return j3 }; jT.determinant = function (j1) { return j1[0] * j1[3] - j1[2] * j1[1] }; jT.multiply = function (j5, ka, j8) { var j4 = ka[0], j3 = ka[1], j2 = ka[2], j1 = ka[3]; var kb = j8[0], j9 = j8[1], j7 = j8[2], j6 = j8[3]; j5[0] = j4 * kb + j2 * j9; j5[1] = j3 * kb + j1 * j9; j5[2] = j4 * j7 + j2 * j6; j5[3] = j3 * j7 + j1 * j6; return j5 }; jT.mul = jT.multiply; jT.rotate = function (j5, j8, j7) { var j4 = j8[0], j3 = j8[1], j2 = j8[2], j1 = j8[3], j9 = Math.sin(j7), j6 = Math.cos(j7); j5[0] = j4 * j6 + j2 * j9; j5[1] = j3 * j6 + j1 * j9; j5[2] = j4 * -j9 + j2 * j6; j5[3] = j3 * -j9 + j1 * j6; return j5 }; jT.scale = function (j5, j6, j8) { var j4 = j6[0], j3 = j6[1], j2 = j6[2], j1 = j6[3], j9 = j8[0], j7 = j8[1]; j5[0] = j4 * j9; j5[1] = j3 * j9; j5[2] = j2 * j7; j5[3] = j1 * j7; return j5 }; jT.str = function (j1) { return "mat2(" + j1[0] + ", " + j1[1] + ", " + j1[2] + ", " + j1[3] + ")" }; jT.frob = function (j1) { return (Math.sqrt(Math.pow(j1[0], 2) + Math.pow(j1[1], 2) + Math.pow(j1[2], 2) + Math.pow(j1[3], 2))) }; jT.LDU = function (j1, j4, j3, j2) { j1[2] = j2[2] / j2[0]; j3[0] = j2[0]; j3[1] = j2[1]; j3[3] = j2[3] - j1[2] * j3[1]; return [j1, j4, j3] }; jW.mat2 = jT; var e = {}; e.create = function (j2) { j2 = j2 || i; var j1 = new j2(16); j1[0] = 1; j1[1] = 0; j1[2] = 0; j1[3] = 0; j1[4] = 0; j1[5] = 1; j1[6] = 0; j1[7] = 0; j1[8] = 0; j1[9] = 0; j1[10] = 1; j1[11] = 0; j1[12] = 0; j1[13] = 0; j1[14] = 0; j1[15] = 1; return j1 }; e.clone = function (j1) { var j2 = new i(16); j2[0] = j1[0]; j2[1] = j1[1]; j2[2] = j1[2]; j2[3] = j1[3]; j2[4] = j1[4]; j2[5] = j1[5]; j2[6] = j1[6]; j2[7] = j1[7]; j2[8] = j1[8]; j2[9] = j1[9]; j2[10] = j1[10]; j2[11] = j1[11]; j2[12] = j1[12]; j2[13] = j1[13]; j2[14] = j1[14]; j2[15] = j1[15]; return j2 }; e.copy = function (j2, j1) { j2[0] = j1[0]; j2[1] = j1[1]; j2[2] = j1[2]; j2[3] = j1[3]; j2[4] = j1[4]; j2[5] = j1[5]; j2[6] = j1[6]; j2[7] = j1[7]; j2[8] = j1[8]; j2[9] = j1[9]; j2[10] = j1[10]; j2[11] = j1[11]; j2[12] = j1[12]; j2[13] = j1[13]; j2[14] = j1[14]; j2[15] = j1[15]; return j2 }; e.identity = function (j1) { j1[0] = 1; j1[1] = 0; j1[2] = 0; j1[3] = 0; j1[4] = 0; j1[5] = 1; j1[6] = 0; j1[7] = 0; j1[8] = 0; j1[9] = 0; j1[10] = 1; j1[11] = 0; j1[12] = 0; j1[13] = 0; j1[14] = 0; j1[15] = 1; return j1 }; e.transpose = function (j4, j3) { if (j4 === j3) { var j8 = j3[1], j6 = j3[2], j5 = j3[3], j1 = j3[6], j7 = j3[7], j2 = j3[11]; j4[1] = j3[4]; j4[2] = j3[8]; j4[3] = j3[12]; j4[4] = j8; j4[6] = j3[9]; j4[7] = j3[13]; j4[8] = j6; j4[9] = j1; j4[11] = j3[14]; j4[12] = j5; j4[13] = j7; j4[14] = j2 } else { j4[0] = j3[0]; j4[1] = j3[4]; j4[2] = j3[8]; j4[3] = j3[12]; j4[4] = j3[1]; j4[5] = j3[5]; j4[6] = j3[9]; j4[7] = j3[13]; j4[8] = j3[2]; j4[9] = j3[6]; j4[10] = j3[10]; j4[11] = j3[14]; j4[12] = j3[3]; j4[13] = j3[7]; j4[14] = j3[11]; j4[15] = j3[15] } return j4 }; e.invert = function (kk, kp) { var kt = kp[0], kr = kp[1], kq = kp[2], kn = kp[3], j5 = kp[4], j4 = kp[5], j3 = kp[6], j2 = kp[7], kj = kp[8], ki = kp[9], kh = kp[10], kg = kp[11], kv = kp[12], ku = kp[13], ks = kp[14], ko = kp[15], kf = kt * j4 - kr * j5, ke = kt * j3 - kq * j5, kd = kt * j2 - kn * j5, kc = kr * j3 - kq * j4, kb = kr * j2 - kn * j4, ka = kq * j2 - kn * j3, j9 = kj * ku - ki * kv, j8 = kj * ks - kh * kv, j7 = kj * ko - kg * kv, j6 = ki * ks - kh * ku, km = ki * ko - kg * ku, kl = kh * ko - kg * ks, j1 = kf * kl - ke * km + kd * j6 + kc * j7 - kb * j8 + ka * j9; if (!j1) { return null } j1 = 1 / j1; kk[0] = (j4 * kl - j3 * km + j2 * j6) * j1; kk[1] = (kq * km - kr * kl - kn * j6) * j1; kk[2] = (ku * ka - ks * kb + ko * kc) * j1; kk[3] = (kh * kb - ki * ka - kg * kc) * j1; kk[4] = (j3 * j7 - j5 * kl - j2 * j8) * j1; kk[5] = (kt * kl - kq * j7 + kn * j8) * j1; kk[6] = (ks * kd - kv * ka - ko * ke) * j1; kk[7] = (kj * ka - kh * kd + kg * ke) * j1; kk[8] = (j5 * km - j4 * j7 + j2 * j9) * j1; kk[9] = (kr * j7 - kt * km - kn * j9) * j1; kk[10] = (kv * kb - ku * kd + ko * kf) * j1; kk[11] = (ki * kd - kj * kb - kg * kf) * j1; kk[12] = (j4 * j8 - j5 * j6 - j3 * j9) * j1; kk[13] = (kt * j6 - kr * j8 + kq * j9) * j1; kk[14] = (ku * ke - kv * kc - ks * kf) * j1; kk[15] = (kj * kc - ki * ke + kh * kf) * j1; return kk }; e.adjoint = function (j9, kc) { var kg = kc[0], ke = kc[1], kd = kc[2], ka = kc[3], j4 = kc[4], j3 = kc[5], j2 = kc[6], j1 = kc[7], j8 = kc[8], j7 = kc[9], j6 = kc[10], j5 = kc[11], ki = kc[12], kh = kc[13], kf = kc[14], kb = kc[15]; j9[0] = (j3 * (j6 * kb - j5 * kf) - j7 * (j2 * kb - j1 * kf) + kh * (j2 * j5 - j1 * j6)); j9[1] = -(ke * (j6 * kb - j5 * kf) - j7 * (kd * kb - ka * kf) + kh * (kd * j5 - ka * j6)); j9[2] = (ke * (j2 * kb - j1 * kf) - j3 * (kd * kb - ka * kf) + kh * (kd * j1 - ka * j2)); j9[3] = -(ke * (j2 * j5 - j1 * j6) - j3 * (kd * j5 - ka * j6) + j7 * (kd * j1 - ka * j2)); j9[4] = -(j4 * (j6 * kb - j5 * kf) - j8 * (j2 * kb - j1 * kf) + ki * (j2 * j5 - j1 * j6)); j9[5] = (kg * (j6 * kb - j5 * kf) - j8 * (kd * kb - ka * kf) + ki * (kd * j5 - ka * j6)); j9[6] = -(kg * (j2 * kb - j1 * kf) - j4 * (kd * kb - ka * kf) + ki * (kd * j1 - ka * j2)); j9[7] = (kg * (j2 * j5 - j1 * j6) - j4 * (kd * j5 - ka * j6) + j8 * (kd * j1 - ka * j2)); j9[8] = (j4 * (j7 * kb - j5 * kh) - j8 * (j3 * kb - j1 * kh) + ki * (j3 * j5 - j1 * j7)); j9[9] = -(kg * (j7 * kb - j5 * kh) - j8 * (ke * kb - ka * kh) + ki * (ke * j5 - ka * j7)); j9[10] = (kg * (j3 * kb - j1 * kh) - j4 * (ke * kb - ka * kh) + ki * (ke * j1 - ka * j3)); j9[11] = -(kg * (j3 * j5 - j1 * j7) - j4 * (ke * j5 - ka * j7) + j8 * (ke * j1 - ka * j3)); j9[12] = -(j4 * (j7 * kf - j6 * kh) - j8 * (j3 * kf - j2 * kh) + ki * (j3 * j6 - j2 * j7)); j9[13] = (kg * (j7 * kf - j6 * kh) - j8 * (ke * kf - kd * kh) + ki * (ke * j6 - kd * j7)); j9[14] = -(kg * (j3 * kf - j2 * kh) - j4 * (ke * kf - kd * kh) + ki * (ke * j2 - kd * j3)); j9[15] = (kg * (j3 * j6 - j2 * j7) - j4 * (ke * j6 - kd * j7) + j8 * (ke * j2 - kd * j3)); return j9 }; e.determinant = function (km) { var kr = km[0], kp = km[1], kn = km[2], kl = km[3], j4 = km[4], j3 = km[5], j2 = km[6], j1 = km[7], ki = km[8], kh = km[9], kg = km[10], kf = km[11], kt = km[12], ks = km[13], kq = km[14], ko = km[15], ke = kr * j3 - kp * j4, kd = kr * j2 - kn * j4, kc = kr * j1 - kl * j4, kb = kp * j2 - kn * j3, ka = kp * j1 - kl * j3, j9 = kn * j1 - kl * j2, j8 = ki * ks - kh * kt, j7 = ki * kq - kg * kt, j6 = ki * ko - kf * kt, j5 = kh * kq - kg * ks, kk = kh * ko - kf * ks, kj = kg * ko - kf * kq; return ke * kj - kd * kk + kc * j5 + kb * j6 - ka * j7 + j9 * j8 }; e.multiply = function (kd, kh, ke) { var kl = kh[0], kk = kh[1], ki = kh[2], kf = kh[3], j7 = kh[4], j5 = kh[5], j3 = kh[6], j1 = kh[7], kc = kh[8], kb = kh[9], ka = kh[10], j9 = kh[11], kn = kh[12], km = kh[13], kj = kh[14], kg = kh[15]; var j8 = ke[0], j6 = ke[1], j4 = ke[2], j2 = ke[3]; kd[0] = j8 * kl + j6 * j7 + j4 * kc + j2 * kn; kd[1] = j8 * kk + j6 * j5 + j4 * kb + j2 * km; kd[2] = j8 * ki + j6 * j3 + j4 * ka + j2 * kj; kd[3] = j8 * kf + j6 * j1 + j4 * j9 + j2 * kg; j8 = ke[4]; j6 = ke[5]; j4 = ke[6]; j2 = ke[7]; kd[4] = j8 * kl + j6 * j7 + j4 * kc + j2 * kn; kd[5] = j8 * kk + j6 * j5 + j4 * kb + j2 * km; kd[6] = j8 * ki + j6 * j3 + j4 * ka + j2 * kj; kd[7] = j8 * kf + j6 * j1 + j4 * j9 + j2 * kg; j8 = ke[8]; j6 = ke[9]; j4 = ke[10]; j2 = ke[11]; kd[8] = j8 * kl + j6 * j7 + j4 * kc + j2 * kn; kd[9] = j8 * kk + j6 * j5 + j4 * kb + j2 * km; kd[10] = j8 * ki + j6 * j3 + j4 * ka + j2 * kj; kd[11] = j8 * kf + j6 * j1 + j4 * j9 + j2 * kg; j8 = ke[12]; j6 = ke[13]; j4 = ke[14]; j2 = ke[15]; kd[12] = j8 * kl + j6 * j7 + j4 * kc + j2 * kn; kd[13] = j8 * kk + j6 * j5 + j4 * kb + j2 * km; kd[14] = j8 * ki + j6 * j3 + j4 * ka + j2 * kj; kd[15] = j8 * kf + j6 * j1 + j4 * j9 + j2 * kg; return kd }; e.mul = e.multiply; e.translate = function (kd, kf, j8) { var j7 = j8[0], j6 = j8[1], j5 = j8[2], ki, kh, kg, ke, j4, j3, j2, j1, kc, kb, ka, j9; if (kf === kd) { kd[12] = kf[0] * j7 + kf[4] * j6 + kf[8] * j5 + kf[12]; kd[13] = kf[1] * j7 + kf[5] * j6 + kf[9] * j5 + kf[13]; kd[14] = kf[2] * j7 + kf[6] * j6 + kf[10] * j5 + kf[14]; kd[15] = kf[3] * j7 + kf[7] * j6 + kf[11] * j5 + kf[15] } else { ki = kf[0]; kh = kf[1]; kg = kf[2]; ke = kf[3]; j4 = kf[4]; j3 = kf[5]; j2 = kf[6]; j1 = kf[7]; kc = kf[8]; kb = kf[9]; ka = kf[10]; j9 = kf[11]; kd[0] = ki; kd[1] = kh; kd[2] = kg; kd[3] = ke; kd[4] = j4; kd[5] = j3; kd[6] = j2; kd[7] = j1; kd[8] = kc; kd[9] = kb; kd[10] = ka; kd[11] = j9; kd[12] = ki * j7 + j4 * j6 + kc * j5 + kf[12]; kd[13] = kh * j7 + j3 * j6 + kb * j5 + kf[13]; kd[14] = kg * j7 + j2 * j6 + ka * j5 + kf[14]; kd[15] = ke * j7 + j1 * j6 + j9 * j5 + kf[15] } return kd }; e.scale = function (j4, j2, j3) { var j1 = j3[0], j6 = j3[1], j5 = j3[2]; j4[0] = j2[0] * j1; j4[1] = j2[1] * j1; j4[2] = j2[2] * j1; j4[3] = j2[3] * j1; j4[4] = j2[4] * j6; j4[5] = j2[5] * j6; j4[6] = j2[6] * j6; j4[7] = j2[7] * j6; j4[8] = j2[8] * j5; j4[9] = j2[9] * j5; j4[10] = j2[10] * j5; j4[11] = j2[11] * j5; j4[12] = j2[12]; j4[13] = j2[13]; j4[14] = j2[14]; j4[15] = j2[15]; return j4 }; e.rotate = function (kl, ks, ku, j1) { var kb = j1[0], ka = j1[1], j9 = j1[2], km = Math.sqrt(kb * kb + ka * ka + j9 * j9), kg, kq, kf, kw, kv, kt, kr, j8, j7, j6, j5, kk, kj, ki, kh, ke, kd, kc, kp, ko, kn, j4, j3, j2; if (Math.abs(km) < j0) { return null } km = 1 / km; kb *= km; ka *= km; j9 *= km; kg = Math.sin(ku); kq = Math.cos(ku); kf = 1 - kq; kw = ks[0]; kv = ks[1]; kt = ks[2]; kr = ks[3]; j8 = ks[4]; j7 = ks[5]; j6 = ks[6]; j5 = ks[7]; kk = ks[8]; kj = ks[9]; ki = ks[10]; kh = ks[11]; ke = kb * kb * kf + kq; kd = ka * kb * kf + j9 * kg; kc = j9 * kb * kf - ka * kg; kp = kb * ka * kf - j9 * kg; ko = ka * ka * kf + kq; kn = j9 * ka * kf + kb * kg; j4 = kb * j9 * kf + ka * kg; j3 = ka * j9 * kf - kb * kg; j2 = j9 * j9 * kf + kq; kl[0] = kw * ke + j8 * kd + kk * kc; kl[1] = kv * ke + j7 * kd + kj * kc; kl[2] = kt * ke + j6 * kd + ki * kc; kl[3] = kr * ke + j5 * kd + kh * kc; kl[4] = kw * kp + j8 * ko + kk * kn; kl[5] = kv * kp + j7 * ko + kj * kn; kl[6] = kt * kp + j6 * ko + ki * kn; kl[7] = kr * kp + j5 * ko + kh * kn; kl[8] = kw * j4 + j8 * j3 + kk * j2; kl[9] = kv * j4 + j7 * j3 + kj * j2; kl[10] = kt * j4 + j6 * j3 + ki * j2; kl[11] = kr * j4 + j5 * j3 + kh * j2; if (ks !== kl) { kl[12] = ks[12]; kl[13] = ks[13]; kl[14] = ks[14]; kl[15] = ks[15] } return kl }; e.rotateX = function (j1, j8, j7) { var kd = Math.sin(j7), j6 = Math.cos(j7), kc = j8[4], kb = j8[5], ka = j8[6], j9 = j8[7], j5 = j8[8], j4 = j8[9], j3 = j8[10], j2 = j8[11]; if (j8 !== j1) { j1[0] = j8[0]; j1[1] = j8[1]; j1[2] = j8[2]; j1[3] = j8[3]; j1[12] = j8[12]; j1[13] = j8[13]; j1[14] = j8[14]; j1[15] = j8[15] } j1[4] = kc * j6 + j5 * kd; j1[5] = kb * j6 + j4 * kd; j1[6] = ka * j6 + j3 * kd; j1[7] = j9 * j6 + j2 * kd; j1[8] = j5 * j6 - kc * kd; j1[9] = j4 * j6 - kb * kd; j1[10] = j3 * j6 - ka * kd; j1[11] = j2 * j6 - j9 * kd; return j1 }; e.rotateY = function (j5, kc, kb) { var kd = Math.sin(kb), ka = Math.cos(kb), j4 = kc[0], j3 = kc[1], j2 = kc[2], j1 = kc[3], j9 = kc[8], j8 = kc[9], j7 = kc[10], j6 = kc[11]; if (kc !== j5) { j5[4] = kc[4]; j5[5] = kc[5]; j5[6] = kc[6]; j5[7] = kc[7]; j5[12] = kc[12]; j5[13] = kc[13]; j5[14] = kc[14]; j5[15] = kc[15] } j5[0] = j4 * ka - j9 * kd; j5[1] = j3 * ka - j8 * kd; j5[2] = j2 * ka - j7 * kd; j5[3] = j1 * ka - j6 * kd; j5[8] = j4 * kd + j9 * ka; j5[9] = j3 * kd + j8 * ka; j5[10] = j2 * kd + j7 * ka; j5[11] = j1 * kd + j6 * ka; return j5 }; e.rotateZ = function (j5, j8, j7) { var kd = Math.sin(j7), j6 = Math.cos(j7), j4 = j8[0], j3 = j8[1], j2 = j8[2], j1 = j8[3], kc = j8[4], kb = j8[5], ka = j8[6], j9 = j8[7]; if (j8 !== j5) { j5[8] = j8[8]; j5[9] = j8[9]; j5[10] = j8[10]; j5[11] = j8[11]; j5[12] = j8[12]; j5[13] = j8[13]; j5[14] = j8[14]; j5[15] = j8[15] } j5[0] = j4 * j6 + kc * kd; j5[1] = j3 * j6 + kb * kd; j5[2] = j2 * j6 + ka * kd; j5[3] = j1 * j6 + j9 * kd; j5[4] = kc * j6 - j4 * kd; j5[5] = kb * j6 - j3 * kd; j5[6] = ka * j6 - j2 * kd; j5[7] = j9 * j6 - j1 * kd; return j5 }; e.fromRotationTranslation = function (ke, kc, ka) { var j7 = kc[0], j6 = kc[1], j5 = kc[2], j8 = kc[3], kf = j7 + j7, j1 = j6 + j6, j9 = j5 + j5, j4 = j7 * kf, j3 = j7 * j1, j2 = j7 * j9, kd = j6 * j1, kb = j6 * j9, ki = j5 * j9, kj = j8 * kf, kh = j8 * j1, kg = j8 * j9; ke[0] = 1 - (kd + ki); ke[1] = j3 + kg; ke[2] = j2 - kh; ke[3] = 0; ke[4] = j3 - kg; ke[5] = 1 - (j4 + ki); ke[6] = kb + kj; ke[7] = 0; ke[8] = j2 + kh; ke[9] = kb - kj; ke[10] = 1 - (j4 + kd); ke[11] = 0; ke[12] = ka[0]; ke[13] = ka[1]; ke[14] = ka[2]; ke[15] = 1; return ke }; e.fromQuat = function (kb, j8) { var j5 = j8[0], j4 = j8[1], j3 = j8[2], j6 = j8[3], kc = j5 + j5, j1 = j4 + j4, j7 = j3 + j3, j2 = j5 * kc, ka = j4 * kc, j9 = j4 * j1, ki = j3 * kc, kh = j3 * j1, kf = j3 * j7, kg = j6 * kc, ke = j6 * j1, kd = j6 * j7; kb[0] = 1 - j9 - kf; kb[1] = ka + kd; kb[2] = ki - ke; kb[3] = 0; kb[4] = ka - kd; kb[5] = 1 - j2 - kf; kb[6] = kh + kg; kb[7] = 0; kb[8] = ki + ke; kb[9] = kh - kg; kb[10] = 1 - j2 - j9; kb[11] = 0; kb[12] = 0; kb[13] = 0; kb[14] = 0; kb[15] = 1; return kb }; e.frustum = function (j5, j2, ka, j1, j9, j7, j6) { var j8 = 1 / (ka - j2), j4 = 1 / (j9 - j1), j3 = 1 / (j7 - j6); j5[0] = (j7 * 2) * j8; j5[1] = 0; j5[2] = 0; j5[3] = 0; j5[4] = 0; j5[5] = (j7 * 2) * j4; j5[6] = 0; j5[7] = 0; j5[8] = (ka + j2) * j8; j5[9] = (j9 + j1) * j4; j5[10] = (j6 + j7) * j3; j5[11] = -1; j5[12] = 0; j5[13] = 0; j5[14] = (j6 * j7 * 2) * j3; j5[15] = 0; return j5 }; e.perspective = function (j4, j3, j2, j5, j1) { var j7 = 1 / Math.tan(j3 / 2), j6 = 1 / (j5 - j1); j4[0] = j7 / j2; j4[1] = 0; j4[2] = 0; j4[3] = 0; j4[4] = 0; j4[5] = j7; j4[6] = 0; j4[7] = 0; j4[8] = 0; j4[9] = 0; j4[10] = (j1 + j5) * j6; j4[11] = -1; j4[12] = 0; j4[13] = 0; j4[14] = (2 * j1 * j5) * j6; j4[15] = 0; return j4 }; e.ortho = function (j4, j2, ka, j1, j8, j7, j6) { var j5 = 1 / (j2 - ka), j9 = 1 / (j1 - j8), j3 = 1 / (j7 - j6); j4[0] = -2 * j5; j4[1] = 0; j4[2] = 0; j4[3] = 0; j4[4] = 0; j4[5] = -2 * j9; j4[6] = 0; j4[7] = 0; j4[8] = 0; j4[9] = 0; j4[10] = 2 * j3; j4[11] = 0; j4[12] = (j2 + ka) * j5; j4[13] = (j8 + j1) * j9; j4[14] = (j6 + j7) * j3; j4[15] = 1; return j4 }; e.lookAt = function (kf, km, kn, j7) { var kl, kk, ki, j3, j2, j1, ka, j9, j8, kg, kj = km[0], kh = km[1], ke = km[2], j6 = j7[0], j5 = j7[1], j4 = j7[2], kd = kn[0], kc = kn[1], kb = kn[2]; if (Math.abs(kj - kd) < j0 && Math.abs(kh - kc) < j0 && Math.abs(ke - kb) < j0) { return e.identity(kf) } ka = kj - kd; j9 = kh - kc; j8 = ke - kb; kg = 1 / Math.sqrt(ka * ka + j9 * j9 + j8 * j8); ka *= kg; j9 *= kg; j8 *= kg; kl = j5 * j8 - j4 * j9; kk = j4 * ka - j6 * j8; ki = j6 * j9 - j5 * ka; kg = Math.sqrt(kl * kl + kk * kk + ki * ki); if (!kg) { kl = 0; kk = 0; ki = 0 } else { kg = 1 / kg; kl *= kg; kk *= kg; ki *= kg } j3 = j9 * ki - j8 * kk; j2 = j8 * kl - ka * ki; j1 = ka * kk - j9 * kl; kg = Math.sqrt(j3 * j3 + j2 * j2 + j1 * j1); if (!kg) { j3 = 0; j2 = 0; j1 = 0 } else { kg = 1 / kg; j3 *= kg; j2 *= kg; j1 *= kg } kf[0] = kl; kf[1] = j3; kf[2] = ka; kf[3] = 0; kf[4] = kk; kf[5] = j2; kf[6] = j9; kf[7] = 0; kf[8] = ki; kf[9] = j1; kf[10] = j8; kf[11] = 0; kf[12] = -(kl * kj + kk * kh + ki * ke); kf[13] = -(j3 * kj + j2 * kh + j1 * ke); kf[14] = -(ka * kj + j9 * kh + j8 * ke); kf[15] = 1; return kf }; e.str = function (j1) { return "mat4(" + j1[0] + ", " + j1[1] + ", " + j1[2] + ", " + j1[3] + ", " + j1[4] + ", " + j1[5] + ", " + j1[6] + ", " + j1[7] + ", " + j1[8] + ", " + j1[9] + ", " + j1[10] + ", " + j1[11] + ", " + j1[12] + ", " + j1[13] + ", " + j1[14] + ", " + j1[15] + ")" }; e.frob = function (j1) { return (Math.sqrt(Math.pow(j1[0], 2) + Math.pow(j1[1], 2) + Math.pow(j1[2], 2) + Math.pow(j1[3], 2) + Math.pow(j1[4], 2) + Math.pow(j1[5], 2) + Math.pow(j1[6], 2) + Math.pow(j1[6], 2) + Math.pow(j1[7], 2) + Math.pow(j1[8], 2) + Math.pow(j1[9], 2) + Math.pow(j1[10], 2) + Math.pow(j1[11], 2) + Math.pow(j1[12], 2) + Math.pow(j1[13], 2) + Math.pow(j1[14], 2) + Math.pow(j1[15], 2))) }; jW.mat4 = e })(window); function b9() { this.result = { bkData: [], eleData: [[], [], [], [], [], [], [], [], [], []], tileLabels: [] } } eN.extend(b9.prototype, { createLayer: function (T, i) { var e = this.result.bkData; i = i || {}; if (!e[T]) { e[T] = [[], [], []] } e[T].tileTypeName = i.tileTypeName || "na"; e[T].dataType = i.dataType || 2; e[T].png8 = i.png8 || false; e[T].clipTile = i.clipTile || false; e[T].boundary = i.boundary || false; if (i.ontology) { e[T].ontology = i.ontology } }, removeLayer: function (i) { var e = this.result.bkData; e[i] = null }, hasLayerBoundary: function () { var e = this.result.bkData; var T = false; for (var jT = 0; jT < e.length; jT++) { if (e[jT] && e[jT].boundary) { T = true; break } } return T }, getResult: function () { return this.result }, setData: function (jV, jU, jW) { var e = this.result.bkData; var T = e[jU] ? e[jU][jW] : null; if (!T) { return } for (var jT = 0; jT < T.length; jT++) { if (T[jT].key && T[jT].key === jV.key) { T[jT] = jV; return } } T.push(jV) }, setLabelData: function (T, i) { var e = this.result.tileLabels; e[i || 0] = T }, getLabelData: function (i) { var e = this.result.tileLabels; if (i === undefined) { return e } return e[i] || [] }, clearLabelData: function (i) { var e = this.result.tileLabels; if (i === undefined) { e = []; return } e[i] = [] }, setOverlayData: function (T, e, i) { if (!this.result.eleData[e]) { return } if (e >= 2 && e <= 4) { this.result.eleData[e][i || 0] = T; return } else { if (e === 0 || e === 5 || e === 6) { T.sort(function (jU, jT) { return jU.overlay.zIndex - jT.overlay.zIndex }) } } this.result.eleData[e] = T }, clearLabelOverlayData: function (e) { if (e === undefined) { this.result.eleData[2] = []; this.result.eleData[3] = []; this.result.eleData[4] = [] } this.result.eleData[2][e] = []; this.result.eleData[3][e] = []; this.result.eleData[4][e] = [] }, clearData: function (jT) { var e = this.result.bkData; if (typeof jT === "number") { if (e[jT]) { e[jT][0] = []; e[jT][1] = []; e[jT][2] = [] } return } for (var T = 0; T < e.length; T++) { if (!e[T]) { continue } e[T][0] = []; e[T][1] = []; e[T][2] = [] } }, sortThumbData: function (i) { var e = this.result.bkData; var T = e[i]; if (!T) { return } if (T[0] && T[0].length > 0) { T[0].sort(function (jU, jT) { return jU.tileInfo.useZoom - jT.tileInfo.useZoom }) } } }); var ga = (function () { var j3 = new Int8Array(4); var T = new Int32Array(j3.buffer, 0, 1); var jY = new Float32Array(j3.buffer, 0, 1); function j5(kc) { T[0] = kc; return jY[0] } function i(kc) { jY[0] = kc; return T[0] } function jZ(kc) { var ke = (kc[3] << 24 | kc[2] << 16 | kc[1] << 8 | kc[0]); var kd = j5(ke & 4278190079); return kd } var jU = 0; var jX = 1; var j1 = 2; var j9 = 0; var j6 = 1; var j4 = 2; var jV = 9; function j2(kc, kd) { var ke; if (kd % 2 === 0) { ke = [-kc[1], kc[0]] } else { ke = [kc[1], -kc[0]] } return ke } function e(kc, kd, ke) { var kf = j2(kc, kd); var kg; if (ke === jX) { return kf } else { if (kd === 4 || kd === 5) { kg = [kf[0] - kc[0], kf[1] - kc[1]] } else { kg = [kf[0] + kc[0], kf[1] + kc[1]] } if (ke === jU) { vec2.normalize(kg, kg) } return kg } } function j8(kd, kc) { return Math.sqrt(Math.pow(kd[0] - kc[0], 2) + Math.pow(kd[1] - kc[1], 2)) } function jT(kg, kf, ke, kc) { var kd = vec2.dot(kg, kf); if (ke === j4 || ke === j6) { if ((kc === 0 || kc === 1) && kd > 0) { return true } else { if ((kc === 2 || kc === 3) && kd < 0) { return true } } } if ((kc === 0 || kc === 1) && kd < 0) { return true } else { if ((kc === 2 || kc === 3) && kd > 0) { return true } } return false } function j0(kd, ki, kk) { var kj = j2(kd, ki); var kf; var kh = kd; var kg = kk; var km = []; vec2.normalize(km, [kh[0] + kg[0], kh[1] + kg[1]]); var kl = vec2.dot(kj, [-km[1], km[0]]); if (Math.abs(kl) < 0.1) { kl = 1 } var ke = 1 / kl; kf = [-km[1] * ke, km[0] * ke]; var kc = vec2.dot(kd, kf); if (kc < 0) { vec2.negate(kf, kf) } return { cos2: kc, offset: kf } } function kb(kd, ki, kk, kc) { var kj = j2(kd, ki); var kh; var kg; var kf; if (ki === 0 || ki === 1) { kh = kk; kg = kd } else { kh = kd; kg = kk } if (!kh || !kg) { return kj } var km = [kh[0] + kg[0], kh[1] + kg[1]]; if (km[0] === 0 && km[1] === 0) { vec2.normalize(km, kg) } else { vec2.normalize(km, km) } var kn = jT(km, kj, kc, ki); if (kn) { return kj } var kl = vec2.dot(kj, [-km[1], km[0]]); if (Math.abs(kl) < 0.1) { kl = 1 } var ke = 1 / kl; kf = [-km[1] * ke, km[0] * ke]; return kf } function ka(kn, ko, kh, kg, kp, km, kf, ki, ke, kl) { var kk; var kd = 0; var kc = false; kk = km.length / jV - 1; jW(ko[0], kn[0], kh[0], kp, kg, 4, ki, ke, undefined, km, kl); kk++; kd++; jW(ko[0], kn[0], kh[0], kp, kg, 5, ki, ke, undefined, km, kl); kk++; kd++; for (var kj = 0; kj < kn.length; kj++) { jW(ko[kj], kn[kj], kh[kj], kp, kg, 0, ki, ke, kn[kj - 1], km, kl); j7(kf, ++kk, ++kd, kc); jW(ko[kj], kn[kj], kh[kj], kp, kg, 1, ki, ke, kn[kj - 1], km, kl); j7(kf, ++kk, ++kd, kc); jW(ko[kj + 1], kn[kj], kh[kj + 1], kp, kg, 2, ki, ke, kn[kj + 1], km, kl); j7(kf, ++kk, ++kd, kc); jW(ko[kj + 1], kn[kj], kh[kj + 1], kp, kg, 3, ki, ke, kn[kj + 1], km, kl); j7(kf, ++kk, ++kd, kc); if (kg === j6 && kj !== kn.length - 1) { jW(ko[kj + 1], kn[kj], kh[kj + 1], kp, kg, 8, ki, ke, kn[kj + 1], km, kl); j7(kf, ++kk, ++kd, kc); kc = kc ? false : true } } jW(ko[ko.length - 1], kn[kn.length - 1], kh[ko.length - 1], kp, kg, 6, ki, ke, undefined, km, kl); j7(kf, ++kk, ++kd, kc); jW(ko[ko.length - 1], kn[kn.length - 1], kh[ko.length - 1], kp, kg, 7, ki, ke, undefined, km, kl); j7(kf, ++kk, ++kd, kc) } function jW(kp, kf, kj, kq, ke, kk, kh, kd, kn, km, kl) { var ko = kk % 2 === 0 ? 1 : -1; var ki; if (kk === 4 || kk === 5 || kk === 6 || kk === 7) { ki = e(kf, kk, kq) } else { if (kk === 0 || kk === 1 || kk === 2 || kk === 3) { ki = kb(kf, kk, kn, ke) } else { if (kk === 8) { var kg = j0(kf, kk, kn); ki = kg.offset; vec2.normalize(ki, ki); var kc = kg.cos2; if (kc < 0) { ko = -ko } } } } km[km.length] = kp[0] * 10; km[km.length] = kp[1] * 10; km[km.length] = ki[0] * kd * 10; km[km.length] = ki[1] * kd * 10; km[km.length] = kh; km[km.length] = ko; km[km.length] = 0; km[km.length] = kl || 0; km[km.length] = kj } function j7(kg, ke, kc, kf) { var kd; if (kc % 2 === 0) { if (kf) { kg[kg.length] = ke - 2; kg[kg.length] = ke - 1; kg[kg.length] = ke } else { kg[kg.length] = ke - 1; kg[kg.length] = ke - 2; kg[kg.length] = ke } } else { if (kf) { kg[kg.length] = ke - 1; kg[kg.length] = ke - 2; kg[kg.length] = ke } else { kg[kg.length] = ke - 2; kg[kg.length] = ke - 1; kg[kg.length] = ke } } } return { getVertexCount: function (kd, kc) { if (kc === j6) { return kd * 5 - 2 } else { return kd * 4 } }, buildData: function (kn, ke, ko, kk, kc, kh, kd, kl) { var km = []; var kj = 0; var kg = [0]; for (var ki = 0; ki < kn.length; ki++) { if (ki > 0) { kj += j8(kn[ki], kn[ki - 1]); kg.push(kj * 10) } if (ki !== kn.length - 1) { var kf = [kn[ki + 1][0] - kn[ki][0], kn[ki + 1][1] - kn[ki][1]]; var kp = []; if (kf[0] === 0 && kf[1] === 0) { kp = [0, 0] } else { vec2.normalize(kp, kf) } km[km.length] = [kp[0], kp[1]] } } return ka(km, kn, kg, ke, ko, kk, kc, jZ(kh), kd, kl) }, toTileSolidLineVertices: function (kg, kd) { var ke = new Float32Array(kg.length / jV * 5); var kc = new Int16Array(ke.buffer); var ki = 0; var kf = 0; for (var kh = 0; kh < kg.length; kh += jV) { kc[ki] = ~~kg[kh]; kc[ki + 1] = ~~kg[kh + 1]; kc[ki + 2] = ~~kg[kh + 2]; kc[ki + 3] = ~~kg[kh + 3]; ke[kf + 2] = kg[kh + 4]; kc[ki + 6] = kg[kh + 5]; kc[ki + 7] = kd ? kd : 0; kc[ki + 8] = kg[kh + 7]; kc[ki + 9] = 0; ki += 10; kf += 5 } return ke } } })(); var gt = 1; var ht = 2; var e4 = { drawIndex: 0, devicePixelRatio: f1(), zoomState: 1, curViewTilesInfo: null, iconSetImg: null, LAST_CALC_ZOOM: -1, LAST_LOAD_VECTOR_ZOOM_CHANGE: false, lastCollisionTestTime: 0, remove: function () { this.tileCache.clear(); this.removeLabel(this.drawIndex); if (this.tileLabels) { this.tileLabels = null } }, removeLabel: function (i) { if (this.dataType === 2) { this.map._featureMgr.clearData(i); this.map._featureMgr.clearLabelOverlayData(i); this.map._featureMgr.clearLabelData(i); var T = new fy("onspotsdataremove"); T.index = i; this.map.dispatchEvent(T); if (this.ontology && this.ontology instanceof dY) { this.clearCache(); return } var e = new fy("onlayer_update"); e.name = "na"; this.map.fire(e) } }, initDrawData: function () { this.drawIndex = this.zIndex; var e = { tileTypeName: this.tileType.getName(), dataType: this.dataType, png8: this.png8, clipTile: this.clipTile, boundary: this.boundary }; if (this.ontology) { e.ontology = this.ontology } this.map._featureMgr.createLayer(this.drawIndex, e); this.dispatchEvent(new fy("oninitDrawData")) }, destroyDrawData: function () { this.map._featureMgr.removeLayer(this.drawIndex); var i = new fy("onremoveLayerMask"); i.hasLayerBoundary = this.map._featureMgr.hasLayerBoundary(); this.map.dispatchEvent(i) }, setZIndex: function (jX) { jX = Math.abs(Math.floor(jX)) || 1; if (!jX || jX === this.zIndex) { return } var jU = this.map._featureMgr.result.bkData; var jT = this.map.tileMgr.tileLayers; var jZ = this.map._normalLayerMgr.layers; function j0(j5) { var j3 = null; var j4 = [jT, jZ]; for (var j1 = 0; j1 < j4.length; j1++) { for (var j2 = 0; j2 < j4[j1].length; j2++) { if (j4[j1][j2].zIndex === j5) { j3 = j4[j1][j2]; break } } if (j3) { break } } return j3 } var T = []; var jW = []; var jY = this.zIndex; var i = j0(jX); if (jU[jX] && i) { T.push(i); jW.push(jU[jX]); this.setTargetZIndex(jX); jU[jX] = jU[jY]; jU[jY] = null } else { this.setTargetZIndex(jX); jU[jX] = jU[jY]; jU[jY] = null; this.map.dispatchEvent(new fy("onupdate")); return } var jV = jX + 1; while (jV) { var e = j0(jV); if (jU[jV] && e) { T.push(e); jW.push(jU[jV]); T.shift().setTargetZIndex(jV); jU[jV] = jW.shift(); jV += 1 } else { T.shift().setTargetZIndex(jV); jU[jV] = jW.shift(); jV = 0 } } this.map.dispatchEvent(new fy("onupdate")) }, setZIndexTop: function () { var e = this.map._featureMgr.result.bkData; e[e.length] = e[this.zIndex]; e[this.zIndex] = null; this.setTargetZIndex(e.length - 1); this.map.dispatchEvent(new fy("onrefresh")) }, setUpLevel: function () { var e = this._getAdjoinZIndex("up"); if (this.zIndex !== e) { this.setZIndex(e) } }, setDownLevel: function () { var e = this._getAdjoinZIndex("down"); if (this.zIndex !== e) { this.setZIndex(e) } }, getTileKey: function (e, jT) { jT = jT || {}; var i = typeof jT.useZoom === "number" ? jT.useZoom : e.useZoom; var T = e.style || this.mapStyleId || "default"; return this.mapType + "_" + T + "_" + e.col + "_" + e.row + "_" + e.zoom + "_" + i }, getTileRenderDataKey: function (i) { var T = i.col; var jT = i.zoom; var e = i.baseTileSize; T = eQ.calcLoopParam(T, jT, e).col; return this.mapType + "_" + T + "_" + i.row + "_" + jT + "_" + i.useZoom }, getTileUnits: function (e) { var jT = this.map; var T = ea[jT.getMapType()]; var i = T.baseUnits * Math.pow(2, T.zoomLevelBase - e); return i }, getTilesUrl: function (jU, j3, j4) { var i = jU.x; var j5 = jU.y; var j0 = jw("ditu", "normal"); var jW = j0.ver; var jX = j0.udt; i = eQ.calcLoopParam(i, j3, j4).col; var j2 = ea.B_NORMAL_MAP.vectorTileUrls; var jV = Math.abs(i + j5) % j2.length; var j1 = j2[jV]; if (window.offLineIPAddress) { j2 = [window.offLineIPAddress + "pvd/"]; j1 = j2[0] } var T = "x=" + i + "&y=" + j5 + "&z=" + Math.floor(j3); var jZ = this.devicePixelRatio > 1 ? "&scaler=2" : ""; var jY = "&textimg=1"; if (this.map.config.textRenderType === "canvas") { jY = "&textimg=0" } var jT = this.map.config.style; if (typeof jT === "string" && jT !== "default") { T += "&styleId=" + B.mapStyleNameIdPair[jT] } T += "&styles=pl" + jY + jZ + "&v=" + jW + "&udt=" + jX + "&json=0"; var e = j1 + "?qt=vtile&param=" + window.encodeURIComponent(eJ(T)); return e }, getRasterTilesUrl: function (T, jV, jT) { var jU = ea[this.map.mapType]; var i = this.map.config.style; var e = jU.tileUrls[Math.abs(jV + T) % jU.tileUrls.length] + "?qt=tile&x=" + T + "&y=" + jV + "&z=" + jT + ((i === "default" || typeof i !== "string") ? "" : ("&styleId=" + B.mapStyleNameIdPair[i])) + "&styles=pl&udt=" + this.normalUdt + "&scaler=" + this.scaler + "&p=1"; e = e.replace(/-(\d+)/gi, "M$1"); return e }, getZoomState: function () { var T = this.map; var i = T.getZoom(); var e = i - this.lastZoom; if (e > 0) { this.zoomState = 1 } else { if (e < 0) { this.zoomState = -1 } } this.lastZoom = i; return this.zoomState }, releaseOutViewTileData: function (e) { var jU = this.map._workerMgr.releasePendingData(e); for (var jT = 0, T = jU.length; jT < T; jT++) { var jV = this.getTileKey(jU[jT]); this.tileCache.removeData(jV) } }, loadLayerData: function (e, jT, i) { this.hasZoomChange = i; this.curViewTilesInfo = e; if (this.ontology instanceof dY) { this.loadTileData && this.loadTileData(e, jT); return } this.mapStyleId = this.map.getMapStyleId(); this.releaseOutViewTileData(e); var T = this.getZoomState(); if (this.dataType === ht) { if (jT) { this.getVectorLayerDataFromCache(e, T) } else { this.loadVectorLayerData(e) } } else { this.loadRasterLayerData(e, jT) } }, getVectorLayerDataFromCache: function (jY, j8) { this.map.temp.isPermitSpotOver = false; this.tileLabels = []; var ka = this.map._displayOptions; if (this.baseLayer === true) { var j2 = this.map._customLabelMgr.virtualTiles.custom; if (j2 && j2.label) { this.tileLabels.push(j2.label) } } this.thumbCache = {}; var j9 = -1; for (var j6 = 0, j3 = jY.length; j6 < j3; j6++) { var j7 = jY[j6]; var jU = j7.col; var jV = j7.row; var T = j7.zoom; var j4 = this._getTileTexImgKey(j7); var jT = j7.useZoom; j9 = T; var jW = this.getTileKey(j7); var kc = this.tileCache.getData(jW); if (kc && kc.status === "ready") { var kd = kc; this.map._featureMgr.setData(kc, this.drawIndex, 2); if (ka.poi && kc.label) { if (kc.label.status === "ready") { kc.label.tileInfo = kc.tileInfo; this.tileLabels.push(kc.label); if (kc.label.textureSources && kc.label.textureSources[jT] && this.map._webglMapScene) { var kb = this.map._webglMapScene._painter; if (!kb._labelTextureAtlasOffset[j4]) { kb._addToAsyncJob(kc.label.textureSources[jT]) } } } else { if (kc.label.status !== "processing") { this.processLabelData(kc) } } } } else { var j5 = { tileInfo: j7, dataType: ht, key: jW }; this.map._featureMgr.setData(j5, this.drawIndex, 2); if (this.useThumbData) { this.setThumbData(jU, jV, T, jT, j8) } } } this.tileLabels.labelZoom = j9; this.updateLabels(j8); var jZ = this.map.getZoom(); var jX = Math.floor(jZ); var j1 = jZ - jX; var j0 = Math.floor(this.LAST_CALC_ZOOM); var e = this.LAST_CALC_ZOOM - j0; var ke = false; if (this.hasZoomChange) { if (Math.abs(jZ - this.LAST_CALC_ZOOM) >= 0.5) { ke = true } else { if (j1 < 0.5 && e >= 0.5) { ke = true } else { if (j1 >= 0.5 && e < 0.5) { ke = true } } } if (ke) { this.cacheDataCollideLabels(0) } this.LAST_CALC_ZOOM = jZ } else { if (this.tileLabels.length > 0) { this.cacheDataCollideLabels(eN.Browser.ie ? 50 : 30) } } }, loadVectorLayerData: function (jZ) { this.map.temp.isPermitSpotOver = false; var jY = this; function jX(i, j0) { var j2 = jY.tileCache.getData(j0); if (!j2) { return } if (!i || i.error) { i.event && bw.fetchDebug && bw.fetchDebug.sendError({ title: i.event.title, msg: i.event.msg, category: bw.fetchDebug.category.AJAX, level: bw.fetchDebug.levels.ERROR, url: i.event.title }); var j1 = new fy("ontileloaderror"); i = i || {}; j1.error = i.error || ""; j1.message = i.message || ""; jY.map.fire(j1); j2.status = "init"; j2.reloadTimer = setTimeout(function () { if (j2.retry < 3) { j2.retry++; j2.status = "loading"; jY.loadVectorTileData(i.tileInfo, jX) } else { jY.tileCache.removeData(j0) } }, 4000); jY.map._featureMgr.clearData(jY.drawIndex); jY._checkTilesLoaded(); jY.getVectorLayerDataFromCache(jY.curViewTilesInfo, jY.getZoomState()); return } if (j2.reloadTimer) { clearTimeout(j2.reloadTimer); j2.reloadTimer = null } jY.callbackDataQueue.push([i, j0]); if (jY.processDataTimer) { return } jY.processDataTimer = setTimeout(function () { while (jY.callbackDataQueue.length > 0) { var j4 = jY.callbackDataQueue.shift(); jY.vectorTileDataCbk(j4[0], j4[1]); jY._checkTilesLoaded() } jY.map._featureMgr.clearData(jY.drawIndex); jY.getVectorLayerDataFromCache(jY.curViewTilesInfo, jY.getZoomState()); var j3 = new fy("onrefresh"); j3.source = "webgllayer"; jY.map.dispatchEvent(j3); jY.processDataTimer = null }, 200) } for (var jW = 0, jU = jZ.length; jW < jU; jW++) { var T = jZ[jW]; var jV = this.getTileKey(T); var e = this.tileCache.getData(jV); if (!e) { e = { status: "init", tileInfo: T, dataType: ht, key: jV, retry: 0 } } if (e.status !== "ready" && e.status !== "loading") { this.numLoading++; e.status = "loading"; this.tileCache.setData(jV, e); var jT = this.getProcessedLabelZoom(T); if (jT) { T.processedLabelZooms = jT } this.loadVectorTileData(T, jX) } } }, setThumbData: function (i, jU, jT, e, T) { if (T === 1) { if (this._findParentZoomTile(i, jU, jT, e, 8) === false) { this._findChildZoomTile(i, jU, jT, e, 3) } } else { if (T === -1) { if (this._findChildZoomTile(i, jU, jT, e, 3) === false) { this._findParentZoomTile(i, jU, jT, e, 8) } } } this.map._featureMgr.sortThumbData(this.drawIndex) }, _findParentZoomTile: function (jW, j5, j4, jU, jZ) { var jV = ea[this.getMapType()]; var T = jV.minDataZoom; var e = jW; var j2 = j5; var j0 = j4; var j1 = jU; for (var jY = 1; jY <= jZ; jY++) { var jT = this.tileType.getParentTile(e, j2, j0, j1, T); if (jT === null) { continue } var j3 = this.getTileKey(jT); var jX = this.tileCache.getData(j3); if (jX && jX.status === "ready") { if (this.thumbCache[j3]) { continue } this.map._featureMgr.setData(jX, this.drawIndex, 0); this.thumbCache[j3] = true; return true } e = jT.col; j2 = jT.row; j0 = jT.zoom; j1 = jT.useZoom } return false }, _findChildZoomTile: function (jX, jZ, e, jU, j8) { var j6 = ea[this.getMapType()]; var j2 = j6.maxDataZoom; var jW = jX; var jY = jZ; var j0 = e; var jT = jU; var jV = true; for (var j5 = 1; j5 <= j8; j5++) { var j3 = false; var T = this.tileType.getChildTiles(jW, jY, j0, jT, j2, j5); if (!T) { continue } for (var j4 = 0; j4 < T.length; j4++) { var j1 = this.getTileKey(T[j4]); var j7 = this.tileCache.getData(j1); if (j7 && j7.status === "ready") { if (!this.thumbCache[j1]) { this.map._featureMgr.setData(j7, this.drawIndex, 1); this.thumbCache[j1] = true } j3 = true } else { jV = false } } if (j3) { break } } return jV }, loadVectorTileData: function (j6, j7) { var jU = j6.col; var jV = j6.row; var e = j6.zoom; var j4 = j6.baseTileSize; var jT = this.getTilesUrl(new e8(jU, jV), e, j4); var jW = this.map.getPrivateRegions(); if (!this.processData && this.map.getPrivateStatus() && jW) { var j2 = j6.useZoom; var j1 = this.tileType.getMercatorSize(j2); var j0 = jU * j1; var jZ = jV * j1; var j3 = new ct(j0 + j1 / 2, jZ + j1 / 2); var jY = new hJ(new ct(j0, jZ), new ct(j0 + j1, jZ + j1)); var jX = f1() >= 1.5 ? 2 : 1; for (var j5 = 0; j5 < jW.length; j5++) { if (jW[j5] instanceof cG) { if (jW[j5].crossPoint(j3, jY, j2)) { var j8 = { x: jU, y: jV, z: e, mapZoom: j2, scalerRadio: jX, textimg: this.map.config.textRenderType === "canvas" ? 0 : 1 }; var T = jW[j5].tileUrlFunction(jT, j8); if (T && T.url) { jT = T.url; T.header && (j6.header = T.header) } break } } } } if (!jT) { return } var ka = this.getTileKey(j6); g1(this.map); if (!this.processData) { this.map._workerMgr.loadTileData(jT, j6, ka, j7); return } var j7 = "cbk" + ka.replace(/-/g, "_"); var j9 = this; bw[j7] = function (i) { var kb = (function (kc) { return function () { kc.tileInfo = j6; var ki = j9.processData(kc); if (!ki.road) { return } var kf = { tileInfo: j6, renderData: { base: [] }, status: "ready", key: ka, mapType: j9.mapType }; var kl = []; var ko = []; for (var kh = 0; kh < ki.road.length; kh++) { var kk = ki.road[kh]; var kj = -1; for (var kg = 0; kg < kk.length; kg++) { var km = kk[kg]; var kn = []; if (kl.length / 7 + km[0].length / 2 > 65536) { kf.renderData.base.push({ type: "line", data: [ga.toTileSolidLineVertices(kl, 4000), new Uint16Array(ko)] }); kl = []; ko = [] } for (var ke = 0; ke < km[0].length; ke += 2) { kn[kn.length] = [km[0][ke], km[0][ke + 1]] } var kd = km[3]; ga.buildData(kn, km[1], km[2], kl, ko, kd, km[4], kh + 20, false) } kf.renderData.base.push({ type: "line", data: [ga.toTileSolidLineVertices(kl, 4000), new Uint16Array(ko)] }) } j9.tileCache.setData(ka, kf); j9.map._featureMgr.clearData(j9.drawIndex); j9.getVectorLayerDataFromCache(j9.curViewTilesInfo, j9.getZoomState()); j9.map.dispatchEvent(new fy("onrefresh")) } })(i); j9.map.jobScheduler.addJob(kb); delete bw[j7] }; jT += "&fn=" + encodeURIComponent(fi + "." + j7); gA.load(jT) }, vectorTileDataCbk: function (jT, jU) { var jY = new fy("ontileloaded"); jY.perfStat = jT.perfStat || []; var e = this.map; e.fire(jY); var i = jT.tileInfo; var T = i.col; var j3 = i.row; var j2 = i.zoom; var j1 = i.baseTileSize; var jW = this.tileCache.getData(jU); if (!jW) { return } if (!this.showLabel) { jT.label = null } jW.renderData = jT; jW.tileInfo = i; var jV = eQ.calcLoopParam(T, j2, j1); var jZ = jV.geoOffsetX; jW.tileInfo.loopOffsetX = jZ; jW.status = "ready"; jW.mapType = this.mapType; this.tileCache.setData(jU, jW); jW.label = jT.label; jT.label = null; if (jT.indoorData && e._indoorMgr) { e._indoorMgr.setData(jT.indoorData) } var jX = "id_" + T + "_" + j3 + "_" + j2; if (!this.curViewTilesInfo[jX]) { e.fire(new fy("ontilenotinview")); return } var j0 = e._displayOptions; if (j0.poi) { this.processLabelData(jW) } if (jT.indoorData && e._indoorMgr && e._indoorMgr.currentUid) { this._refreshIndoorData(e._indoorMgr.currentUid, e._indoorMgr.currentFloor) } }, _refreshIndoorData: function (j1, j0) { var j3 = this.map._indoorMgr.getIndoorData(j1); var j6 = j3.tileKeys; var j4 = Math.floor(this.map.getZoom()); for (var jY = 0; jY < j6.length; jY++) { var jV = j6[jY]; var jX = this.tileCache.getData(jV); if (!jX) { continue } var j5 = jX.renderData; j5.indoorBase = []; j5.indoorBaseContour = []; j5.indoorBorder3D = []; j5.indoorArea3D = []; jX.label.indoorLabel = []; this.labelProcessor.clearCollisionCache(jX.label); for (var jZ in j5.indoorData) { if (jZ === "tileInfo") { continue } var e = j5.indoorData[jZ]; var jU = e.defaultFloor; if (jZ === j1) { jU = j0; e.currentFloor = j0 } if (e.floors[jU]) { if (e.floors[jU].base) { for (var jW = 0; jW < e.floors[jU].base.length; jW++) { j5.indoorBase.push(e.floors[jU].base[jW]) } } if (e.floors[jU].contour) { for (var jW = 0; jW < e.floors[jU].contour.length; jW++) { j5.indoorBaseContour.push(e.floors[jU].contour[jW]) } } if (e.floors[jU].indoorBorder3D) { j5.indoorBorder3D.push(e.floors[jU].indoorBorder3D) } if (e.floors[jU].area3D) { j5.indoorArea3D.push(e.floors[jU].area3D) } if (e.floors[jU].pois) { jX.label.indoorLabel = jX.label.indoorLabel.concat(e.floors[jU].pois) } } } this.updateAllIconsTextureCoords(jX); var j2 = this; this.labelProcessor.loadIconImages(jX, function (i) { j2.updateAllIconsTextureCoords(i) }, "indoor"); var jT = jV.split("_"); var T = parseInt(jT[jT.length - 1], 10); if (T !== j4) { continue } j2.map._featureMgr.setData(jX, this.drawIndex, 2) } this.dataBackCollideLabels(); this.map.dispatchEvent(new fy("onrefresh")) }, _removeIndoorData: function (i) { if (!i.indoorData) { return } for (var e in i.indoorData) { if (e === "tileInfo") { continue } this.map._indoorMgr.removeData(e, i.key) } }, getProcessedLabelZoom: function (jT) { var jU = jO.baseZoomInfo[jT.zoom]; if (!jU) { return false } var T = []; for (var jV = 0; jV < jU.length; jV++) { var jW = this.getTileKey(jT, { useZoom: jU[jV] }); var e = this.tileCache.getData(jW); if (e && e.status === "ready" && e.label && e.label.status === "ready") { T.push(jU[jV]) } } if (T.length) { return T } else { return false } }, getSameZoomDataFromCache: function (T) { var jT = jO.baseZoomInfo[T.zoom]; for (var jU = 0; jU < jT.length; jU++) { var jV = this.getTileKey(T, { useZoom: jT[jU] }); if (T.useZoom === jT[jU]) { continue } var e = this.tileCache.getData(jV); if (e && e.status === "ready" && e.label && e.label.status === "ready") { return e } } return false }, hasSameLabelData: function (jT, T) { for (var e = 0; e < T.length; e++) { if (T[e].key === jT) { return true } } return false }, getDataByFloorName: function (T, jT) { for (var e = 0; e < T.length; e++) { if (T[e].floorName === jT) { return T[e] } } return null }, mergeIndoorLabelData: function (jY, e) { for (var jW in jY) { if (jW === "tileInfo") { continue } if (e[jW]) { var T = jY[jW].floors; var jZ = e[jW].floors; for (var jU = 0; jU < T.length; jU++) { var jT = T[jU]; var jX = jT.floorName; var jV = this.getDataByFloorName(jZ, jX); if (jV) { if (jV.pois) { jV.pois = jV.pois.concat(jT.pois); jT.pois = jV.pois } else { jV.pois = jT.pois } } } } } }, mergeSameZoomLabelData: function (jW) { var jU = jW.label; if (!jU) { return } var e = jW.tileInfo; var jV = this.getSameZoomDataFromCache(e); if (!jV) { return } var jT = jV.label; if (!jT) { return } for (var T = 0; T < jU.fixedLabel.length; T++) { if (!this.hasSameLabelData(jU.fixedLabel[T].key, jT.fixedLabel)) { jT.hasNewData = true; jT.fixedLabel.push(jU.fixedLabel[T]) } } for (var T = 0; T < jU.lineLabel.length; T++) { if (!this.hasSameLabelData(jU.lineLabel[T].key, jT.lineLabel)) { jT.hasNewData = true; jT.lineLabel.push(jU.lineLabel[T]) } } for (var T = 0; T < jU.indoorLabel.length; T++) { if (!this.hasSameLabelData(jU.indoorLabel[T].key, jT.indoorLabel)) { jT.hasNewData = true; jT.indoorLabel.push(jU.indoorLabel[T]) } } jW.label = jT; if (jV.renderData.indoorData && jW.renderData.indoorData) { this.mergeIndoorLabelData(jW.renderData.indoorData, jV.renderData.indoorData) } }, processLabelData: function (jV) { if (!jV.label) { return } if (jV.label.status === "processing") { return } jV.label.status = "processing"; var jT = this; jT.updateAllIconsTextureCoords(jV); this.labelProcessor.loadIconImages(jV, function (jW) { jT.updateAllIconsTextureCoords(jW) }); if (this.map.config.textRenderType === "canvas") { var e = this.labelProcessor.drawLabelsOnCanvas(jV, function (jY, j0) { var jX = jV.tileInfo; var jZ = jT.map.config.mapStyleId; if (!bw["customStyleInfo_" + jZ]) { jT.mergeSameZoomLabelData(jV) } if (jY) { if (!jV.label.textureHeights) { jV.label.textureHeights = [] } jV.label.textureHeights[jX.useZoom] = jY.height } if (j0) { if (!jV.label.indoorTextureHeights) { jV.label.indoorTextureHeights = [] } jV.label.indoorTextureHeights[jX.useZoom] = j0.height } var jW = jT._getTileTexImgKey(jX); jT._doWorkAfterLabelImageLoad(jV, jY, j0, jW) }); return } var T = jV.label.textImageBitmap || jV.label.textImgStr; var jU = jV.label.indoorTextImageBitmap || jV.label.indoorTextImgStr; this.labelProcessor.loadImgByStr(T, jU, function i(j1, jZ) { var jY = jV.label.textureHeight; var j2 = jV.label.indoorTextureHeight; jV.label.textureHeight = undefined; jV.label.indoorTextureHeight = undefined; var jX = jV.tileInfo; jT.mergeSameZoomLabelData(jV); var j0 = jV.label; j0.textImgStr = ""; j0.indoorTextImgStr && (j0.indoorTextImgStr = ""); if (!j0.textureHeights) { j0.textureHeights = [] } j0.textureHeights[jX.useZoom] = jY; if (!j0.indoorTextureHeights) { j0.indoorTextureHeights = [] } j0.indoorTextureHeights[jX.useZoom] = j2; var jW = jT._getTileTexImgKey(jX); jT._doWorkAfterLabelImageLoad(jV, j1, jZ, jW) }) }, _getTileTexImgKey: function (i) { var T = i.style || this.mapStyleId || "default"; var e = T + "_" + i.col + "_" + i.row + "_" + i.zoom; if (this.map.config.textRenderType === "canvas") { e += "_" + i.useZoom } return e }, _doWorkAfterLabelImageLoad: function (jX, jV, jT, i) { var jW = this; var jU = jX.label; jU.tileInfo = jX.tileInfo; jU.status = "ready"; if (jV || jT) { var e = jU.tileInfo; if (jV) { jV.id = i; if (!jU.textureSources) { jU.textureSources = [] } jU.textureSources[e.useZoom] = jV } if (jT) { jT.id = i + "_indoor"; if (!jU.indoorTextureSources) { jU.indoorTextureSources = [] } jU.indoorTextureSources[e.useZoom] = jT } if (jW.map._webglMapScene) { var T = jW.map._webglMapScene._painter; if (jV) { T._addToAsyncJob(jU.textureSources[e.useZoom]) } } } if (jX.custom !== true) { jW.tileLabels.push(jU) } else { jW.updateAllIconsTextureCoords(jX); this.labelProcessor.loadIconImages(jX, function (jY) { jW.updateAllIconsTextureCoords(jX) }, true) } if (jW.collisionTimer) { return } jW.collisionTimer = setTimeout(function () { jW.dataBackCollideLabels(); jW.collisionTimer = null }, 300) }, _updateIconTextureCoords: function (jX, T) { if (!jX) { return } var jW = this.map; for (var jT = 0; jT < jX.length; jT++) { var jV = jX[jT]; if (!jV.iconPos) { continue } if (jW._webglMapScene) { var e = jW._webglMapScene._painter; var jU = T + "_" + jV.iconPos.iconType; jV.iconPos.texcoord = e._iconTextureAtlasCoords[jU] || null } } }, updateAllIconsTextureCoords: function (jU) { if (this.map.viewAnimationTime) { return } if (jU) { if (jU.label) { var i = jU.tileInfo.style; this._updateIconTextureCoords(jU.label.fixedLabel, i); this._updateIconTextureCoords(jU.label.indoorLabel, i) } } else { var jT = this.tileCache.getAllData(); for (var T in jT) { var e = jT[T].data; if (e.status === "ready" && e.label) { var i = e.tileInfo.style; this._updateIconTextureCoords(e.label.fixedLabel, i); this._updateIconTextureCoords(e.label.indoorLabel, i) } } } this.updateLabels(); this.map.dispatchEvent(new fy("onrefresh")) }, cacheDataCollideLabels: function (T) { var jU = this; var i = this.map._featureMgr; function jT() { if (jU && !jU.map.tileMgr.isExitTileLayer(jU)) { return } jU.cacheLabelTimer = null; var jV; var jW = jU.map.getTilt(); var jY = jU.map.getHeading() % 360; if (jU.tileLabels.length === 0 || (jU.tileLabels.length === 1 && jU.tileLabels[0].tileInfo.zoom === 0)) { jV = i.getLabelData(jU.drawIndex); if (jV.length > 0) { jV = jU.labelProcessor.collisionTest(jV, -1) } } else { if (jW || jY) { if (this._collisionTimer) { if (!jW) { clearTimeout(this._collisionTimer) } else { if (Date.now() - jU.lastCollisionTestTime > 500) { jU.lastCollisionTestTime = Date.now() } else { clearTimeout(this._collisionTimer) } } } this._collisionTimer = setTimeout(function () { if (jU && !jU.map.tileMgr.isExitTileLayer(jU)) { jU._collisionTimer = null; return } jV = jU.labelProcessor.collisionTest(jU.tileLabels); if (jV) { if (jU._isInnerLayer && jU.map.stencil && jU.map.stencil.isPoiMask) { var jZ = jU.isPoiInPolygon(jV); i.setLabelData(jZ, jU.drawIndex) } else { i.setLabelData(jV, jU.drawIndex) } } jU.updateLabels(); jU.map.dispatchEvent(new fy("onrefresh")); jU._collisionTimer = null }, 60); return } else { jV = jU.labelProcessor.getCachedLabels(jU.tileLabels) } } if (jV) { if (jU._isInnerLayer && jU.map.stencil && jU.map.stencil.isPoiMask) { var jX = jU.isPoiInPolygon(jV); i.setLabelData(jX, jU.drawIndex) } else { i.setLabelData(jV, jU.drawIndex) } } jU.updateLabels(); jU.map.dispatchEvent(new fy("onrefresh")) } if (!T) { clearTimeout(jU.cacheLabelTimer); jT() } else { if (jU.cacheLabelTimer) { return } jU.cacheLabelTimer = setTimeout(function e() { jT() }, T) } }, isPoiInPolygon: function (T) { var kc = this; var j2 = kc.map.stencil; var jU = kc.map._featureMgr.result.eleData[9]; var jT = []; for (var j7 = 0; j7 < jU.length; j7++) { var j3 = jU[j7].overlay.points; jT = jT.concat(j3) } for (var ka = 0; ka < T.length; ka++) { var jW = []; var jV = []; for (var j8 = 0; j8 < T[ka].fixedLabel.length; j8++) { var j1 = T[ka].fixedLabel[j8]; var j5 = j1.pt; if (j1.pt && ar(j5, jT)) { jW.push(j1) } else { jV.push(j1) } } if (j2.showRegion === "inside") { T[ka].fixedLabel = jW } else { if (j2.showRegion === "outside") { T[ka].fixedLabel = jV } } var j6 = []; var jY = []; for (var j7 = 0; j7 < T[ka].lineLabel.length; j7++) { var j9 = T[ka].lineLabel[j7]; var e = j9.pt; if (e && ar(e, jT)) { j6.push(j9) } else { jY.push(j9) } } if (j2.showRegion === "inside") { T[ka].lineLabel = j6 } else { if (j2.showRegion === "outside") { T[ka].lineLabel = jY } } var j4 = []; var j0 = []; for (var jZ = 0; jZ < T[ka].indoorLabel.length; jZ++) { var kb = T[ka].indoorLabel[jZ]; var jX = kb.pt; if (jX && ar(jX, jT)) { j4.push(kb) } else { j0.push(kb) } } if (j2.showRegion === "inside") { T[ka].indoorLabel = j4 } else { if (j2.showRegion === "outside") { T[ka].indoorLabel = j0 } } } return T }, dataBackCollideLabels: function () { var T = this; if (T && !T.map.tileMgr.isExitTileLayer(T)) { return } if (!T.tileLabels || (T.tileLabels && T.tileLabels.length === 0)) { return } var e; T.labelProcessor.calcLabelsCollision(T.tileLabels); e = T.labelProcessor.getCachedLabels(T.tileLabels); if (e) { if (T._isInnerLayer && T.map.stencil && T.map.stencil.isPoiMask) { var i = T.isPoiInPolygon(e); T.map._featureMgr.setLabelData(i, T.drawIndex) } else { T.map._featureMgr.setLabelData(e, T.drawIndex) } } T.updateLabels(); T.map.dispatchEvent(new fy("onupdate")); if (bT()) { this.labelProcessor._refreshSpotData() } }, updateLabels: function (jU) { var jV = this.map; if (!jV._featureMgr) { return } var i = jV._featureMgr; var T = i.getLabelData(this.drawIndex); if (T.length > 0) { var jT = jV.getZoom(); if (T.labelZoom - jT < 3) { this.labelProcessor.updateLabels(T); var e = this.labelProcessor.fixDataFormat(T); i.setOverlayData(e[0], 2, this.drawIndex); i.setOverlayData(e[1], 3, this.drawIndex); i.setOverlayData(e[2], 4, this.drawIndex) } else { i.clearLabelOverlayData(this.drawIndex) } jV.temp.isPermitSpotOver = false; this.labelProcessor.curSpotAdded = false } }, loadRasterLayerData: function (jY, jT) { this.thumbCache = {}; var jZ = this.getZoomState(); if (jT) { for (var jW = 0, jU = jY.length; jW < jU; jW++) { var T = jY[jW]; var jV = this.getTileKey(T); var e = this.tileCache.getData(jV); if (e && e.status === "ready") { if (T.tileTypeName === "xyz") { e.tileInfo = T } this.map._featureMgr.setData(e, this.drawIndex, 2) } else { if (this.useThumbData) { this.setThumbData(T.col, T.row, T.zoom, T.useZoom, jZ) } } } return } for (var jW = 0, jU = jY.length; jW < jU; jW++) { var T = jY[jW]; var jV = this.getTileKey(T); var e = this.tileCache.getData(jV); if (!e) { this.tileCache.setData(jV, {}); var jX = this; this.loadRasterTileData(T, function (i, j0) { jX.rasterTileDataCbk(i, j0) }) } } }, loadRasterTileData: function (i, e) { var T = new Image(); var jU = i.col; var jX = i.row; var jV = i.zoom; var jT = this.getTilesUrl(new e8(jU, jX), jV, i); if (!jT) { return } var jW = this.getTileKey(i); if (i.combine) { T = jT; T.tileInfo = i; if (T) { e && e(T, jW) } else { e && e(null, jW) } } else { T = this.loadTileImage(jT, jW, e) } T.tileInfo = i }, loadTileImage: function (jT, T, e) { var i = new Image(); i.crossOrigin = "anonymous"; i.onload = function () { e && e(this, T) }; i.onerror = function () { bw.fetchDebug && bw.fetchDebug.sendError({ title: jT, msg: jT, category: bw.fetchDebug.category.RESOURCE, level: bw.fetchDebug.levels.ERROR, url: jT }); e && e(null, T) }; i.src = jT; return i }, rasterTileDataCbk: function (jV, jT) { if (!jV || typeof jV === "string") { this.tileCache.removeData(jT); return } var i = jV.tileInfo; var T = i.col; var j1 = i.row; var j0 = i.zoom; var e = this.tileCache.getData(jT); if (!e) { return } var jW = "id_" + T + "_" + j1 + "_" + j0; var jZ = this; e.dataType = gt; e.tileInfo = i; if (i.tileTypeName === "xyz") { var jY = i.tileSize; e.textureSource = jV; e.renderData = { vertexAll: [0, 0, 0, 0, 0, jY, 0, 0, 1, 0, jY, jY, 0, 1, 1, 0, 0, 0, 0, 0, jY, jY, 0, 1, 1, 0, jY, 0, 0, 1] }; jZ.setRasterTileData(jT, e, jW) } else { e.textureSource = jV; var jU = eQ.calcLoopParam(T, j0); var jX = jU.geoOffsetX; jV.tileInfo.loopOffsetX = jX; e.renderData = { vertexAll: [0, 0, 0, 0, 0, 256, 0, 0, 1, 0, 256, 256, 0, 1, 1, 0, 0, 0, 0, 0, 256, 256, 0, 1, 1, 0, 256, 0, 0, 1] }; this.setRasterTileData(jT, e, jW) } }, setRasterTileData: function (jU, e, jT) { e.status = "ready"; this.tileCache.setData(jU, e); var T = false; if (this.curViewTilesInfo[jT]) { e.dataType = gt; e.png8 = this.png8 || false; this.map._featureMgr.setData(e, this.drawIndex, 2); T = true } if (T) { var i = new fy("onrefresh"); i.source = "webgllayer"; this.map.dispatchEvent(i) } }, _checkTilesLoaded: function () { this.numLoading--; if (this.map.firstTileLoad === false) { this.map.dispatchEvent(new fy("onfirsttilesloaded")); this.map.firstTileLoad = true } var e = this; if (this.numLoading === 0) { if (this._checkLoadedTimer) { clearTimeout(this._checkLoadedTimer); this._checkLoadedTimer = null } this._checkLoadedTimer = setTimeout(function () { if (e.numLoading === 0) { e.map.dispatchEvent(new fy("ontilesloaded")) } e._checkLoadedTimer = null }, 60) } }, isClickableLabel: function (e) { if (e.isDel) { return false } if (e.zoom > 9 && !e.guid) { return false } if (e.zoom <= 9 && !e.name && !e.guid) { return false } return true } }; var aS = 5; var iO = 4; var gm = 3; var M = 2; var eh = 1; var hf = 0; function av(e) { this._ratio = f1(); this._iconCache = {}; this._map = e; this._drawingCanvasPool = []; this._drawingCanvasHeight = 4096; this._bufferSpan = [5, 5] } eN.extend(av.prototype, { _loadIcons: function (T, jZ, jV) { var jT = 0; var jW = this; var jU = this._map.config.style; for (var jX in T) { jT++; var jY = new Image(); jY.id = jX; jY.crossOrigin = "anonymous"; jY.onload = function () { jW._iconCache[this.id].loaded = true; jT--; if (jT === 0) { jZ() } this.onload = null }; jY.onerror = function () { jW._iconCache[this.id] = null; jT--; if (jT === 0) { jZ() } this.onerror = null }; if (!jV) { var e = B.getIconSetPath(jU) + jX + ".png"; var i = bx(); if (i && i.udt) { e += "?udt=" + i.udt } } else { var e = jX } jY.src = e; this._iconCache[jX] = { loaded: false, image: jY } } }, _getEmptyDrawingCanvas: function () { for (var T = 0; T < this._drawingCanvasPool.length; T++) { if (this._drawingCanvasPool[T]._free === true) { this._drawingCanvasPool[T]._free = false; return this._drawingCanvasPool[T] } } var e = this._createNewDrawingCanvas(); this._drawingCanvasPool.push(e); e._free = false; return e }, _createNewDrawingCanvas: function () { var e = bU("canvas"); e.width = 512; e.height = this._drawingCanvasHeight; e._free = true; e._id = bw.getGUID(); var i = e.getContext("2d"); i.textBaseline = "bottom"; i.lineJoin = "round"; return e }, drawLabelsOnCanvas: function (kb, jT) { var j1 = kb.label.fixedLabel.slice(0); var j7 = kb.label.lineLabel.slice(0); var T = kb.label.indoorLabel.slice(0); if (j1.length === 0 && j7.length === 0 && T.length === 0) { jT(); return } var jW = function (kg, i) { return kg.styleId - i.styleId }; j1.sort(jW); j7.sort(jW); T.sort(jW); var ka = {}; var e = this._getEmptyDrawingCanvas(); var j6 = e.getContext("2d"); j6.clearRect(0, 0, e.width, e.height); var ke = 0; var j2 = null; var jV = 0; if (j1.length > 0) { while (jV < j1.length && !j1[jV].styleText[0]) { jV++ } if (j1[jV] && j1[jV].styleText[0]) { j2 = j1[jV].styleText[0].fontSize + j1[jV].styleText[0].haloSize * 2 } } if (j2 === null && T.length > 0) { jV = 0; while (jV < T.length && !T[jV].styleText[0]) { jV++ } if (T[jV] && T[jV].styleText[0]) { j2 = T[jV].styleText[0].fontSize + T[jV].styleText[0].haloSize * 2 } } if (j2 === null && j7.length > 0) { jV = 0; while (jV < j7.length && !j7[jV].styleText[0]) { jV++ } if (j7[jV] && j7[jV].styleText[0]) { j2 = j7[jV].styleText[0].fontSize + j7[jV].styleText[0].haloSize * 2 } } if (j2 === null || isNaN(j2)) { jT(); return } var jY = 0; var jX = j2; jX += this._bufferSpan[1]; var j4 = {}; var kf = 0; var j5 = []; for (var j9 = 0; j9 < j1.length; j9++) { var j0 = j1[j9]; var j3 = j0.name; var j8 = j0.styleText; if (!j3 || j8.length === 0) { continue } var jU = j0.icon; if (j0.textOnIcon && (!this._iconCache[jU] || this._iconCache[jU].loaded === false)) { j5.push(j0); kf++; if (!j4[jU]) { j4[jU] = true } continue } var kc = this._drawEachText(j6, j0, ke, jY, jX, j2, ka); if (!kc) { continue } jY = kc.curX; jX = kc.curY; j2 = kc.curLineHeight; ke = kc.styleId } var kc = this._drawEachTypeOfLabels(j6, T, ke, jY, jX, j2, ka); ke = kc.curStyleId; jY = kc.curX; jX = kc.curY; j2 = kc.curLineHeight; var kc = this._drawEachTypeOfLabels(j6, j7, ke, jY, jX, j2, ka); ke = kc.curStyleId; jY = kc.curX; jX = kc.curY; j2 = kc.curLineHeight; if (kf > 0) { var kd = this; this._loadIcons(j4, function () { kc = kd._drawEachTypeOfLabels(j6, j5, ke, jY, jX, j2, ka); ke = kc.curStyleId; jY = kc.curX; jX = kc.curY; j2 = kc.curLineHeight; var i = kd._generateEachLabelCanvas(e, jX, j1, j7, T, kb); jT(i[0], i[1]) }); return } var jZ = this._generateEachLabelCanvas(e, jX, j1, j7, T, kb); jT(jZ[0], jZ[1]) }, drawCustomLabelsOnCanvas: function (jW, j3) { if (jW.length === 0) { j3(); return } var T = 0 + this._bufferSpan[0]; var e = (jW[0].style.fontSize + (jW[0].style.haloSize || 0) * 2) + this._bufferSpan[1] || 0; var jT = e - this._bufferSpan[1]; var jY = this._getEmptyDrawingCanvas(); var j5 = jY.getContext("2d"); j5.clearRect(0, 0, jY.width, jY.height); var jZ = {}; var j1 = -1; var jU = {}; var j2 = false; for (var jV = 0; jV < jW.length; jV++) { var jX = null; if (jW[jV].textOnIcon && jW[jV].icon) { jX = jW[jV].icon } if (jX && !jU[jX] && (!this._iconCache[jX] || this._iconCache[jX].loaded === false)) { jU[jX] = true; j2 = true } } var j4 = this; if (j2) { this._loadIcons(jU, function () { j0() }, true) } else { j0() } function j0() { for (var j8 = 0; j8 < jW.length; j8++) { if (!jW[j8].name) { continue } var j9 = j4._drawEachText(j5, jW[j8], j1, T, e, jT, jZ); if (!j9) { continue } T = j9.curX + j4._bufferSpan[0]; e = j9.curY; jT = j9.curLineHeight; j1 = j9.styleId } var j7 = e; var j6 = j4._copyToNewCanvas(jY, j7 + j4._bufferSpan[0]); for (var j8 = 0; j8 < jW.length; j8++) { if (!jW[j8].name && jW[j8].style.iconSize) { j4._addFixedLabelBounds(jW[j8]); continue } if (!jW[j8].textSize) { continue } j4._updateFixedLabelCoords(jW[j8], j7 + j4._bufferSpan[0]); j4._addFixedLabelBounds(jW[j8]) } j3(j6) } }, _drawEachTypeOfLabels: function (j2, jW, j0, jT, T, jU, jY) { for (var jV = 0; jV < jW.length; jV++) { var jX = jW[jV]; var j1 = jX.name; var e = jX.styleText; if (!j1 || e.length === 0) { continue } var jZ = this._drawEachText(j2, jX, j0, jT, T, jU, jY); if (!jZ) { continue } jT = jZ.curX + this._bufferSpan[0]; T = jZ.curY; jU = jZ.curLineHeight; j0 = jZ.styleId; if (jZ.curY > this._drawingCanvasHeight) { return { curX: jT, curY: T, curLineHeight: jU, curStyleId: j0 } } } return { curX: jT, curY: T, curLineHeight: jU, curStyleId: j0 } }, _drawIndoorTextLabelOnCanvas: function (jU) { var e = this._getEmptyDrawingCanvas(); var j1 = e.getContext("2d"); j1.clearRect(0, 0, e.width, e.height); var j9 = 0; var j0 = null; var jZ = 0; var jX; var j6 = {}; var j5 = []; for (var jV in jU) { if (jV === "tileInfo") { continue } var jT = jU[jV]; var j4 = jT.defaultFloor; var jY = jT.floors; for (var j3 = 0; j3 < jY.length; j3++) { if (j3 === j4) { continue } var j7 = jY[j3]; if (!j7.pois) { continue } var jW = j7.pois; for (var j2 = 0; j2 < jW.length; j2++) { if (j0 === null && jW[j2].styleText[0]) { j0 = jW[j2].styleText[0].fontSize + jW[j2].styleText[0].haloSize * 2; jX = j0 } j5.push(jW[j2]) } } } if (j0 === null) { return null } j5.sort(function (ka, i) { return i.rank - ka.rank || ka.styleId - i.styleId }); var j8 = this._drawEachTypeOfLabels(j1, j5, j9, jZ, jX, j0, j6); j9 = j8.curStyleId; jZ = j8.curX; jX = j8.curY; j0 = j8.curLineHeight; var T = this._copyToNewCanvas(e, jX); return T }, _updateIndoorLabelsCoords: function (j0, j1) { for (var jZ in j0) { if (jZ === "tileInfo") { continue } var e = j0[jZ]; var jV = e.defaultFloor; var jW = e.floors; for (var jX = 0; jX < jW.length; jX++) { if (jX === jV) { continue } var T = jW[jX]; if (!T.pois) { continue } var jU = T.pois; for (var jT = 0; jT < jU.length; jT++) { var jY = jU[jT]; if (jY.name && (!jY.textSize || jY.textSize.length === 0)) { jU.splice(jT, 1); jT--; continue } this._updateFixedLabelCoords(jY, j1); this._addFixedLabelBounds(jY) } } } }, _generateEachLabelCanvas: function (jW, jV, jX, e, jZ, T) { jV = Math.min(jV, this._drawingCanvasHeight); var jY = this._copyToNewCanvas(jW, jV); var jT = null; if (T.renderData.indoorData) { jT = this._drawIndoorTextLabelOnCanvas(T.renderData.indoorData); if (jT) { this._updateIndoorLabelsCoords(T.renderData.indoorData, jT.height) } } for (var jU = 0; jU < jX.length; jU++) { if (!jX[jU].textSize) { continue } this._updateFixedLabelCoords(jX[jU], jV); this._addFixedLabelBounds(jX[jU]) } for (var jU = 0; jU < jZ.length; jU++) { if (!jZ[jU].textSize) { continue } this._updateFixedLabelCoords(jZ[jU], jV); this._addFixedLabelBounds(jZ[jU]) } for (var jU = 0; jU < e.length; jU++) { this._updateLineLabelCoords(e[jU], jV) } return [jY, jT] }, _copyToNewCanvas: function (T, i) { if (i === 0) { return null } var jT = bU("canvas"); jT.width = T.width; jT.height = i; var e = jT.getContext("2d"); e.drawImage(T, 0, 0, 512, i, 0, 0, 512, i); jT._id = T._id; T._free = true; return jT }, _drawEachText: function (kb, jX, T, kd, kc, kk, jU) { var kj = jX.name; var j2 = jX.styleText ? jX.styleText[0] : jX.style; if (!j2) { return null } var j5 = j2.fontSize; var ko = j2.fontWeight; var kB = j2.haloSize || 0; if (!j6) { } if (j2.fontRgba) { var kH = j2.fontRgba[3] / 255; var j1 = []; j1[3] = kH; for (var kG = 0; kG < 3; kG++) { j1[kG] = j2.fontRgba[kG] } } if (j2.haloRgba) { var kH = j2.haloRgba[3] / 255; var j8 = []; j8[3] = kH; for (var kG = 0; kG < 3; kG++) { j8[kG] = j2.haloRgba[kG] } } var kv = j1 ? "rgba(" + j1.join(",") + ")" : j2.color; var jW = j8 ? "rgba(" + j8.join(",") + ")" : j2.strokeColor; var kD = jX.styleId || 0; if (kB > 4) { kB = 4 } var kl = []; var ka = []; var kh = 0; if (jU && !jU[kD]) { jU[kD] = {} } var j4 = j5 + kB * 2; var km = j4; if (jX.containDescendings) { km += 4 } if (kB === 0) { km += 2 } if (jX.textOnIcon) { km = Math.max(km, jX.iconSize[1]) } if (kD !== T || km > kk) { T = kD; if (ko >= 10 && ko % 10 === 0) { kb.font = ko * 10 + " " + j5 + "px sans-serif" } else { kb.font = j5 + "px sans-serif" } if (km > kk) { var ki = km - kk; kk += ki; kc += ki } if (kB > 0) { kb.lineWidth = kB * 2; kb.strokeStyle = jW } kb.fillStyle = kv } if (jX.type === "line") { var jZ = kj.split(""); for (var kE = 0; kE < jZ.length; kE++) { var kx = jZ[kE]; var ke; var kp; if (jU[kD][kx]) { var j6 = jU[kD][kx]; ke = j6.displaySize; kp = j6.curWordPosition } else { var jT = Math.ceil(kb.measureText(kx).width); if (kd + jT > 512) { kd = 0 + this._bufferSpan[0]; kc += km; kc += this._bufferSpan[1]; kk = km } if (kc > this._drawingCanvasHeight) { return { curX: kd, curY: kc, curLineHeight: kk, styleId: kD } } var ky = kd; if (kB > 0) { jT += kB; ky -= Math.round(kB / 2); kb.strokeText(kx, kd, kc) } kb.fillText(kx, kd, kc); var ku = [jT, km]; ke = [Math.round(ku[0] / 2), Math.round(ku[1] / 2)]; kp = [ky, kc - km]; jU[kD][kx] = { displaySize: ke, curWordPosition: kp, totalHeight: kh }; kd += jT + 2 } kl.push(ke); ka.push(kp) } kh = Math.round(kl[0][1]) } else { if (jU[kD][kj]) { var j6 = jU[kD][kj]; kl = j6.textSize; ka = j6.labelImagePosition; kh = j6.totalHeight } else { var j7 = kj.split("\\"); if (j7.length > 1 && jX.textOnIcon) { var kF = 0; var kC = 0; var kI = []; var kf = 8; for (var kE = 0; kE < j7.length; kE++) { var kj = j7[kE]; var j3 = Math.ceil(kb.measureText(kj).width); if (j3 > kF) { kF = j3 } kI.push(Math.round(j3 / 2)); kC += km } var j0 = kF + 2 * kf; var kA = kC + 2 * kf; if (kd + j0 > 512) { kd = 0 + this._bufferSpan[0]; kc += kk; kc += this._bufferSpan[1] } kc += kC - km + 2 * kf; var kt = kd; var kg = kc - kA; var e = Math.round(j0 / 2); var j9 = this._iconCache[jX.icon].image; this.drawStretchedIcon(kb, j9, [kt, kg], kf, kF, kC); for (var kE = 0; kE < j7.length; kE++) { var kj = j7[kE]; var kz = kt + (e - kI[kE]); var kw = kg + 4 + (kE + 1) * km; kb.fillText(kj, kz, kw) } kl.push([Math.round(j0 / 2), Math.round(kA / 2)]); ka.push([kt, kg]); kd += j0; kk = kA; kh = Math.round(kA / 2) } else { for (var kE = 0; kE < j7.length; kE++) { var kj = j7[kE]; var j3 = Math.ceil(kb.measureText(kj).width); var j0 = j3; var jV = 0; if (jX.textOnIcon) { jV = 10; j0 += jV * 2; if (jX.styleId === 519) { j0 = jX.iconSize[0]; jV = Math.round((j0 - j3) / 2) } } if (kd + j0 > 512) { kd = 0 + this._bufferSpan[0]; kc += km; kc += this._bufferSpan[1]; kk = km } if (kc > this._drawingCanvasHeight) { return { curX: kd, curY: kc, curLineHeight: kk, styleId: kD } } var kt = kd; var kg = kc - km; var ks = kd; var kr = kc; if (jX.containDescendings) { kr -= 4 } if (jX.textOnIcon) { var kn = false; var j9 = this._iconCache[jX.icon].image; var kq = jX.iconSize.concat([]); if (j4 >= kq[1]) { kq[1] = j4; kn = true; km += jV * 2; var ki = km - kk; if (ki > 0) { kc += ki; kk = km; kr += (ki - jV); kg += (ki - jV * 2) } else { kr -= jV; kg -= jV * 2 } } if (j3 >= kq[0]) { kq[0] = j3 } if (jX.styleId === 519) { kb.drawImage(j9, 0, 0, kq[0], kq[1], kt, kg, kq[0], kq[1]) } else { if (kn) { this.drawStretchedIcon(kb, j9, [kt, kg], jV, j3, kq[1]) } else { this.draw3StretchedIcon(kb, j9, [kt, kg], jV, j3, kq[1]) } } ks += jV; if (jX.iconSize[1] > j4) { kr -= (jX.iconSize[1] - j4) / 2 - 1 } j0 += 1 } if (kB > 0) { if (kD === 71028) { km -= 2 } if (kD === 32) { km -= 2 } kb.strokeText(kj, ks, kr) } kb.fillText(kj, ks, kr); var jY = [j0, km]; var ke = [Math.round(jY[0] / 2), Math.round(jY[1] / 2)]; kl.push(ke); ka.push([kt, kg]); kh += Math.round(ke[1]); kd += j0 } } jU[kD][kj] = { textSize: kl, labelImagePosition: ka, totalHeight: kh } } } jX.textSize = kl; jX.labelImagePosition = ka; jX.totalHeight = kh; return { curX: kd, curY: kc, curLineHeight: kk, styleId: kD } }, drawStretchedIcon: function (e, T, jT, jW, jX, i) { var jV = jT[0]; var jU = jT[1]; e.drawImage(T, 0, 0, jW, jW, jV, jU, jW, jW); e.drawImage(T, jW, 0, 1, jW, jV + jW, jU, jX, jW); e.drawImage(T, T.width - jW, 0, jW, jW, jV + jX + jW, jU, jW, jW); e.drawImage(T, 0, jW, jW, 1, jV, jU + jW, jW, i); e.drawImage(T, jW, jW, 1, 1, jV + jW, jU + jW, jX, i); e.drawImage(T, T.width - jW, jW, jW, 1, jV + jX + jW, jU + jW, jW, i); e.drawImage(T, 0, T.height - jW, jW, jW, jV, jU + i + jW, jW, jW); e.drawImage(T, jW, T.height - jW, 1, jW, jV + jW, jU + i + jW, jX, jW); e.drawImage(T, T.width - jW, T.height - jW, jW, jW, jV + jX + jW, jU + i + jW, jW, jW) }, draw3StretchedIcon: function (e, i, T, jV, jX, jW) { var jU = T[0]; var jT = T[1]; e.drawImage(i, 0, 0, jV, i.height, jU, jT, jV, i.height); e.drawImage(i, jV, 0, 1, i.height, jU + jV, jT, jX, i.height); e.drawImage(i, i.width - jV, 0, jV, i.height, jU + jV + jX, jT, jV, i.height) }, _updateFixedLabelCoords: function (jU, j9) { if (j9 === 0) { return } var j4 = []; var kg = []; var kh = 0; var j7 = jU.totalHeight; var kp = jU.textSize.length; var jV = jU.direction; if (typeof jV !== "number") { jV = 0 } for (var ki = 0; ki < kp; ki++) { var ka = jU.labelImagePosition[ki]; var j8 = jU.textSize[ki]; var j6 = ka[0]; var jT = ka[1]; var jW = j8[0]; var j1 = j8[1]; var j3 = 0; var kf = 0; if (typeof jU.textMargin === "number") { kf = jU.textMargin } var j2; var e; var jY = 0; var j5 = 0; if (!jU.iconPos) { if (!jU.custom) { jV = iO } } else { jY = jU.iconPos.width; j5 = jU.iconPos.height } switch (jV) { case gm: var T = j7 / 2 - j1 + j3 * (kp - 1) / 2; j2 = Math.round(-jY / 2 - jW - kf); e = Math.round(T - kh - j3 * ki); break; case eh: var T = j7 / 2 - j1 + j3 * (kp - 1) / 2; j2 = Math.round(jY / 2 + kf); e = Math.round(T - kh - j3 * ki); break; case M: var T = j5 / 2 + j7 - j1 + j3 * kp; j2 = Math.round(-jW / 2); e = Math.round(T - kh - j3 * ki); break; case hf: var T = -j5 / 2 - j3 - j1; j2 = Math.round(-jW / 2); e = Math.round(T - kh - j3 * ki); break; case iO: var T = -j7 / 2 - j3 * (kp - 1) / 2; j2 = Math.round(-jW / 2); e = Math.round(T - kh - j3 * ki); break }kh += j1; var j0 = j2 + jW; var kq = e; var jZ = j0; var ko = kq + j1; var jX = j2; var kn = ko; j4.push(j2, e, j0, kq, jZ, ko, j2, e, jZ, ko, jX, kn); var km = j6 / 512; var ke = (j9 - jT - j1 * 2) / j9; var kl = (j6 + jW * 2) / 512; var kd = ke; var kk = kl; var kc = (j9 - jT) / j9; var kj = km; var kb = kc; kg.push(km, ke, kl, kd, kk, kc, km, ke, kk, kc, kj, kb) } if (!jU.textPos) { jU.textPos = {} } jU.textPos.vertex = j4; jU.textPos.texcoord = kg }, _addFixedLabelBounds: function (jZ) { var jV = 1000; var jT = 1000; var T = -1000; var e = -1000; if (jZ.iconPos) { var jX = jZ.iconPos["vertex"]; for (var jY = 0, jU = jX.length; jY < jU; jY += 2) { var j3 = jX[jY]; var j1 = jX[jY + 1]; if (j3 < jV) { jV = j3 } if (j3 > T) { T = j3 } if (j1 < jT) { jT = j1 } if (j1 > e) { e = j1 } } } if (jZ.custom && jZ.style.iconSize && !jZ.name) { var j0 = jZ.style.iconSize; var j2 = jZ.direction; switch (j2) { case iO: jV = -Math.round(j0[0] / 2); jT = -Math.round(j0[1] / 2); T = Math.round(j0[0] / 2); e = Math.round(j0[1] / 2); break; case M: jV = -Math.round(j0[0] / 2); jT = 0; T = Math.round(j0[0] / 2); e = j0[1]; break } } if (jZ.textPos) { var jW = jZ.textPos["vertex"]; for (var jY = 0, jU = jW.length; jY < jU; jY += 2) { var j3 = jW[jY]; var j1 = jW[jY + 1]; if (j3 < jV) { jV = j3 } if (j3 > T) { T = j3 } if (j1 < jT) { jT = j1 } if (j1 > e) { e = j1 } } } jZ.bds = [jV, jT, T, e] }, _updateLineLabelCoords: function (ka, j0) { if (j0 === 0) { return } var jT = ka.wordsInfo; var j7 = ka.wordCount; if (!ka.labelImagePosition) { return } var j2 = ka.labelImagePosition.slice(0); if (ka.reverse) { j2.reverse() } var kj = 1000; var kg = 1000; var kh = -1000; var kf = -1000; for (var kb = 0; kb < j7; kb++) { var kk = j2[kb]; var ki = kk[0]; var j8 = kk[1]; var j6 = ka.textSize[kb]; var jZ = j6[0]; var e = j6[1]; var jY = ki / 512; var j5 = (j0 - j8 - e * 2) / j0; var jW = (ki + jZ * 2) / 512; var j4 = j5; var jU = jW; var j3 = (j0 - j8) / j0; var T = jY; var j1 = j3; jT[kb].size = [jZ, e]; jT[kb].texcoord = [jY, j5, jW, j4, jU, j3, jY, j5, jU, j3, T, j1]; var ke = jT[kb].offset[0]; var kd = jT[kb].offset[1]; var kc = ke - jZ / 2; var jX = kd + e / 2; var jV = kd - e / 2; var j9 = ke + jZ / 2; if (kc < kj) { kj = kc } if (j9 > kh) { kh = j9 } if (jV < kg) { kg = jV } if (jX > kf) { kf = jX } } ka.bds = [kj, kg, kh, kf] } }); var fP = { 0: "00000000", 16: "00010000", 32: "00100000", 48: "00110000", 64: "01000000", 96: "01100000" }; function d8(T, jT, jU) { var e = T.bds; if (!e) { return false } var i = T.tracer; var jX; if (i) { if (!fP[i]) { jX = i.toString(2); if (jX.length < 8) { jX = new Array(8 - jX.length + 1).join("0") + jX } fP[i] = jX } jX = fP[i]; var jW = jO.mapZoomStartZoomMapping[jT]; return jX[jT - jW] === "1" } var jV = T.displayRange; if (jU >= jV[0] && jU <= jV[1]) { return true } return false } function iU(i, e) { this.map = i.map; this.layer = i; e = e || []; this.allLabels = []; this._spotData = []; this._strategyInfo = null; this.RANK1 = 1000000; this.RANK2 = 2000000; this.RANK3 = 3000000; this.RANK4 = 4000000; this.RANK5 = 5000000; this._ratio = f1(); this._useRound = true; this._sharpenRender = false; if (this._ratio > hv.HIGH_RES_MIN_RATIO) { this._useRound = false; this._sharpenRender = true } this._mapIsMoving = false; this._onMapIdleCallback = e.onMapIdleCallback; this.map.temp.isPermitSpotOver = true; this.currentSelectedLabel = null; this.map._labelProcessor = this; this.iconCache = new ay((bT() || eN.Browser.ie) ? 64 : 128, { clearCallback: function (T) { } }); this.fixedLabelData = []; this.lineLabelData = []; this.highlightLabelData = []; this._iconLoadTimer = null; this._labelTextCanvas = null; if (this.map.config.textRenderType === "canvas") { this._labelTextCanvas = this.map.tileMgr.getLabelTextCanvas() } this.bind() } eN.extend(iU.prototype, { bind: function () { var T = this.map; var i = this; T.addEventListener("mapstatusbusy_inner", function (jT) { i._mapIsMoving = true; if (i._ratio > hv.HIGH_RES_MIN_RATIO) { i._sharpenRender = false } else { i._useRound = false } }); T.addEventListener("mapstatusidle_inner", function (jT) { if (i._ratio > hv.HIGH_RES_MIN_RATIO) { i._sharpenRender = true } else { i._useRound = true } i._mapIsMoving = false }); T.addEventListener("onspotmouseover", function (jV) { if (!this.temp.isPermitSpotOver) { return } if (jV.spots.length > 0) { var jU = jV.spots[0].userdata.uid; var jW = jV.spots[0].userdata.tilePosStr; var jT = i.getLabelByUid(jU, jW); jT && jT.formatedData && i._toHighlightColor(jT.formatedData) } }); T.addEventListener("onspotmouseout", function (jV) { if (!this.temp.isPermitSpotOver) { return } if (jV.spots.length > 0) { var jU = jV.spots[0].userdata.uid; var jW = jV.spots[0].userdata.tilePosStr; var jT = i.getLabelByUid(jU, jW); jT && jT.formatedData && i._toDefaultColor(jT.formatedData) } }); T.addEventListener("spotclick", function (jV) { if (jV.spots && jV.spots.length > 0) { if (jV.spots[0].userdata.zoom < 10) { return } var jU = jV.spots[0].userdata.uid; var jW = jV.spots[0].userdata.tilePosStr; if (i.currentSelectedLabel && (i.currentSelectedLabel.uid !== jU || i.currentSelectedLabel.tilePosStr !== jW)) { i._recoverNormalState() } var jT = i.getLabelByUid(jU, jW); jT && i._changeBaseMapState(jT) } else { i._recoverNormalState() } }); T.on("spot_status_reset", function () { i._recoverNormalState() }); T.on("spot_highlight", function (jU) { var jT = i.getLabelByUid(jU.uid, jU.tilePosStr); jT && jT.formatedData && i._toHighlightColor(jT.formatedData) }); T.addEventListener("mousemove", function (jT) { if (i.curSpotAdded) { return } if (this.currentOperation !== d4.idle || i._mapIsMoving === true) { return } i._refreshSpotData(); this.temp.isPermitSpotOver = true; i.curSpotAdded = true }); if (bT()) { function e() { i._refreshSpotData() } T.addEventListener("mapstatusidle_inner", e) } T.on("style_loaded", function () { if (i.map.config.textRenderType === "canvas" && !i._labelTextCanvas) { i._labelTextCanvas = i.map.tileMgr.getLabelTextCanvas() } }); T.on("destroy", function () { i.iconCache.clear(); i.fixedLabelData = []; i.lineLabelData = []; i.highlightLabelData = []; for (var jT = 0; jT < i.allLabels.length; jT++) { i.allLabels[jT]._mcBds = null } i.allLabels = []; for (var jT = 0; jT < i._spotData.length; jT++) { i._spotData[jT].pt = null; i._spotData[jT].userdata.iconPoint = null } i._spotData = [] }) }, getLabelByUid: function (jX, jY) { var e = this.map._featureMgr.getResult().tileLabels[this.layer.drawIndex] || []; for (var jW = 0; jW < e.length; jW++) { var jT = e[jW].fixedLabel; for (var jV = 0; jV < jT.length; jV++) { if (e[jW].fixedLabel[jV].guid === jX && e[jW].fixedLabel[jV].tilePosStr === jY) { return e[jW].fixedLabel[jV] } } var jU = e[jW].indoorLabel; for (var T = 0; T < jU.length; T++) { if (e[jW].indoorLabel[T].guid === jX && e[jW].indoorLabel[T].tilePosStr === jY) { return e[jW].indoorLabel[T] } } } return null }, getTileByLabelUid: function (jX) { var e = this.map._featureMgr.getResult().tileLabels[this.layer.drawIndex] || []; for (var jW = 0; jW < e.length; jW++) { var jT = e[jW].fixedLabel; for (var jV = 0; jV < jT.length; jV++) { if (e[jW].fixedLabel[jV].guid === jX) { return e[jW] } } var jU = e[jW].indoorLabel; for (var T = 0; T < jU.length; T++) { if (e[jW].indoorLabel[T].guid === jX) { return e[jW] } } } return null }, _toHighlightColor: function (T) { if (T.tempRank && T.tempRank === this.RANK5) { return } var e = this.map._featureMgr.getResult().eleData[4][this.layer.drawIndex] || []; var jU = false; for (var jT = 0; jT < e.length; jT++) { if (e[jT] === T || (e[jT].guid === T.guid && e[jT].tilePosStr === T.tilePosStr && e[jT].zoom === T.zoom)) { jU = true; break } } if (jU) { return } e.push(T); this.map._featureMgr.setOverlayData(e, 4, this.layer.drawIndex); this.map.dispatchEvent(new fy("onrefresh")) }, _toDefaultColor: function (T) { if (T.tempRank && T.tempRank === this.RANK5) { return } var e = this.map._featureMgr.getResult().eleData[4][this.layer.drawIndex] || []; for (var jT = 0; jT < e.length; jT++) { if (T === e[jT] || (T.guid === e[jT].guid && T.tilePosStr === e[jT].tilePosStr && T.zoom === e[jT].zoom)) { e.splice(jT, 1); break } } this.map._featureMgr.setOverlayData(e, 4, this.layer.drawIndex); this.map.dispatchEvent(new fy("onrefresh")) }, _changeBaseMapState: function (i) { var jU = i.guid; var jY = i.formatedData.guidExt; var jZ = { guid: jU, tilePosStr: i.tilePosStr, guidExt: jY }; this._strategyInfo = jZ; this.currentSelectedLabel = i; var jT = this.map._featureMgr; var e = jT.getLabelData(this.layer.drawIndex); e = this.collisionTest(e); this.updateLabels(e); var j0 = this.fixDataFormat(e); jT.setOverlayData(j0[0], 2, this.layer.drawIndex); jT.setOverlayData(j0[1], 3, this.layer.drawIndex); jT.setOverlayData(j0[2], 4, this.layer.drawIndex); var T = this.getTileByLabelUid(jU); this.currentSelectedLabel.tileInfo = T.tileInfo; var jX = this.layer.tileCache.getAllData(); for (var jW in jX) { var jV = jX[jW].data; if (!jV.label) { continue } this.clearCollisionCache(jV.label) } this.map.dispatchEvent(new fy("onrefresh")) }, _recoverNormalState: function () { this._strategyInfo = null; var jX = false; var jV = this.map._featureMgr.getLabelData(this.layer.drawIndex); if (this.currentSelectedLabel) { var T = this.currentSelectedLabel.guid; this.clearCollisionCache(this.getTileByLabelUid(T)); var jU = this.layer.tileCache.getAllData(); for (var jT in jU) { if (Object.prototype.hasOwnProperty.call(jU, jT)) { var jW = jU[jT].data; if (!jW.label) { continue } this.clearCollisionCache(jW.label) } } this.currentSelectedLabel.tempRank = null; this.currentSelectedLabel = null; jX = true } jV = this.collisionTest(jV); this.updateLabels(jV); var e = this.fixDataFormat(jV); var i = this.map._featureMgr; i.setOverlayData(e[0], 2, this.layer.drawIndex); i.setOverlayData(e[1], 3, this.layer.drawIndex); i.setOverlayData([], 4, this.layer.drawIndex); this.map.dispatchEvent(new fy("onrefresh")); if (jX) { this.curSpotAdded = false; this._refreshSpotData() } }, loadIconImages: function (j6, jW, T) { var j5 = j6.label; var j8 = j6.tileInfo.style; var jU = j5.fixedLabel; if (T === "indoor") { jU = [] } var j4 = j5.indoorLabel; var j3 = jU.length + j4.length; var j9 = this; var j7 = 0; var j1 = 200; for (var j2 = 0; j2 < j3; j2++) { var jZ; if (j2 < jU.length) { jZ = jU[j2] } else { jZ = j4[j2 - jU.length] } if (!jZ.iconPos) { var jY = this.loadSVGSymbol(jZ, j8); if (!jY) { continue } else { if (jY !== true) { var jX = jZ.iconPos.iconType; var e = j8 + "_" + jX; this.iconCache.setData(e, { loaded: false, image: jY }); jZ.iconPos.img = jY } } } var jX = jZ.iconPos.iconType; var e = j8 + "_" + jX; j7++; if (this.iconCache.getData(e)) { if (this.iconCache.getData(e).loaded) { jW(j6) } else { if (jZ.iconPos.img) { jZ.iconPos.img.id = e; jZ.iconPos.img.iconUrl = jX; this.iconCache.setData(e, { loaded: true, image: jZ.iconPos.img }); this._addToIconTexture(jZ.iconPos.img); jW(j6) } else { if (jZ.iconPos.img) { jZ.iconPos.img.id = e; jZ.iconPos.img.iconUrl = jX; this.iconCache.setData(e, { loaded: true, image: jZ.iconPos.img }); this._addToIconTexture(jZ.iconPos.img); jW(j6) } } } continue } if (!T || T === "indoor") { var jV = B.getIconSetPath(this.map.config.style) + jX + ".png"; var j0 = bx(); if (j0 && j0.udt) { jV += "?udt=" + j0.udt } } else { var jV = jX } var jT = new Image(); jT.id = e; jT.iconUrl = jV; jT.crossOrigin = "anonymous"; jT.onload = function () { if (j9.iconCache.getData(this.id)) { j9.iconCache.getData(this.id).loaded = true; j9._addToIconTexture(this) } if (j9._iconLoadTimer === null) { j9._iconLoadTimer = setTimeout(function () { jW(); j9._iconLoadTimer = null }, j1) } this.onload = null }; jT.onerror = function () { if (!j9._iconLoadTimer) { j9._iconLoadTimer = setTimeout(function () { jW(); j9._iconLoadTimer = null }, j1) } j9.iconCache.removeData(this.id); this.onerror = null; bw.fetchDebug && bw.fetchDebug.sendError({ title: this.iconUrl, msg: this.iconUrl, category: bw.fetchDebug.category.RESOURCE, level: bw.fetchDebug.levels.ERROR, url: this.iconUrl }) }; jT.src = jV; this.iconCache.setData(e, { loaded: false, image: jT }) } return j7 }, _addToIconTexture: function (jV) { if (!this.map._webglMapScene) { return } var jX = this.map._webglMapScene._painter; var e = jX._iconTextureAtlas.addTexture(jV); jX._iconTextureAtlasOffset[jV.id] = e; var j0 = 0 * jV.width / 1024 + e.width; var jU = 0 * jV.height / 1024 + e.height; var jZ = jV.width / 1024 + e.width; var jT = jU; var jY = jZ; var T = jV.height / 1024 + e.height; var jW = j0; var i = T; jX._iconTextureAtlasCoords[jV.id] = [j0, jU, jZ, jT, jY, T, j0, jU, jY, T, jW, i] }, loadSVGSymbol: function (jT, T) { var i = jT.symbol || {}; var jW = dB.generateKey(i.path, i); if (!jW) { return null } var jV = this.iconCache.getData(T + "_" + jW); if (jV && jV.loaded) { jT.iconPos = this.createVertex(jV.image.width / 2, jV.image.height / 2, jW); return true } var jU = new dB(i.path, i); jU.add(); var e = jU.render(); if (!e) { return null } jT.iconPos = this.createVertex(jU.size.width, jU.size.height, jW); return jU.data }, createVertex: function (jV, jZ, T) { var jU = Math.round(-jV / 2); var j1 = Math.round(-jZ / 2); var jT = jU + jV; var j0 = j1; var i = jT; var jY = j0 + jZ; var e = jU; var jX = jY; var jW = { vertex: [jU, j1, jT, j0, i, jY, jU, j1, i, jY, e, jX], texcoord: null, width: jV, height: jZ, iconType: T }; return jW }, loadImgByStr: function (jT, jU, jV) { if (!jT && !jU) { jV && jV(null, null); return } if (typeof jT === "object" && typeof jU === "object") { jV(jT, jU); return } var i = 0; var T = null; var e = null; if (jT) { i++; T = new Image(); T.onload = function () { i--; if (i === 0) { jV && jV(this, e) } this.onload = null }; T.src = jT } if (jU) { i++; e = new Image(); e.onload = function () { i--; if (i === 0) { jV && jV(T, this) } this.onload = null }; e.src = jU } }, collisionTest: function (kM, j6, kd) { if (this.map.viewAnimationTime) { return [] } if (!kM) { return [] } if (this.layer.ontology && this.layer.ontology.noCollision) { for (var ko = 0; ko < kM.length; ko++) { var k0 = kM[ko].fixedLabel; for (var km = 0; km < k0.length; km++) { var jW = k0[km]; var k2 = this.layer.ontology.getLayerVisible(jW.layerName); jW.isDel = !k2 } } return kM } var j9 = this.map; var kQ = j9.getHeading(); kQ = this.calcLoopHeading(kQ); var kz = j9.height; var kr = this.allLabels; for (var ko = 0; ko < kr.length; ko++) { kr[ko]._mcBds = null } kr.length = 0; kM.sort(function (j1, i) { var k3 = j1.tileInfo; var j2 = i.tileInfo; if (k3.col * k3.row < j2.col * j2.row) { return -1 } else { return 1 } }); var ka = j9.getTilt(); var kR = j9.getZoom(); if (this.layer.ontology) { kR += (this.layer.spanLevel || 0) } var kk; if (kd) { kk = kd } else { kk = this.getZoomStep() } for (var ko = 0, ki = kM.length; ko < ki; ko++) { var T = kM[ko]; var ks = T.tileInfo; var kl = ks.zoom; var kA = ks.loopOffsetX / Math.pow(2, 18 - kl); if (!kQ && !ka) { if (T.unnecessaryCollisionTest && T.unnecessaryCollisionTest[kd]) { continue } } var k0 = T.fixedLabel || []; for (var km = 0, kX = k0.length; km < kX; km++) { var jW = k0[km]; jW.zoom = kl; if (j6 === -1 && jW.isDel) { continue } if (this.layer.ontology) { var k2 = this.layer.ontology.getLayerVisible(jW.layerName); if (!k2) { continue } } if (!d8(jW, ks.useZoom, kR)) { jW.isDel = true; continue } this.calcCollisionBounds(jW, kk, kA, kz); kr.push(jW) } var kn = T.indoorLabel || []; for (var kj = 0, kv = kn.length; kj < kv; kj++) { var ku = kn[kj]; ku.zoom = kl; if (j6 === -1 && ku.isDel) { continue } if (!d8(ku, ks.useZoom)) { ku.isDel = true; continue } this.calcCollisionBounds(ku, kk, kA, kz); kr.push(ku) } var kW = T.lineLabel || []; for (var kq = 0, kb = kW.length; kq < kb; kq++) { var kI = kW[kq]; if (j6 === -1 && kI.isDel) { continue } if (!d8(kI, ks.useZoom)) { kI.isDel = true; continue } var jX = kI.pt; var kH = j9.pointToPixelIn(jX, { zoom: kk, useRound: this._useRound }); var kZ = kH.x + kA; var kY = kz - kH.y; var jU = kI.bds; var kK = jU[0]; var kJ = jU[1]; var kf = jU[2]; var ke = jU[3]; var j8 = kK; var j7 = kJ; var kV = kf; var kU = ke; if ((kQ >= 0 && kQ < 45) || (kQ >= 315 && kQ < 360)) { j8 = kK; j7 = kJ; kV = kf; kU = ke } else { if (kQ >= 45 && kQ < 135) { j8 = kJ; j7 = -kf; kV = ke; kU = -kK } else { if (kQ >= 135 && kQ < 225) { j8 = -kf; j7 = -ke; kV = -kK; kU = -kJ } else { if (kQ >= 225 && kQ < 315) { j8 = -ke; j7 = kK; kV = -kJ; kU = kf } } } } kI._tempBds = [kZ + j8, kY + j7, kZ + kV, kY + kU]; var kO = j9.pixelToPointIn(new e8(kI._tempBds[0], kH.y + j7), { zoom: kk }); var kG = j9.pixelToPointIn(new e8(kI._tempBds[2], kH.y + kU), { zoom: kk }); kI._mcBds = [kO, kG]; kr.push(kI) } } var kF = this._strategyInfo; if (kF) { var kp = kF.guid; var kg = kF.guidExt; var kD = false; for (var kh = 0, j5 = kr.length; kh < j5; kh++) { var jV = kr[kh]; delete jV.tempRank; if (!this.layer.isClickableLabel(jV) || (kg === 1 && !jV.guidExt)) { continue } if (kp === jV.guid && kF.tilePosStr === jV.tilePosStr) { jV.tempRank = this.RANK5; kD = true } } if (!kD && this.currentSelectedLabel) { this.currentSelectedLabel.tempRank = this.RANK5; var kt = this.currentSelectedLabel.tileInfo; if (kt) { var kc = kt.zoom; var kP = kt.loopOffsetX / Math.pow(2, 18 - kc); this.calcCollisionBounds(this.currentSelectedLabel, kk, kP, kz); kr.push(this.currentSelectedLabel) } } } else { for (var jT = 0, j4 = kr.length; jT < j4; jT++) { var jZ = kr[jT]; if (jZ.type === "line" || !jZ.iconPos) { continue } delete jZ.tempRank } } kr.sort(function (j2, j1) { var k3 = j2.tempRank ? j2.tempRank : j2.rank; var i = j1.tempRank ? j1.tempRank : j1.rank; return i - k3 || j2.startZoom - j1.startZoom || j1.pt.lng - j2.pt.lng || j1.pt.lat - j2.pt.lat }); var kT = 0; if (ka > 0) { kT = 6 } kR = j9.getZoom(); if (kR >= 8 && kR < 9) { kR < 8.5 ? (kT = 6) : (kT = 3) } if (j9._displayOptions.labelMargin > 0) { kT = j9._displayOptions.labelMargin } var kB = 2; if (kR < 6 && kR >= 5) { kB = -1 } for (var kE = 0, j3 = kr.length; kE < j3; kE++) { var kS = kr[kE]; var kL = kS._tempBds; kS.isDel = false; kS._intersectIdx = []; for (var kx = kE + 1; kx < j3; kx++) { var ky = kr[kx]; var k1 = ky._tempBds; if (!(kL[2] + kT + kB < k1[0] - kT || kL[0] - kT > k1[2] + kT + kB || kL[3] + kT + kB < k1[1] - kT || kL[1] - kT > k1[3] + kT + kB)) { kS._intersectIdx.push(kx) } } } for (var kC = 0, j0 = kr.length; kC < j0; kC++) { var jY = kr[kC]; if (jY.isDel === false) { var e = jY._intersectIdx; for (var kw = 0, kN = e.length; kw < kN; kw++) { kr[e[kw]].isDel = true } } } return kM }, calcCollisionBounds: function (jZ, jX, i, jY) { var jV = jZ.ptFix || jZ.pt; var jT = this.map; var jU = jT.pointToPixelIn(jV, { zoom: jX, useRound: this._useRound }); var T = jU.x + i; var j1 = jY - jU.y; var e = jZ.bds; jZ._tempBds = [T + e[0], j1 + e[1], T + e[2], j1 + e[3]]; var jW = jT.pixelToPointIn(new e8(jZ._tempBds[0], jU.y + e[1]), { zoom: jX }); var j0 = jT.pixelToPointIn(new e8(jZ._tempBds[2], jU.y + e[3]), { zoom: jX }); jZ._mcBds = [jW, j0] }, getZoomStep: function () { var T = this.map.getZoom(); var e = Math.floor(T); var i = T - e >= 0.5 ? e + 0.5 : e; return i }, clearCollisionCache: function (e) { if (!e) { return } e.cacheState = null; e.unnecessaryCollisionTest = null }, getCachedLabels: function (e) { e = e || []; var T = this.getZoomStep(); var jV = false; for (var jT = 0; jT < e.length; jT++) { var jU = e[jT]; if (!jU.cacheState || !jU.cacheState[T]) { jV = true; break } if (jU.hasNewData) { jV = true; break } } if (jV) { this.calcLabelsCollision(e) } return e }, calcLabelsCollision: function (T) { var jU = this.getZoomStep(); var jV = {}; var j2; var jT; var j4; var j6; var j5; var j3; T = this.collisionTest(T, undefined, jU); aV.addLabelIntoAreaSpots(T); for (var jZ = 0; jZ < T.length; jZ++) { j2 = T[jZ]; jT = j2.tileInfo; j6 = jT.col + "," + jT.row; jV[j6] = 1 } var e = {}; for (var jX = 0; jX < T.length; jX++) { j2 = T[jX]; if (!j2.cacheState) { j2.cacheState = {} } jT = j2.tileInfo; j5 = jT.col; j3 = jT.row; j6 = j5 + "," + j3; if (j2.cacheState[jU] === "stable") { e[j6] = 1; if (!j2.hasNewData) { continue } } for (var jY = 0; jY < j2.fixedLabel.length; jY++) { j4 = j2.fixedLabel[jY]; if (!j4.cachedIsDel) { j4.cachedIsDel = {} } j4.cachedIsDel[jU] = j4.isDel } for (var j1 = 0; j1 < j2.indoorLabel.length; j1++) { j4 = j2.indoorLabel[j1]; if (!j4.cachedIsDel) { j4.cachedIsDel = {} } j4.cachedIsDel[jU] = j4.isDel } for (var j0 = 0; j0 < j2.lineLabel.length; j0++) { j4 = j2.lineLabel[j0]; if (!j4.cachedIsDel) { j4.cachedIsDel = {} } j4.cachedIsDel[jU] = j4.isDel } if (jV[(j5 - 1) + "," + (j3 - 1)] && jV[(j5 - 1) + "," + j3] && jV[(j5 - 1) + "," + (j3 + 1)] && jV[j5 + "," + (j3 - 1)] && jV[j5 + "," + (j3 + 1)] && jV[(j5 + 1) + "," + (j3 - 1)] && jV[(j5 + 1) + "," + j3] && jV[(j5 + 1) + "," + (j3 + 1)]) { j2.cacheState[jU] = "stable"; e[j6] = 1 } else { if (!j2.cacheState[jU]) { j2.cacheState[jU] = "unstable" } } } for (var jW = 0; jW < T.length; jW++) { j2 = T[jW]; jT = j2.tileInfo; j6 = jT.col + "," + jT.row; j5 = +jT.col; j3 = +jT.row; if (e[(j5 - 1) + "," + (j3 - 1)] && e[(j5 - 1) + "," + j3] && e[(j5 - 1) + "," + (j3 + 1)] && e[j5 + "," + (j3 - 1)] && e[j5 + "," + (j3 + 1)] && e[(j5 + 1) + "," + (j3 - 1)] && e[(j5 + 1) + "," + j3] && e[(j5 + 1) + "," + (j3 + 1)]) { if (!j2.unnecessaryCollisionTest) { j2.unnecessaryCollisionTest = {} } j2.unnecessaryCollisionTest[jU] = 1 } } T.hasNewData = false }, updateLabels: function (jU) { var T = this.map; var j0 = T.getZoom(); var j2 = T.getHeading(); j2 = this.calcLoopHeading(j2); var j1 = T.getTilt(); var jV = this.getZoomStep(); for (var jZ = 0, jW = jU.length; jZ < jW; jZ++) { var jY = jU[jZ]; var jT = jY.tileInfo; var jX = jT.loopOffsetX || 0; var e = { zoom: j0, mcOffsetX: jX }; this.updateFixedLabel(jY.fixedLabel, j1, j2, jY, jV, e); e = { zoom: j0, mcOffsetX: 0 }; this.updateFixedLabel(jY.indoorLabel, j1, j2, jY, jV, e); this.updateLineLabel(jY.lineLabel, j1, j2, jY, jV) } }, updateFixedLabel: function (jY, j1, i, j4, jU, jZ) { if (jY.length === 1) { } var e = jZ.zoom; var jT = jZ.mcOffsetX; var j9; for (var j5 = 0, jW = jY.length; j5 < jW; j5++) { var j0 = jY[j5]; if (!j0.cachedIsDel) { continue } if (!j1 && !i && j4.cacheState && j4.cacheState[jU]) { j0.isDel = j0.cachedIsDel[jU]; if (typeof j0.isDel === "undefined") { j0.isDel = j0.cachedIsDel[jU] = true } } if (j0.startScale > e) { j0.isDel = true } if (j0.isDel) { continue } var j7 = j0.pt; var T = j0.iconPos; if (T && T.texcoord) { if (!T.rtVertex) { T.rtVertex = []; j9 = T.vertex; var jX = it(j7.lng); var j6 = it(j7.lat); T.rtVertex = [jX[0], j6[0], jX[1], j6[1], 0, j9[0], j9[1], 0, 0, T.texcoord[0], T.texcoord[1], jX[0], j6[0], jX[1], j6[1], 0, j9[2], j9[3], 0, 0, T.texcoord[2], T.texcoord[3], jX[0], j6[0], jX[1], j6[1], 0, j9[4], j9[5], 0, 0, T.texcoord[4], T.texcoord[5], jX[0], j6[0], jX[1], j6[1], 0, j9[6], j9[7], 0, 0, T.texcoord[6], T.texcoord[7], jX[0], j6[0], jX[1], j6[1], 0, j9[8], j9[9], 0, 0, T.texcoord[8], T.texcoord[9], jX[0], j6[0], jX[1], j6[1], 0, j9[10], j9[11], 0, 0, T.texcoord[10], T.texcoord[11]] } } var j8 = j0.textPos; if (j8) { if (!j8.rtVertex) { j8.rtVertex = []; j9 = j8.vertex; var jV = j8.rtVertex; var j3 = it(j7.lng); var kc = it(j7.lat); var kb = it(jT); for (var j2 = 0, ka = j9.length; j2 < ka; j2 += 12) { jV.push(j3[0], kc[0], j3[1], kc[1], 0, j9[j2], j9[j2 + 1], kb[0], kb[1], j8.texcoord[0], j8.texcoord[1]); jV.push(j3[0], kc[0], j3[1], kc[1], 0, j9[j2 + 2], j9[j2 + 3], kb[0], kb[1], j8.texcoord[2], j8.texcoord[3]); jV.push(j3[0], kc[0], j3[1], kc[1], 0, j9[j2 + 4], j9[j2 + 5], kb[0], kb[1], j8.texcoord[4], j8.texcoord[5]); jV.push(j3[0], kc[0], j3[1], kc[1], 0, j9[j2 + 6], j9[j2 + 7], kb[0], kb[1], j8.texcoord[6], j8.texcoord[7]); jV.push(j3[0], kc[0], j3[1], kc[1], 0, j9[j2 + 8], j9[j2 + 9], kb[0], kb[1], j8.texcoord[8], j8.texcoord[9]); jV.push(j3[0], kc[0], j3[1], kc[1], 0, j9[j2 + 10], j9[j2 + 11], kb[0], kb[1], j8.texcoord[10], j8.texcoord[11]) } } } } }, updateLineLabel: function (jY, kr, kh, kc, kd) { jY = jY || []; var j7 = this.map; var j1 = j7.getZoomUnits(); for (var kq = 0, ko = jY.length; kq < ko; kq++) { var jX = jY[kq]; if (!jX.cachedIsDel) { continue } if (!kr && !kh && kc.cacheState && kc.cacheState[kd]) { jX.isDel = jX.cachedIsDel[kd]; if (typeof jX.isDel === "undefined") { jX.isDel = jX.cachedIsDel[kd] = true } } if (jX.isDel) { continue } if (!jX.styleText || jX.styleText.length === 0) { continue } var jZ = jX.mcInTile; var kk = jZ.x; var ki = jZ.y; var kb = jX.wordsInfo; var j9 = jX.labelAngle; var j5 = false; var kj = 0; if (kh !== 0) { var j6 = kb[0].angle; var kn = this.calcLoopHeading(j6 - kh); if (kn > 45 && kn < 315) { if (kn > 45 && kn <= 135) { kj = 270 } else { if (kn > 135 && kn <= 225) { kj = 180 } else { if (kn > 225 && kn < 315) { kj = 90 } } } if (j9 > 225 && j9 <= 315 && kj <= 180) { j5 = true } else { if ((j9 >= 0 && j9 <= 45 || j9 >= 315 && j9 < 360) && kj >= 180) { j5 = true } } } } for (var kp = 0, j2 = kb.length; kp < j2; kp++) { var km = kb[kp]; var j4 = km.calcInfo; var kg = km.offset[0]; var ke = km.offset[1]; if (!km.size) { continue } var e = km.size[0]; var T = km.size[1]; var j3 = km.angle; if (!j4) { j4 = {} } if (kh !== j4.mapHeading || j1 !== j4.zoomUnits) { j4.mapHeading = kh; j4.zoomUnits = j1; if (j5) { var j8 = kb[j2 - 1 - kp]; kg = j8.offset[0]; ke = j8.offset[1]; j3 = j8.angle } var jU = kk + kg * j1; var jT = ki + ke * j1; j4.rotationCenter = { lng: jU, lat: jT }; j4.calcHeading = kj; j4.angle = j3; j4.offsetX = kg; j4.offsetY = ke; km.calcInfo = j4 } if (!km.rtVertex) { km.rtVertex = [] } km.rtVertex.length = 0; var ka = j4.calcHeading + j4.angle; var jV = j4.rotationCenter; kg = j4.offsetX; ke = j4.offsetY; var jW = Math.round(kg - e / 2); var kl = Math.round(kg + e / 2); var kf = Math.round(ke + T / 2); var j0 = Math.round(ke - T / 2); km.rtVertex.push(kk, ki, km.z, jW, j0, jV.lng, jV.lat, ka, km.texcoord[0], km.texcoord[1], kk, ki, km.z, kl, j0, jV.lng, jV.lat, ka, km.texcoord[2], km.texcoord[3], kk, ki, km.z, kl, kf, jV.lng, jV.lat, ka, km.texcoord[4], km.texcoord[5], kk, ki, km.z, jW, j0, jV.lng, jV.lat, ka, km.texcoord[6], km.texcoord[7], kk, ki, km.z, kl, kf, jV.lng, jV.lat, ka, km.texcoord[8], km.texcoord[9], kk, ki, km.z, jW, kf, jV.lng, jV.lat, ka, km.texcoord[10], km.texcoord[11]) } } }, calcLoopHeading: function (e) { while (e >= 360) { e -= 360 } while (e < 0) { e += 360 } return e }, fixDataFormat: function (j1) { var jT = this.fixedLabelData; var e = this.lineLabelData; var T = this.highlightLabelData; var j9 = 0; var jX = 0; var j6 = 0; var j7; if (this.currentSelectedLabel) { var jW = this.getLabelByUid(this.currentSelectedLabel.guid, this.currentSelectedLabel.tilePosStr); if (!jW || jW.isDel) { jT[j9] = this.currentSelectedLabel.formatedData; j9++; T[j6] = this.currentSelectedLabel.formatedData; j6++ } } for (var j5 = 0; j5 < j1.length; j5++) { var jZ = j1[j5]; var jY = jZ.fixedLabel; var jU = jZ.indoorLabel; var j4 = jZ.lineLabel; var j8 = { highlightLabelData: T, highlightLabelDataLen: j6 }; j7 = this.fixFixedLabelDataFormat(jY, jZ, jT, j9, j8); j9 = j7[0]; j6 = j7[1]; j7 = this.fixFixedLabelDataFormat(jU, jZ, jT, j9, j8, true); j9 = j7[0]; j6 = j7[1]; e[jX] = { tileInfo: jZ.tileInfo, lineLabels: [] }; for (var j3 = 0; j3 < j4.length; j3++) { if (j4[j3].isDel) { continue } var j0 = j4[j3].wordsInfo; if (j0) { for (var j2 = 0; j2 < j0.length; j2++) { if (!j0[j2].rtVertex) { continue } var jV = j0[j2].formatedData; if (!jV) { jV = { textureSource: jZ.textureSources[j4[j3].processedInZoom], textureHeight: jZ.textureHeights[j4[j3].processedInZoom], renderData: { vertex: j0[j2].rtVertex, textureCoord: j0[j2].texcoord } }; j0[j2].formatedData = jV } e[jX].lineLabels.push(jV) } } } jX++ } jT.length = j9; e.length = jX; T.length = j6; return [e, jT, T] }, fixFixedLabelDataFormat: function (jX, j0, j1, jY, T, jZ) { var jV = T.highlightLabelData; var e = T.highlightLabelDataLen; for (var i = 0; i < jX.length; i++) { if (jX[i].isDel) { continue } var jW = jX[i].textPos; var jU = jX[i].iconPos; var jT = null; if (jW && jW.rtVertex) { if (!jX[i].formatedData) { jT = { guid: jX[i].guid, guidExt: jX[i].guidExt, tilePosStr: jX[i].tilePosStr, zoom: jX[i].zoom, tempRank: jX[i].tempRank, textureSource: j0.textureSources[jX[i].processedInZoom], textureHeight: j0.textureHeights[jX[i].processedInZoom], renderData: { vertex: jW.rtVertex, textureCoord: jW.texcoord } }; if (jZ && jX[i].onDefaultFloor === false) { jT.textureSource = j0.indoorTextureSources[jX[i].processedInZoom]; jT.textureHeight = j0.indoorTextureHeights[jX[i].processedInZoom] } jX[i].formatedData = jT } else { jT = jX[i].formatedData; jT.tempRank = jX[i].tempRank } if (this.currentSelectedLabel && jT.guid === this.currentSelectedLabel.guid && jT.tilePosStr === this.currentSelectedLabel.tilePosStr) { jV[e] = jT; e++ } } if (jU && jU.rtVertex) { if (jT) { if (!jT.iconRenderData) { jT.iconRenderData = { vertex: jU.rtVertex, textureCoord: jU.texcoord } } } else { jT = { guid: jX[i].guid, guidExt: jX[i].guidExt, zoom: jX[i].zoom, tempRank: jX[i].tempRank, iconRenderData: { vertex: jU.rtVertex, textureCoord: jU.texcoord } }; jX[i].formatedData = jT } } j1[jY] = jT; jY++ } return [jY, e] }, _refreshSpotData: function () { this._spotData.length = 0; var jY = this.map; var jW = Math.floor(jY.getZoom()); var T = this.map._featureMgr.getLabelData(this.layer.drawIndex); if (this.layer.drawIndex !== 0) { return } if (T) { for (var jU = 0, jT = T.length; jU < jT; jU++) { this._addFixedSpotData(T[jU].fixedLabel, jW); this._addFixedSpotData(T[jU].indoorLabel, jW) } } var jZ = this.currentSelectedLabel; if (jZ && !this.getTileByLabelUid(jZ.guid, jZ.tilePosStr)) { var jV = this._getSpotDataFromLabel(this.currentSelectedLabel); if (jV) { this._spotData.push(jV) } } var jX = new fy("onspotsdataready"); jX.spots = this._spotData; jX.index = this.layer.drawIndex; jY._spotDataOnCanvas = this._spotData; jY.dispatchEvent(jX) }, _addFixedSpotData: function (jU, jT) { for (var e = 0; e < jU.length; e++) { var T = jU[e]; if (!this.layer.isClickableLabel(T) || (T.guidExt === 1 && T.startScale > jT)) { continue } var i = jU[e].spot || this._getSpotDataFromLabel(jU[e]); if (i) { this._spotData.push(i) } } }, _getSpotDataFromLabel: function (T) { var jV = this.map; if (!T.bds) { return null } var e = T.bds.slice(0); var jT = null; if (T.iconPos) { jT = new ct(T.pt.lng, T.pt.lat) } var i = T.name ? T.name.replace("\\\\", "<br>") : ""; if (T.iconPos && T.iconPos.iconType.indexOf("ditie") > -1 && jV.getZoom() > 14) { i = "" } var jU = { n: i, pt: new ct(T.pt.lng, T.pt.lat), userdata: { iconPoint: jT, uid: T.guid, name: i, mapPoi: true, type: T.iconPos ? T.iconPos.iconType : "", rank: T.rank, zoom: T.zoom, tilePosStr: T.tilePosStr }, bd: e, tag: "MAP_SPOT_INFO" }; T.spot = jU; return jU }, drawLabelsOnCanvas: function (i, e) { if (this._labelTextCanvas) { this._labelTextCanvas.drawLabelsOnCanvas(i, e) } } }); function iN(e) { this._map = e; this.virtualTiles = {}; this.virtualTile = { custom: true, label: { fixedLabel: [], indoorLabel: [], lineLabel: [], textureHeights: [], status: "ready" }, tileInfo: { col: 0, row: 0, zoom: 0, useZoom: 0, loopOffsetX: 0 }, status: "ready" }; this.init() } iN.prototype.init = function () { var T = this._map; var i = this; function e(jT) { i.updateLabels(jT) } T.addEventListener("add_tile_labels", e); T.addEventListener("onremove_tile_labels", e); T.addEventListener("onclear_labels", e) }; iN.prototype.updateLabels = function (jW) { var jZ = this._map.tileMgr.getLabelTextCanvas(); var T = this._map; var jX = this; if (jW.model === "mvt") { var j1 = jW.data; var j0 = "mvt_" + jW.index } else { var j1 = T._customTileLabels; var j0 = "custom" } var jV = JSON.parse(JSON.stringify(j1)); for (var jU = 0; jU < jV.length; jU++) { var jY = jV[jU]; jY.guid = jY.guid || jY.uid; jY.iconPos = this.getIconVertexData(jY.style, 1); var jT = { textMargin: jY.textMargin, textOnIcon: jY.textOnIcon, iconSize: jY.iconSize, style: { color: jY.style.color, strokeColor: jY.style.strokeColor, fontSize: jY.style.fontSize, haloSize: jY.style.haloSize, } }; jV[jU].styleId = jV[jU].styleId || o(jT) } jZ.drawCustomLabelsOnCanvas(jV, function (i) { var e = JSON.parse(JSON.stringify(jX.virtualTile)); e.label.tileInfo = e.tileInfo; if (i) { e.label.textureHeights[0] = [i.height] } e.label.fixedLabel = jV; jX.virtualTiles[j0] = e; var j2 = new fy("oncustom_labels_ready"); j2.virtualTile = e; j2.labelCanvas = i; j2.model = j0; j2.imgKey = bw.getGUID("custom_labels_"); T.dispatchEvent(j2) }) }; iN.prototype.getIconVertexData = function (j2, jV) { if (!j2 || !j2.icon || !j2.iconSize || j2.iconSize.length < 2) { return null } var jW = 2; var jU = j2.iconSize[0] / jW * jV; var jZ = j2.iconSize[1] / jW * jV; var jT = Math.round(-jU / 2); var j1 = Math.round(-jZ / 2); var T = jT + jU; var j0 = j1; var i = T; var jY = j0 + jZ; var e = jT; var jX = jY; return { vertex: [jT, j1, T, j0, i, jY, jT, j1, i, jY, e, jX], texcoord: null, width: jU, height: jZ, iconType: j2.icon } }; bw.register(function (e) { e._customLabelMgr = new iN(e) }); var fW = function (kb, ka) { var j9 = { "\x6d\x63\x61\x68\x78": "\x64\x65\x65\x6c", "\x61\x6c\x68\x63\x6c": function (kc, e) { return kc < e }, "\x65\x65\x64\x64\x68": "\x61\x65\x61", "\x78\x65\x65\x61\x61": "\x63\x61\x68", "\x65\x69\x63\x61\x6c": "\x63\x6f\x6e\x73\x74\x72\x75\x63\x74\x6f\x72", "\x6c\x65\x69\x65\x61": function (kd, kc, e) { return kd(kc, e) }, "\x64\x65\x65\x78\x78": function (e, kc) { return e(kc) }, "\x65\x63\x6c\x65\x78": "\x31\x2e\x31\x2e\x32", "\x6d\x61\x61\x65\x61": "\x43\x68\x61\x72", "\x65\x63\x78\x6d\x68": function (kc, e) { return kc + e }, "\x6c\x65\x61\x63\x6d": function (kc, e) { return kc + e }, "\x6d\x65\x6c\x61\x65": function (kc, e) { return kc(e) }, "\x61\x61\x68\x78\x69": function (kc, e) { return kc < e } }; var j6 = j9["\x65\x63\x6c\x65\x78"]; function j4(kg, e) { var kh = "\x69\x61\x69"; while (kh !== j9["\x6d\x63\x61\x68\x78"]) { switch (kh) { case "\x61\x65\x61": return kd; case "\x64\x6d\x78": for (var kf = 0; j9["\x61\x6c\x68\x63\x6c"](kf, kc); kf++) { var ke = e(kg[kf]); kd["\x70\x75\x73\x68"](ke) } kh = j9["\x65\x65\x64\x64\x68"]; break; case j9["\x78\x65\x65\x61\x61"]: var kd = []; kh = "\x64\x6d\x78"; break; case "\x69\x61\x69": var kc = kg["\x6c\x65\x6e\x67\x74\x68"]; kh = "\x63\x61\x68"; break } } } var j8, j7, j5, j3, j2, j1 = decodeURIComponent, j0 = j9["\x6d\x61\x61\x65\x61"], jZ = ""; var jY = [fW]; j8 = "\x64\x65"; j7 = "\x66\x72"; j5 = "\x6f"; j2 = j9["\x65\x63\x78\x6d\x68"](j9["\x6c\x65\x61\x63\x6d"](j7, j5), "\x6d"); j3 = "\x43\x6f" + j8; var jX = function (e) { return (e + jZ)[j9["\x65\x69\x63\x61\x6c"]][j2 + j0 + j3](e) }; var jW = function (e) { return j9["\x6c\x65\x69\x65\x61"](j4, e, function (kc) { return jX(kc) }) }; var jV = jW["\x63\x61\x6c\x6c"](jX, [39, 34, 37, 96, 60, 120, 97, 65, 98, 66, 99, 67, 100, 68, 101, 69, 102, 70, 103, 110, 109, 111, 112, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57]); var jU = j4([28782, 27702, 26416, 25167, 24183], function (e) { return j1(e) }); var jT = jW["\x63\x61\x6c\x6c"](jU, [22354, 22749, 24415, 23346, 22257, 22688, 24306, 25174, 23595, 25547, 22984, 25690, 22212, 27547, 21594, 27210, 23090, 29193, 22394, 29368, 29532, 29459, 29530, 24146, 24500, 26352, 27441, 28788, 29370, 27673, 26925, 25249, 24430]), T = {}; jU = j9["\x6d\x65\x6c\x61\x65"](jW, jU); var i = new RegExp(jU["\x6a\x6f\x69\x6e"]("\x7c")); for (var j8 = 0; j9["\x61\x61\x68\x78\x69"](j8, jV["\x6c\x65\x6e\x67\x74\x68"]); j8++) { T[jT[j8]] = jV[j8] } ka = j9["\x6c\x65\x69\x65\x61"](j4, ka["\x73\x70\x6c\x69\x74"](jZ), function (e) { return T[e] || e })["\x6a\x6f\x69\x6e"](jZ); return j4(ka["\x73\x70\x6c\x69\x74"](i), function (e) { return j9["\x64\x65\x65\x78\x78"](j1, e) }) }(this, "\u5ef2\u735c\u58a0\u5e77\u735c\x6c\x6c\u6c36\u5ef2\u59c8\u59c8\u706e\x68\u58a0\u56c4\u6c36\u56c4\u59c8\u545a\u706e\u56c4\u545a\u56c4\u6730\u56c4\u545a\x73\x74\x72\u7313\x79\u624f\u56c4\x6c\u59c8\u735c\u59c8\u6c36\u59c8\u59c8\x68\u5ef2\u545a\u706e\u735c\u5ef2\u735a\u6730\u59c8\u7313\u72b8\u5a32\x69\u577a\u624f\x73\x74\x79\x6c\u545a\u6c36\u545a\u545a\x68\x6c\x6c\u6c36\x68\u545a\u545a\u5e77\u735c\u5ef2\u58a0\u6c36\u5ef2\u58a0\u545a\x68\u5ef2\u6730\x68\u5ef2\x72\u56c4\x77\u5ef2\x72\u545a\u645a\u7313\u72b8\u59c8\x75\x72\x72\u545a\u72b8\u59c8\x79\u5e77\u56c4\u545a\u5ef2\u6730\u56c4\x68\u545a\u5e77\u5ef2\x72\x72\x50\u545a\u72b8\u56c4\x69\u72b8\u577a\u6b9b\u5ef2\x74\u5ef2\u6c36\u5ef2\u5ef2\x69\u735c\u5ef2\u6730\u58a0\x69\u545a\u735c\u58a0\u6c36\u7313\u72b8\x73\x74\x79\x6c\u545a\x7a\u7313\u7313\u735c\x75\u735a\u56c4\u5ef2\x74\u545a\u6c36\u545a\x69\u56c4\u706e\u59c8\u5ef2\u545a\u545a\u58a0\u6730\u5ef2\u58a0\u545a\u5ef2\u545a\u706e\u5ef2\x72\x72\x57\u7313\x72\x6b\u545a\x72\u6730\x6c\u545a\u72b8\u577a\x74\x68\u6730\u735c\x69\u735c\u5ef2\u545a\u706e\x68\u5ef2\u5ef2\u6730\u59c8\u59c8\u545a\u5ef2\u545a\u5e77\x6c\u5ef2\u5ef2\u58a0\u545a\u706e\u545a\u5ef2\u59c8\u5ef2\u5ef2\u5e77\u59c8\u5ef2\x69\u5e77\x68\x68\u58a0\x6c\u5ef2\u6730\x74\u545a\u58a0\x74\x53\x69\x7a\u545a\x52\u5ef2\x74\x69\u7313\u624f\u56c4\u58a0\u59c8\u5ef2\u5ef2\u706e\u5ef2\u735c\x68\u706e\x68\x6c\x69\x69\x69\u706e\u5ef2\x6c\u545a\u545a\u545a\u5e77\x72\u5ef2\x74\x69\u7313\u6c36\x68\x6c\u5ef2\u5ef2\u545a\u6730\u735c\u735c\u5ef2\u58a0\u5ef2\u6c36\x68\u59c8\x6c\x68\u58a0\u6c36\u56c4\u735c\u59c8\u58a0\u59c8\u624f\u59c8\x69\u56c4\u59c8\u58a0\u5e77\u63cb\x72\u7313\x77\x73\u545a\x72\u6730\x68\x68\u58a0\u5ef2\u58a0\u5e77\u735c\u56c4\u545a\u58a0\x69\u5e77\u58a0\u545a\u59c8\u624f\x73\x74\x72\x69\u72b8\u577a\x69\u5a32\x69\u545a\u56c4\u645a\x75\x73\x74\u7313\u735c\x53\x74\x79\x6c\u545a\x49\u72b8\u5a32\u7313\u6c36\x68\u5ef2\u59c8\x6c\u5ef2\u6730\u735c\u545a\x69\u6c36\u7313\u72b8\x73\x74\x79\x6c\u545a\x5f\x6c\u7313\u5ef2\u56c4\u545a\u56c4\u6c36\u545a\x68\u58a0\u59c8\u545a\u706e\u59c8\u5ef2\x6c\u5ef2\x69\u6730\u59c8\x68\u5ef2\u6c36\u5ef2\u545a\x68\u5ef2\u545a\u706e\x73\x74\x72\x69\u72b8\u577a\x69\u5a32\x69\u545a\u56c4\u645a\x75\x73\x74\u7313\u735c\x53\x74\x79\x6c\u545a\x49\u72b8\u5a32\u7313\x5a\u7313\u7313\u735c\u6c36\u56c4\u545a\x6c\u545a\u545a\u5e77\x69\x73\x53\u545a\u72b8\u56c4\u7209\x53\u6730\x68\u56c4\u5ef2\u5ef2\u545a\u5e77\u5ef2\u5ef2\u5ef2\u58a0\u5ef2\u5e77\x68\u56c4\u56c4\x68\u58a0\u6c36\x77\u7313\x72\u56c4\x53\u735a\u5ef2\u59c8\u545a\x52\u5ef2\x74\x69\u7313\u706e\u5ef2\u5ef2\u58a0\x68\u56c4\u5e77\u735c\u56c4\u735c\x6c\u5ef2\u624f\x69\x6c\u59c8\x68\u5ef2\u6730\u545a\u59c8\x6c\u624f\u5ef2\u5ef2\u545a\x68\u545a\u624f\x68\x6c\x6c\u5e77\x68\x68\x6c\u5ef2\u735c\u624f\u735c\x69\u72b8\u624f\x73\x68\x69\u5a32\x74\u6c36\x75\x72\x6c\u5e77\x74\x69\x6c\u545a\x49\u72b8\u5a32\u7313\u6c36\x74\x69\x6c\u545a\x4b\u545a\x79\u6730\u58a0\x69\u545a\x68\u545a\u5e77\u59c8\u735c\u58a0\u5e77\x68\u56c4\x69\u5ef2\u735c\u6730\x69\u58a0\u59c8\u545a\u58a0\u5e77\x69\x68\u5ef2\u56c4\u735c\u706e\u59c8\u56c4\u735c\u545a\u59c8\u6c36\u545a\u56c4\u59c8\u56c4\u56c4\u706e\u5ef2\u5ef2\u545a\u5ef2\x68\u706e\u7313\u72b8\x72\u545a\u5a32\x72\u545a\x73\x68\u624f\x69\u59c8\u545a\x69\u56c4\u6c36\x73\u7313\x75\x72\u59c8\u545a\u6730\x77\u7313\x72\x6b\u545a\x72\u735c\u577a\x72\u6730\u59c8\x68\x6c\u706e\x5f\u59c8\u5c2b\x6b\u624f\u56c4\u5ef2\x74\u5ef2\u6730\x5f\u735a\u5ef2\x72\x73\x69\u72b8\u577a\x54\x69\x6c\u545a\x4b\u545a\x79\u624f\u735c\u5ef2\u545a\u5ef2\u545a\u6c36\x68\u58a0\x6c\u5e77\x6c\u7313\u5ef2\u56c4\x54\x69\x6c\u545a\u6b9b\u5ef2\x74\u5ef2\u6c36\x68\u545a\u735c\u5ef2\u735c\u624f\u58a0\u5ef2\u58a0\u6730\x5f\u735a\u5ef2\x72\x73\x69\u72b8\u577a\x54\x69\x6c\u545a\x49\u72b8\u5a32\u7313\u5e77\u5ef2\u545a\u5ef2\u6c36\u5ef2\u58a0\u5ef2\x69\u56c4\u5e77\u5a32\x69\x72\u545a\u706e\u5ef2\u56c4\u56c4\u545a\u624f\u545a\u545a\x69\x69\x68\u6730\u58a0\u59c8\u58a0\u59c8\u58a0\u5e77\u545a\u58a0\u545a\x69\u545a\u706e\u5ef2\x69\u59c8\u706e\x5f\x69\x73\u63cb\x75\x73\x79\u6730\u59c8\u5c2b\x6b\u6730\u735a\x75\x73\x68\u624f\x69\u56c4\u58a0\x6c\u56c4\u706e\x68\u5ef2\x69\u624f\u56c4\u5ef2\u56c4\u6730\u59c8\x68\u58a0\u6730\u545a\u545a\u545a\u6730\u5ef2\u58a0\u58a0\x68\u735c\u5e77\x69\u5ef2\u56c4\u5ef2\u735c\u6c36\u5ef2\u545a\u58a0\u5ef2\u6730\x68\u545a\x6c\u5ef2\u56c4\u6c36\u5ef2\u59c8\u5ef2\u58a0\u58a0\u6c36\u545a\u56c4\u58a0\u545a\u58a0\u706e\x69\u5ef2\u5ef2\u5ef2\x6c\u5e77\u735c\x68\u735c\u545a\x6c\u706e\x74\x69\x6c\u545a\x54\x79\u735a\u545a\x4e\u5ef2\u735c\u545a\u706e\u5ef2\u5ef2\u5ef2\u5ef2\x69\u706e\u545a\u5ef2\u56c4\u5ef2\u5ef2\u6c36\u5ef2\u58a0\u545a\u5ef2\u5ef2\u6c36\u59c8\u7313\x6c\u6730\x72\u7313\x77\u5e77\x7a\u7313\u7313\u735c\u706e\x73\u735a\x6c\x69\u59c8\u545a\u6730\u735c\u545a\u5ef2\u5ef2\u6730\x69\u58a0\u545a\u624f\u735c\u735c\u5ef2\u706e\u58a0\u545a\u58a0\u6c36\x73\x74\x72\x69\u72b8\u577a\x69\u5a32\x69\u545a\u56c4\u7209\u545a\u5ef2\x74\x75\x72\u545a\x53\x74\x79\x6c\u545a\u5e77\x6c\u5ef2\u735c\u6730\u56c4\x69\x69\u6c36\x69\x69\u5ef2\u624f\u58a0\x6c\x68\u6c36\x6c\u5ef2\x69\u6730\x69\u59c8\u7313\u72b8\x53\u545a\x74\x49\u72b8\u5a32\u7313\u5e77\u545a\x6c\x68\u624f\u5ef2\u56c4\x6c\u5e77\u5ef2\u735c\u735c\u624f\x68\u735c\u59c8\u624f\u5ef2\x68\u56c4\u5e77\u58a0\x6c\u545a\u706e\u735c\x69\u5ef2\u5e77\u545a\x6c\u58a0\u6c36\x68\x6c\x68\u5e77\u7209\u545a\u5ef2\x74\x75\x72\u545a\x53\x74\x79\x6c\u545a\u624f\x69\u5ef2\u58a0\u6c36\u5ef2\x68\u56c4\u735c\u58a0\u6c36\u56c4\u735c\u59c8\x68\x6c\u6c36\u735c\u56c4\u5ef2\u735c\u545a\u5e77\x73\x74\x72\x69\u72b8\u577a\x69\u5a32\x79\u6c36\u59c8\x75\x73\x74\u7313\u735c\x53\x74\x79\x6c\u545a\x49\u72b8\u5a32\u7313\x5f\u706e\x69\u5ef2\u56c4\u5ef2\u59c8\u6c36\u545a\x69\u5ef2\x69\u735c\u5e77\u56c4\x68\u58a0\u6c36\x6c\u56c4\u545a\u6c36\u545a\u545a\x69\x69\u545a\u624f\x69\u5ef2\u545a\u59c8\u5ef2\u6730\u56c4\u5ef2\x68\u545a\u56c4\u6730\x5f\u56c4\x69\x73\u735a\x6c\u5ef2\x79\x4f\u735a\x74\x69\u7313\u72b8\x73\u6730\x68\u59c8\u735c\x68\x6c\u624f\u5ef2\u56c4\u5ef2\u5e77\u5a32\u545a\u5ef2\x74\x75\x72\u545a\x53\x74\x79\x6c\u545a\u6c36\u735c\u545a\u59c8\u706e\x69\u72b8\u56c4\u7313\u7313\x72\x53\x74\x79\x6c\u545a\u6c36\x73\x74\x72\x69\u72b8\u577a\x69\u5a32\x69\u545a\u56c4\x49\u72b8\u56c4\u7313\u7313\x72\x53\x74\x79\x6c\u545a\u6730\x69\x69\u56c4\u5e77\u545a\x69\u5ef2\u624f\x68\u56c4\u545a\u56c4\u58a0\u624f\u58a0\u56c4\x6c\u59c8\u58a0\u624f\x73\x74\x72\x69\u72b8\u577a\x69\u5a32\x69\u545a\u56c4\x49\u59c8\u7313\u72b8\x53\u545a\x74\x49\u72b8\u5a32\u7313\u6730\u545a\u545a\u545a\x6c\u5ef2\u5e77\u545a\u545a\u58a0\x68\u735c\u6c36\x6c\x6c\u56c4\u6730\u59c8\x75\x73\x74\u7313\u735c\x4d\u5ef2\u735a\x53\x74\x79\x6c\u545a\u5e77\u5ef2\u5ef2\u5ef2\u56c4\u545a\u706e\u735c\u56c4\x6c\u56c4\u5ef2\u6730\x6c\x68\x68\x6c\u58a0\u706e\u59c8\u5ef2\x68\u5ef2\u59c8\u624f\u545a\u5ef2\x6c\x6c\u545a\u6c36\u577a\u545a\x74\x49\u56c4\x6c\u545a\x57\u7313\x72\x6b\u545a\x72\u6c36\u56c4\u59c8\u5ef2\u59c8\x69\u706e\u577a\u545a\x74\x4d\u5ef2\u735a\x53\x74\x79\x6c\u545a\x49\u56c4\u6730\u5ef2\u545a\u545a\u5e77\x68\x6c\u58a0\x69\u545a\u6730\u58a0\u5ef2\u56c4\u59c8\u58a0\u5e77\u545a\u735c\u545a\u545a\x68\u706e\u545a\u56c4\u5ef2\u5e77\u735c\u5ef2\u735a\x53\x74\x79\x6c\u545a\x49\u56c4\u624f\u545a\u545a\u56c4\u735c\x69\u6730\x69\u59c8\u7313\u72b8\x49\u72b8\u5a32\u7313\u706e\u56c4\u735c\u545a\x68\u545a\u6c36\u59c8\u545a\u58a0\u5e77\u545a\u545a\u58a0\u56c4\u5ef2\u624f\u56c4\u59c8\u58a0\u58a0\u58a0\u624f\u5ef2\u545a\u56c4\x69\u545a\u5e77\u735a\u7313\x73\x74\x4d\u545a\x73\x73\u5ef2\u577a\u545a\u6c36\u545a\u56c4\u58a0\u5ef2\x68\u5e77\u58a0\x69\u58a0\x6c\u59c8\u6c36\u58a0\x6c\x68\u5ef2\u59c8\u6c36\u59c8\u545a\x68\x69\x68\u706e\x6c\u5ef2\u5ef2\u59c8\u5ef2\u6730\u545a\u58a0\x74\u545a\u72b8\u56c4\u6730\u735a\x72\u7313\x74\u7313\x74\x79\u735a\u545a\u6c36\u59c8\u5ef2\u5ef2\u706e\u545a\u5ef2\u56c4\u58a0\u6730\u545a\u5ef2\u56c4\u706e\u58a0\x69\x68\u5ef2\u706e\u5ef2\u545a\x68\u706e\u59c8\u5ef2\u545a\u6730\u545a\u5ef2\u59c8\u5e77\u545a\u56c4\u58a0\u706e\x6c\u545a\x68\u624f\x68\u545a\u59c8\u5ef2\u545a\u6c36\u59c8\u545a\u735c\u59c8\x68\u706e\x69\u5ef2\x68\u58a0\x68\u6c36\x69\u56c4\u56c4\u58a0\x6c\u706e\u59c8\x68\u545a\u545a\u545a\u6730\x68\u5ef2\u58a0\u56c4\x68\u5e77\u58a0\u59c8\x6c\u5ef2\u59c8\u624f\u5ef2\u545a\x68\x68\u5ef2\u6730\u735a\x72\u545a\x76\u545a\u72b8\x74\u6b9b\u545a\u5a32\u5ef2\x75\x6c\x74\u5e77\u545a\u545a\u58a0\x68\x69\u624f\u545a\u545a\x6c\u5ef2\u545a\u6c36\u56c4\x6c\u5ef2\u6c36\u545a\x68\u59c8\u706e\u545a\x68\x69\u6730\x69\x68\u545a\u5ef2\u706e\x69\u735c\u735a\u7313\x72\x74\x53\u59c8\x72\x69\u735a\x74\x73\x28\u5f5f\u66f0\u66f0\u5e77\u5ef2\u735a\u735a\x6c\x69\u59c8\u5ef2\x74\x69\u7313\u72b8\u5f5f\u66f0\u7209\x6a\u5ef2\x76\u5ef2\x73\u59c8\x72\x69\u735a\x74\u706e\u58a0\x69\x6c\u5e77\x6c\u5ef2\u5ef2\u6c36\u56c4\u545a\u5ef2\u5ef2\u545a\u6c36\x55\x52\x4c\u6730\x77\u545a\u5c2b\x6b\x69\x74\x55\x52\x4c\u6c36\u545a\u58a0\u5ef2\u545a\x69\u706e\u545a\u545a\u545a\u58a0\u5ef2\u6c36\u59c8\x72\u545a\u5ef2\x74\u545a\x4f\u5c2b\x6a\u545a\u59c8\x74\x55\x52\x4c\u624f\u5ef2\u735c\u5ef2\u6730\u545a\u58a0\x68\x69\u58a0\u6730\u5f5f\u66f0\u66f0\x29\u5f5f\u6b31\u63cb\u6730\x68\u59c8\u5ef2\u5ef2\u58a0\u6730\u5ef2\u59c8\u5ef2\u59c8\u6c36\x69\x69\u59c8\u545a\x69\u624f\u577a\u545a\x74\u63cb\x6c\u7313\u5c2b\u6730\x57\u545a\u5c2b\x4b\x69\x74\u63cb\x6c\u7313\u5c2b\u63cb\x75\x69\x6c\u56c4\u545a\x72\u6c36\u5ef2\x69\x6c\u6730\u5ef2\u735a\u735a\u545a\u72b8\u56c4\u6c36\x69\u72b8\x69\x74\u6c36\u56c4\x69\u56c4\u735c\u624f\x73\x74\x72\x69\u72b8\u577a\u6c36\u59c8\u735c\u5ef2\u624f\u59c8\u59c8\x69\u624f\x69\u5ef2\u56c4\u735c\u6730\x69\x69\x68\u706e\x6c\u5ef2\u56c4\u624f\u5ef2\u5ef2\x6c\u624f\u5ef2\x69\u735c\u6c36\x69\u545a\u545a\u624f\x69\u5ef2\x69\u6730\u5ef2\x68\x6c\u5e77\x69\u5ef2\u59c8\u6c36\u5ef2\u5ef2\u56c4\u6730\u58a0\x69\x68\u6c36\x6c\u59c8\u735c\u6730\u545a\x69\x6c\u6c36\x6c\u5ef2\u58a0\u706e\u545a\u5ef2\x69\u6730\x6c\u735c\x6c\u545a\u624f\u5ef2\u545a\x6c\u545a\u6c36\u5ef2\u5ef2\u5ef2\u5e77\u5ef2\u545a\u58a0\u624f\u5ef2\u5ef2\x69\u6c36\u59c8\u545a\u545a\u6c36\u545a\u5ef2\x6c\u6c36\u59c8\u59c8\x6c\u6c36\u545a\x6c\u545a"); (function (jT, T) { var i = function (e) { while (--e) { jT.push(jT.shift()) } }; i(++T) }(fW, 210)); var fV = function (jT, T) { jT = jT - 0; var i = fW[jT]; return i }; function jt(jW) { var jV = { "\x65\x65\x78\x68\x69": function (jX, i) { return jX(i) }, "\x68\x65\x63\x61\x65": fV("0x0"), "\x63\x65\x6d\x63\x68": function (jX, i) { return jX !== i }, "\x69\x61\x68\x78\x68": fV("0x1"), "\x69\x64\x64\x78\x6c": fV("0x2"), "\x63\x68\x65\x65\x65": fV("0x3"), "\x68\x61\x78\x64\x68": fV("0x4"), "\x78\x63\x6c\x61\x63": fV("0x5"), "\x61\x65\x68\x68\x61": fV("0x6"), "\x78\x6d\x65\x68\x61": fV("0x7"), "\x65\x65\x6c\x61\x65": fV("0x8") }; var jU = jV[fV("0x9")]; while (jV[fV("0xa")](jU, jV[fV("0xb")])) { switch (jU) { case fV("0x8"): return jT; case fV("0x0"): var jT = null; jU = jV[fV("0xc")]; break; case jV[fV("0xc")]: try { var T = "\x63\x61\x65"; while (jV[fV("0xa")](T, fV("0x3"))) { switch (T) { case fV("0x6"): jT = gl(jW); T = jV[fV("0xd")]; break; case jV[fV("0xe")]: jT = new Worker(jW); T = fV("0x7"); break; case jV[fV("0xf")]: T = D(jW) ? "\x61\x65\x68" : jV[fV("0x10")]; break; case jV["\x78\x6d\x65\x68\x61"]: jT["\x6f\x6e\x65\x72\x72\x6f\x72"] = function (i) { i[fV("0x11")](); jT = jV[fV("0x12")](gl, jW) }; T = jV[fV("0xd")]; break } } } catch (e) { jT = gl(jW) } jU = jV[fV("0x13")]; break } } } function gl(T) { var i = { "\x64\x65\x61\x61\x65": fV("0x14"), "\x61\x61\x61\x69\x64": fV("0x15"), "\x65\x78\x68\x69\x65": "\x63\x61\x65", "\x65\x78\x61\x65\x69": fV("0x16"), "\x65\x65\x65\x78\x61": fV("0x17"), "\x65\x78\x68\x69\x78": function (j2, j1) { return j2 + j1 }, "\x65\x78\x69\x6c\x78": fV("0x18"), "\x63\x69\x61\x6d\x6d": fV("0x19"), "\x68\x63\x61\x61\x78": fV("0x1a"), "\x69\x69\x63\x65\x69": fV("0x1b"), "\x61\x78\x78\x68\x65": "\x61\x69\x6c" }; var e = null; try { var j0 = fV("0x5"); while (j0 !== fV("0x17")) { switch (j0) { case i[fV("0x1c")]: var jZ = window[fV("0x1d")] || window[fV("0x1e")]; j0 = i["\x61\x61\x61\x69\x64"]; break; case i["\x65\x78\x68\x69\x65"]: var jY; j0 = i[fV("0x1f")]; break; case "\x61\x6d\x61": e = new Worker(jX); j0 = i[fV("0x20")]; break; case fV("0x15"): var jX = jZ[fV("0x21")](jY); j0 = fV("0x22"); break; case fV("0x16"): try { jY = new Blob([i[fV("0x23")](i["\x65\x78\x68\x69\x78"](i["\x65\x78\x69\x6c\x78"], T), fV("0x24"))], { type: i["\x63\x69\x61\x6d\x6d"] }) } catch (jW) { var jV = i[fV("0x25")]; while (jV !== fV("0x26")) { switch (jV) { case i[fV("0x27")]: jY = jU[fV("0x28")](i["\x63\x69\x61\x6d\x6d"]); jV = fV("0x26"); break; case fV("0x1a"): var jU = new (window["\x42\x6c\x6f\x62\x42\x75\x69\x6c\x64\x65\x72"] || window[(fV("0x29"))] || window["\x4d\x6f\x7a\x42\x6c\x6f\x62\x42\x75\x69\x6c\x64\x65\x72"])(); jV = fV("0x2a"); break; case i["\x61\x78\x78\x68\x65"]: jU[fV("0x2b")](i[fV("0x23")](fV("0x18") + T, fV("0x24"))); jV = i[fV("0x27")]; break } } } j0 = fV("0x14"); break } } } catch (jT) { } return e } function je(e) { this[fV("0x2c")](e) } var gR = { "\x69\x6e\x69\x74": function (jU) { var jT = { "\x63\x61\x65\x65\x78": function (jW, jV) { return jW !== jV }, "\x61\x78\x65\x61\x65": fV("0x2d"), "\x6d\x69\x6d\x61\x65": "\x68\x61\x61", "\x63\x63\x65\x61\x65": fV("0x2e"), "\x6c\x61\x61\x78\x65": "\x63\x61\x69", "\x65\x61\x63\x61\x61": fV("0x2f"), "\x65\x68\x78\x63\x65": fV("0x30"), "\x63\x61\x6c\x61\x69": fV("0x31"), "\x61\x65\x68\x61\x65": fV("0x32"), "\x64\x65\x6c\x65\x65": function (jW, jV) { return jW < jV }, "\x68\x64\x61\x61\x65": fV("0x33"), "\x63\x64\x6d\x65\x63": fV("0x34"), "\x65\x64\x63\x64\x64": "\x61\x64\x64\x65", "\x61\x61\x65\x61\x68": fV("0x35"), "\x69\x63\x65\x69\x64": fV("0x36"), "\x6d\x61\x65\x61\x65": fV("0x37"), "\x68\x65\x6d\x61\x6d": fV("0x38"), "\x61\x78\x61\x69\x64": fV("0x39"), "\x65\x65\x69\x69\x68": "\x61\x69\x63", "\x78\x63\x78\x63\x78": fV("0x3a"), "\x65\x78\x65\x69\x65": fV("0x3b"), "\x6d\x69\x69\x69\x69": fV("0x3c"), "\x6d\x61\x65\x78\x68": "\x61\x65\x61", "\x6d\x64\x6d\x6c\x61": fV("0x3d"), "\x69\x6c\x63\x68\x61": (window.location.protocol === "http:" ? "http:" : "https:") + "//api.map.baidu.com/res/webgl/10/worker_wasm_wjzq4p.js", "\x61\x61\x65\x68\x65": fV("0x3e"), "\x68\x78\x68\x61\x65": fV("0x3f"), "\x68\x68\x6c\x61\x6d": function (jW, jV) { return jW < jV }, "\x78\x69\x65\x68\x65": fV("0x40"), "\x68\x64\x69\x61\x6d": function (jW, jV) { return jW > jV }, "\x69\x78\x63\x65\x78": "\x65\x63\x6c", "\x69\x68\x61\x64\x6d": function (jV, jW) { return jV(jW) }, "\x64\x6c\x63\x6d\x63": fV("0x41"), "\x63\x63\x68\x61\x65": function (jW, jV) { return jW === jV }, "\x65\x65\x68\x6c\x6c": fV("0x42"), "\x61\x78\x65\x68\x61": function (jW, jV) { return jW - jV }, "\x61\x61\x69\x6d\x61": fV("0x43"), "\x78\x69\x65\x6d\x78": "\x64\x68\x65", "\x68\x68\x78\x6c\x61": fV("0x44"), "\x64\x78\x63\x61\x61": fV("0x45"), "\x68\x6c\x69\x69\x69": fV("0x46"), "\x61\x61\x78\x68\x64": fV("0x47"), "\x61\x6c\x65\x65\x65": function (jW, jV) { return jW > jV }, "\x68\x6c\x61\x61\x65": "\x61\x6d\x68", "\x6d\x6d\x61\x78\x61": fV("0x48"), "\x68\x63\x6c\x68\x78": fV("0x49"), "\x64\x6d\x63\x78\x63": "\x64\x65\x61", "\x63\x69\x64\x63\x78": function (jV) { return jV() }, "\x68\x68\x78\x61\x78": fV("0x4a"), "\x6d\x64\x65\x78\x69": fV("0x4b"), "\x68\x61\x63\x6c\x61": fV("0x4c"), "\x61\x61\x61\x78\x61": fV("0x4d"), "\x68\x64\x64\x68\x78": fV("0x4e"), "\x69\x64\x78\x6c\x64": fV("0x4f") }; var i = "\x63\x65\x65"; while (i !== jT[fV("0x50")]) { switch (i) { case fV("0x46"): if (jT[fV("0x51")](typeof this[fV("0x52")][fV("0x53")][fV("0x54")], fV("0x2e"))) { i = "\x78\x65\x63"; break } i = jT[fV("0x55")]; break; case fV("0x56"): var e = Math[fV("0x57")](jT[fV("0x58")](navigator[fV("0x59")], 2), 0) || 4; i = fV("0x5a"); break; case fV("0x5b"): this[fV("0x5c")] = []; i = fV("0x56"); break; case jT[fV("0x5d")]: this[fV("0x52")] = jU; i = jT[fV("0x5e")]; break; case fV("0x4d"): jU["\x6f\x6e"](fV("0x5f"), function () { var jV = fV("0x60"); while (jT[fV("0x61")](jV, jT[fV("0x62")])) { switch (jV) { case fV("0x60"): for (var jX = 0, jW = T[fV("0x63")][fV("0x64")]; jX < jW; jX++) { T["\x61\x72\x72\x57\x6f\x72\x6b\x65\x72"][jX]["\x69\x73\x53\x65\x6e\x64\x46\x53"] = ![] } jV = jT[fV("0x65")]; break; case fV("0x66"): if (typeof this[fV("0x53")][fV("0x54")] !== jT[fV("0x67")]) { jV = jT[fV("0x68")]; break } jV = jT[fV("0x62")]; break; case jT[fV("0x69")]: T["\x73\x74\x72\x69\x6e\x67\x69\x66\x69\x65\x64\x43\x75\x73\x74\x6f\x6d\x53\x74\x79\x6c\x65\x49\x6e\x66\x6f\x5a\x6f\x6f\x6d"] = []; jV = jT[fV("0x62")]; break; case fV("0x6a"): T["\x73\x74\x72\x69\x6e\x67\x69\x66\x69\x65\x64\x43\x75\x73\x74\x6f\x6d\x53\x74\x79\x6c\x65\x49\x6e\x66\x6f"] = null; jV = "\x63\x6d\x61"; break } } }); i = jT[fV("0x6b")]; break; case fV("0x48"): this[fV("0x6c")] = 1; i = fV("0x46"); break; case jT[fV("0x6d")]: var T = this; i = fV("0x43"); break; case fV("0x6e"): this[fV("0x6c")] = 2; i = jT[fV("0x6f")]; break; case jT["\x61\x61\x78\x68\x64"]: i = jT[fV("0x70")](this[fV("0x71")], 1) ? jT[fV("0x72")] : jT[fV("0x73")]; break; case fV("0x4b"): this[fV("0x63")] = []; i = jT[fV("0x74")]; break; case jT[fV("0x75")]: if ((jT[fV("0x76")](bT) || eN[fV("0x77")]["\x69\x65"]) && e > 2) { i = jT[fV("0x78")]; break } i = jT[fV("0x79")]; break; case fV("0x7a"): this[fV("0x7b")] = null; i = jT[fV("0x7c")]; break; case fV("0x7d"): jU["\x6f\x6e"](fV("0x7e"), function () { var jX = jT[fV("0x7f")]; while (jX !== jT[fV("0x80")]) { switch (jX) { case fV("0x81"): T[fV("0x7b")] = null; jX = "\x69\x69\x68"; break; case "\x6c\x61\x64": if (typeof this[fV("0x53")][fV("0x54")] !== fV("0x2e")) { jX = fV("0x81"); break } jX = jT["\x63\x61\x6c\x61\x69"]; break; case jT[fV("0x82")]: T[fV("0x83")] = []; jX = "\x69\x61\x64\x6d"; break; case jT[fV("0x7f")]: for (var jW = 0, jV = T[fV("0x63")]["\x6c\x65\x6e\x67\x74\x68"]; jT[fV("0x84")](jW, jV); jW++) { T["\x61\x72\x72\x57\x6f\x72\x6b\x65\x72"][jW][fV("0x85")] = ![] } jX = jT[fV("0x86")]; break } } }); i = jT[fV("0x87")]; break; case jT[fV("0x78")]: e = 2; i = fV("0x4b"); break; case "\x61\x6d\x78": this[fV("0x71")] = jT[fV("0x76")](f1); i = jT["\x68\x64\x64\x68\x78"]; break; case jT[fV("0x88")]: this[fV("0x89")] = this[fV("0x71")]; i = jT[fV("0x8a")]; break; case jT[fV("0x55")]: fj["\x63\x61\x6e\x55\x73\x65\x57\x65\x62\x41\x73\x73\x65\x6d\x62\x6c\x79"](function (j2) { var j1 = jT[fV("0x8b")]; while (j1 !== "\x6c\x6d\x6c\x65") { switch (j1) { case fV("0x3e"): jY = jT[fV("0x8c")]; j1 = fV("0x8d"); break; case fV("0x35"): j1 = j2 ? jT[fV("0x8e")] : fV("0x8f"); break; case jT["\x68\x78\x68\x61\x65"]: for (var j0 = 0; jT[fV("0x90")](j0, Math[fV("0x91")](T[fV("0x5c")][fV("0x64")], e)); j0++) { var jZ = T[fV("0x5c")][fV("0x92")](); T["\x6c\x6f\x61\x64\x54\x69\x6c\x65\x44\x61\x74\x61"](jZ[fV("0x93")], jZ[fV("0x94")], jZ[fV("0x95")], jZ["\x63\x62\x6b"]) } j1 = jT[fV("0x96")]; break; case jT[fV("0x8b")]: var jY; j1 = fV("0x35"); break; case fV("0x97"): if (jT[fV("0x98")](T[fV("0x5c")]["\x6c\x65\x6e\x67\x74\x68"], 0)) { j1 = fV("0x3f"); break } j1 = jT[fV("0x96")]; break; case jT[fV("0x99")]: for (var jX = 0; jX < e; jX++) { var jW = jT[fV("0x9a")](jt, jY); jW["\x6f\x6e\x6d\x65\x73\x73\x61\x67\x65"] = function jV(j7) { var j6 = jT[fV("0x9b")]; while (j6 !== jT[fV("0x9c")]) { switch (j6) { case jT[fV("0x9d")]: var j4 = new fy(fV("0x9e")); j6 = jT[fV("0x9f")]; break; case jT[fV("0x9f")]: j4[fV("0xa0")] = fV("0xa1"); j6 = "\x69\x61\x63"; break; case fV("0xa2"): this["\x5f\x63\x62\x6b"] && this[fV("0xa3")](j7[fV("0xa4")], this[fV("0xa5")]); j6 = jT[fV("0xa6")]; break; case fV("0xa7"): T[fV("0xa8")](j5[fV("0x93")], j5[fV("0x94")], j5[fV("0x95")], j3); j6 = jT[fV("0x9d")]; break; case fV("0x34"): j6 = j7[fV("0xa4")] ? fV("0xa2") : jT[fV("0xa9")]; break; case fV("0x38"): this[fV("0xa3")] && this["\x5f\x63\x62\x6b"](null, this[fV("0xa5")]); j6 = jT[fV("0xa6")]; break; case fV("0xaa"): this[fV("0xab")] = null; j6 = fV("0xac"); break; case jT[fV("0xad")]: jU[fV("0xae")](j4); j6 = fV("0xaf"); break; case jT[fV("0xb0")]: if (T[fV("0x5c")][fV("0x64")] > 0) { j6 = jT[fV("0xb1")]; break } j6 = "\x61\x69\x6d"; break; case fV("0x3a"): var j5 = T[fV("0x5c")][fV("0x92")](); j6 = jT[fV("0xb2")]; break; case jT["\x6d\x69\x69\x69\x69"]: this[fV("0xa3")] = null; j6 = fV("0xaa"); break; case jT["\x6d\x61\x65\x78\x68"]: this[fV("0xa5")] = null; j6 = fV("0xb3"); break; case fV("0x37"): this[fV("0xb4")] = ![]; j6 = fV("0x3c"); break; case "\x78\x69\x68": var j3 = j5[fV("0xb5")]; j6 = fV("0xa7"); break } } }; T["\x61\x72\x72\x57\x6f\x72\x6b\x65\x72"][fV("0xb6")](jW) } j1 = fV("0x97"); break; case "\x68\x6c\x6c": jY = (window.location.protocol === "http:" ? "http:" : "https:") + "//api.map.baidu.com/res/webgl/10/worker_asm_wdaocw.js"; j1 = jT[fV("0x99")]; break } } }); i = fV("0x7d"); break; case fV("0x44"): jU["\x6f\x6e"](jT[fV("0xb7")], function () { for (var jV = 0; jT[fV("0x90")](jV, T["\x61\x72\x72\x57\x6f\x72\x6b\x65\x72"][fV("0x64")]); jV++) { if (T[fV("0x63")][jV]) { T[fV("0x63")][jV]["\x74\x65\x72\x6d\x69\x6e\x61\x74\x65"]() } } T[fV("0x63")][fV("0x64")] = 0 }); i = fV("0x41"); break; case jT["\x68\x61\x63\x6c\x61"]: this[fV("0x83")] = []; i = "\x61\x61\x61"; break } } }, "\x67\x65\x74\x49\x64\x6c\x65\x57\x6f\x72\x6b\x65\x72": function () { var e = { "\x61\x78\x78\x68\x6d": fV("0xb8"), "\x69\x61\x64\x61\x6d": function (jW, jV) { return jW !== jV }, "\x68\x65\x6c\x61\x64": fV("0xb9"), "\x61\x63\x61\x78\x78": "\x61\x65\x78\x61", "\x65\x64\x78\x65\x78": fV("0xba"), "\x69\x61\x61\x61\x6c": fV("0xbb") }; for (var jU = 0, jT = this[fV("0x63")][fV("0x64")]; jU < jT; jU++) { var T = e[fV("0xbc")]; while (e[fV("0xbd")](T, fV("0xbe"))) { switch (T) { case "\x63\x68\x78": if (!i[fV("0xb4")]) { T = e[fV("0xbf")]; break } T = e[fV("0xc0")]; break; case fV("0xb9"): i[fV("0xb4")] = !![]; T = "\x65\x65\x65"; break; case e[fV("0xbc")]: var i = this[fV("0x63")][jU]; T = e[fV("0xc1")]; break; case e[fV("0xc2")]: return i } } } return null }, "\x72\x65\x6c\x65\x61\x73\x65\x50\x65\x6e\x64\x69\x6e\x67\x44\x61\x74\x61": function (jT) { var i = { "\x6d\x68\x6d\x65\x6c": function (jZ, jY) { return jZ >= jY }, "\x61\x61\x61\x61\x69": function (jZ, jY) { return jZ + jY }, "\x65\x61\x64\x61\x61": function (jY, jZ) { return jY + jZ }, "\x61\x78\x65\x61\x61": "\x69\x64\x5f" }; var jX = []; var jW = this[fV("0x5c")]; for (var jV = jW[fV("0x64")] - 1; i[fV("0xc3")](jV, 0); jV--) { var T = jW[jV]; var e = T[fV("0x94")]; if (jT[fV("0xc4")] !== e[fV("0xc4")]) { continue } var jU = i["\x61\x61\x61\x61\x69"](i[fV("0xc5")](i[fV("0xc6")](i[fV("0xc7")] + e[fV("0xc8")], "\x5f"), e[fV("0xc9")]), "\x5f") + e[fV("0xca")]; if (!jT[jU]) { jW[fV("0xcb")](jV, 1); jX[fV("0xb6")](e) } } return jX }, "\x6c\x6f\x61\x64\x54\x69\x6c\x65\x44\x61\x74\x61": function (jW, jU, T, i) { var e = { "\x61\x68\x64\x6d\x78": function (j5, j4) { return j5 !== j4 }, "\x64\x6d\x63\x68\x6c": fV("0xcc"), "\x6d\x64\x61\x6d\x65": fV("0xcd"), "\x78\x68\x6d\x61\x68": function (j5, j4) { return j5 + j4 }, "\x69\x61\x64\x61\x63": "\x6c\x64\x65", "\x65\x69\x61\x69\x6d": fV("0xce"), "\x78\x6c\x69\x65\x61": fV("0xcf"), "\x78\x6c\x68\x61\x63": fV("0xd0"), "\x65\x65\x69\x69\x65": fV("0xd1"), "\x69\x61\x65\x63\x61": fV("0xd2"), "\x64\x61\x68\x65\x64": fV("0xd3"), "\x6d\x64\x6c\x64\x61": "\x6d\x61\x78", "\x68\x63\x6d\x68\x6c": fV("0xd4"), "\x68\x64\x65\x64\x78": fV("0xd5"), "\x78\x64\x6c\x63\x78": function (j5, j4) { return j5 + j4 }, "\x65\x65\x65\x6c\x61": function (j5, j4) { return j5 + j4 }, "\x65\x65\x78\x68\x6d": fV("0xd6"), "\x61\x61\x61\x64\x65": fV("0x2f"), "\x6c\x68\x68\x6c\x78": "\x6d\x64\x68", "\x63\x61\x68\x61\x63": "\x64\x68\x78", "\x65\x61\x6c\x6c\x65": "\x69\x61\x78", "\x64\x63\x61\x63\x69": fV("0xd7"), "\x68\x6c\x78\x69\x65": "\x43\x75\x73\x74\x6f\x6d", "\x78\x61\x64\x63\x78": fV("0xd8"), "\x65\x6d\x65\x65\x68": function (j5, j4) { return j5 + j4 }, "\x61\x63\x6d\x78\x68": fV("0xd9"), "\x68\x6d\x6d\x61\x65": fV("0x46"), "\x65\x65\x64\x6d\x69": fV("0xda"), "\x68\x65\x63\x68\x61": "\x65\x64\x61", "\x64\x6d\x65\x68\x65": fV("0xdb"), "\x64\x68\x65\x78\x6d": fV("0xdc"), "\x65\x65\x78\x64\x61": function (j5, j4) { return j5 === j4 }, "\x64\x63\x78\x78\x78": fV("0xdd"), "\x61\x65\x64\x69\x65": fV("0xde"), "\x65\x64\x78\x61\x68": "\x69\x69\x64", "\x78\x69\x78\x6c\x63": fV("0xdf"), "\x63\x65\x68\x69\x68": fV("0x4"), "\x6c\x61\x61\x63\x61": fV("0xe0") }; var j2 = fV("0xe1"); while (e[fV("0xe2")](j2, e[fV("0xe3")])) { switch (j2) { case e[fV("0xe4")]: this[fV("0x7b")] = JSON[fV("0xe5")](bw[e["\x78\x68\x6d\x61\x68"](fV("0xe6"), jX)]); j2 = e[fV("0xe7")]; break; case "\x63\x65\x78": jY[fV("0xab")] = jU; j2 = e[fV("0xe8")]; break; case fV("0xe9"): var j1 = { "\x75\x72\x6c": jW, "\x74\x69\x6c\x65\x49\x6e\x66\x6f": jU, "\x74\x69\x6c\x65\x4b\x65\x79": T, "\x63\x62\x6b": i }; j2 = e["\x78\x6c\x69\x65\x61"]; break; case fV("0xea"): if (this[e["\x78\x6c\x68\x61\x63"] + jX]) { j2 = e[fV("0xeb")]; break } j2 = e[fV("0xec")]; break; case e[fV("0xed")]: var j0 = jZ ? this[fV("0x52")][fV("0xee")]["\x70\x6f\x69\x54\x65\x78\x74"] : ![]; j2 = e["\x6d\x64\x6c\x64\x61"]; break; case e[fV("0xef")]: jY[fV("0x85")] = !![]; j2 = "\x65\x6c\x78"; break; case "\x65\x6c\x68": var jZ = this[fV("0x52")][fV("0xee")]["\x70\x6f\x69"]; j2 = e[fV("0xed")]; break; case e[fV("0xe8")]: jY[fV("0xa5")] = T; j2 = fV("0xf0"); break; case e["\x65\x65\x69\x69\x65"]: jV[fV("0xf1")] = this[e["\x78\x68\x6d\x61\x68"](fV("0xd0"), jX)]; j2 = e[fV("0xec")]; break; case fV("0xf2"): jV[fV("0xf3")] = this[fV("0xf4")]; j2 = fV("0x44"); break; case fV("0xf5"): if (jT) { j2 = fV("0xf6"); break } j2 = "\x61\x68\x64"; break; case e[fV("0xf7")]: this[e[fV("0xf8")](fV("0xf9"), j3)] = JSON["\x73\x74\x72\x69\x6e\x67\x69\x66\x79"](bw[e[fV("0xfa")](e[fV("0xfb")], j3)]); j2 = fV("0xfc"); break; case fV("0xdf"): jV[fV("0xfd")] = this[fV("0x7b")]; j2 = fV("0xda"); break; case e[fV("0xfe")]: if (!this["\x73\x74\x72\x69\x6e\x67\x69\x66\x69\x65\x64\x49\x63\x6f\x6e\x53\x65\x74\x49\x6e\x66\x6f" + j3]) { j2 = "\x6c\x61\x69"; break } j2 = fV("0xfc"); break; case e[fV("0xff")]: j2 = jY ? e[fV("0x100")] : e[fV("0x101")]; break; case e[fV("0x102")]: var jY = this[fV("0x103")](); j2 = e[fV("0x104")]; break; case fV("0xdc"): var jX = this[fV("0x52")][fV("0x105")](); j2 = fV("0x106"); break; case fV("0xf6"): j3 = e[fV("0x107")]; j2 = "\x61\x68\x64"; break; case fV("0xd2"): jV[fV("0xd6")] = this["\x73\x74\x72\x69\x6e\x67\x69\x66\x69\x65\x64\x49\x63\x6f\x6e\x53\x65\x74\x49\x6e\x66\x6f" + j3]; j2 = fV("0xf2"); break; case fV("0x46"): this[fV("0xf4")] = JSON[fV("0xe5")](bw["\x69\x6e\x64\x6f\x6f\x72\x53\x74\x79\x6c\x65"]); j2 = e[fV("0x108")]; break; case e[fV("0x108")]: if (jT && bw[e[fV("0x109")](fV("0xe6"), jX)]) { j2 = e["\x61\x63\x6d\x78\x68"]; break } j2 = fV("0xea"); break; case "\x6c\x6c\x64": if (!this[fV("0xf4")]) { j2 = e["\x68\x6d\x6d\x61\x65"]; break } j2 = e[fV("0x108")]; break; case fV("0x10a"): jV[fV("0x10b")] = jX; j2 = e[fV("0xef")]; break; case e[fV("0x10c")]: jV[fV("0x10d")] = { "\x77\x6f\x72\x64\x53\x70\x61\x63\x65\x52\x61\x74\x69\x6f": this["\x77\x6f\x72\x64\x53\x70\x61\x63\x65\x52\x61\x74\x69\x6f"], "\x74\x65\x78\x74\x53\x69\x7a\x65\x52\x61\x74\x69\x6f": this["\x74\x65\x78\x74\x53\x69\x7a\x65\x52\x61\x74\x69\x6f"] }; j2 = e["\x68\x65\x63\x68\x61"]; break; case e[fV("0x10e")]: if (!jY[fV("0x85")]) { j2 = "\x65\x64\x78"; break } j2 = fV("0xde"); break; case e[fV("0x100")]: jY[fV("0xa3")] = i; j2 = fV("0x10f"); break; case fV("0xf0"): var jV = { "\x61\x63\x74\x69\x6f\x6e": fV("0xa8"), "\x75\x72\x6c": jW, "\x74\x69\x6c\x65\x49\x6e\x66\x6f": jU, "\x74\x69\x6c\x65\x4b\x65\x79": T, "\x69\x73\x54\x65\x78\x74": j0, "\x69\x73\x50\x6f\x69": jZ }; j2 = e["\x64\x68\x65\x78\x6d"]; break; case e["\x61\x63\x6d\x78\x68"]: if (!this[fV("0x7b")]) { j2 = fV("0xcd"); break } j2 = "\x6c\x64\x65"; break; case fV("0x106"): var jT = !!e[fV("0x110")](jX["\x69\x6e\x64\x65\x78\x4f\x66"]("\x63\x75\x73\x74\x6f\x6d"), 0); j2 = e[fV("0x111")]; break; case e[fV("0x112")]: jY[fV("0x113")](jV); j2 = e["\x64\x6d\x63\x68\x6c"]; break; case e["\x78\x6c\x69\x65\x61"]: this[fV("0x5c")][fV("0xb6")](j1); j2 = "\x6d\x65\x61\x61"; break; case fV("0xdd"): var j3 = jX; j2 = e[fV("0x114")]; break; case fV("0x44"): if (jT && this[fV("0x7b")]) { j2 = e[fV("0x115")]; break } j2 = e[fV("0x10c")]; break; case fV("0x7"): if (!this[e[fV("0x116")] + jX] && bw[fV("0xe0") + jX]) { j2 = e[fV("0x117")]; break } j2 = e[fV("0xfe")]; break; case fV("0x4"): this[fV("0xd0") + jX] = JSON[fV("0xe5")](bw[e[fV("0x118")] + jX]); j2 = fV("0x2f"); break } } } }; eN[fV("0x119")](je[fV("0x11a")], gR); function iA(i) { this.tileLayers = []; this.map = i; var e = this.config = ea[this.map.mapType]; this.errorUrl = e.errorUrl; this.tileSize = e.tileSize; this.baseUnits = e.baseUnits; this.baseZoomLevel = e.zoomLevelBase; this.tileURLs = e.tileUrls; this.tilesInfoCache = {}; this.loadDelay = 10; this._labelTextCanvas = null } bw.register(function (i) { if (i._renderType !== "webgl") { return } var e = i.tileMgr = new iA(i); i.addEventListener("addtilelayer", function (jT) { e.addWebGLLayer(jT.target) }); i.addEventListener("removetilelayer", function (jT) { e.removeWebGLLayer(jT.target) }); i.on("update", function T(jU) { if (i.getFeatureStyleTags().length === 0 || !i.customLoaded) { return } var jT = false; if (jU.changedStatus && jU.changedStatus.onzoom_changed) { jT = true } e.loadLayersData({ zoomChanged: jT }) }); i.on("style_changed", function () { e.loadLayersData() }); i.on("destroy", function () { for (var jT = 0; jT < e.tileLayers.length; jT++) { e.tileLayers[jT].remove(); e.tileLayers[jT].destroyDrawData(); e.tileLayers[jT] = null } e.tileLayers = []; e._labelTextCanvas = null; e.map = null }) }); eN.extend(iA.prototype, { addWebGLLayer: function (T) { this.tileLayers.push(T); T.initDrawData(); if (this.tileLayers.length > 1) { for (var e = 1; e < this.tileLayers.length; e++) { if (this.tileLayers[e].isFlat) { this.map.setDisplayOptions({ isFlat: true }); break } } } if (this.map.getFeatureStyleTags().length > 0 && this.map.customLoaded) { this.loadLayersData() } else { var jT = this; this.map.loadMapStyleFiles(function () { jT.loadLayersData() }) } }, removeWebGLLayer: function (jV) { var jW = false; for (var jU = 0, jT = this.tileLayers.length; jU < jT; jU++) { if (jV === this.tileLayers[jU]) { jW = true; this.tileLayers.splice(jU, 1); break } } if (jW === false) { return } jV.destroyDrawData(); if (this.map.getFeatureStyleTags().length > 0) { this.loadLayersData() } if (this.tileLayers.length === 1) { this.map.setDisplayOptions({ isFlat: false }) } else { var e = false; for (var jU = 1; jU < this.tileLayers.length; jU++) { if (this.tileLayers[jU].isFlat) { e = true; break } } this.map.setDisplayOptions({ isFlat: e }) } var T = new fy("onrefresh"); T.source = "removewebgllayer"; this.map.fire(T) }, getLabelTextCanvas: function () { if (!this._labelTextCanvas) { this._labelTextCanvas = new av(this.map) } return this._labelTextCanvas }, loadLayersData: function (i) { if (!this.map || this.map.suspendLoad) { return } var jT = this; i = i || {}; var T = !!i.zoomChanged; var e = (T === true || this.map.getTilt() > 50); if (!e) { if (!this.syncLoadTimer) { this.syncLoadTimer = setTimeout(function () { jT._loadLayersFromCache(T); jT.syncLoadTimer = null }, 40) } } else { this._loadLayersFromCache(T) } if (!jT.map.viewAnimationTime) { this.timer && window.clearTimeout(this.timer) } this.timer = window.setTimeout(function () { if (!jT.map) { return } if (jT.map.viewAnimationTime) { if (new Date().getTime() - jT.map.viewAnimationTime < 1000) { return } jT.map.viewAnimationTime = new Date().getTime() } var jV = jT.tileLayers.length; jT.tilesInfoCache = {}; for (var jX = 0; jX < jV; jX++) { var jZ = jT.tileLayers[jX]; var jY = jZ.tileType; var jU = null; var jW = jT._getTilesInfoKey(jY, jZ); if (jT.tilesInfoCache[jW]) { jU = jT.tilesInfoCache[jW] } else { jU = jT.calcTilesInfo(jY, jZ); jT.tilesInfoCache[jW] = jU } jU && jZ.loadLayerData(jU, false, T) } jT.timer = null }, this.loadDelay); if ((bT() || eN.Browser.ie) && T) { this.loadDelay = 200 } else { this.loadDelay = 80 } }, _getTilesInfoKey: function (i, T) { var e = i.getName(); e += ("_" + (T.transform ? T.transform.source : "default")); e += ("_" + T.spanLevel || 0); return e }, _loadLayersFromCache: function (jV) { if (!this.map) { return } this.map._featureMgr.clearData(); this.map.tileLabels = []; var jY = this.tileLayers; jY.sort(function (jZ, i) { return jZ.zIndex - i.zIndex > 0 }); var T = jY.length; this.tilesInfoCache = {}; for (var jU = 0; jU < T; jU++) { var jX = jY[jU]; var jW = jX.tileType; var e = null; var jT = this._getTilesInfoKey(jW, jX); if (this.tilesInfoCache[jT]) { e = this.tilesInfoCache[jT] } else { e = this.calcTilesInfo(jW, jX); this.tilesInfoCache[jT] = e } e && jX.loadLayerData(e, true, jV) } }, calcTilesInfo: function (j6, kx) { var kj = this.map; var kp = kj.getMapType(); var kk = ea[kp]; var kd = kj.getZoom(); var e = Math.floor(kd); var jW = j6.getDataZoom(kd); var kC = j6.getName(); jW = b7(jW, kk.minDataZoom, kk.maxDataZoom); var ks = e; if (j6._name === "web" || j6._name === "xyz") { ks = jW } else { if (ks < 3) { ks = 3 } } var kh = j6.getTileSize(kd); var jV = j6.getBaseTileSize(kd); var kf = kj.getBoundsIn(); if (!kf) { return } var ka = j6.getMercatorSize(kd, jW); var j9; var kq; var kg; var ku; var kl = kj.getCenterIn(); if (kp !== BMAP_SATELLITE_MAP) { kl = eQ.calcLoopCenterPoint(kl) } if (kC === "xyz") { return this.calcXYZTilesInfo(kl, kf, jW, kC, kx, kj) } var ke = Math.floor(kl.lng / ka); var jY = Math.floor(kl.lat / ka); var kn = 0; var jT = 0; if (kC !== "web") { kf = eQ.calcLoopMapBounds(kf, kj.getCenter()) } if (kf.ne.lng > eQ._mc180X) { var j4 = eQ.getSpaceDistanceInPixel(jW); kn = Math.ceil(j4 / jV) } if (kf.sw.lng < eQ._mcM180X) { var j4 = eQ.getSpaceDistanceInPixel(jW); jT = Math.ceil(j4 / jV) } if (kf.ne.lat > 19505879.362428114 || kf.sw.lat < -15949096.637571886) { kf.ne.lat = 19505879.362428114; kf.sw.lat = -15949096.637571886 } var j0 = [Math.floor(kf.sw.lng / ka) - jT, Math.floor(kf.sw.lat / ka)]; var kA = [Math.floor(kf.ne.lng / ka) + kn, Math.floor(kf.ne.lat / ka)]; j9 = j0[0]; kq = kA[0] + 1; kg = j0[1]; ku = kA[1] + 1; var j5 = []; for (var j2 = j9; j2 < kq; j2++) { if (eQ.isTileBlank(j2, jW, jV) === true) { continue } for (var j7 = kg; j7 < ku; j7++) { var kw = false; var j1 = 256; if (kC === "web") { var kr = eQ.calcLoopParam(j2, jW); var kz = { col: kr.col, row: j7, baseTileSize: 256, zoom: jW }; var ki = iS.prototype.tileToBound(kz, kj.getCenter()); if (ki.LL.sw.lng * ki.LL.ne.lng < 0 && Math.floor(ki.LL.ne.lng) < 0) { kw = true; j1 = eQ.pixelWidth(ki.MC.sw.lng, kj.getZoom()) } } var j3 = { col: j2, row: j7, zoom: jW, useZoom: ks, tileTypeName: kC, loopOffsetX: 0, tileSize: kh, baseTileSize: jV, mercatorSize: ka, combine: kw, dataIndex: j1 }; j5.push(j3); var ko = "id_" + j2 + "_" + j7 + "_" + jW; j5[ko] = true } } if (kp !== BMAP_SATELLITE_MAP) { j5 = eQ.calcLoopTiles(j5, jW, jV, ka) } if (jW === 3) { for (var ky = 0, kv = j5.length; ky < kv; ky++) { var j2 = j5[ky].col; var j7 = j5[ky].row; var kr = eQ.calcLoopParam(j2, jW); var jX = kr.T; var kb = j2 >= 0 ? j2 - jX : j2 + jX; var kc = "id_" + kb + "_" + j7 + "_" + jW; if (!j5[kc]) { var j3 = { col: kb, row: j7, zoom: jW, useZoom: ks, loopOffsetX: 0, tileSize: kh, baseTileSize: jV, mercatorSize: ka, combine: false }; j5.push(j3); j5[kc] = true } } } if (this.map._tilt > 0) { for (var ky = 0; ky < j5.length; ky++) { var jZ = j5[ky]; var kt = jZ.col; var kB = jZ.row; var km = []; km.minX = kt * ka; km.maxX = (kt + 1) * ka; km.minY = kB * ka; km.maxY = (kB + 1) * ka; var jU = new ct(0, 0); jU.lng = (km.minX + km.maxX) / 2; jU.lat = (km.minY + km.maxY) / 2; var j8 = kj.pointToPixelIn(jU); if (j8.x > 0 && j8.x < this.map.width && j8.y > 0 && j8.y < this.map.height) { continue } if (km.minX < kl.lng && km.maxX > kl.lng && km.minY < kl.lat && km.maxY > kl.lat) { continue } if (!this.ifTileInMapBounds(km, kf, kt, kB)) { j5.splice(ky, 1); ky-- } } } j5.sort((function (i) { return function (T, kD) { return ((0.4 * Math.abs(T.col - i[0]) + 0.6 * Math.abs(T.row - i[1])) - (0.4 * Math.abs(kD.col - i[0]) + 0.6 * Math.abs(kD.row - i[1]))) } })([ke, jY])); j5.zoom = jW; j5.tileTypeName = kC; return j5 }, calcXYZTilesInfo: function (j4, jX, j3, j8, jW, kb) { var jZ = kb.width; var j9 = kb.height; var jY = Math.floor(j3); var j0 = null; if (jW.transform.target === "EPSG3857") { var jT = ds.transformBDmcPoint(j4, jW.transform); var jU = ds.getRangeExtent(jT, jZ, j9, jY, jW.transform); j0 = [jU.minX, jU.minY, jU.maxX, jU.maxY] } else { if (jW.transform.source === "BD09MC") { var jT = [j4.lng, j4.lat]; j0 = [jX.sw.lng, jX.sw.lat, jX.ne.lng, jX.ne.lat] } else { var jT = ds.transformBDmcPoint(j4, jW.transform); var jV = ds.transformBDmcPoint(jX.ne, jW.transform); var j2 = ds.transformBDmcPoint(jX.sw, jW.transform); j0 = ds.getLoopBox(jT, [j2[0], j2[1], jV[0], jV[1]]) } } if (!jT || !j0) { return [] } jY = jY + jW.spanLevel; var T = ds.getTileRangeForExtentFactory(j0, jY, jW.transform); var e = []; var kc = ds.getResolutionScale(jY, jW.transform); for (var j7 = T.minX; j7 <= T.maxX; j7++) { for (var j5 = T.minY; j5 <= T.maxY; j5++) { var j6 = { col: j7, row: j5, zoom: jY, useZoom: jY, tileTypeName: j8, loopOffsetX: 0, tileSize: 256 * kc, transform: jW.transform, combine: false, dataIndex: 0 }; e.push(j6); var j1 = "id_" + j7 + "_" + j5 + "_" + jY; e[j1] = true } } var ka = ds.getTileCoordForCoordAndZ(jT, jY); e.sort((function (i) { return function (kd, ke) { return ((0.4 * Math.abs(kd.col - i[0]) + 0.6 * Math.abs(kd.row - i[1])) - (0.4 * Math.abs(ke.col - i[0]) + 0.6 * Math.abs(ke.row - i[1]))) } })([ka[1], ka[2]])); e.zoom = jY; e.tileTypeName = j8; return e }, getCurrentViewTilesInfo: function (T, jT) { var i = this._getTilesInfoKey(T, jT); var e = this.tilesInfoCache[i]; if (!e) { return this.calcTilesInfo(T, jT) } return e }, ifTileInMapBounds: function (e, jV, T, jU) { var i = jV.normalizedBottomLeft; var j6 = jV.normalizedTopRight; var jY = jV.normalizedTopLeft; var jW = jV.normalizedBottomRight; var jT = false; var j5 = new ct(e.minX, e.minY); var j2 = new ct(e.maxX, e.maxY); var jX = new ct(j2.lng, j5.lat); var j3 = new ct(j5.lng, j2.lat); var j0 = [j3, j2, jX, j5]; for (var j4 = 0, jZ = j0.length; j4 < jZ; j4++) { var j1 = j4 + 1; if (j1 === jZ) { j1 = 0 } var j7 = j4; var j8 = iR(j0[j1], j0[j7], jY, i); if (j8) { jT = true; break } j8 = iR(j0[j1], j0[j7], jW, j6); if (j8) { jT = true; break } j8 = iR(j0[j1], j0[j7], j6, jY); if (j8) { jT = true; break } j8 = iR(j0[j1], j0[j7], i, jW); if (j8) { jT = true; break } } return jT }, getTileLayer: function (jU) { for (var jT = 0, e = this.tileLayers.length; jT < e; jT++) { var T = this.tileLayers[jT]; if (T.mapType === jU) { return T } } return null }, isExitTileLayer: function (jU) { for (var jT = 0, e = this.tileLayers.length; jT < e; jT++) { var T = this.tileLayers[jT]; if (T === jU) { return true } } return false }, getZoomState: function (i) { var e = i - this.lastZoom; if (e > 0) { this.zoomState = 1 } else { if (e < 0) { this.zoomState = -1 } } this.lastZoom = i; return this.zoomState } }); function ij(e) { this.map = e; this.gl = null; this.layers = []; this.mouseEventThrottle = this.throttle(this.pick, 400).bind(this); this.base = new ct(12069475.280738307, 3929271.1724863998) } bw.register(function (i) { if (i._renderType !== "webgl") { return } var e = i._normalLayerMgr = new ij(i); i.toFormatCoords = function (jV) { var jW = []; for (var jU = 0; jU < jV.length; jU++) { var T = iS.convertLL2MC(new ct(jV[jU][0], jV[jU][1])); var jT = [T.lng - e.base.lng, T.lat - e.base.lat]; jW.push(jT) } return jW }; i.indexToRgb = function (jT) { jT++; var T = Math.floor(jT / 65536); jT -= T * 65536; var jV = Math.floor(jT / 256); jT -= jV * 256; var jU = jT; return [jU, jV, T] }; i.addEventListener("addnormallayer", function (T) { e.addWebGLLayer(T.target) }); i.addEventListener("removenormallayer", function (T) { e.removeWebGLLayer(T.target) }); i.addEventListener("onmousemove", e._layerMouseEvent.bind(e)); i.addEventListener("onclick", e._layerClickEvent.bind(e)); i.addEventListener("ondblclick", e._layerDBLClickEvent.bind(e)); i.on("destroy", function () { e.removeAllLayers(true); i.indexToRgb = null; i.toFormatCoords = null; e.pickFBO = null; e.preFramebuffer = null; e.gl = null }); i.on("glmoduleloaded", function () { e.gl = i._webglPainter.gl; e.pickFBO = e.createFramebuffer(); for (var T = 0; T < e.layers.length; T++) { e.layers[T].onInit(i, e.gl) } i.dispatchEvent(new fy("onupdate")) }) }); eN.extend(ij.prototype, { init: function () { var e = this; this.map.toFormatCoords = function (jV) { var jW = []; for (var jU = 0; jU < jV.length; jU++) { var T = iS.convertLL2MC(new ct(jV[jU][0], jV[jU][1])); var jT = [T.lng - e.base.lng, T.lat - e.base.lat]; jW.push(jT) } return jW }; this.map.indexToRgb = function (jT) { jT++; var T = Math.floor(jT / 65536); jT -= T * 65536; var jV = Math.floor(jT / 256); jT -= jV * 256; var jU = jT; return [jU, jV, T] }; this.pickFBO = this.createFramebuffer(); var i = this; this.map.addEventListener("addnormallayer", function (T) { i.addWebGLLayer(T.target) }); this.map.addEventListener("removenormallayer", function (T) { i.removeWebGLLayer(T.target) }); this.map.addEventListener("onmousemove", this._layerMouseEvent.bind(this)); this.map.addEventListener("onclick", this._layerClickEvent.bind(this)); this.map.addEventListener("ondblclick", this._layerDBLClickEvent.bind(this)); this.map.on("destroy", function () { i.removeAllLayers(true); i.map.indexToRgb = null; i.map.toFormatCoords = null; i.pickFBO = null; i.preFramebuffer = null }) }, addWebGLLayer: function (T) { var jT = false; for (var e = 0; e < this.layers.length; e++) { if (this.layers[e] === T) { jT = true; break } } if (!jT) { this.layers.push(T); if (this.gl) { T.onInit(this.map, this.gl) } this.map.dispatchEvent(new fy("onupdate")) } }, removeWebGLLayer: function (T) { for (var e = 0; e < this.layers.length; e++) { if (this.layers[e] === T) { this.map._featureMgr.removeLayer(T.zIndex); this.layers.splice(e, 1); T.onDestroy(); this.map.dispatchEvent(new fy("onupdate")); break } } }, removeAllLayers: function (jT) { for (var T = 0; T < this.layers.length; T++) { var e = this.layers[T]; if (e.visible) { this.map._featureMgr.removeLayer(e.zIndex) } if (jT) { e.onKill && e.onKill() } e.onDestroy() } this.layers = []; this.map.dispatchEvent(new fy("onupdate")) }, sortLayer: function () { this.layers.sort(function (i, e) { return i.zIndex - e.zIndex > 0 }) }, _layerMouseEvent: function (i) { this.mouseEventThrottle(i, "onmousemove") }, _layerClickEvent: function (i) { this.pick(i, "onclick") }, _layerDBLClickEvent: function (i) { this.pick(i, "ondblclick") }, throttle: function (T, e) { var jT = null; var i = Date.now(); return function () { var jX = Date.now(); var jW = e - (jX - i); var jV = this; var jU = arguments; if (jT) { clearTimeout(jT) } if (jW <= 0) { T.apply(jV, jU); i = Date.now() } else { jT = setTimeout(function () { T.apply(jV, jU) }, jW) } } }, pick: function (jZ, jX) { if (!this.layers.length) { return false } var jT = false; var jU = false; var T = false; for (var jW = 0; jW < this.layers.length; jW++) { var jV = this.layers[jW]; if (jV.doRender()) { T = true; if (jV.pick) { if (jX === "onmousemove" || jV.hasEvent(jX)) { var jY = jV.pick(jZ.x, jZ.y, jX) } else { continue } if (jV.autoSelect) { jT = true } if (jY && jY.dataIndex !== -1) { if (jX === "onmousemove") { jU = true } if (jV.hasEvent(jX)) { jV.dispatcher(jZ, jY, jX) } if (!jV.popEvent) { break } } } } } if (jX === "onmousemove" && T) { if (jU) { this.map.platform.style.cursor = this.map.config.overlayMoveCursor } else { this.map.platform.style.cursor = this.map.config.defaultCursor } } if (jT) { this.map.dispatchEvent(new fy("onupdate")) } return jT }, saveFramebuffer: function () { var e = this.gl; this.preFramebuffer = e.getParameter(e.FRAMEBUFFER_BINDING) }, bindFramebuffer: function (e) { var i = this.gl; if (e) { i.bindFramebuffer(i.FRAMEBUFFER, e) } else { i.bindFramebuffer(i.FRAMEBUFFER, null) } }, clear: function (e) { var i = this.gl; i.clearColor(0, 0, 0, 0); if (e instanceof Array) { i.clearColor(e[0], e[1], e[2], e[3]) } i.clear(i.COLOR_BUFFER_BIT | i.DEPTH_BUFFER_BIT) }, restoreFramebuffer: function () { var e = this.gl; e.bindFramebuffer(e.FRAMEBUFFER, this.preFramebuffer) }, createFramebuffer: function (jT, i) { var jX = this.gl; jT = jT || jX.canvas.width; i = i || jX.canvas.height; var jV = jX.createFramebuffer(); var jU = jX.createTexture(); jX.bindTexture(jX.TEXTURE_2D, jU); jX.texImage2D(jX.TEXTURE_2D, 0, jX.RGBA, jT, i, 0, jX.RGBA, jX.UNSIGNED_BYTE, null); jX.texParameteri(jX.TEXTURE_2D, jX.TEXTURE_MAG_FILTER, jX.LINEAR); jX.texParameteri(jX.TEXTURE_2D, jX.TEXTURE_MIN_FILTER, jX.LINEAR); jX.texParameteri(jX.TEXTURE_2D, jX.TEXTURE_WRAP_S, jX.CLAMP_TO_EDGE); jX.texParameteri(jX.TEXTURE_2D, jX.TEXTURE_WRAP_T, jX.CLAMP_TO_EDGE); jV.texture = jU; var T = jX.createRenderbuffer(); jX.bindRenderbuffer(jX.RENDERBUFFER, T); jX.renderbufferStorage(jX.RENDERBUFFER, jX.DEPTH_STENCIL, jT, i); jV.depthBuffer = T; jX.bindFramebuffer(jX.FRAMEBUFFER, jV); jX.framebufferTexture2D(jX.FRAMEBUFFER, jX.COLOR_ATTACHMENT0, jX.TEXTURE_2D, jU, 0); jX.framebufferRenderbuffer(jX.FRAMEBUFFER, jX.DEPTH_STENCIL_ATTACHMENT, jX.RENDERBUFFER, T); var jW = jX.checkFramebufferStatus(jX.FRAMEBUFFER); if (jX.FRAMEBUFFER_COMPLETE !== jW) { console.log("Frame buffer object is incomplete: " + jW.toString()); return } jX.bindFramebuffer(jX.FRAMEBUFFER, null); jX.bindTexture(jX.TEXTURE_2D, null); jX.bindRenderbuffer(jX.RENDERBUFFER, null); return jV }, }); var hn = (function () { function jZ(kq, kv, kr, ks, kx) { kr = kr || 2; var kt = kv && kv.length; var ko = kt ? kv[0] * kr : kq.length; var ku = ke(kq, 0, ko, kr, true); var kn = kx || []; if (!ku) { return kn } var km; var kl; var kk; var kj; var ky; var kw; var kz; ks = ks || 0; if (kt) { ku = j8(kq, kv, ku, kr) } if (kq.length > 80 * kr) { km = kk = kq[0]; kl = kj = kq[1]; for (var kp = kr; kp < ko; kp += kr) { ky = kq[kp]; kw = kq[kp + 1]; if (ky < km) { km = ky } if (kw < kl) { kl = kw } if (ky > kk) { kk = ky } if (kw > kj) { kj = kw } } kz = Math.max(kk - km, kj - kl) } T(ku, kn, kr, km, kl, kz, null, ks); return kn } function ke(kn, kp, kj, ko, kk) { var kl; var km; if (kk === (ki(kn, kp, kj, ko) > 0)) { for (kl = kp; kl < kj; kl += ko) { km = jW(kl, kn[kl], kn[kl + 1], km) } } else { for (kl = kj - ko; kl >= kp; kl -= ko) { km = jW(kl, kn[kl], kn[kl + 1], km) } } if (km && j2(km, km.next)) { ka(km); km = km.next } return km } function j6(km, kj) { if (!km) { return km } if (!kj) { kj = km } var kl = km; var kk; do { kk = false; if (!kl.steiner && (j2(kl, kl.next) || kc(kl.prev, kl, kl.next) === 0)) { ka(kl); kl = kj = kl.prev; if (kl === kl.next) { return null } kk = true } else { kl = kl.next } } while (kk || kl !== kj); return kj } function T(kk, km, kp, kn, kj, kt, ks, kq) { if (!kk) { return } if (!ks && kt) { j1(kk, kn, kj, kt) } var kr = kk; var kl; var ko; while (kk.prev !== kk.next) { kl = kk.prev; ko = kk.next; if (kt ? kh(kk, kn, kj, kt) : j9(kk)) { km.push(kl.i / kp + kq); km.push(kk.i / kp + kq); km.push(ko.i / kp + kq); ka(kk); kk = ko.next; kr = ko.next; continue } kk = ko; if (kk === kr) { if (!ks) { T(j6(kk), km, kp, kn, kj, kt, 1, kq) } else { if (ks === 1) { kk = j5(kk, km, kp, kq); T(kk, km, kp, kn, kj, kt, 2, kq) } else { if (ks === 2) { j4(kk, km, kp, kn, kj, kt, kq) } } } break } } } function j9(kl) { var kk = kl.prev; var kj = kl; var kn = kl.next; if (kc(kk, kj, kn) >= 0) { return false } var km = kl.next.next; while (km !== kl.prev) { if (j3(kk.x, kk.y, kj.x, kj.y, kn.x, kn.y, km.x, km.y) && kc(km.prev, km, km.next) >= 0) { return false } km = km.next } return true } function kh(ko, kp, kn, kv) { var ks = ko.prev; var kr = ko; var kq = ko.next; if (kc(ks, kr, kq) >= 0) { return false } var kw = ks.x < kr.x ? (ks.x < kq.x ? ks.x : kq.x) : (kr.x < kq.x ? kr.x : kq.x); var kt = ks.y < kr.y ? (ks.y < kq.y ? ks.y : kq.y) : (kr.y < kq.y ? kr.y : kq.y); var km = ks.x > kr.x ? (ks.x > kq.x ? ks.x : kq.x) : (kr.x > kq.x ? kr.x : kq.x); var kl = ks.y > kr.y ? (ks.y > kq.y ? ks.y : kq.y) : (kr.y > kq.y ? kr.y : kq.y); var kk = e(kw, kt, kp, kn, kv); var ku = e(km, kl, kp, kn, kv); var kj = ko.nextZ; while (kj && kj.z <= ku) { if (kj !== ko.prev && kj !== ko.next && j3(ks.x, ks.y, kr.x, kr.y, kq.x, kq.y, kj.x, kj.y) && kc(kj.prev, kj, kj.next) >= 0) { return false } kj = kj.nextZ } kj = ko.prevZ; while (kj && kj.z >= kk) { if (kj !== ko.prev && kj !== ko.next && j3(ks.x, ks.y, kr.x, kr.y, kq.x, kq.y, kj.x, kj.y) && kc(kj.prev, kj, kj.next) >= 0) { return false } kj = kj.prevZ } return true } function j5(kp, kl, ko, kn) { var km = kp; do { var kk = km.prev; var kj = km.next.next; if (!j2(kk, kj) && i(kk, km, km.next, kj) && kd(kk, kj) && kd(kj, kk)) { kl.push(kk.i / ko + kn); kl.push(km.i / ko + kn); kl.push(kj.i / ko + kn); ka(km); ka(km.next); km = kp = kj } km = km.next } while (km !== kp); return km } function j4(kj, kl, kn, km, kk, ks, ko) { var kr = kj; do { var kq = kr.next.next; while (kq !== kr.prev) { if (kr.i !== kq.i && kb(kr, kq)) { var kp = j0(kr, kq); kr = j6(kr, kr.next); kp = j6(kp, kp.next); T(kr, kl, kn, km, kk, ks, null, ko); T(kp, kl, kn, km, kk, ks, null, ko); return } kq = kq.next } kr = kr.next } while (kr !== kj) } function j8(kl, ks, ko, kn) { var kp = []; var km; var kq; var kj; var kk; var kr; for (km = 0, kq = ks.length; km < kq; km++) { kj = ks[km] * kn; kk = km < kq - 1 ? ks[km + 1] * kn : kl.length; kr = ke(kl, kj, kk, kn, false); if (kr === kr.next) { kr.steiner = true } kp.push(jX(kr)) } kp.sort(jY); for (km = 0; km < kp.length; km++) { jV(kp[km], ko); ko = j6(ko, ko.next) } return ko } function jY(kk, kj) { return kk.x - kj.x } function jV(kl, kk) { kk = kf(kl, kk); if (kk) { var kj = j0(kk, kl); j6(kj, kj.next) } } function kf(kj, kn) { var kk = kn; var kp = kj.x; var ko = kj.y; var km = -Infinity; var kl; do { if (ko <= kk.y && ko >= kk.next.y) { var ks = kk.x + (ko - kk.y) * (kk.next.x - kk.x) / (kk.next.y - kk.y); if (ks <= kp && ks > km) { km = ks; if (ks === kp) { if (ko === kk.y) { return kk } if (ko === kk.next.y) { return kk.next } } kl = kk.x < kk.next.x ? kk : kk.next } } kk = kk.next } while (kk !== kn); if (!kl) { return null } if (kp === km) { return kl.prev } var kr = kl; var kv = kl.x; var kt = kl.y; var ku = Infinity; var kq; kk = kl.next; while (kk !== kr) { if (kp >= kk.x && kk.x >= kv && j3(ko < kt ? kp : km, ko, kv, kt, ko < kt ? km : kp, ko, kk.x, kk.y)) { kq = Math.abs(ko - kk.y) / (kp - kk.x); if ((kq < ku || (kq === ku && kk.x > kl.x)) && kd(kk, kj)) { kl = kk; ku = kq } } kk = kk.next } return kl } function j1(kn, kj, km, kk) { var kl = kn; do { if (kl.z === null) { kl.z = e(kl.x, kl.y, kj, km, kk) } kl.prevZ = kl.prev; kl.nextZ = kl.next; kl = kl.next } while (kl !== kn); kl.prevZ.nextZ = null; kl.prevZ = null; jU(kl) } function jU(kp) { var km; var kl; var kk; var ko; var kq; var kj; var kr; var kn; var ks = 1; do { kl = kp; kp = null; kq = null; kj = 0; while (kl) { kj++; kk = kl; kr = 0; for (km = 0; km < ks; km++) { kr++; kk = kk.nextZ; if (!kk) { break } } kn = ks; while (kr > 0 || (kn > 0 && kk)) { if (kr === 0) { ko = kk; kk = kk.nextZ; kn-- } else { if (kn === 0 || !kk) { ko = kl; kl = kl.nextZ; kr-- } else { if (kl.z <= kk.z) { ko = kl; kl = kl.nextZ; kr-- } else { ko = kk; kk = kk.nextZ; kn-- } } } if (kq) { kq.nextZ = ko } else { kp = ko } ko.prevZ = kq; kq = ko } kl = kk } kq.nextZ = null; ks *= 2 } while (kj > 1); return kp } function e(kk, kn, kj, km, kl) { kk = 32767 * (kk - kj) / kl; kn = 32767 * (kn - km) / kl; kk = (kk | (kk << 8)) & 16711935; kk = (kk | (kk << 4)) & 252645135; kk = (kk | (kk << 2)) & 858993459; kk = (kk | (kk << 1)) & 1431655765; kn = (kn | (kn << 8)) & 16711935; kn = (kn | (kn << 4)) & 252645135; kn = (kn | (kn << 2)) & 858993459; kn = (kn | (kn << 1)) & 1431655765; return kk | (kn << 1) } function jX(kl) { var kk = kl; var kj = kl; do { if (kk.x < kj.x) { kj = kk } kk = kk.next } while (kk !== kl); return kj } function j3(kn, km, kp, ko, kj, kq, kl, kk) { return (kj - kl) * (km - kk) - (kn - kl) * (kq - kk) >= 0 && (kn - kl) * (ko - kk) - (kp - kl) * (km - kk) >= 0 && (kp - kl) * (kq - kk) - (kj - kl) * (ko - kk) >= 0 } function kb(kk, kj) { return kk.next.i !== kj.i && kk.prev.i !== kj.i && !j7(kk, kj) && kd(kk, kj) && kd(kj, kk) && jT(kk, kj) } function kc(kl, kk, kj) { return (kk.y - kl.y) * (kj.x - kk.x) - (kk.x - kl.x) * (kj.y - kk.y) } function j2(kk, kj) { return kk.x === kj.x && kk.y === kj.y } function i(kl, kj, kk, km) { if ((j2(kl, kj) && j2(kk, km)) || (j2(kl, km) && j2(kk, kj))) { return true } return kc(kl, kj, kk) > 0 !== kc(kl, kj, km) > 0 && kc(kk, km, kl) > 0 !== kc(kk, km, kj) > 0 } function j7(kk, kj) { var kl = kk; do { if (kl.i !== kk.i && kl.next.i !== kk.i && kl.i !== kj.i && kl.next.i !== kj.i && i(kl, kl.next, kk, kj)) { return true } kl = kl.next } while (kl !== kk); return false } function kd(kk, kj) { return kc(kk.prev, kk, kk.next) < 0 ? kc(kk, kj, kk.next) >= 0 && kc(kk, kk.prev, kj) >= 0 : kc(kk, kj, kk.prev) < 0 || kc(kk, kk.next, kj) < 0 } function jT(kl, kk) { var ko = kl; var kj = false; var kn = (kl.x + kk.x) / 2; var km = (kl.y + kk.y) / 2; do { if (((ko.y > km) !== (ko.next.y > km)) && (kn < (ko.next.x - ko.x) * (km - ko.y) / (ko.next.y - ko.y) + ko.x)) { kj = !kj } ko = ko.next } while (ko !== kl); return kj } function j0(kl, kk) { var kj = new kg(kl.i, kl.x, kl.y); var km = new kg(kk.i, kk.x, kk.y); var ko = kl.next; var kn = kk.prev; kl.next = kk; kk.prev = kl; kj.next = ko; ko.prev = kj; km.next = kj; kj.prev = km; kn.next = km; km.prev = kn; return km } function jW(kk, kj, kn, kl) { var km = new kg(kk, kj, kn); if (!kl) { km.prev = km; km.next = km } else { km.next = kl.next; km.prev = kl; kl.next.prev = km; kl.next = km } return km } function ka(kj) { kj.next.prev = kj.prev; kj.prev.next = kj.next; if (kj.prevZ) { kj.prevZ.nextZ = kj.nextZ } if (kj.nextZ) { kj.nextZ.prevZ = kj.prevZ } } function kg(kk, kj, kl) { this.i = kk; this.x = kj; this.y = kl; this.prev = null; this.next = null; this.z = null; this.prevZ = null; this.nextZ = null; this.steiner = false } jZ.deviation = function (ko, kt, kq, kl) { var kr = kt && kt.length; var kn = kr ? kt[0] * kq : ko.length; var kk = Math.abs(ki(ko, 0, kn, kq)); if (kr) { for (var kp = 0, ks = kt.length; kp < ks; kp++) { var kj = kt[kp] * kq; var km = kp < ks - 1 ? kt[kp + 1] * kq : ko.length; kk -= Math.abs(ki(ko, kj, km, kq)) } } var kx = 0; for (kp = 0; kp < kl.length; kp += 3) { var kw = kl[kp] * kq; var kv = kl[kp + 1] * kq; var ku = kl[kp + 2] * kq; kx += Math.abs((ko[kw] - ko[ku]) * (ko[kv + 1] - ko[kw + 1]) - (ko[kw] - ko[kv]) * (ko[ku + 1] - ko[kw + 1])) } return kk === 0 && kx === 0 ? 0 : Math.abs((kx - kk) / kk) }; function ki(kn, kp, kj, ko) { var km = 0; for (var kl = kp, kk = kj - ko; kl < kj; kl += ko) { km += (kn[kk] - kn[kl]) * (kn[kl + 1] + kn[kk + 1]); kk = kl } return km } jZ.flatten = function (kn) { var ko = kn[0][0].length; var kj = { vertices: [], holes: [], dimensions: ko }; var kl = 0; for (var km = 0; km < kn.length; km++) { for (var kk = 0; kk < kn[km].length; kk++) { for (var kp = 0; kp < ko; kp++) { kj.vertices.push(kn[km][kk][kp]) } } if (km > 0) { kl += kn[km - 1].length; kj.holes.push(kl) } } return kj }; return jZ })(); function cy(i, e) { this.id = fQ(); this.workerPool = i; this.actors = []; this.currentActorIndex = 0; this.ready = false; this.init(e) } cy.prototype.init = function (jV) { const e = this.workerPool.acquire(this.id); for (var jT = 0; jT < e.length; jT++) { const jW = e[jT]; const jU = new i9(jW, jV, this.id); jU.name = "Worker " + jT; this.actors.push(jU) } var T = this; this.broadcast("hasReady", null, function () { T.ready = true }) }; cy.prototype.broadcast = function (i, T, e) { e = e || function () { }; k(this.actors, function (jU, jT) { jU.send(i, T, jT) }, e) }; cy.prototype.getActor = function () { const e = this.actors.filter(function (i) { return !i.busy })[0]; if (e) { return e } this.currentActorIndex = (this.currentActorIndex + 1) % this.actors.length; return this.actors[this.currentActorIndex] }; cy.prototype.stop = function () { for (var e = 0; e < this.actors.length; e++) { var T = this.actors[e]; T.stop() } }; cy.prototype.remove = function () { for (var e = 0; e < this.actors.length; e++) { var T = this.actors[e]; T.remove() } this.actors.length = 0; this.workerPool.release(this.id) }; function i9(T, i, e) { this.target = T; this.parent = i; this.mapId = e; this.busy = false; this.taskQueue = []; this.callbacks = {}; this.init() } i9.prototype.init = function () { this.receive = this.receive.bind(this); this.target.addEventListener("message", this.receive, false) }; i9.prototype.setBusy = function (e) { this.busy = e; if (!e && this.taskQueue.length) { var i = this.taskQueue.shift(); this.send(i.action, i.data, i.callback, i.targetMapId, i.mustQueue, i.callbackMetadata) } }; i9.prototype.receive = function (jT) { const jU = jT.data; const jX = jU.id; if (!jX) { return } if (jU.targetMapId && this.mapId !== jU.targetMapId) { return } if (jU.action === "<response>") { this.setBusy(false); const jW = this.callbacks[jX]; delete this.callbacks[jX]; if (jW) { if (jU.error) { jW(hU(jU.error)) } else { jW(null, hU(jU.data)) } } } else { var T = this; const i = []; const e = jU.hasCallback ? function (jY, jZ) { T.target.postMessage({ id: jX, action: "<response>", sourceMapId: T.mapId, error: jY ? ja(jY) : null, data: ja(jZ, i) }, i) } : function (jY) { }; const jV = hU(jU.data); if (this.parent[jU.action]) { this.parent[jU.action](jU.sourceMapId, jV, e) } } }; i9.prototype.send = function (i, T, jW, jT, jU, jX) { if (i === "release") { this.releasePendingData(T, jW); return } if (this.busy) { this.taskQueue.push({ action: i, data: T, callback: jW, targetMapId: jT, mustQueue: jU, callbackMetadata: jX }); return } this.setBusy(true); var jV = Math.round((Math.random() * 1000000000000000000)).toString(36).substring(0, 10); const e = this.mapId + "_" + i + "_" + jV; if (jW) { jW.metadata = jX; this.callbacks[e] = jW } const jY = []; this.target.postMessage({ id: e, action: i, hasCallback: !!jW, targetMapId: jT, mustQueue: jU, sourceMapId: this.mapId, data: ja(T, jY) }, jY); return { cancel: function () { if (jW) { delete this.callbacks[e] } this.target.postMessage({ id: e, action: "<cancel>", targetMapId: jT, sourceMapId: this.mapId }) } } }; i9.prototype.stop = function () { this.taskQueue.length = 0; this.busy = false; this.callbacks = {} }; i9.prototype.remove = function () { this.taskQueue.length = 0; this.busy = false; this.target.removeEventListener("message", this.receive, false) }; i9.prototype.releasePendingData = function (e, jW) { var T = []; var jU = this.taskQueue; for (var jT = jU.length - 1; jT >= 0; jT--) { var jV = jU[jT]["data"]; if (!jV || !jV.layerId) { break } if (jV.layerId !== e.layerId) { continue } if (!e["id_" + jV.x + "_" + jV.y + "_" + jV.z]) { jU.splice(jT, 1); T.push(jV) } } jW(null, T) }; var jJ; function g6() { if (!jJ) { jJ = new hc() } return jJ } function hc() { this.active = {} } hc.prototype.acquire = function (i) { if (!this.workers) { this.workers = []; var T = (window.location.protocol === "http:" ? "http:" : "https:") + "//api.map.baidu.com/res/webgl/10/worker_mvt_wx1hqj.js"; while (this.workers.length < hc.workerCount) { var e = jt(T); this.workers.push(e) } } this.active[i] = true; return this.workers.slice() }; hc.prototype.release = function (T) { delete this.active[T]; if (this.numActive() === 0) { for (var e = 0; e < this.workers.length; e++) { this.workers[e].terminate() } this.workers = null } }; hc.prototype.numActive = function () { return Object.keys(this.active).length }; hc.workerCount = 2; function hd(e) { this._map = e; this._spotsId = {}; this._init() } hd.prototype._init = function () { var i = this._map; var e = this; i.addEventListener("onspotsdataready", function (jT) { var T = jT.spots; if (e._spotsId[jT.index]) { i.removeSpots(e._spotsId[jT.index]) } e._spotsId[jT.index] = i.addSpots(T) }); i.addEventListener("onspotsdataremove", function (T) { if (e._spotsId[T.index]) { i.removeSpots(e._spotsId[T.index]) } }) }; bw.register(function (e) { if (!e.config.enableIconClick) { return } e._mapIcon = new hd(e) }); function c0(e) { this._indoorData = {}; this._map = e; this.currentUid = null; this.currentFloor = null; this._indoorControl = null; this.enterMethod = null; this.showMask = false; this._isMobile = bT(); this._autoEnterZoom = 19; if (this._isMobile) { this._autoEnterZoom = 17 } this._init(e); window._indoorMgr = this } c0.prototype._init = function (i) { var e = this; i.on("indoor_status_changed", function (jW) { var T = jW.uid; var jU = jW.floor; if (T === null) { T = e.currentUid; if (e._indoorData[T]) { jU = e._indoorData[T].defaultFloor } if (e._indoorControl) { e._indoorControl.hide() } e.currentUid = null; e.currentFloor = null; e.enterMethod = null } else { if (e._indoorData[T]) { var jV = e._indoorData[T]; jU = (typeof jU === "number") ? jU : jV.defaultFloor; if (!e._indoorControl) { if (i.config.showControls && i._displayOptions.indoor) { e._indoorControl = new at(i, jV) } } else { e._indoorControl.setInfo(jV); e._indoorControl.show() } e.currentUid = T; e.currentFloor = jU } } if (!e._indoorData || !e._indoorData[T] || e._indoorData[T].currentFloor === jU) { this.fire(new fy("onrefresh")); return } var jT = new fy("onindoor_data_refresh"); jT.uid = T; jT.floor = jU; jT.tileKey = e._indoorData[T].tileKey; e._indoorData[T].currentFloor = jU; e.currentFloor = jU; this.fire(jT) }); i.on("spotclick", function (jT) { var T = null; if (jT.curAreaSpot && this.areaSpots[jT.curAreaSpot]) { T = this.areaSpots[jT.curAreaSpot].userData.uid } if (T === e.currentUid) { if (jT.curAreaSpot) { e.enterMethod = "byClick" } return } if (T === null) { if (e.currentUid && e.enterMethod === "byClick") { i.showIndoor(null); e.enterMethod = null } } else { e.enterMethod = "byClick"; if (e.currentUid) { i.showIndoor(e.currentUid, e._indoorData[e.currentUid].defaultFloor) } i.showIndoor(T, e._indoorData[T].defaultFloor) } }); i.on("moveend", function () { if (this.getZoom() >= e._autoEnterZoom) { e._checkIndoorByMove() } }); i.on("zoomend", function () { if (this.getZoom() >= e._autoEnterZoom) { e._checkIndoorByMove() } else { if (e.enterMethod !== "byClick" && e.currentUid !== null) { this.showIndoor(null) } } }) }; c0.prototype._checkIndoorByMove = function () { var T = this._map; var jZ = T.getSize(); var j4 = { x: jZ.width / 2, y: jZ.height / 2 }; var j3 = Math.max(jZ.width, jZ.height); var j5 = []; for (var j0 in this._indoorData) { var e = this._indoorData[j0].center; var jT = T.pointToPixelIn(new bw.Point(e[0], e[1])); var jW = ce(j4, jT); j5.push({ uid: j0, distance: jW }) } if (j5.length === 0) { return } j5.sort(function (j6, i) { return j6.distance - i.distance }); var jV = j5[0]; var j1 = T.getCenterIn(); var jU = false; for (var jY = 0; jY < this._indoorData[jV.uid].contour.length; jY++) { if (bJ([j1.lng, j1.lat], this._indoorData[jV.uid].contour[jY])) { jU = true; break } } if (jU === false && jV.uid === "e96b44200baa3b4082288acc") { var jX = this._indoorData[jV.uid].boundsMin; var j2 = this._indoorData[jV.uid].boundsMax; if (j1.lng > jX[0] && j1.lat > jX[1] && j1.lng < j2[0] && j1.lat < j2[1]) { jU = true } } if (jU) { if (this.enterMethod !== "byClick") { if (this.currentUid !== null && this.currentUid !== jV.uid) { this._map.showIndoor(this.currentUid, this._indoorData[this.currentUid].defaultFloor) } if (this.currentUid !== jV.uid) { this._map.showIndoor(jV.uid, this._indoorData[jV.uid].defaultFloor) } this.enterMethod = "byMove" } } else { if (this.enterMethod !== "byClick") { this._map.showIndoor(null) } } }; c0.prototype.setData = function (jT) { if (jT === null) { return } for (var T in jT) { if (T === "tileInfo") { continue } var jU = jT[T].tileKey; if (this._indoorData[T]) { if (!this._indoorData[T][jU]) { this._indoorData[T].tileKeys.push(jU); this._indoorData[T][jU] = true } } else { this._indoorData[T] = jT[T]; this._indoorData[T].tileKeys = [jT[T].tileKey]; this._indoorData[T][jU] = true; for (var e = 0; e < this._indoorData[T].contour.length; e++) { this._map.addAreaSpot(this._indoorData[T].contour[e], { id: T + e, userData: { uid: T } }) } } } if (this._map.getZoom() >= this._autoEnterZoom) { this._checkIndoorByMove() } }; c0.prototype.removeData = function (T, jU) { if (!this._indoorData[T]) { return } var jT = this._indoorData[T]; for (var e = 0; e < jT.tileKeys.length; e++) { if (jT.tileKeys[e] === jU) { jT.tileKeys.splice(e, 1); break } } delete jT[jU]; if (jT.tileKeys.length === 0) { delete this._indoorData[T] } }; c0.prototype.getIndoorData = function (e) { return this._indoorData[e] || null }; c0.prototype.getData = function () { return this._indoorData }; bw.register(function (e) { e._indoorMgr = new c0(e) }); var aW = (function () { var jT = {}; var j2 = {}; var jY = {}; function j0(j4) { if (Object.prototype.toString.call(j4) === "[object Object]") { for (var j3 in j4) { return false } return true } else { return false } } function jZ(ka, kb, ke, j7, kd) { var j3 = j3 || null; j7 = j7 || j3; var j5; if (j7) { j5 = j1(ka, kb, ke, j7) } else { j5 = T(ka, kb, ke, kd) } var j9 = j5.drawId; var j4 = j5.style; var kc = j5.styleUpdate; var kf = []; if (!j9) { return kf } for (var j6 = 0; j6 < j9.length; j6++) { var j8 = kc[j9[j6]] || j4[j9[j6]]; if (j8) { switch (kb) { case "polygon": j8 = jU(j8, ka); break; case "line": j8 = jX(j8, ka); break; case "pointText": j8 = jV(j8, ka); break; case "point": j8 = e(j8, ka); break; case "polygon3d": j8 = jW(j8, ka); break }if (j8) { j8.did = j9[j6]; kf[kf.length] = j8 } } } return kf } function j1(j4, j6, j7, j3) { var j5 = j3[2]; switch (j6) { case "point": j5 = j5[0]; break; case "pointText": j5 = j5[1]; break; case "line": j5 = j5[3]; break; case "polygon": j5 = j5[4]; break; case "polygon3d": j5 = j5[5]; break }var j9 = j7 - 1; if (j6 === "line" && j7 === 12) { j9 = j7 } var ka = j3[1][j9][0]; var j8 = ka[j4]; if (!j8 && j7 < 21) { if (j6 === "point" || j6 === "pointText") { ka = j3[1][j7][0]; j8 = ka[j4] } } return { drawId: j8, style: j5, styleUpdate: [] } } function T(j7, j8, kb, ka) { if (!ka) { return { drawId: null, style: [], styleUpdate: [] } } var j9; var j5 = ka.baseFs; if (j0(ka.zoomRegion)) { j9 = ka.StyleBody || [] } else { j9 = ka.zoomStyleBody[kb] || [] } var j4 = j5[2]; switch (j8) { case "point": j4 = j4[0]; j9 = j9[0] || {}; break; case "pointText": j4 = j4[1]; j9 = j9[1] || {}; break; case "line": j4 = j4[3]; j9 = j9[3] || {}; break; case "polygon": j4 = j4[4]; j9 = j9[4] || {}; break; case "polygon3d": j4 = j4[5]; j9 = j9[5] || {}; break }var j3 = j5[1][kb - 1][0]; var j6 = j3[j7]; if (!j6 && kb < 21) { if (j8 === "point" || j8 === "pointText") { j3 = j5[1][kb][0]; j6 = j3[j7] } } return { drawId: j6, style: j4, styleUpdate: j9 } } function jV(j4, j3) { if (!j4 || j4.length === 0) { return null } return { sid: j3, fontRgba: i(j4[0]), haloRgba: i(j4[1]), backRgba: i(j4[2]), fontSize: j4[3], haloSize: j4[4], fontWeight: j4[5], fontStyle: j4[6], density: j4[7] } } function e(j4, j3) { return { sid: j3, rank: j4[0], ucflag: j4[1], icon: j4[2], iconType: j4[3], nineGG: j4[4], density: j4[5], zoom: j4[6] } } function jX(j4, j3) { return { sid: j3, borderRgba: i(j4[0]), fillRgba: i(j4[1]), borderWidth: j4[2], fillWidth: j4[3], borderCap: j4[4], fillCap: j4[5], haveBorderLine: j4[6], haveBorderTexture: j4[7], haveFillTexture: j4[8], isUseBorderRgba: j4[9], isUseFillRgba: j4[10], borderTexture: j4[11], fillTexture: j4[12], borderTextureType: j4[13], fillTextureType: j4[14], isRealWidth: j4[15], haveArrow: j4[16], needRound: j4[17], realBorderWidth: j4[18] } } function jU(j4, j3) { return { sid: j3, fillRgba: i(j4[0]), borderRgba: i(j4[1]), borderWidth: j4[2], borderTexture: j4[3], borderTextureType: j4[4], waterStyle: j4[5], haloStyle: j4[6], textureStyle: j4[7], thickRgba: i(j4[8]) } } function jW(j4, j3) { return { sid: j3, filter: j4[0], ratio: j4[1], haveBorder: j4[2], borderWidth: j4[3], borderRgba: i(j4[4]), fillTop: i(j4[5]), fillSide: i(j4[6]), polyTexture: j4[7] } } function i(j8) { var j7 = j8; if (jY[j7]) { return jY[j7] } j8 = j8 >>> 0; var j6 = (j8) & 255; var j5 = (j8 >> 8) & 255; var j3 = (j8 >> 16) & 255; var j4 = (j8 >> 24) & 255; jY[j7] = [j6, j5, j3, j4]; return jY[j7] } return { getStyleFromCache: function (ka, j5, j8, j9, j4, j7, j3) { ka = ka || "default"; var j6 = ka + "-" + j5 + "-" + j8 + "-" + j9; if (j7) { j6 += "-indoor" } if (j4) { if (!j2[j6]) { j2[j6] = jZ(j5, j8, j9, j4) } return j2[j6] } if (!jT[j6]) { jT[j6] = jZ(j5, j8, j9, j4, j3) } return jT[j6] } } })(); bw.register(function (i) { var e = new hT(i) }); function hT(e) { e.container.appendChild(this.render()); this.bind(e) } hT.prototype.render = function () { var i = document.createElement("div"); i.className = "click-ripple-container"; var e = document.createElement("div"); e.className = "click-ripple"; i.appendChild(e); this._div = i; this._ripple = e; return i }; hT.prototype.bind = function (i) { var e = this; i.addEventListener("spotclick", function (T) { if (!T.spots || T.spots.length === 0) { return } e._div.style.left = T.pixel.x + "px"; e._div.style.top = T.pixel.y + "px"; eN.ac(e._ripple, "ripple-playing") }); i.addEventListener("hotclick", function (T) { if (!T || !T.pixel || !(T.pixel instanceof e8)) { return } e._div.style.left = T.pixel.x + "px"; e._div.style.top = T.pixel.y + "px"; eN.ac(e._ripple, "ripple-playing") }); eN.on(e._ripple, "transitionend", function () { eN.rc(e._ripple, "ripple-playing") }) }; function bS(e) { c1.call(this); if (!e) { return } this._opts = {}; this._map = e; this._maxLat = 84.6; this._minLat = -80.6; this._maxLatMC = iS.convertLL2MC(new cn(this._maxLat, 0)).lat; this._minLatMC = iS.convertLL2MC(new cn(this._minLat, 0)).lat } bS.inherits(c1, "ToolbarItem"); eN.extend(bS.prototype, { open: function () { if (this._isOpen == true) { return true } if (this._map._toolInUse) { return false } this._map._toolInUse = true; this._isOpen = true; return true }, close: function () { if (!this._isOpen) { return } this._map._toolInUse = false; this._isOpen = false }, _checkStr: function (e) { if (!e) { return "" } return e.replace(/</g, "&lt;").replace(/>/g, "&gt;") } }); function cb(T, i) { bS.call(this, T); i = i || {}; this._opts = eN.extend(eN.extend(this._opts || {}, { autoClear: false, tips: "测距", followText: "单击确定起点，双击结束绘制", unit: "metric", showResult: true, lineColor: "blue", lineStroke: 2, opacity: 1, lineStyle: "solid", cursor: B.distCursor, styleCodes: { lnCode: 0, spCode: 0, slCode: 0, tlCode: 0 }, enableMassClear: true }), i); if (this._opts.showResult === false) { if (typeof i.tips === "undefined") { this._opts.tips = "绘制折线" } if (!i.cursor) { this._opts.cursor = "crosshair" } } if (this._opts.lineStroke <= 0) { this._opts.lineStroke = 2 } if (this._opts.opacity > 1) { this._opts.opacity = 1 } else { if (this._opts.opacity < 0) { this._opts.opacity = 0 } } if (this._opts.lineStyle !== "solid" && this._opts.lineStyle !== "dashed") { this._opts.lineStyle = "solid" } this._checked = false; this._drawing = null; this.followTitle = null; this._totalDis = {}; this._points = []; this._paths = []; this._dots = []; this._segDistance = []; this._overlays = []; this._units = { metric: { name: "metric", conv: 1, incon: 1000, u1: "米", u2: "公里" }, us: { name: "us", conv: 3.2808, incon: 5279.856, u1: "英尺", u2: "英里" } }; if (!this._units[this._opts.unit]) { this._opts.unit = "metric" } this._dLineColor = "#ff6319"; this._dLineStroke = 3; this._dOpacity = 0.8; this._dLineStyle = "solid"; this._dCursor = B.distCursor; if (this._opts.showResult) { this._opts.followText = "单击确定起点" } this._followTextM = "单击确定地点，双击结束"; this._sectionMarkerTip = "单击可删除此点，拖拽可调整位置"; this._movingTimerId = null; if (this._opts.showResult) { this.text = "测距" } else { this.text = "绘线" } this._isOpen = false; var e = this; gO.load("tools", function () { e._draw() }) } cb.inherits(bS, "PolylineTItem"); eN.extend(cb.prototype, { setLineColor: function (e) { this._opts.lineColor = e }, setLineStroke: function (e) { if (Math.round(e) > 0) { this._opts.lineStroke = Math.round(e) } }, setOpacity: function (e) { if (e >= 0 && e <= 1) { this._opts.opacity = e } }, setLineStyle: function (e) { if (e === "solid" || e === "dashed") { this._opts.lineStyle = e } }, clear: function () { for (var T = 0, e = this._overlays.length; T < e; T++) { if (this._overlays[T]) { this._map.removeOverlay(this._overlays[T]) } } this._overlays.length = 0; for (var T = 0, e = this._dots.length; T < e; T++) { if (this._dots[T] && this._dots[T].parentNode) { this._dots[T].parentNode.removeChild(this._dots[T]) } } this._dots.length = 0 }, setCursor: function (e) { if (this._opts.showResult === true) { return } this._opts.cursor = e }, getCursor: function () { if (this._opts.showResult === true) { return this._dCursor } var e = this._opts.cursor.match(/^url\((.+)\)(,.*)?/); if (e !== null) { return e[1] } else { return this._opts.cursor } }, showResult: function (e) { this._opts.showResult = !!e } }); function bB() { var jU = 3; var j1 = 256; var jT = Math.pow(2, 18 - jU) * j1; var j2 = 2; var j0 = (j2 + 1) * jT; var T = iS.convertLL2MC(new ct(180, 0)); var jY = T.lng; var jW = j0 - jY; var jZ = -3; var e = jZ * jT; var jV = iS.convertLL2MC(new ct(-180, 0)); var jX = jV.lng; var i = jX - e; this._validPixels = jY / Math.pow(2, 18 - jU); this._mc180X = jY; this._mcM180X = jX; this._loopOffset = jW + i; this._mcTSpan = jY - jX; this._spaceDistance = jW; this._mSpaceDistance = i } bB.prototype = { calcLoopParam: function (jT, i, j0) { j0 = j0 || 256; var jX = 0; var jU = 3; var jW = 6; var jV = jW * Math.pow(2, (i - jU)) * 256 / j0; var jZ = jV / 2 - 1; var jY = -jV / 2; while (jT > jZ) { jT -= jV; jX -= this._loopOffset } while (jT < jY) { jT += jV; jX += this._loopOffset } var e = jX; jX = Math.round(jX / Math.pow(2, 18 - i)); return { offsetX: jX, geoOffsetX: e, col: jT, T: jV, maxCol: jZ, minCol: jY } }, calcLoopCenterPoint: function (i) { var e = i.lng; while (e > this._mc180X) { e -= this._mcTSpan } while (e < this._mcM180X) { e += this._mcTSpan } i.lng = e; return i }, calcLoopMapBounds: function (T, jT) { var i = jT || T.getCenter(); var e = T.sw.lng; var jU = T.ne.lng; while (i.lng > this._mc180X) { i.lng -= this._mcTSpan; e -= this._mcTSpan; jU -= this._mcTSpan } while (i.lng < this._mcM180X) { i.lng += this._mcTSpan; e += this._mcTSpan; jU += this._mcTSpan } T.sw.lng = e; T.ne.lng = jU; if (T.pointBottomLeft) { T.pointBottomLeft = this.calcLoopCenterPoint(T.pointBottomLeft); T.pointTopLeft = this.calcLoopCenterPoint(T.pointTopLeft); T.pointTopRight = this.calcLoopCenterPoint(T.pointTopRight); T.pointBottomRight = this.calcLoopCenterPoint(T.pointBottomRight) } return T }, calcLoopTiles: function (j1, e, j5, jY) { j5 = j5 || 256; var jU = jY || Math.pow(2, 18 - e) * j5; var j0 = Math.floor(this._mc180X / jU); var jW = Math.floor(this._mcM180X / jU); var j2 = Math.floor(this._loopOffset / jU); var j3 = []; for (var jX = 0; jX < j1.length; jX++) { var j4 = j1[jX]; var jT = j4[0]; var j6 = j4[1]; if (jT >= j0) { var jZ = jT + j2; if (this.isTileBlank(jZ, e, j5) === true) { continue } var T = "id_" + jZ + "_" + j6 + "_" + e; if (!j1[T]) { j1[T] = true; j3.push([jZ, j6, e, 0]) } } else { if (jT <= jW) { var jZ = jT - j2; if (this.isTileBlank(jZ, e, j5) === true) { continue } var T = "id_" + jZ + "_" + j6 + "_" + e; if (!j1[T]) { j1[T] = true; j3.push([jZ, j6, e, 0]) } } } } for (var jX = 0, jV = j3.length; jX < jV; jX++) { j1.push(j3[jX]) } for (var jX = j1.length - 1; jX >= 0; jX--) { var jT = j1[jX][0]; if (this.isTileBlank(jT, e, j5)) { j1.splice(jX, 1) } } return j1 }, isTileBlank: function (T, jU, e) { var jV = Math.pow(2, jU - 3); var i = Math.round(this._validPixels * jV); var jT = 6 * jV * 256 / e; while (T > jT / 2 - 1) { T -= jT } while (T < -(jT / 2)) { T += jT } if (T > 0 && T * e > i) { return true } if (T < 0 && Math.abs((T + 1) * e) > i) { return true } return false }, isAddWidth: function (e, i) { return e < this._mcM180X || i > this._mc180X }, pixelWidth: function (e, i) { if (e < 0) { e = -e } return Math.abs(e - this._mc180X) / (Math.pow(2, 18 - i)) }, getSpaceDistanceInPixel: function (i) { var e = Math.round((this._spaceDistance + this._mSpaceDistance) / Math.pow(2, 18 - i)); return e } }; var eQ = new bB(); function ef() { this._id = undefined; this._type = undefined; this.grid = undefined; this.layerName = undefined; this.geojson = undefined; this._geometry = null; this._properties = {}; this._box = null; this._state = {}; this._style = null; this._visible = true; this.renderData = {}; return this } ef.prototype.serialize = function () { return { id: this.getId(), type: this.getType(), grid: this.grid, layerName: this.layerName, geojson: this.geojson, renderData: this.renderData, geometry: this.getGeometry(), box: this.getBox(), properties: this.getProperties(), state: this.getState(), visible: this._visible } }; ef.prototype.deserialize = function (e) { this.setId(e.id); this.setType(e.type); this.grid = e.grid; this.layerName = e.layerName; this.geojson = e.geojson; this.setProperties(e.properties); this.setState(e.state); this._visible = e.visible || true; this.renderData = e.renderData; this.setGeometry(e.geometry); this.setBox(e.box); return this }; ef.prototype.getType = function () { return this._type }; ef.prototype.getGeometry = function () { return this._geometry }; ef.prototype.getId = function () { return this._id }; ef.prototype.getProperties = function () { return this._properties }; ef.prototype.getBox = function () { return this._box }; ef.prototype.getState = function () { if (Object.keys(this._state).length > 0) { return this._state } else { return null } }; ef.prototype.getStyle = function () { return this._style }; ef.prototype.getStyleFunction = function () { return this._styleFunction }; ef.prototype.setType = function (e) { return this._type = e }; ef.prototype.setGeometry = function (e) { this._geometry = e }; ef.prototype.setStyle = function (e) { if (!e || Object.keys(e).length === 0) { return } for (var i in e) { this.set(i, e[i], this._style) } }; ef.prototype.setState = function (e) { for (var i in e) { this.set(i, e[i], this._state) } }; ef.prototype.setId = function (e) { this._id = e }; ef.prototype.setProperties = function (e) { for (var i in e) { this.set(i, e[i], this._properties) } }; ef.prototype.setBox = function (e) { return this._box = e }; ef.prototype.isPointInBox = function (e) { return this._pointInBox(e, this._box) }; ef.prototype.getPointGeoJSON = function (jT) { var j2 = this.renderData; if (j2) { var jW = j2.active; if (!j2[jW] || !j2[jW]["poi"]) { return null } var j1 = []; var jY = j2[jW]["poi"]; for (var jZ = 0; jZ < jY.length; jZ++) { if (jY[jZ].bds && jY[jZ].bds.length === 4) { var jU = jT.pointToPixelIn(jY[jZ].pt); var jX = jU.x - jY[jZ].bds[0]; var jV = jU.y - jY[jZ].bds[1]; var T = jU.x - jY[jZ].bds[2]; var e = jU.y - jY[jZ].bds[3]; j1.push([[jX, jV], [T, jV], [T, e], [jX, e], [jX, jV]]) } } if (j1.length === 0) { return null } else { var j0 = "Polygon"; if (j1.length > 0) { j0 = "MultiPolygon" } return { type: "Feature", properties: {}, geometry: { type: j0, coordinates: [j1] } } } } }; ef.prototype._pointInBox = function (e, i) { if (i[0] > e[0] || i[1] > e[1] || i[2] < e[0] || i[3] < e[1]) { return false } else { return true } }; ef.prototype._pixelPnpoint = function (jU, jY, e) { var jZ = false; if (jY) { var jT = jY.active; if (!jY[jT] || !jY[jT]["poi"]) { return jZ } var jV = jY[jT]["poi"]; for (var jW = 0; jW < jV.length; jW++) { if (jV[jW].bds && jV[jW].bds.length === 4) { var T = e.pointToPixelIn(jV[jW].pt); if ((jU.x - T.x < jV[jW].bds[2] && jU.x - T.x > jV[jW].bds[0]) && (T.y - jU.y < jV[jW].bds[3] && T.y - jU.y > jV[jW].bds[1])) { if (e.getTilt() > 55) { var jX = e.pointToOverlayPixelIn(jV[jW].pt); if (jX.outOfFrustum) { continue } } jZ = true; break } } } } return jZ }; ef.prototype._pixelPnpoly = function (jU, jW) { var e = jW.length; var T = 0; var jV = false; for (var jT = 0; jT < e; jT++) { T = (jT === e - 1) ? 0 : T + 1; if ((jW[jT].lat !== jW[T].lat) && (((jU.lat >= jW[jT].lat) && (jU.lat < jW[T].lat)) || ((jU.lat >= jW[T].lat) && (jU.lat < jW[jT].lat))) && (jU.lng < (jW[T].lng - jW[jT].lng) * (jU.lat - jW[jT].lat) / (jW[T].lat - jW[jT].lat) + jW[jT].lng)) { jV = !jV } } return jV }; ef.prototype._getProximity = function (j3, jZ) { var T, jT, j2, jX, jW, j1, j0; var j6 = jZ.length; if (j6 > 1) { for (var j4 = 1; j4 < j6; j4++) { var jY = jZ[j4 - 1]; var ka = jZ[j4]; if (!jY || !ka) { continue } if (jY.lng != ka.lng) { var j9 = (ka.lat - jY.lat) / (ka.lng - jY.lng); var j7 = ka.lat - j9 * ka.lng; j0 = Math.abs(j9 * j3.lng + j7 - j3.lat) / Math.sqrt(j9 * j9 + 1) } else { j0 = Math.abs(j3.lng - ka.lng) } var j5 = Math.pow(ka.lat - jY.lat, 2) + Math.pow(ka.lng - jY.lng, 2); var jU = Math.pow(ka.lat - j3.lat, 2) + Math.pow(ka.lng - j3.lng, 2); var j8 = Math.pow(jY.lat - j3.lat, 2) + Math.pow(jY.lng - j3.lng, 2); var jV = Math.pow(j0, 2); var e = jU - jV + j8 - jV; if (e > j5) { j0 = Math.sqrt(Math.min(jU, j8)) } if ((T == null) || (T > j0)) { jT = Math.sqrt(j8 - jV) / Math.sqrt(j5); j2 = Math.sqrt(jU - jV) / Math.sqrt(j5); T = j0; j1 = j4 } T = Math.min(T, j0) } } return { dist: T } }; ef.prototype.isPointInGeometry = function (T, jY) { var e = false; switch (this._type) { case fD.POINT: e = this._pixelPnpoint(T, this.renderData, jY); break; case fD.LINE_STRING: var jU = this._getProximity({ lng: T[0], lat: T[1] }, this._geometry); var jX = this.renderData[this.renderData.active]; if (!jX || !jX.line || !jX.line[0] || !jX.line[0].width) { var jW = 2 } else { var jW = this.renderData[this.renderData.active]["line"][0].width; if (this.grid === dY.GridModel.GOOGLEWEB) { jW = Math.max(jW / 2 * ds.gridScaleFromBDMCTo3857, 2) } else { jW = Math.max(jW / 2, 2) } } if (jU.dist < jW) { e = true } break; case fD.POLYGON: e = this._pixelPnpoly({ lng: T[0], lat: T[1] }, this._geometry); break; case fD.MULTI_POLYGON: for (var jV = 0; jV < this._geometry.length; jV++) { if (this._geometry[jV][0] instanceof ct) { e = this._pixelPnpoly({ lng: T[0], lat: T[1] }, this._geometry[jV]) } else { e = this._pixelPnpoly({ lng: T[0], lat: T[1] }, this._geometry[jV][0]); if (e) { for (var jT = 1; jT < this._geometry[jV].length; jT++) { e = this._pixelPnpoly({ lng: T[0], lat: T[1] }, this._geometry[jV][jT]); if (e) { e = false; break } } } } if (e) { break } } break; case fD.MULTI_LINE_STRING: var jX = this.renderData[this.renderData.active]; if (!jX || !jX.line || !jX.line[0] || !jX.line[0].width) { var jW = 6 } else { var jW = this.renderData[this.renderData.active]["line"][0].width; jW = Math.max(jW / 2 * ds.gridScaleFromBDMCTo3857, 6) } for (var jV = 0; jV < this._geometry.length; jV++) { if (this._geometry[jV][0] instanceof ct) { var jU = this._getProximity({ lng: T[0], lat: T[1] }, this._geometry[jV]); if (jU.dist < jW) { e = true; break } } } break; case fD.MULTI_POINT: e = this._pixelPnpoint(T, this.renderData, jY); break; default: throw new Error("geojson类型错误: " + this._type) }return e }; ef.prototype.set = function (i, T, jT) { var e = jT || (jT = {}); e[i] = T }; var gk = (function () { function j0(j6) { var j5 = j6 ? j6 : {}; if (j5.reference) { this.reference = j5.reference } else { this.reference = null } return this } j0.prototype.readFeatureFromObject = function (j6, j9) { var j5 = null; if (j6.type && j6.type.toLowerCase() === "feature") { j5 = j6 } else { j5 = { type: "Feature", geometry: j6, properties: null, } } j9 = j9 || {}; j9.reference = (j9.reference === undefined ? this.reference : j9.reference); if (j9.isPoints) { j9.onlyGeometry = true } var ka = T(j5.geometry, j9, j5.properties); var j8 = e(jV(j5), j9); if (!ka) { return null } if (j9 && j9.onlyGeometry && !j9.isPoints) { return { geometry: ka, type: j5.geometry["type"], bBox: j8 } } if (ka instanceof Array && !(ka[0] instanceof ct)) { for (var j7 = 0; j7 < ka.length; j7++) { if (j9.isPoints) { ka[j7] = { points: ka[j7], properties: j5.properties, index: j9.__index } } else { ka[j7]["properties"] = j5.properties } } } else { if (j9.isPoints) { ka = { points: ka, properties: j5.properties, index: j9.__index } } else { ka.properties = j5.properties } } return ka }; j0.prototype.readFeaturesFromObject = function (j8, kg, j5) { var kd = j8; var j6 = null; if (kd.type && kd.type.toLowerCase() === "featurecollection") { var ka = j8; j6 = []; var kc = ka.features; var j7 = kg || {}; for (var kb = 0, ke = kc.length; kb < ke; ++kb) { j7.__index = kb; var kf = this.readFeatureFromObject(kc[kb], kg); if (kf instanceof Array) { for (var j9 = 0; j9 < kf.length; j9++) { j5 && j5(kf[j9]); j6.push(kf[j9]) } } else { j5 && j5(kf); j6.push(kf) } } } else { var kf = this.readFeatureFromObject(j8, kg); if (kf instanceof Array) { j6 = []; for (var kb = 0; kb < kf.length; kb++) { j5 && j5(kf[kb]); j6.push(kf[kb]) } } else { j5 && j5(kf); j6 = [kf] } } return j6 }; function T(j5, j7, j6) { if (!j5) { return null } var j8; switch (j5.type) { case fD.POINT: j8 = jX(j5, j7, j6); break; case fD.LINE_STRING: j8 = jT(j5, j7, j6); break; case fD.POLYGON: j8 = jY(j5, j7, j6); break; case fD.MULTI_POINT: j8 = jZ(j5, j7, j6); break; case fD.MULTI_LINE_STRING: j8 = j2(j5, j7, j6); break; case fD.MULTI_POLYGON: j8 = j3(j5, j7, j6); break; default: throw new Error("geojson类型错误: " + j5.type) }return j8 } function jX(j6, j9, j7) { var ka = j6.coordinates; if (j9.reference && j9.reference !== "BD09LL") { ka = gcoord.transform(ka, j9.reference || "WGS84", gcoord.BD09LL) } if (j9 && j9.onlyGeometry) { return new ct(ka[0], ka[1]) } var j8 = j9; if (j9.markerStyle) { j8 = j9.markerStyle; if (j9.markerStyle instanceof Function) { j8 = j9.markerStyle(j7) || {} } } var j5 = new s(new ct(ka[0], ka[1]), j8); return j5 } function j4(j9, j6) { var j8 = []; for (var j5 = 0; j5 < j9.length; j5++) { var j7 = j9[j5]; if (j6.reference && j6.reference !== "BD09LL") { j7 = gcoord.transform(j7, j6.reference || "WGS84", gcoord.BD09LL) } j8.push(new ct(j7[0], j7[1])) } return j8 } function jT(j6, j9, j7) { var ka = j6.coordinates; if (j9 && j9.onlyGeometry) { return j4(ka, j9) } var j8 = j9; if (j9.polylineStyle) { j8 = j9.polylineStyle; if (j9.polylineStyle instanceof Function) { j8 = j9.polylineStyle(j7) || {} } } var j5 = new bk(j4(ka, j9), j8); return j5 } function jY(j5, j9, j7) { var ka = j5.coordinates; if (j9 && j9.onlyGeometry) { return j4(ka[0], j9) } var j8 = j9; if (j9.polygonStyle) { j8 = j9.polygonStyle; if (j9.polygonStyle instanceof Function) { j8 = j9.polygonStyle(j7) || {} } } var j6 = new iq(j4(ka[0], j9), j8); return j6 } function jZ(j7, kd, ka) { var kb = j7.coordinates; var j5 = []; for (var j9 = 0; j9 < kb.length; j9++) { var kc = kb[j9]; if (kd.reference && kd.reference !== "BD09LL") { kc = gcoord.transform(kc, kd.reference || "WGS84", gcoord.BD09LL) } if (kd && kd.onlyGeometry) { j5.push(new ct(kc[0], kc[1])) } else { var j6 = kd; if (kd.markerStyle) { j6 = kd.markerStyle; if (kd.markerStyle instanceof Function) { j6 = kd.markerStyle(ka) || {} } } var j8 = new s(new ct(kc[0], kc[1]), j6); j5.push(j8) } } return j5 } function j2(j6, ka, j8) { var kc = j6.coordinates; var kb = []; for (var j7 = 0; j7 < kc.length; j7++) { if (ka && ka.onlyGeometry) { kb.push(j4(kc[j7], ka)) } else { var j9 = ka; if (ka.polylineStyle) { j9 = ka.polylineStyle; if (ka.polylineStyle instanceof Function) { j9 = ka.polylineStyle(j8) || {} } } var j5 = new bk(j4(kc[j7], ka), j9); kb.push(j5) } } return kb } function j3(j8, kf, kc) { var ke = j8.coordinates; var j5 = []; for (var kb = 0; kb < ke.length; kb++) { var kg = []; for (var j9 = 0, j7 = ke[kb]; j9 < j7.length; j9++) { var ka = j4(j7[j9], kf); if (kf && kf.onlyGeometry) { if (j7.length === 1) { j5.push(ka) } else { kg.push(ka) } } else { if (j7.length === 1) { var j6 = kf; if (kf.polygonStyle) { j6 = kf.polygonStyle; if (kf.polygonStyle instanceof Function) { j6 = kf.polygonStyle(kc) || {} } } var kd = new iq(ka, j6); j5.push(kd) } else { kg.push(ka) } } } if (j7.length !== 1) { if (kf && kf.onlyGeometry) { j5.push(kg) } else { var j6 = kf; if (kf.polygonStyle) { j6 = kf.polygonStyle; if (kf.polygonStyle instanceof Function) { j6 = kf.polygonStyle(kc) || {} } } var kd = new iq(kg, j6); j5.push(kd) } } } return j5 } function jU(j5) { } function e(j9, j6) { var j8 = []; for (var j5 = 0; j5 < j9.length; j5 += 2) { var j7 = [j9[j5], j9[j5 + 1]]; if (j6.reference && j6.reference !== "BD09LL") { j7 = gcoord.transform(j7, j6.reference || "WGS84", gcoord.BD09LL) } j8.push(j7[0]); j8.push(j7[1]) } return j8 } function jV(j5) { var j6 = [Infinity, Infinity, -Infinity, -Infinity]; jW(j5, function (j7) { if (j6[0] > j7[0]) { j6[0] = j7[0] } if (j6[1] > j7[1]) { j6[1] = j7[1] } if (j6[2] < j7[0]) { j6[2] = j7[0] } if (j6[3] < j7[1]) { j6[3] = j7[1] } }); return j6 } function jW(ke, kj) { var ka, j7, j6, kd, j5, kg, ki, kh, j9, kc, j8 = (ke.type && ke.type.toLowerCase() === "featurecollection"), kb = (ke.type && ke.type.toLowerCase() === "feature"), kf = j8 ? ke.features.length : 1; for (ka = 0; ka < kf; ka++) { j9 = (j8 ? ke.features[ka]["geometry"] : (kb ? ke.geometry : ke)); kc = j9.type === "GeometryCollection"; ki = kc ? j9.geometries.length : 1; for (kd = 0; kd < ki; kd++) { kg = kc ? j9.geometries[kd] : j9; kh = kg.coordinates; if (kg.type === "Point") { kj(kh) } else { if (kg.type === "LineString" || kg.type === "MultiPoint") { for (j7 = 0; j7 < kh.length; j7++) { kj(kh[j7]) } } else { if (kg.type === "Polygon" || kg.type === "MultiLineString") { for (j7 = 0; j7 < kh.length; j7++) { for (j6 = 0; j6 < kh[j7].length; j6++) { kj(kh[j7][j6]) } } } else { if (kg.type === "MultiPolygon") { for (j7 = 0; j7 < kh.length; j7++) { for (j6 = 0; j6 < kh[j7].length; j6++) { for (j5 = 0; j5 < kh[j7][j6].length; j5++) { kj(kh[j7][j6][j5]) } } } } else { throw new Error("类型错误") } } } } } } } function i(ke, kj) { var ka, j7, j6, kd, j5, kg, ki, kh, j9, kc, j8 = ke.type === "FeatureCollection", kb = ke.type === "Feature", kf = j8 ? ke.features.length : 1; for (ka = 0; ka < kf; ka++) { j9 = (j8 ? ke.features[ka]["geometry"] : (kb ? ke.geometry : ke)); kc = j9.type === "GeometryCollection"; ki = kc ? j9.geometries.length : 1; for (kd = 0; kd < ki; kd++) { kg = kc ? j9.geometries[kd] : j9; kh = kg.coordinates; if (kg.type === "Point") { kh = kj(kh) } else { if (kg.type === "LineString" || kg.type === "MultiPoint") { for (j7 = 0; j7 < kh.length; j7++) { kh[j7] = kj(kh[j7]) } } else { if (kg.type === "Polygon" || kg.type === "MultiLineString") { for (j7 = 0; j7 < kh.length; j7++) { for (j6 = 0; j6 < kh[j7].length; j6++) { kh[j7][j6] = kj(kh[j7][j6]) } } } else { if (kg.type === "MultiPolygon") { for (j7 = 0; j7 < kh.length; j7++) { for (j6 = 0; j6 < kh[j7].length; j6++) { for (j5 = 0; j5 < kh[j7][j6].length; j5++) { kh[j7][j6][j5] = kj(kh[j7][j6][j5]) } } } } else { throw new Error("类型错误") } } } } } } } function j1(j6) { var j5 = j6.type === "FeatureCollection"; var j7 = j6.type === "Feature"; var j8 = (j5 ? j6.features[0]["geometry"] : (j7 ? j6.geometry : j6)); if (j8.type) { return j8.type } else { throw new Error("类型错误") } } j0.bbox = jV; j0.coordEachReplace = i; j0.getType = j1; return j0 })(); const cT = { point: { symbolPath: { format: "string", defaultValue: "" }, symbolFillColor: { format: "string", defaultValue: "#000" }, symbolFillOpacity: { format: "number", defaultValue: 1 }, symbolScale: { format: "number", defaultValue: 1 }, symbolRotation: { format: "number", defaultValue: 0 }, symbolStrokeColor: { format: "string", defaultValue: "#000" }, symbolStrokeOpacity: { format: "number", defaultValue: 0 }, symbolStrokeWeight: { format: "number", defaultValue: 0 }, icon: { format: "string", defaultValue: "" }, iconSize: { format: "array", defaultValue: [32, 32] }, uid: { format: "string", defaultValue: "custom-vector-0" }, name: { format: "string", defaultValue: "" }, fontSize: { format: "number", defaultValue: 22 }, color: { format: "string", defaultValue: "#0d20c9" }, haloSize: { format: "number", defaultValue: 2 }, strokeColor: { format: "string", defaultValue: "#fff" }, textOnIcon: { format: "string", defaultValue: false }, textOnIconSize: { format: "array", defaultValue: [32, 32] }, textOnIconUrl: { format: "string", defaultValue: "" }, textMargin: { format: "number", defaultValue: 0 }, direction: { format: "number", defaultValue: 0 }, rank: { format: "number", defaultValue: 50000 }, visibility: { format: "boolean", defaultValue: true } }, polyline: { strokeLineJoin: { format: "string", defaultValue: "miter" }, strokeLineCap: { format: "string", defaultValue: "round" }, strokeColor: { format: "string", defaultValue: "#142655" }, strokeWeight: { format: "number", defaultValue: 2 }, strokeOpacity: { format: "number", defaultValue: 1 }, borderColor: { format: "string", defaultValue: "rgba(27, 142, 236, 1)" }, borderWeight: { format: "number", defaultValue: 0 }, strokeTextureUrl: { format: "string", defaultValue: "" }, strokeTextureWidth: { format: "number", defaultValue: 16 }, strokeTextureHeight: { format: "number", defaultValue: 16 }, strokeStyle: { format: "string", defaultValue: "solid" }, dashArray: { format: "object", defaultValue: [8, 4] }, visibility: { format: "boolean", defaultValue: true } }, polygon: { fillColor: { format: "string", defaultValue: "#142655" }, fillOpacity: { format: "number", defaultValue: 1 }, patternMapping: { format: "string", defaultValue: "0, 0, 32, 32" }, patternScale: { format: "number", defaultValue: 1 }, patternOffset: { format: "string", defaultValue: "0, 0" }, strokeWeight: { format: "number", defaultValue: 0 }, strokeLineJoin: { format: "string", defaultValue: "bevel" }, strokeLineCap: { format: "string", defaultValue: "round" }, strokeColor: { format: "string", defaultValue: "#dec41b" }, strokeOpacity: { format: "number", defaultValue: 1 }, strokeStyle: { format: "string", defaultValue: "solid" }, dashArray: { format: "object", defaultValue: [8, 4] }, visibility: { format: "boolean", defaultValue: true } } }; const co = (function (i) { var e = {}; for (var jT in i) { e[jT] = {}; for (var T in i[jT]) { e[jT][T] = i[jT][T].defaultValue } } return e })(cT); const fD = { POINT: "Point", LINE_STRING: "LineString", POLYGON: "Polygon", MULTI_POINT: "MultiPoint", MULTI_LINE_STRING: "MultiLineString", MULTI_POLYGON: "MultiPolygon", CIRCLE: "Circle", }; function fv(e) { return e && typeof ArrayBuffer !== "undefined" && (e instanceof ArrayBuffer || (e.constructor && e.constructor.name === "ArrayBuffer")) } function f6(e) { if (self) { if (self.ImageBitmap && e instanceof self.ImageBitmap) { return true } } else { if (window && window.ImageBitmap) { if (e instanceof window.ImageBitmap) { return true } } } return false } const iM = {}; function aF(i, jT, T) { var e = T || {}; Object.defineProperty(i, "_classRegistryKey", { value: jT, writeable: false }); iM[jT] = { _class: i, escape: e.escape || [] } } aF(Object, "Object"); aF(ct, "Point"); function ja(jY, jW) { if (jY === null || jY === undefined || typeof jY === "boolean" || typeof jY === "number" || typeof jY === "string" || jY instanceof Boolean || jY instanceof Number || jY instanceof String || jY instanceof Date || jY instanceof RegExp) { return jY } if (fv(jY)) { if (jW) { jW.push(jY) } return jY } if (f6(jY)) { if (jW) { var j1 = jW.filter(function (i) { if (i === jY) { return true } else { return false } }); !j1 && jW.push(jY) } return jY } if (ArrayBuffer.isView(jY)) { const jX = jY; if (jW) { jW.push(jX.buffer) } return jX } if (jY instanceof ImageData) { if (jW) { var j1 = jW.filter(function (i) { if (i === jY.data.buffer) { return true } else { return false } }); !j1 && jW.push(jY.data.buffer) } return jY } if (Array.isArray(jY)) { const T = []; for (var jT = 0; jT < jY.length; jT++) { var j2 = jY[jT]; T.push(ja(j2, jW)) } return T } if (typeof jY === "object") { const jU = jY.constructor; const e = jU._classRegistryKey; if (!e) { throw new Error("不能被序列化") } const jV = jU.serialize ? jU.serialize(jY, jW) : {}; if (!jU.serialize) { for (var j0 in jY) { if (!jY.hasOwnProperty(j0)) { continue } if (iM[e]["escape"].indexOf(j0) >= 0) { continue } const jZ = jY[j0]; jV[j0] = ja(jZ, jW) } if (jY instanceof Error) { jV.message = jY.message } } if (e !== "Object") { jV["_$name"] = e } return jV } else { if (jY instanceof Function) { return null } } throw new Error("不能被序列化") } function hU(jV) { if (jV === null || jV === undefined || typeof jV === "boolean" || typeof jV === "number" || typeof jV === "string" || jV instanceof Boolean || jV instanceof Number || jV instanceof String || jV instanceof Date || jV instanceof RegExp || fv(jV) || f6(jV) || ArrayBuffer.isView(jV) || jV instanceof ImageData) { return jV } if (Array.isArray(jV)) { var e = jV["_$name"]; if (e) { var jT = iM[e]["_class"]; if (!jT) { throw new Error("不能被反序列化") } if (jT.deserialize) { return jT.deserialize(jV) } } const jU = []; for (var T = 0; T < jV.length; T++) { var jY = jV[T]; jU.push(hU(jY)) } return jU } if (typeof jV === "object") { var e = jV["_$name"] || "Object"; var jT = iM[e]["_class"]; if (!jT) { throw new Error("不能被反序列化") } if (jT.deserialize) { return jT.deserialize(jV) } const j0 = Object.create(jT.prototype); const jZ = Object.keys(jV); for (var T = 0; T < jZ.length; T++) { const jX = jZ[T]; if (jX === "_$name") { continue } const jW = jV[jX]; j0[jX] = hU(jW) } return j0 } throw new Error("不能被反序列化") } function k(jX, jV, jW) { if (!jX.length) { return jW(null, []) } var jU = jX.length; const jT = new Array(jX.length); var e = null; for (var T = 0; T < jX.length; T++) { jV(jX[T], function (jY, i) { if (jY) { e = jY } jT[T] = i; if (--jU === 0) { jW(e, jT) } }, T) } } function fU(jY, jV, jX) { if (!jY.length) { return jX(null, []) } var jU = jY.length; const jT = new Array(jY.length); var e = null; var T = 0; function jW() { jV(jY[T], function (jZ, i) { if (jZ) { e = jZ } jT[T] = i; if (--jU === 0) { jX(e, jT) } else { T++; jW() } }, T) } jW() } var jm = (function () { var i = true; var jU = 256; var e = true; var jW = jw("ditu", "normalTraffic"); var jT = jW.udt; var jX = "//its.map.baidu.com/traffic/"; var jV = [[2, "79,210,125,1", 3, 2, 0, [], 0, 0], [2, "79,210,125,1", 3, 2, 0, [], 0, 0], [2, "79,210,125,1", 4, 2, 0, [], 0, 0], [2, "79,210,125,1", 5, 2, 0, [], 0, 0], [2, "79,210,125,1", 6, 2, 0, [], 0, 0], [2, "255,208,69,1", 3, 2, 0, [], 0, 0], [2, "255,208,69,1", 3, 2, 0, [], 0, 0], [2, "255,208,69,1", 4, 2, 0, [], 0, 0], [2, "255,208,69,1", 5, 2, 0, [], 0, 0], [2, "255,208,69,1", 6, 2, 0, [], 0, 0], [2, "232,14,14,1", 3, 2, 0, [], 0, 0], [2, "232,14,14,1", 3, 2, 0, [], 0, 0], [2, "232,14,14,1", 4, 2, 0, [], 0, 0], [2, "232,14,14,1", 5, 2, 0, [], 0, 0], [2, "232,14,14,1", 6, 2, 0, [], 0, 0], [2, "181,0,0,1", 3, 2, 0, [], 0, 0], [2, "181,0,0,1", 3, 2, 0, [], 0, 0], [2, "181,0,0,1", 4, 2, 0, [], 0, 0], [2, "181,0,0,1", 5, 2, 0, [], 0, 0], [2, "181,0,0,1", 6, 2, 0, [], 0, 0], [2, "255,255,255,1", 4, 0, 0, [], 0, 0], [2, "255,255,255,1", 5.5, 0, 0, [], 0, 0], [2, "255,255,255,1", 7, 0, 0, [], 0, 0], [2, "255,255,255,1", 8.5, 0, 0, [], 0, 0], [2, "255,255,255,1", 10, 0, 0, [], 0, 0]]; var T = new hg({ transparentPng: true, dataType: 2, cacheSize: 256, clipTile: true, isFlat: true }); T.zIndex = 2; T.getTilesUrl = function (j0, j1) { if (!j0 || j1 < 7) { return null } var jZ = j0.x; var j2 = j0.y; var jY = jX + "TrafficTileService?level=" + j1 + "&x=" + jZ + "&y=" + j2 + "&time=" + (+new Date()); if (this.map.getRenderType() === "webgl") { jY = jX + "?qt=vtraffic&z=" + j1 + "&x=" + jZ + "&y=" + j2 + "&udt=" + jT } return jY }; T.setColors = function (jY) { for (var j1 = 0; j1 < jV.length; j1++) { var j0 = Math.floor(j1 / 5); var jZ = jY[j0]; if (jZ) { if (Object.prototype.toString.call(jZ) === "[object String]") { jZ = hm.parseCSSColor(jZ) } jV[j1][1] = [jZ[0], jZ[1], jZ[2], jZ[3] / 255].join(",") } } }; T.setEdge = function (jY) { e = !!jY }; T.processData = function (j1) { var j5 = j1.content; var j3 = 10; if (typeof j1.precision === "number") { j3 = j1.precision * 10 } var kc = { road: [[], []] }; if (!j5) { return kc } var ka = j5.tf; if (!ka) { return kc } for (var j2 = 0; j2 < ka.length; j2++) { var kb = ka[j2][1]; var j9 = []; var j7 = 0; var j6 = 0; var j8 = jV[ka[j2][3]]; for (var j0 = 0, jY = kb.length; j0 < jY / 2; j0++) { j7 += kb[j0 * 2] / j3; j6 += kb[j0 * 2 + 1] / j3; j9.push(j7, 256 - j6) } var jZ = j8[1].split(","); jZ[3] = jZ[3] * 255; var j4 = j8[2] / 2; if (e) { kc.road[0].push([j9, 1, 2, [255, 255, 255, 255], j4 + 2]) } kc.road[1].push([j9, 1, 2, jZ, j4]) } return kc }; return T })(); function iZ() { } iZ.prototype = jm; function dO(e) { er.call(this); e = e || {}; this._opts = {}; this._opts.districts = e.name || ""; this._opts.kind = e.kind || 0; this._config = {}; this._config.strokeColor = e.strokeColor || "#00f"; this._config.strokeOpacity = typeof e.strokeOpacity === "number" ? e.strokeOpacity : 1; b7(this._config.strokeOpacity, 0, 1); this._config.fillColor = e.fillColor || "#ff0"; this._config.fillOpacity = typeof e.fillOpacity === "number" ? e.fillOpacity : 0.6; b7(this._config.fillOpacity, 0, 1); this._config.strokeWeight = e.strokeWeight || 1; this._config.viewport = e.viewport || false; this.disOverlays = []; this.eventAndCallback = {}; var i = this; gO.load("layer", function () { i._asyncSearch() }) } dO.inherits(c1, "DistrictLayer"); eN.extend(dO.prototype, { initialize: function (e) { this._map = e; this.addDistrict() }, removeDistrict: function (i, e) { this._map = i; this.deleteDistrict(e) }, toString: function () { return "DistrictLayer" } }); function aM(e, i) { i = i || {}; this.layerName = e || "unknown"; this.reference = i.reference; this.level = i.level || -99; this.visible = (i.visible === undefined ? true : !!i.visible); this.minZoom = i.minZoom || 3; this.maxZoom = i.maxZoom || 21; this.markerStyle = i.markerStyle || {}; this.polylineStyle = i.polylineStyle || {}; this.polygonStyle = i.polygonStyle || {}; this.overlayData = []; this._onMap = false; this.clickDistrict = 5; this.setData(i.dataSource) } aM.inherits(eN.BaseClass, "GeoJSONLayer"); aM.prototype.init = function (jW) { if (this.map) { return } this.map = jW; var jU = this; this._onZoomEvent = function () { if (jU.map.getZoom() >= jU.minZoom && jU.map.getZoom() <= jU.maxZoom) { if (!jU._onMap) { jU.addDataToMap(); jU._onMap = true } } else { if (jU._onMap) { jU.removeDataFromMap(); jU._onMap = false } } }; this.map.on("zoomend", this._onZoomEvent); var jU = this; var e = false; var jT = { x: 0, y: 0 }; this._layerMouseEvent = function (jZ) { if (!jU.map || !jU._listeners || !jU.visible || !jU._onMap) { return } if (!jU._listeners.onmousemove || Object.keys(jU._listeners.onmousemove).length === 0) { return } var jY = jU.pickOverlays(jZ); var i; if (jY && jY.length > 0) { i = new fy("onmousemove"); i.features = jY; jU.map.platform.style.cursor = jU.map.config.overlayMoveCursor; e = true } else { if (!e || !jU._listeners.onmouseout || Object.keys(jU._listeners.onmouseout).length === 0) { return } jU.map.platform.style.cursor = jU.map.config.defaultCursor; i = new fy("onmouseout"); i.features = null; e = false } if (i) { i.point = jZ.point; i.pixel = jZ.pixel; i.latLng = jZ.latlng; jU.dispatchEvent(i) } }; this._layerClickEvent = function (j0) { if (!jU.map || !jU._listeners || !jU.visible) { return } if ((!jU._listeners.onclick && !jU._listeners.dblclick) || (Object.keys(jU._listeners.onclick).length === 0 && Object.keys(jU._listeners.dblclick).length === 0)) { return } var jY = { x: j0.clientX, y: j0.clientY }; if (Math.abs(jY.x - jT.x) > jU.clickDistrict || Math.abs(jY.y - jT.y) > jU.clickDistrict) { return } var jZ = jU.pickOverlays(j0); var i = new fy(j0.type); i.point = j0.point; i.pixel = j0.pixel; i.latLng = j0.latlng; i.features = jZ; jU.dispatchEvent(i) }; this._layerMouseDownEvent = function (i) { jT = { x: i.clientX, y: i.clientY } }; jW.addEventListener("onmousemove", this._layerMouseEvent); jW.addEventListener("onmouseout", this._layerMouseEvent); jW.addEventListener("onmousedown", this._layerMouseDownEvent); var jV = ["onclick"]; for (var T = 0; T < jV.length; T++) { var jX = jV[T]; jW.addEventListener(jX, this._layerClickEvent) } this._onZoomEvent() }; aM.prototype.remove = function () { if (this.map) { this.removeDataFromMap(); this.map.removeEventListener("onmousemove", this._layerMouseEvent); this.map.removeEventListener("onmouseout", this._layerMouseEvent); this.map.removeEventListener("onclick", this._layerClickEvent); this.map.removeEventListener("onmousedown", this._layerMouseDownEvent); this.map.removeEventListener("onzoomend", this._onZoomEvent) } this.map = null }; aM.prototype.destroy = function () { if (this.map) { this.clearData(); this.map.removeEventListener("onmousemove", this._layerMouseEvent); this.map.removeEventListener("onmouseout", this._layerMouseEvent); this.map.removeEventListener("onclick", this._layerClickEvent); this.map.removeEventListener("onmousedown", this._layerMouseDownEvent); this.map.removeEventListener("onzoomend", this._onZoomEvent) } this.map = null }; aM.prototype.setData = function (e) { if (!this.gParse) { this.gParse = new gk({ reference: this.reference }) } if (!e) { return } if (this.dataSource && this.overlayData.length > 0) { this.clearData() } this.dataSource = e; this.overlayData = this.gParse.readFeaturesFromObject(e, { markerStyle: this.markerStyle, polylineStyle: this.polylineStyle, polygonStyle: this.polygonStyle }, this._register.bind(this)) }; aM.prototype._register = function (e) { e.layerName = this.layerName; e.setZIndex(this.level) }; aM.prototype.resetStyle = function () { for (var e = 0; e < this.overlayData.length; e++) { if (this.overlayData[e] instanceof s) { var i = this.markerStyle; if (this.markerStyle instanceof Function) { i = this.markerStyle(this.overlayData[e].properties) || {} } } if (this.overlayData[e] instanceof bk) { var i = this.polylineStyle; if (this.polylineStyle instanceof Function) { i = this.polylineStyle(this.overlayData[e].properties) || {} } } if (this.overlayData[e] instanceof iq) { var i = this.polygonStyle; if (this.polygonStyle instanceof Function) { i = this.polygonStyle(this.overlayData[e].properties) || {} } } if (i) { this.overlayData[e].setOptions(i) } } }; aM.prototype.getData = function () { return this.overlayData }; aM.prototype.addOverlay = function (e) { var jW = e; if (!(e instanceof Array)) { jW = [e] } for (var jT = 0; jT < jW.length; jT++) { var T = jW[jT]; if (T.__proto__ instanceof aQ) { this._register(T); this.overlayData.push(T); this.map.addOverlay(T) } else { var jV = this.gParse.readFeaturesFromObject(T, { markerStyle: this.markerStyle, polylineStyle: this.polylineStyle, polygonStyle: this.polygonStyle }, this._register.bind(this)); for (var jU = 0; jU < jV.length; jU++) { this.overlayData.push(jV[jU]); this.map.addOverlay(jV[jU]) } } } }; aM.prototype.removeOverlay = function (jT) { var jU = jT; if (!(jT instanceof Array)) { jU = [jT] } for (var T = 0; T < jU.length; T++) { var i = jU[T]; var e = this.findItemIndex(i); if (e >= 0) { this.overlayData.splice(e, 1); this.map.removeOverlay(i) } } }; aM.prototype.findItemIndex = function (T) { var i = -1; for (var e = 0; e < this.overlayData.length; e++) { if (this.overlayData[e].hashCode === T.hashCode) { i = e; break } } return i }; aM.prototype.addDataToMap = function () { if (this.visible && this.map && this.map.getZoom() >= this.minZoom && this.map.getZoom() <= this.maxZoom) { for (var e = 0; e < this.overlayData.length; e++) { this.map.addOverlay(this.overlayData[e]) } } }; aM.prototype.removeDataFromMap = function () { if (this.map && this.overlayData.length > 0) { for (var e = 0; e < this.overlayData.length; e++) { this.map.removeOverlay(this.overlayData[e]) } } }; aM.prototype.clearData = function () { this.dataSource = null; if (this.map && this.overlayData.length > 0) { this.removeDataFromMap() } this.overlayData = [] }; aM.prototype.pickOverlays = function (jX) { var jW = []; if (!this.visible || !this._onMap) { return null } for (var jU = 0; jU < this.overlayData.length; jU++) { var jV = this.overlayData[jU]; var jT; if (!jV && !jV.isVisible()) { continue } if (jV.toString() === "Marker") { jT = jV._getInPnBox(jX.pixel); if (jT) { jW.push(jV) } continue } if (jV.toString() !== "Polyline") { jT = jV._getInPnpoly(jX.point) } else { jT = jV._getProximity(jX.point) } var T = jT.dist; if (T >= 0 && T < jV._config.mouseOverTolerance) { jW.push(jV) } } return jW.length > 0 ? jW : null }; aM.prototype.setLevel = function (e) { if (e > -999 && e < 9999) { this.level = e; for (var T = 0; T < this.overlayData.length; T++) { this.overlayData[T].setZIndex(this.level) } if (this.map) { this.map.fire(new BMapGL.Event("onupdate", "line")) } } }; aM.prototype.setClickDistrict = function (e) { this.clickDistrict = e || 5 }; aM.prototype.getLevel = function () { return this.level }; aM.prototype.setVisible = function (i) { var e = !!i; if (this.visible !== e) { this.visible = e; if (e) { this.addDataToMap() } else { this.removeDataFromMap() } } }; aM.prototype.getVisible = function () { return this.visible }; aM.prototype.toString = function () { return "GeoJSONLayer" }; function jG(i) { var i = i || {}; var jV = i.transform || { source: "EPSG3857", target: "BD09MC" }; if (!jV.source) { jV.target = "EPSG3857" } if (!jV.target) { jV.target = "BD09MC" } const jT = i.tileUrlTemplate || ""; const jZ = i.xTemplate || function (j6, j8, j7) { return j6 }; const j3 = i.yTemplate || (i.tms ? function (j6, j8, j7) { return Math.pow(2, j7) - j8 - 1 } : function (j6, j8, j7) { return j8 }); const jX = i.zTemplate || function (j6, j8, j7) { return j7 }; const j2 = i.bTemplate || function (j6, j9, j8) { const j7 = ds.getTileRangeExtent([j8, j6, j9]); return j7.minX + "," + j7.minY + "," + j7.maxX + "," + j7.maxY }; const jU = i.wTemplate || function (j6, j8, j7) { return 512 }; const jY = i.hTemplate || function (j6, j8, j7) { return 512 }; var j4 = i.extent || []; const jW = i.extentCRSIsWGS84 || false; var T = i.minZoom || 0; var j0 = i.maxZoom || 23; var j1 = i.spanLevel || 0; var j5 = new hg({ transform: jV, png8: i.png8 || false, transparentPng: true, dataType: i.dataType || 1, spanLevel: j1, tileTypeName: "xyz", cacheSize: 256, customLayer: true, clipTile: false, boundary: i.boundary || false, useThumbData: i.useThumbData || false }); (j4.length === 4) && jW && (j4 = ds.fromEPSG4326(j4)); j5.getTilesUrl = function (j7, kd, kb) { if (!j7 || kd < 0 || kd < (T + j1) || kd > (j0 + j1)) { j5.tileCache.clear(); return null } if (jV.source !== "BD09MC") { j7.x = ds.getTilesLoop(kd, j7.x) } if (j4.length === 4) { var kc = ds.getTileRangeExtent([kd, j7.x, j7.y]); var ka = e([kc.minX, kc.minY, kc.maxX, kc.maxY]); if (!ka) { return null } } var j8 = ""; if (jT) { j8 = jT; var j9 = /[^\{}]*\{(.*)\}[^\}]*/; j8.match(j9); var j6 = []; if (RegExp.$1) { j6 = RegExp.$1.split(",") } j8 = j8.replace(/\{(.*)\}/, j6[(j7.x + j7.y) % j6.length]); j8 = j8.replace(/\[x\]/gi, jZ(j7.x, j7.y, kd)); j8 = j8.replace(/\[y\]/gi, j3(j7.x, j7.y, kd)); j8 = j8.replace(/\[z\]/gi, jX(j7.x, j7.y, kd)); j8 = j8.replace(/\[b\]/gi, j2(j7.x, j7.y, kd)); j8 = j8.replace(/\[w\]/gi, jU(j7.x, j7.y, kd)); j8 = j8.replace(/\[h\]/gi, jY(j7.x, j7.y, kd)) } else { return null } return j8 }; function e(j6) { if (j4 && j4 instanceof Array && j4.length === 4) { if ((j4[0] <= j6[2] && j4[1] <= j6[3]) && (j4[2] >= j6[0] && j4[3] >= j6[1])) { return true } else { return false } } return true } return j5 } function dj(i) { this.src = cX(); this.tileMaskUvCache = new ay(64, { clearCallback: function (jV) { } }); var jU = 6; if (i.pixelMap) { this.opacity = typeof i.pixelMap.opacity === "number" ? i.pixelMap.opacity : 1; b7(this.opacity, 0, 1); if (this.opacity < 1) { i.useThumbData = false } var jT = i.pixelMap || {}; this.colors = jT.colors || ["#F9F871", "#FFC75F", "#FF9671", "#FF6F91", "#D65DB1", "#845EC2"]; this.positions = jT.positions || [0, 0.2, 0.4, 0.6, 0.8, 1]; this.domain = jT.domain || [0, 255]; this.clamp = jT.clamp || this.domain; this.noData = (jT.noData !== undefined) ? jT.noData : -99999; this.fomularC = jT.fomularC || "float generateValue(vec4 pixel){return pixel.r * 255.;}"; this.fomularJS = jT.fomularJS || function (jV) { return jV.r }; this.maskPng = jT.maskPng || null; if (this.maskPng) { this.loadMaskPng(this.maskPng) } this.maskData = jT.maskData || -1; this.maskCoord = jT.maskCoord || null; this.fHashcode = o({ str: this.fomularC }); var e = this.canPixelMap(); if (e) { this.isPixelMap = true; this.setPixelMap() } jU = i.pixelMap.cacheSize || jU } var T = new jG(i); T.ontology = this; this.layer = T; this.cacheSize = jU; this.tileCache = new ay(this.cacheSize, { clearCallback: function (jV) { } }); this.tileImageDataCache = new ay(this.cacheSize, { clearCallback: function (jV) { } }) } dj.inherits(eN.BaseClass, "PixelLayer"); eN.extend(dj.prototype, { canPixelMap: function () { if (this.colors && this.positions) { return true } return false }, setPixelMap: function () { if (!this.isPixelMap || !this.canPixelMap()) { return } var i = this.colors; var e = this.positions; this.pHashcode = o({ colors: i, positions: e }); this.pixelColorMap = hm.generateColorRamp(i, e) }, setDomain: function (e) { if (e instanceof Array && e.length === 2) { this.domain = e; this.doOnceDraw() } }, setClamp: function (e) { if (e instanceof Array && e.length === 2) { this.clamp = e; this.doOnceDraw() } }, setNoData: function (e) { this.noData = e; this.doOnceDraw() }, setPositions: function (e) { this.positions = e; this.setPixelMap(); this.doOnceDraw() }, setColors: function (e) { this.colors = e; this.setPixelMap(); this.doOnceDraw() }, setFomular: function (e, i) { if (e && i) { this.fomularJS = e; this.fomularC = i; this.fHashcode = o({ str: this.fomularC }); this.doOnceDraw() } }, setOpacity: function (e) { this.opacity = e; this.doOnceDraw() }, setIsPixelMap: function (e) { this.isPixelMap = e; this.doOnceDraw() }, setMaskPng: function (e) { this.maskPng = e; this.loadMaskPng(this.maskPng); this.doOnceDraw() }, setMaskData: function (e) { this.maskData = e; this.doOnceDraw() }, setMaskCoord: function (e) { this.maskCoord = e || null; this.calMaskBox(); this.doOnceDraw() }, setZIndex: function (e) { if (this.layer && parseInt(e) > 0) { this.layer.setZIndex(e) } }, getZIndex: function () { if (this.layer) { return this.layer.zIndex } }, setUpLevel: function () { if (this.layer) { var e = this.layer._getAdjoinZIndex("up"); if (this.layer.zIndex !== e) { this.layer.setZIndex(e) } } }, setDownLevel: function () { if (this.layer) { var e = this.layer._getAdjoinZIndex("down"); if (this.layer.zIndex !== e) { this.layer.setZIndex(e) } } }, setZIndexTop: function () { if (this.layer) { this.layer.setZIndexTop() } }, doOnceDraw: function () { if (this.layer.map) { var e = new fy("onupdate"); this.layer.map.dispatchEvent(e) } }, _getInLayer: function (j1) { if (!this.map) { return null } var j0 = Math.floor(this.map.getZoom()); var jT = ds.transformBDmcPoint(j1, this.layer.transform); var jX = ds.getTileCoordForXYAndZ_(jT[0], jT[1], j0, false); var T = jX.join("-"); var e = this.tileCache.getData(T); if (e) { return e } var jU = this.layer.zIndex; var jW = this.map._featureMgr.result.bkData; var jY = jW[jU][2]; var j2 = null; for (var jV = 0; jV < jY.length; jV++) { var jX = jY[jV]; var jZ = jX.tileInfo.zoom + "-" + jX.tileInfo.col + "-" + jX.tileInfo.row; if (T === jZ) { j2 = jX; break } } this.tileCache.setData(T, j2); return j2 }, _initEvent: function (jU) { this.map = jU; var T = this; this._layerMouseEvent = function (jY) { if (!T.map) { return } var jW; var i = jY.point; var jX = T._getInLayer(i); if (jX) { T.prox = jX; jW = new fy("onmousemove"); T.map.platform.style.cursor = T.map.config.overlayMoveCursor } else { T.map.platform.style.cursor = T.map.config.defaultCursor; T.prox = null } if (jW) { jW.point = jY.point; jW.pixel = jY.pixel; jW.latLng = jY.latlng; T.dispatchEvent(jW) } }; this._layerClickEvent = function (jY) { if (!T.map) { return } var jW; var i = jY.point; var jX = T.getImagePixel(i); if (jX) { jW = new fy(jY.type); jW.point = i; jW.pixel = jY.pixel; jW.latLng = jY.latlng; jW.color = jX; jW.value = T.getValue(jW.color); T.dispatchEvent(jW) } }; jU.addEventListener("onmousemove", this._layerMouseEvent); var jT = ["onclick", "dblclick"]; for (var e = 0; e < jT.length; e++) { var jV = jT[e]; jU.addEventListener(jV, this._layerClickEvent) } jU.addEventListener("removetilelayer", function (i) { if (i.target && i.target.ontology) { if (i.target.ontology.src === T.src) { jU.removeEventListener("onmousemove", T._layerMouseEvent); jU.removeEventListener("onclick", T._layerClickEvent); jU.removeEventListener("ondblclick", T._layerClickEvent); T._clearCache() } } }); jU.on("destroy", function () { T._clearCache() }) }, _clearCache: function () { var e = this; e.prox = null; e.tileCache.clear(); e.tileImageDataCache.clear(); e.tileMaskUvCache.clear(); e._layerMouseEvent = null; e._layerClickEvent = null; e.imageMaskObject = null; e.pHashcode = null; e.pixelColorMap = null; e.layer.ontology = null; e.layer = null }, getImagePixel: function (jY) { if (!this.map) { return null } var jT = ds.transformBDmcPoint(jY, this.layer.transform); var jX = this._getInLayer(jY); if (!jX) { return null } if (!this.getImageMaskPixel(jT)) { return null } var jV = [jX.tileInfo.zoom, jX.tileInfo.col, jX.tileInfo.row]; var jW = ds.getTileRangeExtent(jV); var e = this.getImageObject(jX.textureSource, jV.join("-")); var T = Math.floor((jT[0] - jW.minX) / (jW.maxX - jW.minX) * e.width); var i = Math.floor((-jT[1] + jW.maxY) / (jW.maxY - jW.minY) * e.height); var jU = Math.floor((i * e.width + T) * 4); return [e.data.data[jU], e.data.data[jU + 1], e.data.data[jU + 2], e.data.data[jU + 3],] }, getImageObject: function (jU, jT) { var jV = this.tileImageDataCache.getData(jT); if (jV) { return jV } var i = document.createElement("canvas"); i.width = jU.width; i.height = jU.height; var T = i.getContext("2d"); T.drawImage(jU, 0, 0, jU.width, jU.height); var e = { width: jU.width, height: jU.height, data: T.getImageData(0, 0, jU.width, jU.height) }; this.tileImageDataCache.setData(jT, e); T = null; i = null; return e }, getValue: function (i) { if (this.isPixelMap && i && this.fomularJS) { if (!(i instanceof Array)) { i = this.getImagePixel(i.point) } var e = this.fomularJS({ r: i[0], g: i[1], b: i[2], a: i[3] }); if (e >= this.clamp[0] && e <= this.clamp[1]) { return e } } return null }, setMaskImageObject: function (T) { var e = document.createElement("canvas"); e.width = T.width; e.height = T.height; var i = e.getContext("2d"); i.drawImage(T, 0, 0, T.width, T.height); this.imageMaskObject = { width: T.width, height: T.height, data: i.getImageData(0, 0, T.width, T.height) }; i = null; e = null }, getImageMaskPixel: function (e) { if (!this.imageMaskObject || !this.maskBox) { return true } var jT = [e]; var jY = this.maskBox || []; var jV = jY[1][0] - jY[0][0]; var jU = jY[1][1] - jY[0][1]; var T = Math.floor((jT[0][0] - jY[0][0]) / jV * this.imageMaskObject.width); var i = Math.floor((-jT[0][1] + jY[1][1]) / jU * this.imageMaskObject.height); var jX = Math.floor((i * this.imageMaskObject.width + T) * 4); if (T > this.imageMaskObject.width || T < 0) { return null } if (i > this.imageMaskObject.height || i < 0) { return null } var jW = this.imageMaskObject.data.data; if (jX + 3 > jW.length) { return false } if (jW[jX + 3] > 0) { if (this.maskData > -1 && this.maskData !== jW[jX]) { return false } return true } return false }, calMaskBox: function () { var T = this.maskCoord || []; if (this.hasMaskPng && T && T.length === 2) { var e = []; for (var jT = 0; jT < T.length; jT++) { e[jT] = ds.transformBDmcPoint(iS.convertLL2MC(T[jT]), this.layer.transform) } this.maskBox = e; this.tileMaskUvCache.clear() } else { this.maskBox = null } }, buildFillMaskVertex: function (jZ, jX, jW) { var jY = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]; if (!this.maskBox) { return jY } var j1 = [jZ, jX, jW].join("-"); var e = this.tileMaskUvCache.getData(j1); if (e) { return e } if (this.hasMaskPng) { var j4 = this.maskBox || []; var jV = [jW, jZ, jX]; var j0 = ds.getTileRangeExtent(jV); var jU = j4[1][0] - j4[0][0]; var T = j4[1][1] - j4[0][1]; var j3 = (j0.minX - j4[0][0]) / jU; var j2 = (j0.minY - j4[0][1]) / T; var jT = (j0.maxX - j4[0][0]) / jU; var i = (j0.maxY - j4[0][1]) / T; jY = [j3, j2, jT, j2, jT, i, j3, j2, jT, i, j3, i] } this.tileMaskUvCache.setData(j1, jY); return jY }, loadMaskPng: function (T) { var e = this; function i(jU, jT) { if (jT) { e.hasMaskPng = true; e.setMaskImageObject(jU); e.calMaskBox(); e.doOnceDraw() } else { e.hasMaskPng = false } e.maskTextureSource = jT ? jU : null } this.imageLoad(T, i) }, imageLoad: function (i, jU) { if (!i) { jU && jU(null, false) } var e = new Image(); e.crossOrigin = "anonymous"; e.onload = function jT() { jU && jU(this, true) }; e.onerror = function T() { jU && jU(null, false) }; e.src = i }, toString: function () { return "PixelLayer" } }); function iT(i, e) { this.id = i; this.layerName = e; this.properties = null } function dY(e) { this._opt = e || {}; this._layerId = cX(); this._opt.defaultOrder = (this._opt.defaultOrder === undefined) ? true : this._opt.defaultOrder; this.minZoom = this._opt.minZoom || 3; this.maxZoom = this._opt.maxZoom || 23; this.useThumb = (this._opt.useThumb === undefined) ? true : this._opt.useThumb; this.gridModel = this._opt.gridModel || dY.GridModel.BAIDUWEB; this.noCollision = (this._opt.noCollision === undefined) ? true : this._opt.noCollision; if (this.gridModel === dY.GridModel.BAIDUWEB) { this._opt.reference = "BD09MC" } else { if (!this._opt.transform) { this._opt.transform = { source: "BD09MC", target: "BD09MC" }; this._opt.reference = "BD09MC" } else { this._opt.reference = this._opt.transform.source || "GCJ02"; if (this._opt.reference === "EPSG3857") { this._opt.reference = "WGS84" } } } this.loadModule = false; if (this._opt.useWorker === undefined) { this._opt.useWorker = true } this.upStyle = this._opt.useWorker ? false : "useMain"; this._stateCube = {}; var i = this; gO.load("mvtParse", function () { i._async() }, true); i.init(e) } dY.GridModel = { BAIDUWEB: 0, GOOGLEWEB: 1 }; dY.LayerTypes = { POINT: "point", LINE: "line", FILL: "fill" }; dY.inherits(eN.BaseClass, "MVTLayer"); eN.extend(dY.prototype, { _async: function () { this.loadModule = true; this.mvt = new dY.MVTParse(this._opt); this.resolveStyle(this._opt); if (this.upStyle) { this.doOnceDraw() } }, init: function (i) { i.dataType = 2; i.cacheSize = 256; if (i.spanLevel === undefined || typeof i.spanLevel !== "number") { i.spanLevel = 0 } if (this.gridModel === dY.GridModel.BAIDUWEB) { var e = this.createTileLayer(i); i.spanLevel = 0; this.spanLevel = 0 } else { if (this.gridModel === dY.GridModel.GOOGLEWEB) { var e = new jG(i); this.spanLevel = i.spanLevel } } var T = { type: "vector", layerId: this._layerId, g: this.gridModel, mc: this._opt.reference === "BD09MC" ? true : false, }; this.layerOption = Object.assign(T, this._opt); if (i.index && i.index > 0) { e.zIndex = i.index } e.loadTileData = this._loadTile.bind(this); e.ontology = this; this.layer = e }, createTileLayer: function (i) { const jT = i.tileUrlTemplate || ""; const jY = i.xTemplate || function (j5, j7, j6) { return j5 }; const j2 = i.yTemplate || function (j5, j7, j6) { return j7 }; const jW = i.zTemplate || function (j5, j7, j6) { return j6 }; const j1 = i.bTemplate || function (j5, j8, j7) { const j6 = iS.tileToBoundRange({ col: j5, row: j8, zoom: j7, baseTileSize: 256 }); return j6.MC.sw.lng + "," + j6.MC.sw.lat + "," + j6.MC.ne.lng + "," + j6.MC.ne.lat }; var j3 = i.extent || []; const jX = i.extentCRSIsWGS84 || false; var T = i.minZoom || 0; var jZ = i.maxZoom || 23; var j0 = i.spanLevel || 0; var j4 = new hg({ transparentPng: true, dataType: 2, spanLevel: j0, tileTypeName: "web", cacheSize: 256, customLayer: true, clipTile: false, boundary: false, useThumbData: i.useThumbData || false }); if (j3.length === 4) { if (jX) { j3 = ds.fromEPSG4326(j3) } var jU = ds.transformPointArr([j3[0], j3[1]], "EPSG3857", "BD09MC"); var jV = ds.transformPointArr([j3[2], j3[3]], "EPSG3857", "BD09MC"); j3 = [jU[0], jU[1], jV[0], jV[1]] } j4.getTilesUrl = function (j6, kc, kb) { if (!j6 || kc < 0 || kc < (T + j0) || kc > (jZ + j0)) { j4.tileCache.clear(); return null } if (j3.length === 4) { const j9 = iS.tileToBoundRange({ col: x, row: y, zoom: z, baseTileSize: 256 }); var ka = e([j9.MC.getMin().lng, j9.MC.getMin().lat, j9.MC.getMax().lng, j9.MC.getMax().lat]); if (!ka) { return null } } var j7 = ""; if (jT) { j7 = jT; var j8 = /[^\{}]*\{(.*)\}[^\}]*/; j7.match(j8); var j5 = []; if (RegExp.$1) { j5 = RegExp.$1.split(",") } j7 = j7.replace(/\{(.*)\}/, j5[(j6.x + j6.y) % j5.length]); j7 = j7.replace(/\[x\]/gi, jY(j6.x, j6.y, kc)); j7 = j7.replace(/\[y\]/gi, j2(j6.x, j6.y, kc)); j7 = j7.replace(/\[z\]/gi, jW(j6.x, j6.y, kc)); j7 = j7.replace(/\[b\]/gi, j1(j6.x, j6.y, kc)) } else { return null } return j7 }; function e(j5) { if (j3 && j3 instanceof Array && j3.length === 4) { if ((j3[0] <= j5[2] && j3[1] <= j5[3]) && (j3[2] >= j5[0] && j3[3] >= j5[1])) { return true } else { return false } } return true } return j4 }, compileExpress: function (i, e) { var i = dY.ExpressParse.normalizePropertyExpression(i, e); return i }, resolveStyle: function (jV) { var jT = jV || {}; if (jT.style) { var jU = {}; if (!jT.layers || jT.layers.length === 0) { var jX = dY.LayerTypes.POINT; var i = dY.LayerTypes.LINE; var jW = dY.LayerTypes.FILL; if (jT.style[jX]) { jT.style[jX].type = "point" } if (jT.style[i]) { jT.style[i].type = "polyline" } if (jT.style[jW]) { jT.style[jW].type = "polygon" } } for (var T in jT.style) { if (jT.style.hasOwnProperty(T)) { var e = jT.style[T]; this._styleFormat(e.type, e.painter, T, jU) } } this.styleExpress = jU } }, _styleFormat: function (jU, e, i, jT) { var jW = {}; var jX = cT[jU]; if (!jX) { return } for (var T in e) { if (e.hasOwnProperty(T)) { var jV = this.compileExpress(e[T], jX[T]); jW[T] = jV } } jT[i] = { type: jU, painter: jW } }, evaluateContext: function (e, T, jT) { var i = e + "_" + T.getId(); var jU = this._stateCube[i]; if (jU) { T.setState(jU) } else { T._state = {} } return { properties: function () { return T && T.getProperties() }, featureState: jT === true ? {} : (T && T.getState()) } }, evaluates: function (i, jT, jU) { if (!this.styleExpress || !this.styleExpress.hasOwnProperty(i)) { return null } var jW = this.styleExpress[i].painter; var e = {}; for (var T in jW) { if (jW.hasOwnProperty(T)) { var jV = jW[T].evaluate(this.evaluateContext(i, jT, jU)); e[T] = jV } } return e }, _updateState: function (T, jT, e) { if (T instanceof iT && T.layerName && T.id) { var i = T.layerName + "_" + T.id; if (e) { this._set(jT, this._stateCube, i) } else { this._stateCube[i] = jT } this._stateCube[i].rank = (this._stateCube[i].rank || 0) + 1 } else { if (typeof T === "string") { if (e) { this._set(jT, this._stateCube, T) } else { this._stateCube[T] = jT } this._stateCube[T].rank = (this._stateCube[T].rank || 0) + 1 } } }, updateState: function (jU, jV, e) { var T = JSON.stringify(this._stateCube); if (!(jV && typeof jV === "object" && Object.keys(jV).length > 0)) { return } if (!e) { this._stateCube = {} } if (jU instanceof Array) { for (var jT = 0; jT < jU.length; jT++) { this._updateState(jU[jT], jV, e) } } else { this._updateState(jU, jV, e) } var jW = JSON.stringify(this._stateCube); if (T !== jW) { this.doOnceDraw() } }, replaceAllState: function (e) { var i = JSON.stringify(this._stateCube); this._stateCube = e; var T = JSON.stringify(this._stateCube); if (i !== T) { this.doOnceDraw() } }, getAllState: function () { return this._stateCube }, getStateByLayerName: function () { }, removeState: function (jT) { var e = JSON.stringify(this._stateCube); if (jT instanceof Array) { for (var T = 0; T < jT.length; T++) { if (jT[T] instanceof iT && jT[T].layerName) { delete this._stateCube[jT[T].layerName + "_" + jT[T].id] } else { if (typeof jT[T] === "string") { delete this._stateCube[jT[T]] } } } } else { if (jT instanceof iT && jT.layerName) { delete this._stateCube[jT.layerName + "_" + jT.id] } else { if (typeof jT === "string") { delete this._stateCube[jT] } } } var jU = JSON.stringify(this._stateCube); if (e !== jU) { this.doOnceDraw() } }, clearState: function () { var e = JSON.stringify(this._stateCube); if (e !== "{}") { this._stateCube = {}; this.doOnceDraw() } }, _set: function (i, jU, T) { var jT = jU[T] || (jU[T] = {}); for (var e in i) { jT[e] = i[e] } }, doOnceDraw: function () { if (this.map) { var e = new fy("onupdate"); this.map.dispatchEvent(e) } }, _releaseOutViewTileData: function (e) { if (!this.map || !this.map.dispatcher) { return } var i = this; e.layerId = this._layerId; this.map.dispatcher.broadcast("release", e, function (jV, T) { for (var jU = 0; jU < T.length; jU++) { for (var jT = 0; jT < T[jU].length; jT++) { i.layer.tileCache.removeData(T[jU][jT].tileKey) } } }) }, _loadTile: function (jV, T) { this.curViewTilesInfo = jV; if (!this.loadModule || !this.upStyle) { return } var j6 = this.layer.map; this._releaseOutViewTileData(jV); var jW = j6.getZoom(); if (jW < this.minZoom || jW > this.maxZoom) { j6._featureMgr.clearData(this.layer.drawIndex); j6._featureMgr.clearLabelOverlayData(this.layer.drawIndex); j6._featureMgr.clearLabelData(this.layer.drawIndex); return } var jX = this.layer.getZoomState(); if (T) { this.thumbCache = {}; var j4 = -1; this.layer.tileLabels = []; var j0 = j6._customLabelMgr.virtualTiles["mvt_" + this.layer.drawIndex]; if (j0 && j0.label) { this.layer.tileLabels.push(j0.label) } for (var j2 = 0, j1 = jV.length; j2 < j1; j2++) { var j3 = jV[j2]; var jT = this.layer.getTileKey(j3); var j5 = this.layer.tileCache.getData(jT); j4 = j3.zoom; if (this.useThumb) { this._setThumbData(j5, j3, jX) } else { if (j5 && j5.status === "ready") { j6._featureMgr.setData(j5, this.layer.drawIndex, 2); this._loadCacheLabel(j3, j5) } } } this.layer.tileLabels.labelZoom = j4; this.layer.updateLabels(jX); if (!this.noCollision) { var jU = Math.floor(jW); var jZ = jW - jU; var jY = Math.floor(this.layer.LAST_CALC_ZOOM); var e = this.layer.LAST_CALC_ZOOM - jY; var j8 = false; if (this.layer.hasZoomChange) { if (Math.abs(jW - this.layer.LAST_CALC_ZOOM) >= 0.5) { j8 = true } else { if (jZ < 0.5 && e >= 0.5) { j8 = true } else { if (jZ >= 0.5 && e < 0.5) { j8 = true } } } if (j8) { this.layer.cacheDataCollideLabels(0) } this.layer.LAST_CALC_ZOOM = jW } else { if (this.layer.tileLabels.length > 0) { this.layer.cacheDataCollideLabels(eN.Browser.ie ? 50 : 30) } } } else { this.layer.cacheDataCollideLabels(0) } return } for (var j2 = 0, j1 = jV.length; j2 < j1; j2++) { var j3 = jV[j2]; var jT = this.layer.getTileKey(j3); var j5 = this.layer.tileCache.getData(jT); if (!j5) { j5 = { status: "init", retry: 0 } } if (j5.status !== "ignore" && j5.status !== "ready" && j5.status !== "loading") { j5.status = "loading"; this.layer.tileCache.setData(jT, j5); if (this.upStyle === "useMain") { var j7 = this; this._loadTileData(j3, function (j9, ka, i) { j7._tileDataCbk(j9, ka, i) }) } else { if (this.upStyle) { this._loadTileDataByWorker(j3) } } } } }, _loadCacheLabel: function (T, i) { var jU = i.tileData.hasChangeLabel(); if (jU) { i.label.status = "init" } if (i.label.status === "ready") { i.label.tileInfo = i.tileInfo; this.layer.tileLabels.push(i.label); if (i.label.textureSources && i.label.textureSources[T.zoom] && this.map._webglMapScene) { var jT = this.map._webglMapScene._painter; var e = i.label.imgKey; if (!jT._labelTextureAtlasOffset[e]) { jT._addToAsyncJob(i.label.textureSources[T.zoom]) } } } else { if (i.label.status !== "processing") { this._processLabelData(i) } } }, getLayerVisible: function (i) { var T = this._opt.style; if (!T || !T[i]) { return true } else { if (T[i].visible === false) { return false } else { var jU = this._opt.style[i].minZoom || 3; var e = this._opt.style[i].maxZoom || 23; var jT = this.map.getZoom(); if (jT < jU || jT > e) { return false } return true } } }, _setThumbData: function (i, e, T) { if (T === 1) { this._dataFitGrid(i, e, 3) } else { if (T === -1) { if (i && i.status === "ready") { this.map._featureMgr.setData(i, this.layer.drawIndex, 2); this._loadCacheLabel(e, i) } else { this._findChildZoomTile(e, 3) } } } }, _findParent: function (jT, jW) { var T = this.minZoom; var e = jT.col; var jZ = jT.row; var jY = jT.zoom; for (var jX = 1; jX <= jW; jX++) { var jU = this._getParentTiles(e, jZ, jY, T); if (jU === null) { continue } jU.tileSize = jT.tileSize; jU.tileTypeName = jT.tileTypeName; jU.transform = jT.transform; var j0 = this.layer.getTileKey(jU); var jV = this.layer.tileCache.getData(j0); if (jV && jV.status === "ready") { jV.key = j0; return jV } e = jU.col; jZ = jU.row; jY = jU.zoom } return false }, _findChild: function (i, jW) { var jY = this.maxZoom; var e = i.col; var jZ = i.row; var jX = i.zoom; var jU = this._getChildTiles(e, jZ, jX, jY, jW); if (!jU) { return false } for (var jT = 0; jT < jU.length; jT++) { var T = this.layer.getTileKey(jU[jT]); var jV = this.layer.tileCache.getData(T); if (this.curViewTilesInfo["id_" + jU[jT].col + "_" + jU[jT].row + "_" + jU[jT].zoom] && (!jV || jV.status !== "ready")) { return false } } return true }, _dataFitGrid: function (T, i, jT) { var e = this._findParent(i, jT); if (e) { if (this.thumbCache[e.key]) { this.map._featureMgr.setData(T, this.layer.drawIndex, 2); this._loadCacheLabel(i, T) } else { if (this.thumbCache[e.key] === undefined) { if (this._findChild(e.tileInfo, i.zoom - e.tileInfo.zoom)) { this.thumbCache[e.key] = true; this.map._featureMgr.setData(T, this.layer.drawIndex, 2); this._loadCacheLabel(i, T) } else { this.thumbCache[e.key] = false; this.layer.map._featureMgr.setData(e, this.layer.drawIndex, 0); this._loadCacheLabel(e.tileInfo, e) } } } } else { if (T && T.status === "ready") { this.map._featureMgr.setData(T, this.layer.drawIndex, 2); this._loadCacheLabel(i, T) } } }, _findChildZoomTile: function (T, jX) { var j0 = this.maxZoom; var e = T.col; var j1 = T.row; var jZ = T.zoom; for (var jY = 1; jY <= jX; jY++) { var j2 = false; var jV = this._getChildTiles(e, j1, jZ, j0, jY); if (!jV) { continue } for (var jU = 0; jU < jV.length; jU++) { var jT = this.layer.getTileKey(jV[jU]); var jW = this.layer.tileCache.getData(jT); if (jW && jW.status === "ready") { this.layer.map._featureMgr.setData(jW, this.layer.drawIndex, 1); this._loadCacheLabel(jV[jU], jW); j2 = true } } if (j2) { break } } }, _getParentTiles: function (e, T, i, jT) { if (i - 1 < jT) { return null } return { col: Math.floor(e / 2), row: Math.floor(T / 2), zoom: i - 1, useZoom: i - 1, loopOffsetX: 0 } }, _getChildTiles: function (jT, j2, j1, j0, jW) { var j3 = []; if (j1 + jW > j0) { return null } var jZ = Math.pow(2, jW); var e = jT * jZ; var jY = j2 * jZ; var jX = j1 + jW; var j3 = []; for (var jU = 0; jU < jZ; jU++) { var jV = e + jU; for (var T = 0; T < jZ; T++) { var i = jY + T; j3.push({ col: jV, row: i, zoom: jX, useZoom: jX, loopOffsetX: 0 }) } } return j3 }, _loadTileDataByWorker: function (i) { if (!this.map || !this.map.dispatcher) { return } var jV = this.map.dispatcher.getActor(); if (!jV) { return } var T = i.col; var j0 = i.row; var jZ = i.zoom; var e = this.layer.getTilesUrl(new e8(T, j0), jZ, i); if (!e) { return } var jU = this.layer.getTileKey(i); var jX = "id_" + T + "_" + j0 + "_" + jZ; var jW = this._opt.header || null; if (this._opt.header instanceof Function) { jW = this._opt.header(e) } if (this._opt.urlCallback instanceof Function) { e = this._opt.urlCallback(e) } var jT = { type: "vector", layerId: this._layerId, x: T, y: j0, z: jZ, tileKey: jU, tileUrl: e, spanLevel: this._opt.spanLevel, header: jW, encrypt: this._opt.encrypt || false }; var jY = this; jV.send("loadTile", jT, function (j3, j2) { var j1 = jY.layer.tileCache.getData(jU); if (!j1) { return } if (j3 || !j2) { j1.status = "ignore" } else { var j4 = new dY.TileFamilyParse(jY.layerOption, jT).deserialize(j2, jY); j1.tileInfo = i; j1.tileData = j4; jY._processLabelData(j1); jY.layer.callbackDataQueue.push([jU, j1, jX]); if (jY.processDataTimer) { return } jY.processDataTimer = setTimeout(function () { while (jY.layer.callbackDataQueue.length > 0) { var j6 = jY.layer.callbackDataQueue.shift(); jY._setTileData(j6[0], j6[1], j6[2]) } var j5 = new fy("onupdate"); jY.map.dispatchEvent(j5); jY.processDataTimer = null }, 0) } }) }, _loadTileData: function (i, e) { var jT = i.col; var jX = i.row; var jU = i.zoom; var T = this.layer.getTilesUrl(new e8(jT, jX), jU, i); if (!T) { return } var jW = this.layer.getTileKey(i); var jV = new XMLHttpRequest(); jV.open("GET", T, true); jV.responseType = "arraybuffer"; jV.timeout = 3000; jV.ontimeout = function () { e && e(null, jW, i) }; jV.onreadystatechange = function (jY) { if (this.readyState === 4) { if (this.status === 200) { e && e(jV.response, jW, i); return } if (this.status >= 400 || this.status === 0) { e && e(null, jW, i) } else { e && e(null, jW, i) } } }; jV.send() }, _tileDataCbk: function (jU, jW, i) { var e = this.layer.tileCache.getData(jW); if (!e) { return } var jV = this.layer.map; var T = this; if (!jU || typeof jU === "string") { e.status = "init"; e.reloadTimer = setTimeout(function () { if (e.retry < 3) { e.retry++; e.status = "loading"; T._loadTileData(i, function (jY, jZ, jX) { T._tileDataCbk(jY, jZ, jX) }) } else { e.status = "ignore" } }, 3000); return } if (e.reloadTimer) { clearTimeout(e.reloadTimer); e.reloadTimer = null } var jT = (function (jX) { return function () { var jY = i.col; var j1 = i.row; var jZ = i.zoom; var j0 = "id_" + jY + "_" + j1 + "_" + jZ; e.tileInfo = i; e.tileData = T.mvt.readFeatures(jX, T, jV, { x: jY, y: j1, z: jZ, g: T.gridModel, mc: T._opt.transform && T._opt.transform.source === "BD09MC" ? true : false }); T._processLabelData(e); T.layer.callbackDataQueue.push([jW, e, j0]); if (T.processDataTimer) { return } T.processDataTimer = setTimeout(function () { while (T.layer.callbackDataQueue.length > 0) { var j2 = T.layer.callbackDataQueue.shift(); T._setTileData(j2[0], j2[1], j2[2]) } T.doOnceDraw(); T.processDataTimer = null }, 200) } })(jU); jV.jobScheduler.addJob(jT) }, _setTileData: function (T, e, i) { e.status = "ready"; this.layer.tileCache.setData(T, e); if (this.layer.curViewTilesInfo[i]) { e.dataType = ht } }, _processLabelData: function (T) { if (!T.tileData) { return } T.label = T.tileData.getTileLabels(); if (!T.label) { return } if (T.label.status === "processing") { return } var i = T.tileInfo; var e = this._getTileTexImgKey(i); T.label.imgKey = e; T.label.status = "processing"; var jT = this; jT.layer.updateAllIconsTextureCoords(T); this.layer.labelProcessor.loadIconImages(T, function (jV) { jT.layer.updateAllIconsTextureCoords(jV) }, true); var jU = this.layer.map.tileMgr.getLabelTextCanvas(); jU.drawCustomLabelsOnCanvas(T.label.fixedLabel, function (jV) { if (jV) { if (!T.label.textureHeights) { T.label.textureHeights = [] } T.label.textureHeights[i.useZoom] = jV.height } jT.layer._doWorkAfterLabelImageLoad(T, jV, null, e) }) }, _getTileTexImgKey: function (i) { var e = "mvt_" + this.layer.drawIndex + "_" + i.col + "_" + i.row + "_" + i.zoom + "_"; e = bw.getGUID(e); return e }, _updateBRushCube: function (jW) { var jY = jW.tileData; for (var T in jY) { if (jY.hasOwnProperty(T)) { var e = jY[T]; for (var jU = 0; jU < e.length; jU++) { var jT = e[jU]; var jV = jT.getBox(); var jX = { minX: jV[0], minY: jV[1], maxX: jV[2], maxY: jV[3], lN: T, f: jT } } } } }, intersectFeatures: function (e) { var jV = this._geojsonToSouceXY(e); var T = this._bboxTile(jV); T = this._intersectTile(jV, T); if (!T) { return null } var jX = this.layer.map._featureMgr.result.bkData[this.layer.drawIndex][2]; var jT = []; var j2 = null; for (var jY = 0; jY < jX.length; jY++) { var jU = jX[jY].tileInfo; var j3 = jU.zoom + "_" + jU.col + "_" + jU.row; if (T[j3]) { if (!jX[jY].tileData || !jX[jY].tileData.layers) { continue } var jW = jX[jY].tileData.layers; var j1 = null; for (var j0 in jW) { var jZ = jW[j0]; if (T[j3][4]) { this._featuresInter(j0, jZ.features, jT) } else { if (jZ.layerType === "Point" || jZ.layerType === "MultiPoint") { if (!j2) { j2 = this._geojsonToScreenXY(e) } this._pointFeaturesInter(j0, jZ.features, jT, j2) } else { if (!j1) { j1 = this._geojsonToTileXY(jV, T[j3]) } if (!j1) { continue } this._noPointFeaturesInter(j0, jZ.features, jT, j1) } } } } } return jT.length === 0 ? null : jT }, _featuresInter: function (T, jT, jU) { for (var i in jT) { if (!jT[i]._visible) { continue } if (jU[T + "_" + jT[i].getId()]) { continue } jT[i].layerName = T; var e = new iT(jT[i].getId(), T); e.properties = jT[i].getProperties(); jU.push(e); jU[T + "_" + jT[i].getId()] = true } }, _pointFeaturesInter: function (jU, jV, jW, jT) { for (var T in jV) { if (!jV[T]._visible) { continue } if (jW[jU + "_" + jV[T].getId()]) { continue } var jX = jV[T].getPointGeoJSON(this.layer.map); if (!jX) { continue } var i = dY.booleanDisjoint(jX, jT); if (!i) { jV[T].layerName = jU; var e = new iT(jV[T].getId(), jU); e.properties = jV[T].getProperties(); jW.push(e); jW[jU + "_" + jV[T].getId()] = true } } }, _noPointFeaturesInter: function (jU, jV, jW, jT) { for (var T in jV) { if (!jV[T]._visible) { continue } if (jW[jU + "_" + jV[T].getId()]) { continue } var i = dY.booleanDisjoint(jV[T].geojson, jT); if (!i) { jV[T].layerName = jU; var e = new iT(jV[T].getId(), jU); e.properties = jV[T].getProperties(); jW.push(e); jW[jU + "_" + jV[T].getId()] = true } } }, pickFeatures: function (j6, jU) { if (this.running) { return } var T = Math.floor(this.map.getZoom() + this.spanLevel); if (this.gridModel === dY.GridModel.BAIDUWEB) { var j4 = Math.pow(2, 18 - T); var jV = Math.floor(j6.lng / j4 / 256); var jY = Math.floor(j6.lat / j4 / 256); var jT = j6.lng / j4 - jV * 256; var jZ = j6.lat / j4 - jY * 256; var jX = [jT, jZ]; var kc = [T, jV, jY] } else { var ka = ds.transformBDmcPoint(j6, this.layer.transform); var j5 = ds.getPointPixelCoor(j6, T, this.layer.transform); var kc = ds.getTileCoordForCoordAndZ(ka, T); var jX = ds.getRelativePixelCoor(kc, j5) } var kd = this.layer.map._featureMgr.result.bkData[this.layer.drawIndex][2]; var j3 = kc.join("_"); var j0 = []; for (var j8 = 0; j8 < kd.length; j8++) { var j9 = kd[j8].tileInfo; var ke = j9.zoom + "_" + j9.col + "_" + j9.row; if (j3 === ke) { this.running = true; if (!kd[j8].tileData || !kd[j8].tileData.layers) { continue } var j1 = kd[j8].tileData.layers; for (var kb in j1) { var jW = j1[kb].features; for (var j7 in jW) { if (!jW[j7]._visible) { continue } if (j0[kb + "_" + jW[j7].getId()]) { continue } if (jW[j7].getType() === fD.POINT || jW[j7].getType() === fD.MULTI_POINT) { var e = jW[j7].isPointInGeometry(jU, this.layer.map) } else { var e = jW[j7].isPointInBox(jX); if (e) { e = jW[j7].isPointInGeometry(jX) } } if (e) { jW[j7].layerName = kb; var j2 = new iT(jW[j7].getId(), kb); j2.properties = jW[j7].getProperties(); j0.push(j2); j0[kb + "_" + jW[j7].getId()] = true } } } break } } this.running = false; return j0 }, _geojsonToScreenXY: function (T) { var i = JSON.parse(JSON.stringify(T)); var e = this; gk.coordEachReplace(i, function (jV) { var jT = iS.convertLL2MC(new ct(jV[0], jV[1])); var jU = e.map.pointToPixelIn(jT); return [jU.x, jU.y] }); return i }, _geojsonToTileXY: function (T, jU) { if (jU.length < 4) { return null } var i = JSON.parse(JSON.stringify(T)); var jT = Math.floor(this.map.getZoom() + this.spanLevel); if (this.gridModel === dY.GridModel.BAIDUWEB) { var e = Math.pow(2, (18 - jT)) } else { var e = ds.resolutions[jT] } gk.coordEachReplace(i, function (jV) { return [(jV[0] - jU[2]) / e, (jV[1] - jU[3]) / e] }); return i }, _geojsonToSouceXY: function (T) { var i = JSON.parse(JSON.stringify(T)); var e = this; gk.coordEachReplace(i, function (jV) { var jT = iS.convertLL2MC(new ct(jV[0], jV[1])); var jU = [jT.lng, jT.lat]; if (e.gridModel !== dY.GridModel.BAIDUWEB) { jU = ds.transformBDmcPoint(jT, e.layer.transform) } return jU }); return i }, _bboxTile: function (T) { var jW = gk.bbox(T); var j1 = Math.floor(this.map.getZoom() + this.spanLevel); if (this.gridModel === dY.GridModel.BAIDUWEB) { var jZ = new ct(jW[0], jW[1]); var j2 = new ct(jW[2], jW[3]); var jX = Math.pow(2, 18 - j1); var j3 = Math.floor(jZ.lng / jX / 256); var jV = Math.floor(jZ.lat / jX / 256); var jU = Math.floor(j2.lng / jX / 256); var i = Math.floor(j2.lat / jX / 256); return [j1, j3, jV, jU, i] } else { var e = [jW[0], jW[3]]; var jY = [jW[2], jW[1]]; var j0 = ds.getTileCoordForCoordAndZ(e, j1); var jT = ds.getTileCoordForCoordAndZ(jY, j1); return [j0[0], j0[1], j0[2], jT[1], jT[2]] } }, _intersectTile: function (e, jW) { var j3 = {}; if (jW.length < 5) { return null } var jZ = gk.getType(e); var j4 = false; if (e.type === "Feature" && jZ === "Polygon") { j4 = true } for (var jU = jW[1]; jU <= jW[3]; jU++) { for (var jT = jW[2]; jT <= jW[4]; jT++) { if (this.gridModel === dY.GridModel.BAIDUWEB) { var jY = iS.tileToBoundRange({ col: jU, row: jT, zoom: jW[0], baseTileSize: 256 }); var jV = [jY.MC.sw.lng, jY.MC.sw.lat, jY.MC.ne.lng, jY.MC.ne.lat] } else { var jY = ds.getTileRangeExtent([jW[0], jU, jT]); var jV = [jY.minX, jY.minY, jY.maxX, jY.maxY] } var jX = { type: "Feature" }; jX.bbox = jV; jX.geometry = { type: "Polygon", coordinates: [[[jV[0], jV[1]], [jV[2], jV[1]], [jV[2], jV[3]], [jV[0], jV[3]], [jV[0], jV[1]],]] }; var T = dY.booleanDisjoint(jX, e); if (!T) { var j2 = jW[0] + "_" + jU + "_" + jT; var j1 = [jU, jT, jV[0], jV[1], false]; if (j4) { var j0 = dY.booleanContains(e, jX); if (j0) { j1[4] = true } } j3[j2] = j1 } } } return Object.keys(j3).length === 0 ? null : j3 }, _initEvent: function (jW) { this.map = jW; if (!this.map.dispatcher) { this.map.dispatcher = new cy(g6(), dY) } var jU = this; this.map.dispatcher.broadcast("setLayerStyle", jU.layerOption, function (jY, i) { jU.upStyle = true; if (jU.loadModule) { jU.doOnceDraw() } }); var jT = this; var e = false; this._layerMouseEvent = function (j0) { if (!jT.map || !jT._listeners) { return } if (!jT._listeners.onmousemove || Object.keys(jT._listeners.onmousemove).length === 0) { return } var jY; var i = j0.point; var jZ = jT.pickFeatures(i, j0.pixel); if (jZ && jZ.length > 0) { jY = new fy("onmousemove"); jY.value = jZ; jT.map.platform.style.cursor = jT.map.config.overlayMoveCursor; e = true } else { jT.map.platform.style.cursor = jT.map.config.defaultCursor; if (!e || !jT._listeners.onmouseout || Object.keys(jT._listeners.onmouseout).length === 0) { return } jY = new fy("onmouseout"); e = false } if (jY) { jY.point = j0.point; jY.pixel = j0.pixel; jY.latLng = j0.latlng; jT.dispatchEvent(jY) } }; this._layerClickEvent = function (j0) { if (!jT.map || !jT._listeners) { return } if ((!jT._listeners.onclick && !jT._listeners.dblclick) || (Object.keys(jT._listeners.onclick).length === 0 && Object.keys(jT._listeners.dblclick).length === 0)) { return } var jY; var i = j0.point; var jZ = jT.pickFeatures(i, j0.pixel); jY = new fy(j0.type); jY.point = i; jY.pixel = j0.pixel; jY.latLng = j0.latlng; jY.value = jZ; jT.dispatchEvent(jY) }; jW.addEventListener("onmousemove", this._layerMouseEvent); var jV = ["onclick", "dblclick"]; for (var T = 0; T < jV.length; T++) { var jX = jV[T]; jW.addEventListener(jX, this._layerClickEvent) } jW.addEventListener("removetilelayer", function (i) { if (i.target && i.target.ontology) { if (i.target.ontology === jT) { jT.layer.tileCache.clear(); jT.stateCube = {}; jT.upStyle = false; jW.removeEventListener("onmousemove", jT._layerMouseEvent); jW.removeEventListener("onclick", jT._layerClickEvent); jW.removeEventListener("ondblclick", jT._layerClickEvent); jT.layer.ontology = null; jT.layer = null; if (jW.dispatcher) { jW.dispatcher.broadcast("removeLayer", jT.layerOption, function (j0, jY) { var j2 = jW.tileMgr.tileLayers; var jZ = false; for (var j1 = 0; j1 < j2.length; j1++) { if (j2[j1].ontology instanceof dY) { jZ = true; break } } if (!jZ && jW.dispatcher) { jW.dispatcher.remove(); jW.dispatcher = null } }) } } } }); jW.on("destroy", function () { if (jT.map && jT.map.dispatcher) { jT.map.dispatcher.remove(); jT.map.dispatcher = null } jT.layer.ontology = null; jT.layer = null }); this.addEventListener("onmousemove", function () { }) }, setStyle: function (e) { this._opt.style = e; if (!this.map || !this.loadModule) { return } this.resolveStyle(this._opt); var i = this; if (this.upStyle === true) { this.map.dispatcher.stop(); this.map.dispatcher.broadcast("stop", null, function (jT, T) { i.layerOption = Object.assign(i.layerOption, i._opt); i.map.dispatcher.broadcast("setLayerStyle", i.layerOption, function (jV, jU) { i.layer.tileCache.clear(); i.doOnceDraw() }) }) } else { i.layer.tileCache.clear(); i.doOnceDraw() } }, setZIndex: function (e) { if (this.layer && parseInt(e) > 0) { this.layer.setZIndex(e) } }, getZIndex: function () { if (this.layer) { return this.layer.zIndex } }, setZIndexTop: function () { if (this.layer) { this.layer.setZIndexTop() } }, setUpLevel: function () { if (this.layer) { var e = this.layer._getAdjoinZIndex("up"); if (this.layer.zIndex !== e) { this.layer.setZIndex(e) } } }, setDownLevel: function () { if (this.layer) { var e = this.layer._getAdjoinZIndex("down"); if (this.layer.zIndex !== e) { this.layer.setZIndex(e) } } }, toString: function () { return "MVTLayer" } }); dY._generateTexture = function (jW, jV, T) { var jU = document.createElement("canvas"); var e; var jT; if (jV.strokeStyle === "dashed") { e = 16; jT = e * 8 } else { if (jV.strokeStyle === "dotted") { e = 32; jT = e * 2 } } jU.width = e; jU.height = jT; var i = jU.getContext("2d"); i.fillStyle = jV.strokeColor; i.globalAlpha = jV.strokeOpacity; var jX = jV.strokeWeight * 2; if (jV.strokeStyle === "dashed") { jX = dY._drawDashArrayTexture(i, e, jT, jV) } else { if (jV.strokeStyle === "dotted") { jX = dY._drawDottedTexture(i, e, jT, jV.strokeWeight) } } if (window.createImageBitmap && !jV.sync) { createImageBitmap(jU, { imageOrientation: "flipY" }).then(function (jY) { T(null, { totalDashLen: jX, texture: jY, textureSize: [e, jT] }) }) } else { T(null, { totalDashLen: jX, texture: jU.toDataURL(), textureSize: [e, jT] }) } }; dY._drawDashArrayTexture = function (jZ, jT, jV, T) { var jX = T.dashArray; if (!jX) { jZ.fillRect(0, 0, jT, jV / 2); return T.strokeWeight * 4 } else { var jY = 0; if (jX.length % 2 !== 0) { jX = jX.concat(jX) } for (var jU = 0; jU < jX.length; jU++) { jY += jX[jU] } var e = 0; for (var jU = 0; jU < jX.length; jU++) { var jW = jX[jU] / jY * jV; if (jU % 2 === 0) { jZ.fillRect(0, e, jT, jW) } e += jW } return jY } }; dY._drawDottedTexture = function (i, e, T, jT) { i.beginPath(); i.arc(e / 2, e / 2, e / 2, 0, 2 * Math.PI); i.fill(); i.closePath(); return jT * 2 }; var U = function (e) { var e = e || {}; this.inputCRS = e.inputCRS || "EPSG3857"; this.outCRS = e.outCRS || "EPSG3857"; this.minZoom = e.minZoom || 3; this.maxZoom = e.maxZoom || 19; this.retry = e.retry || false; this.retryTime = e.retryTime || 600; this.useThumbData = e.useThumbData || true; this.lastZoom = 3; this.cacheSize = e.cacheSize || 128; this.tileType = hK.getInstance("web"); this._mapCenter = {}; this._featureMgr = [[], [], []]; this._gridRefs = { row: {}, col: {} }; this.tileCache = new ay(this.cacheSize, { clearCallback: function (i) { } }) }; U.inherits(c1, "BaiduLayer"); eN.extend(U.prototype, { fetch: function (i, jT, jU) { var jT = Math.ceil(jT) || 3; var i = i || []; if (i.length !== 4 || jT > 19) { jU(null); return } var e = this.getZoomState(jT); var T = this.calCoord(i, jT, e); this.curViewTilesInfo = this.calTilesOrders(T.sw, T.ne, jT); this.clearData(); this.clearRefs(); this.loadLayerData(this.curViewTilesInfo, e, true, jU) }, calCoord: function (T, jT, i) { if (T.length !== 4) { return } var e = gcoord.transform([T[0], T[1]], gcoord[this.inputCRS], gcoord.BD09MC); var jU = gcoord.transform([T[2], T[3]], gcoord[this.inputCRS], gcoord.BD09MC); if (jU[1] > 19505879.362428114 || e[1] < -15949096.637571886) { jU[1] = 19505879.362428114; e[1] = -15949096.637571886 } this._mapCenter[jT] = new ct((e[0] + jU[0]) / 2, (e[1] + jU[1]) / 2); return { sw: e, ne: jU } }, calTilesOrders: function (jY, j4, j0) { var j1 = this.tileType.getMercatorSize(j0, j0); var jW = [Math.floor(jY[0] / j1), Math.floor(jY[1] / j1)]; var i = [Math.floor(j4[0] / j1), Math.floor(j4[1] / j1)]; var jX = jW[0] - 1; var jV = i[0] + 2; var jU = jW[1] - 1; var j3 = i[1] + 2; var jZ = []; for (var jT = jX; jT < jV; jT++) { for (var j2 = jU; j2 < j3; j2++) { var T = { col: jT, row: j2, zoom: j0, useZoom: j0, tileTypeName: "web", loopOffsetX: 0, tileSize: 256, baseTileSize: 256, mercatorSize: j1, combine: false, dataIndex: 256 }; jZ.push(T); var e = "id_" + jT + "_" + j2 + "_" + j0; jZ[e] = true } } jZ.sort((function (j5) { return function (j6, j7) { return ((0.4 * Math.abs(j6.col - j5[0]) + 0.6 * Math.abs(j6.row - j5[1])) - (0.4 * Math.abs(j7.col - j5[0]) + 0.6 * Math.abs(j7.row - j5[1]))) } })([(jX + jV) / 2, (jU + j3) / 2])); jZ.zoom = j0; jZ.tileTypeName = "web"; return jZ }, getZoomState: function (i) { var e = i - this.lastZoom; if (e > 0) { this.zoomState = 1 } else { if (e < 0) { this.zoomState = -1 } } this.lastZoom = i; return this.zoomState || 0 }, loadLayerData: function (j0, jT, jU, jZ) { this.thumbCache = {}; if (jU) { for (var jX = 0, jV = j0.length; jX < jV; jX++) { var T = j0[jX]; var jW = this.getTileKey(T); var e = this.tileCache.getData(jW); if (e && e.status === "ready") { e.key = jW; this.setData(e, 2) } else { if (this.useThumbData) { jT === 1 && this.setThumbData(T.col, T.row, T.zoom, T.useZoom, jT) } } } this.calOutData(jZ) } for (var jX = 0, jV = j0.length; jX < jV; jX++) { var T = j0[jX]; var jW = this.getTileKey(T); var e = this.tileCache.getData(jW); if (!e) { this.tileCache.setData(jW, {}); var jY = this; this.loadRasterTileData(T, function (i, j1) { jY.rasterTileDataCbk(i, j1, jZ) }) } } }, loadRasterTileData: function (i, e) { var T = new Image(); var jU = i.col; var jX = i.row; var jV = i.zoom; var jT = this.getTilesUrl(new e8(jU, jX), jV); if (!jT) { return } var jW = this.getTileKey(i); T = this.loadTileImage(jT, i, jW, e); T.tileInfo = i }, loadTileImage: function (jX, e, T, jV) { var jT = new Image(); jT.crossOrigin = "anonymous"; var jW = this; var jU; function jY() { if (jW.retry) { jU && clearInterval(jU); jU = null } } if (this.retry) { var i = 1; jU = setInterval(function () { if (i > 3) { jY(); return } var jZ = jW.getTilesUrl(new e8(e.col, e.row), e.zoom, i); jT.src = jZ; i++ }, this.retryTime) } jT.onload = function () { jY(); jV && jV(this, T) }; jT.onerror = function () { jY(); jV && jV(null, T) }; jT.src = jX; return jT }, rasterTileDataCbk: function (jU, jT, jX) { if (!jU || typeof jU === "string") { this.tileCache.removeData(jT); return } var i = jU.tileInfo; var T = i.col; var jZ = i.row; var jY = i.zoom; var e = this.tileCache.getData(jT); if (!e) { return } e.textureSource = jU; e.dataType = gt; e.tileInfo = i; e.status = "ready"; this.tileCache.setData(jT, e); var jV = "id_" + T + "_" + jZ + "_" + jY; var jW = false; if (this.curViewTilesInfo[jV]) { e.png8 = this.png8 || false; e.key = jT; this.setData(e, 2); jW = true } if (jW) { this.calOutData(jX, e) } }, getTilesUrl: function (jU, j1, i) { var jW = i || 0; var T = jU.x; var j2 = jU.y; var jY = jw("ditu", "normal"); var jX = jY.udt; var j0 = ea.B_NORMAL_MAP.tileUrls; var jV = Math.abs(T + j2 + jW) % j0.length; var jZ = j0[jV]; if (T < 0) { T = "M" + (-T) } if (j2 < 0) { j2 = "M" + (-j2) } var jT = "x=" + T + "&y=" + j2 + "&z=" + Math.floor(j1); jT += "&styles=pl&scaler=2&udt=" + jX + "&from=jsapi3_0"; var e = jZ + "?qt=vtile&" + jT; return e }, calOutData: function (jZ, T) { if (!T) { for (var jW = 0; jW < this._featureMgr.length; jW++) { var e = this._featureMgr[jW]; for (var jU = 0; jU < e.length; jU++) { var jT = e[jU].tileInfo; if (jW === 2) { var jX = e[jU].extent; if (jX) { this.addRefs(jX, jT.col, jT.row) } else { var jY = this.calBoxCoord(jT); if (!jY) { continue } e[jU].extent = this.findRefs(jY, jT.col, jT.row) } } } } jZ({ size: this.curViewTilesInfo.length, zoom: this.lastZoom, data: this._featureMgr }) } else { var jV = this.calBoxCoord(T.tileInfo); if (!jV) { return } T.extent = this.findRefs(jV, T.tileInfo.col, T.tileInfo.row); jZ({ zoom: this.lastZoom, size: this.curViewTilesInfo.length, data: [[], [], [T]] }) } }, calOutData_back: function (j1, jT) { if (!jT) { var jV; var j2; var jZ; for (var jX = 0; jX < this._featureMgr.length; jX++) { var T = this._featureMgr[jX]; for (var jW = 0; jW < T.length; jW++) { var jU = T[jW].tileInfo; if (jX === 2) { if (jW === 0) { var jY = this.calBoxCoord(jU); T[0].extent = jY; jV = T[0]; j2 = jY[2] - jY[0]; jZ = jY[3] - jY[1] } else { if (jV && j2 && jZ) { var e = (jU.row - jV.tileInfo.row) * jZ; var j0 = (jU.col - jV.tileInfo.col) * j2; var jY = jV.extent; T[jW].extent = [jY[0] + j0, jY[1] + e, jY[2] + j0, jY[3] + e] } } } else { var jY = this.calBoxCoord(jU); T[jW].extent = jY } } } j1({ size: this.curViewTilesInfo.length, zoom: this.lastZoom, data: this._featureMgr }) } else { if (this._featureMgr[2].length === 1) { var jY = this.calBoxCoord(jT.tileInfo); jT.extent = jY; this.featureCell = jT; this.cellW = jY[2] - jY[0]; this.cellH = jY[3] - jY[1] } else { var e = (jT.tileInfo.row - this.featureCell.tileInfo.row) * this.cellH; var j0 = (jT.tileInfo.col - this.featureCell.tileInfo.col) * this.cellW; var jY = this.featureCell.extent; jT.extent = [jY[0] + j0, jY[1] + e, jY[2] + j0, jY[3] + e] } j1({ zoom: this.lastZoom, size: this.curViewTilesInfo.length, data: [[], [], [jT]] }) } }, calBoxCoord: function (e) { var i = iS.prototype.tileToBound(e, this._mapCenter[e.zoom]).LL; var T = gcoord.transform([i.sw.lng, i.sw.lat], gcoord.BD09LL, gcoord[this.outCRS]); var jT = gcoord.transform([i.ne.lng, i.ne.lat], gcoord.BD09LL, gcoord[this.outCRS]); return [T[0], T[1], jT[0], jT[1]] }, clearData: function () { this._featureMgr = [[], [], []] }, addRefs: function (i, e, T) { this._gridRefs.row[T] = i[1]; this._gridRefs.row[T + 1] = i[3]; this._gridRefs.col[e] = i[0]; this._gridRefs.col[e + 1] = i[2] }, findRefs: function (i, e, jT) { var T = []; this._gridRefs.row[jT] && (T[1] = this._gridRefs.row[jT]); this._gridRefs.row[jT + 1] && (T[3] = this._gridRefs.row[jT + 1]); this._gridRefs.col[e] && (T[0] = this._gridRefs.col[e]); this._gridRefs.col[e + 1] && (T[2] = this._gridRefs.col[e + 1]); !this._gridRefs.row[jT] && (this._gridRefs.row[jT] = i[1]) && (T[1] = i[1]); !this._gridRefs.row[jT + 1] && (this._gridRefs.row[jT + 1] = i[3]) && (T[3] = i[3]); !this._gridRefs.col[e] && (this._gridRefs.col[e] = i[0]) && (T[0] = i[0]); !this._gridRefs.col[e + 1] && (this._gridRefs.col[e + 1] = i[2]) && (T[2] = i[2]); return T }, clearRefs: function () { this._gridRefs = { row: {}, col: {} } }, destroy: function () { this.tileCache.clear(); this.clearData(); this.clearRefs(); this._mapCenter = {} }, setData: function (jU, T) { var e = this._featureMgr[T]; for (var jT = 0; jT < e.length; jT++) { if (e[jT].key && e[jT].key === jU.key) { e[jT] = jU; return } } e.push(jU) }, getTileKey: function (e, jT) { jT = jT || {}; var i = typeof jT.useZoom === "number" ? jT.useZoom : e.useZoom; var T = "default"; return "web_" + T + "_" + e.col + "_" + e.row + "_" + e.zoom + "_" + i }, setThumbData: function (i, jU, jT, e, T) { if (T === 1) { if (this._findParentZoomTile(i, jU, jT, e, 8) === false) { this._findChildZoomTile(i, jU, jT, e, 3) } } else { if (T === -1) { if (this._findChildZoomTile(i, jU, jT, e, 3) === false) { this._findParentZoomTile(i, jU, jT, e, 8) } } } this.sortThumbData() }, _findParentZoomTile: function (jW, j5, j4, jU, jZ) { var jV = "web"; var T = 3; var e = jW; var j2 = j5; var j0 = j4; var j1 = jU; for (var jY = 1; jY <= jZ; jY++) { var jT = this.tileType.getParentTile(e, j2, j0, j1, T); if (jT === null) { continue } var j3 = this.getTileKey(jT); var jX = this.tileCache.getData(j3); if (jX && jX.status === "ready") { if (this.thumbCache[j3]) { continue } jX.key = j3; this.setData(jX, 0); this.thumbCache[j3] = true; return true } e = jT.col; j2 = jT.row; j0 = jT.zoom; j1 = jT.useZoom } return false }, _findChildZoomTile: function (jX, jZ, e, jU, j8) { var j6 = "web"; var j2 = 21; var jW = jX; var jY = jZ; var j0 = e; var jT = jU; var jV = true; for (var j5 = 1; j5 <= j8; j5++) { var j3 = false; var T = this.tileType.getChildTiles(jW, jY, j0, jT, j2, j5); if (!T) { continue } for (var j4 = 0; j4 < T.length; j4++) { var j1 = this.getTileKey(T[j4]); var j7 = this.tileCache.getData(j1); if (j7 && j7.status === "ready") { if (!this.thumbCache[j1]) { j7.key = j1; this.setData(j7, 1); this.thumbCache[j1] = true } j3 = true } else { jV = false } } if (j3) { break } } return jV }, sortThumbData: function () { var e = this._featureMgr; if (!e) { return } if (e[0] && e[0].length > 0) { e[0].sort(function (T, i) { return T.tileInfo.useZoom - i.tileInfo.useZoom }) } } }); function ci(e) { e = e || {}; this.visible = (e.visible === undefined ? true : !!e.visible); this.minZoom = e.minZoom || 3; this.maxZoom = e.maxZoom || 21; this.opacity = isNaN(Number(e.opacity)) ? 1 : Math.max(0, Math.min(1, Number(e.opacity))); this.zIndex = e.zIndex || 1; this.enablePicked = e.enablePicked || false; this.autoSelect = e.autoSelect || false; this.popEvent = e.popEvent || true; this.autoUpdate = false; this.pickWidth = e.pickWidth || 30; this.pickHeight = e.pickHeight || 30 } ci.inherits(c1, "NormalLayer"); eN.extend(ci.prototype, { onInit: function (jT, jU) { if (this.zIndex > 0) { this.adjustZIndex(jT); jT._normalLayerMgr.sortLayer() } else { var e = jT._featureMgr.result.bkData; this.zIndex = e.length || 1 } var T = { tileTypeName: this.getType ? this.getType() : "custom", dataType: this.toString(), ontology: this }; jT._featureMgr.createLayer(this.zIndex, T); this.map = jT; this.gl = jU; this.onAdd(jT, jU); var i = this; jT.on("destroy", function () { i.onDestroy() }) }, adjustZIndex: function (i) { if (i && i._featureMgr) { var e = i._featureMgr.result.bkData; while (e[this.zIndex]) { this.zIndex += 1 } } }, _getAdjoinZIndex: function (jU) { var T = this.zIndex; if (this.map && this.map._featureMgr) { var e = this.map._featureMgr.result.bkData; if (jU === "up") { for (var jT = this.zIndex + 1; jT < e.length; jT++) { if (e[jT]) { T = jT + 1; break } } } else { for (var jT = this.zIndex - 1; jT > 0; jT--) { if (e[jT]) { T = jT; break } } } } return T }, setTargetZIndex: function (e) { this.zIndex = e; if (this.map) { this.map._normalLayerMgr.sortLayer() } }, setZIndex: function (jX) { jX = Math.abs(Math.floor(jX)) || 1; if (!jX || jX === this.zIndex) { return } var jU = this.map._featureMgr.result.bkData; var jT = this.map.tileMgr.tileLayers; var jZ = this.map._normalLayerMgr.layers; function j0(j5) { var j3 = null; var j4 = [jT, jZ]; for (var j1 = 0; j1 < j4.length; j1++) { for (var j2 = 0; j2 < j4[j1].length; j2++) { if (j4[j1][j2].zIndex === j5) { j3 = j4[j1][j2]; break } } if (j3) { break } } return j3 } var T = []; var jW = []; var jY = this.zIndex; var i = j0(jX); if (jU[jX] && i) { T.push(i); jW.push(jU[jX]); this.setTargetZIndex(jX); jU[jX] = jU[jY]; jU[jY] = null } else { this.setTargetZIndex(jX); jU[jX] = jU[jY]; jU[jY] = null; this.doOnceDraw(); return } var jV = jX + 1; while (jV) { var e = j0(jV); if (jU[jV] && e) { T.push(e); jW.push(jU[jV]); T.shift().setTargetZIndex(jV); jU[jV] = jW.shift(); jV += 1 } else { T.shift().setTargetZIndex(jV); jU[jV] = jW.shift(); jV = 0 } } this.doOnceDraw() }, setOpacity: function (e) { if (isNaN(Number(e))) { return } this.opacity = Math.max(0, Math.min(1, Number(e))); this.doOnceDraw() }, getOpacity: function () { return this.opacity }, setZIndexTop: function () { var e = this.map._featureMgr.result.bkData; e[e.length] = e[this.zIndex]; e[this.zIndex] = null; this.setTargetZIndex(e.length - 1); this.doOnceDraw() }, setUpLevel: function () { var e = this._getAdjoinZIndex("up"); if (this.zIndex !== e) { this.setZIndex(e) } }, setDownLevel: function () { var e = this._getAdjoinZIndex("down"); if (this.zIndex !== e) { this.setZIndex(e) } }, onAdd: function (e, i) { throw new Error("用户未实现onAdd方法") }, preRender: function (i, e) { }, rgbToIndex: function (jU) { var jX = jU.length / 4; var jT = Math.floor(jX / 2); const T = function (jZ) { return jU[jZ] + jU[jZ + 1] * 256 + jU[jZ + 2] * 65536 - 1 }; for (var jW = 0; ; jW++) { var jV = jT + jW; var jY = jT - jW; if (jV === jY) { var e = T(jV * 4); if (e > -1) { return e } continue } if (jV < jX) { var e = T(jV * 4); if (e > -1) { return e } } if (jY >= 0) { var e = T(jY * 4); if (e > -1) { return e } } if (jV >= jX && jY < 0) { break } } return -1 }, pick: function (jX, jW, jT) { var T = this.gl; var jY = this.map.config.ratio; this.map._normalLayerMgr.saveFramebuffer(); this.map._normalLayerMgr.bindFramebuffer(this.map._normalLayerMgr.pickFBO); this.map._normalLayerMgr.clear(); var i = this.map._webglPainter._camera._modelViewMatrixLayer; var jV = mat4.create(Float64Array); mat4.multiply(jV, this.map._webglPainter.projMatrix, i); this.render(T, jV, { isPickRender: true }); var e = new Uint8Array(4 * this.pickWidth * this.pickHeight); T.readPixels(jX * jY - Math.floor(this.pickWidth / 2), T.canvas.height - jW * jY - Math.floor(this.pickHeight / 2), this.pickWidth, this.pickHeight, T.RGBA, T.UNSIGNED_BYTE, e); var jU = this.rgbToIndex(e); if (this.getPickedItem) { var jZ = this.getPickedItem(jU, jT) } this.map._normalLayerMgr.restoreFramebuffer(); return jZ }, render: function (T, e, i) { throw new Error("用户未实现render方法") }, afterRender: function (i, e) { }, onDestroy: function (e, i) { }, onHide: function (e, i) { }, onShow: function (e, i) { }, doOnceDraw: function () { if (this.map) { var e = new fy("onupdate"); this.map.dispatchEvent(e) } }, doRender: function () { var e = this.map.getZoom(); if (this.visible) { if (e >= this.minZoom && e <= this.maxZoom) { if (!this._status) { this.onShow(this.map, this.gl); this._status = 1 } return true } } if (this._status) { this.onHide(this.map, this.gl); this._status = 0 } return false }, getZIndex: function () { if (this.zIndex === undefined) { throw new Error("图层未添加到地图") } }, getVisible: function () { return this.visible }, setVisible: function (e) { this.visible = e; this.doOnceDraw() }, getMinZoom: function () { return this.minZoom }, setMinZoom: function (e) { if (e <= this.maxZoom) { this.minZoom = e } }, getMaxZoom: function () { return this.maxZoom }, setMaxZoom: function (e) { if (e >= this.minZoom) { this.maxZoom = e } }, dispatcher: function (jU, jT, T) { var i = new fy(T); i.pixel = jU.pixel; i.latLng = jU.latlng; i.value = jT; this.dispatchEvent(i) }, hasEvent: function (e) { if (this.enablePicked) { if (e.substr(0, 2) !== "on") { e += "on" } if (this._listeners[e] && Object.keys(this._listeners[e]).length > 0) { return true } return false } return false }, toString: function () { return "normal" } }); function dS(e) { e = e || {}; ci.call(this, e); this.base_opt = { idKey: "id", crs: "BD09LL", isFlat: true, drawPart: 1, selectedIndex: -1, selectedColor: "rgba(20, 20, 200, 1.0)" }; this.setBaseOptions(e); this._float32ArrayForPolyline = new Float32Array(65535); this._uint16ArrayForPolyline = new Uint16Array(65535); this.loadModule = false; this._stateCube = {}; this.def = []; this.DEL_COUNT = 100; this.delIndexs = []; var i = this; gO.load("mvtParse", function () { i._async() }, true); this.select_color = this.getColorStyleForGL(this.base_opt.selectedColor) } dS.inherits(ci, "FeatureLayer"); eN.extend(dS.prototype, { _async: function () { this.loadModule = true; this.resolveStyle(); this.parseData() }, compileExpress: function (i, e) { var i = dY.ExpressParse.normalizePropertyExpression(i, e); return i }, resolveStyle: function () { var e = this.style_opt || {}; if (e && this.type && cT[this.type]) { var T = {}; for (var i in e) { var jU = cT[this.type][i]; if (e.hasOwnProperty(i) && jU !== undefined) { var jT = this.compileExpress(e[i], jU); T[i] = jT } } this.styleExpress = T } }, evaluateContext: function (e, T) { var i = T.id || e; var jT = this._stateCube[i]; return { properties: function () { return T && T.properties }, featureState: jT || {} } }, evaluates: function (i, jT) { if (!this.styleExpress) { return null } var jV = this.styleExpress; var e = {}; for (var T in jV) { if (jV.hasOwnProperty(T)) { var jU = jV[T].evaluate(this.evaluateContext(i, jT)); e[T] = jU } } return e }, _updateState: function (T, i, e) { if (e) { this._set(i, this._stateCube, T) } else { this._stateCube[T] = i } }, _set: function (i, jU, T) { var jT = jU[T] || (jU[T] = {}); for (var e in i) { jT[e] = i[e] } }, updateState: function (jU, jV, e) { var T = JSON.stringify(this._stateCube); if (!(jV && typeof jV === "object" && Object.keys(jV).length > 0)) { return } if (!e) { this._stateCube = {} } if (jU instanceof Array) { for (var jT = 0; jT < jU.length; jT++) { this._updateState(jU[jT], jV, e) } } else { this._updateState(jU, jV, e) } var jW = JSON.stringify(this._stateCube); if (T !== jW) { this.parseData() } if (this.attach) { this.attach.updateState(jU, jV, e) } }, replaceAllState: function (e) { var i = JSON.stringify(this._stateCube); this._stateCube = e; var T = JSON.stringify(this._stateCube); if (i !== T) { this.parseData() } }, getAllState: function () { return this._stateCube }, removeState: function (jT) { var e = JSON.stringify(this._stateCube); if (jT instanceof Array) { for (var T = 0; T < jT.length; T++) { delete this._stateCube[jT[T]] } } else { delete this._stateCube[jT] } var jU = JSON.stringify(this._stateCube); if (e !== jU) { this.parseData() } }, clearState: function () { var e = JSON.stringify(this._stateCube); if (e !== "{}") { this._stateCube = {}; this.parseData() } }, getType: function () { return "feature" }, setData: function (e, i) { i = i || {}; this.data = e; this.delIndexs = []; this._stateCube = {}; this.parseData && this.parseData() }, getData: function () { return this.data }, addDelIndex: function (T) { if (this.delIndexs.length >= this.DEL_COUNT) { new Error("超出" + this.DEL_COUNT + "个限制") } var e = false; for (var jT = 0; jT < this.delIndexs.length; jT++) { if (this.delIndexs[jT] === T) { e = true; break } } if (!e) { this.delIndexs.push(T); this.doOnceDraw() } if (this.attach) { this.attach.addDelIndex(T) } }, removeDelIndex: function (e) { for (var T = 0; T < this.delIndexs.length; T++) { if (this.delIndexs[T] === e) { this.delIndexs.splice(T, 1); this.doOnceDraw(); return } } if (this.attach) { this.attach.removeDelIndex(e) } }, clearDelIndex: function () { this.delIndexs = []; this.doOnceDraw(); if (this.attach) { this.attach.clearDelIndex() } }, setBaseOptions: function (i) { i = i || {}; var e = Object.assign({}, this.getBaseOptions()); Object.assign(this.base_opt, i); this.onOptionsChanged && this.onOptionsChanged(this.getBaseOptions(), e); if (i.data) { this.setData(i.data); delete i.data } }, setStyleOptions: function (i) { i = i || {}; var e = Object.assign({}, this.getStyleOptions()); Object.assign(this.style_opt, i); this.onOptionsChanged && this.onOptionsChanged(this.getStyleOptions(), e); if (i.data) { this.setData(i.data); delete i.data } else { if (i.autoRender !== false) { } } }, getBaseOptions: function () { return this.base_opt || {} }, getStyleOptions: function () { return this.style_opt || {} }, getProperty: function (e, jT, T) { if (Object.prototype.toString.call(jT) === "[object Function]") { return jT(T) } else { var i = T[e] || jT; if ("properties" in T && e in T.properties) { i = T.properties[e] } return i } }, getPickedItem: function (i, e) { if (e === "onmousemove" && this.autoSelect) { this.selectedIndex = i } var T = this.dataset ? this.dataset.normal : []; return { dataIndex: i, dataItem: T[i] } }, formatData: function (i) { var e = new gk({ reference: this.base_opt.crs }); var T = e.readFeaturesFromObject(i, { isPoints: true }); return { normal: i.features, inner: T } }, getColorStyleForGL: function (jT, e, T) { var i = hm.formatColorCssToRgbaArray(jT, e, T); return i }, _toFormatPolGeometry: function (jU, e) { var jT = []; if (!e) { jT[0] = this._toFormatCoords(jU) } else { for (var T = 0; T < jU.length; T++) { jT.push(this._toFormatCoords(jU[T])) } } return jT }, _toFormatCoords: function (jZ) { var jY = []; var jV = []; jY.pointsArray = jV; var j0 = iS.convertLL2MC(jZ[0]); var e = this.map._normalLayerMgr.base; var jX = [j0.lng - e.lng, j0.lat - e.lat]; jY.push(jX); jV.push(jX[0], jX[1]); for (var jU = 1, jT = 1, T = jZ.length; jU < T; jU++) { j0 = iS.convertLL2MC(jZ[jU]); var jW = [j0.lng - e.lng, j0.lat - e.lat]; if (jW[0] !== jY[jT - 1][0] || jW[1] !== jY[jT - 1][1]) { jY.push(jW); jV.push(jW[0], jW[1]); jT++ } } return jY }, onKill: function () { this._float32ArrayForPolyline = null; this._uint16ArrayForPolyline = null }, onDestroy: function () { this._stateCube = {}; this.delIndexs.length = 0 }, toString: function () { return "FeatureLayer" } }); function bQ(e) { e = e || {}; this.type = "polyline"; this.style_opt = { sequence: false, marginLength: 16, strokeColor: "rgba(25, 25, 250, 1)", strokeWeight: 2, borderColor: "rgba(27, 142, 236, 1)", borderWeight: 0, borderMask: true, strokeOpacity: 1, strokeLineJoin: "round", strokeLineCap: "square", strokeTextureUrl: "", strokeTextureWidth: 16, strokeTextureHeight: 16, strokeStyle: "solid", dashArray: [8, 4] }; this.setStyleOptions(e.style || {}); this._bufferArray = []; this._texture = {}; dS.call(this, e) } bQ.inherits(dS, "LineLayer"); eN.extend(bQ.prototype, { onAdd: function (e, i) { if (!this.map) { this.map = e; this.gl = i } if (!this.buffer) { this.parseData() } }, parseData: function () { if (!this.loadModule || !this.styleExpress) { return } var i = this.getData(); if (!i) { return } var T = this.dataset = this.formatData(i); var e = this.linesParse(T.inner); this.lines = this.combineLine(e); this.buffer = this.createBufferData(this.lines); this.doOnceDraw() }, linesParse: function (j1) { var jY = [[], []]; for (var j0 = 0; j0 < j1.length; j0++) { var jZ = j1[j0].points; var T = false; if (!(jZ[0] instanceof ct)) { T = true } var j3 = j1[j0].properties || {}; var j4 = j3.hasOwnProperty(this.base_opt.idKey) ? j3[this.base_opt.idKey] : false; var jV = j0; if (j1[j0].index !== undefined) { jV = j1[j0].index } var e = this.evaluates(jV, { properties: j3, id: j4 }); e = Object.assign(JSON.parse(JSON.stringify(co[this.type])), e || {}); if (e.borderWeight !== 0) { var jW = this.getColorStyleForGL(e.borderColor, undefined, false); if (e.borderWeight < 0) { this.style_opt.borderMask = false } var jU = e.strokeWeight / 2 + e.borderWeight; if (jU > 0) { var j5 = this.buildLineVertex(e, j1[j0], T, jU, jW); jY[0][jY[0].length] = { index: jV, styleData: j5, textureKey: -1, texture: null, textureSize: null, zoomWithMap: true, overlay: { _config: { textureRepeat: true }, _totalDashLen: null, } } } } var jT = e.strokeWeight / 2; var jX = this.getColorStyleForGL(e.strokeColor, e.strokeOpacity, false); var j5 = this.buildLineVertex(e, j1[j0], T, jT, jX); var j6 = this._generateTexture(e) || {}; var j2 = j6.value || null; jY[1][jY[1].length] = { index: jV, styleData: j5, textureKey: j6.key || -1, texture: j2 ? j2.texture : null, textureSize: j2 ? j2.textureSize : null, zoomWithMap: true, overlay: { _config: { textureRepeat: true }, _totalDashLen: j2 ? j2.totalDashLen : null, } } } return jY }, combineLine: function (jV) { var e = []; for (var T = 0; T < jV.length; T++) { var jU = {}; var jW = jV[T]; for (var jT = 0; jT < jW.length; jT++) { if (!jU[jW[jT].textureKey]) { jU[jW[jT].textureKey] = [{ style: [], styleData: [[], []] }] } this._mergeOnePolylineData(jU[jW[jT].textureKey], jW[jT]) } e.push(jU) } return e }, _mergeOnePolylineData: function (e, j4) { var j2 = e.length - 1; var jU = e[j2]; var i = e[j2]["styleData"][0]; var jZ = e[j2]["styleData"][1]; var j0 = 10; for (var jT = 0; jT < j4.styleData.length; jT++) { var T = j4.styleData[jT]; var j3 = T[0]; var jW = T[1]; var jY = i.length / j0; var j1 = j3.length / (j0 - 1); if (jY + j1 > 65536) { j2++; jU = e[j2] = { style: [], styleData: [[], []], texture: null, textureSize: null, zoomWithMap: null, overlay: null }; i = jU.styleData[0]; jZ = jU.styleData[1]; jY = 0 } if (jU.styleData[0].length === 0) { jU.texture = j4.texture; jU.textureSize = j4.textureSize; jU.zoomWithMap = j4.zoomWithMap; jU.overlay = j4.overlay } for (var jX = 0; jX < j1; jX++) { i[i.length] = j3[jX * (j0 - 1)]; i[i.length] = j3[jX * (j0 - 1) + 1]; i[i.length] = j3[jX * (j0 - 1) + 2]; i[i.length] = j3[jX * (j0 - 1) + 3]; i[i.length] = j3[jX * (j0 - 1) + 4]; i[i.length] = j3[jX * (j0 - 1) + 5]; i[i.length] = j3[jX * (j0 - 1) + 6]; i[i.length] = j3[jX * (j0 - 1) + 7]; i[i.length] = j3[jX * (j0 - 1) + 8]; i[i.length] = j4.index } for (var jV = 0; jV < jW.length; jV++) { jZ[jZ.length] = jW[jV] + jY } } }, buildLineVertex: function (T, j4, jT, jU, jW) { var jY = []; var j2 = []; var j5 = []; var jZ = j4.points; var j3 = T.strokeLineCap; var e = T.strokeLineJoin; var jV = ii.JOININDEX[e]; var j1 = ii.CAPINDEX[j3]; var j0 = this._toFormatPolGeometry(jZ, jT); for (var jX = 0; jX < j0.length; jX++) { if (j0[jX].length < 2) { continue } if (jY.length / 6 + ga.getVertexCount(j0[jX].length) > 65536) { j5.push([jY, j2]); jY = []; j2 = [] } ga.buildData(j0[jX], jV, j1, jY, j2, jW, jU) } j5.push([jY, j2]); return j5 }, createBuffer: function (e, T) { if (T) { if (e) { if (e.length > T.length) { T = new Float32Array(e.length) } T.set(e) } } var jT = 13; var i = [{ name: "a_pos", components: 2, offset: 0, type: "Float32" }, { name: "a_normal", components: 2, offset: 8, type: "Float32" }, { name: "a_color", components: 4, offset: 16, type: "Uint8", normalize: true }, { name: "a_data", components: 4, offset: 20, type: "Float32" }, { name: "a_id", components: 1, offset: 36, type: "Float32" }]; return new w(T, { components: jT, members: i }, w.BufferType.VERTEX) }, createBufferData: function (jZ) { var jW = []; var jX = 0; for (var jT = 0; jT < jZ.length; jT++) { var j0 = jZ[jT]; var jY = []; for (var j2 in j0) { if (!j0.hasOwnProperty(j2)) { continue } var jV = j0[j2]; for (var jU = 0; jU < jV.length; jU++) { var e = jV[jU].styleData[0]; var T = jV[jU].styleData[1]; if (e.length === 0) { continue } if (!this._bufferArray[jY.length + jX]) { this._bufferArray[jY.length + jX] = { vertex: null, element1: null, vao1: null } } var j1 = this._bufferArray[jY.length + jX]; j1.textureKey = j2; if (!j1.vertex) { j1.vertex = this.createBuffer(e, this._float32ArrayForPolyline) } this._uint16ArrayForPolyline = new Uint16Array(T.length); this._uint16ArrayForPolyline.set(T); if (!j1.element1) { j1.element1 = new w(this._uint16ArrayForPolyline, { components: 1 }, w.BufferType.ELEMENT, T.length) } if (!j1.vao1) { j1.vao1 = new dF() } this._float32ArrayForPolyline = new Float32Array(e); this._float32ArrayForPolyline.set(e); j1.vao1.update(this.gl, j1.vertex, this._float32ArrayForPolyline, e.length, j1.element1, this._uint16ArrayForPolyline, T.length); jY.push(j1) } } jX += jY.length; jW.push(jY) } return jW }, _generateTexture: function (jT) { if (jT.strokeTextureUrl) { var jU = jT.strokeTextureUrl + "_" + jT.strokeWeight; if (this._texture[jU]) { return { key: jU, value: this._texture[jU] } } var jW = jT.strokeTextureUrl; var jV = jT.strokeTextureWidth || 16; var i = jT.strokeTextureHeight || 16; var jX = jT.strokeWeight * Math.round(i / jV); var e = { totalDashLen: jX, texture: jW, textureSize: [jV, i] }; this._texture[jU] = e; return { key: jU, value: e } } if (jT.strokeStyle === "dashed" || jT.strokeStyle === "dotted") { var jU = [jT.strokeStyle, jT.strokeWeight, jT.strokeColor, jT.strokeOpacity, jT.dashArray.join(",")]; jU = jU.join("-"); if (this._texture[jU]) { return { key: jU, value: this._texture[jU] } } jT.sync = true; var T = this; dY._generateTexture(null, jT, function (jZ, jY) { T._texture[jU] = jY }); return { key: jU, value: this._texture[jU] } } return null }, preRender: function (T, i, e) { }, render: function (jW, jT, jV) { if (!this.buffer) { return } jV = jV || {}; this.pickModel = jV.isPickRender || false; var T = this.map._webglPainter; var e = T._state; if (this.buffer[0].length > 0) { if (this.style_opt.borderMask) { jW.clear(jW.STENCIL_BUFFER_BIT); jW.stencilFunc(jW.ALWAYS, 1, 255); e.stencilOp(jW.KEEP, jW.KEEP, jW.REPLACE); jW.stencilMask(255); e.colorMask(false, false, false, false); for (var jU = 0; jU < this.buffer[1].length; jU++) { this.drawLine(T, this.buffer[1][jU], true) } jW.stencilFunc(jW.NOTEQUAL, 1, 255); jW.stencilMask(0); e.stencilOp(jW.KEEP, jW.KEEP, jW.KEEP); e.colorMask(true, true, true, true); for (var jU = 0; jU < this.buffer[0].length; jU++) { this.drawLine(T, this.buffer[0][jU], false) } jW.clear(jW.STENCIL_BUFFER_BIT); jW.stencilMask(255); jW.stencilFunc(jW.ALWAYS, 1, 255); for (var jU = 0; jU < this.buffer[1].length; jU++) { this.drawLine(T, this.buffer[1][jU], false, true) } return } else { for (var jU = 0; jU < this.buffer[0].length; jU++) { this.drawLine(T, this.buffer[0][jU], false) } } } for (var jU = 0; jU < this.buffer[1].length; jU++) { this.drawLine(T, this.buffer[1][jU], false) } }, drawLine: function (j9, j2, j6, kb) { if (j2.element1 && j2.element1.length === 0) { return } var j7 = j9.gl; var jT = j9.programMgr.useProgram("linelayer", { def: this.def }); var jX = this._texture[j2.textureKey]; var jY = null; var ka = 0; var j0 = this.map.getZoom(); var jZ = this; if (jX) { var j1 = jX.texture; if (j1 instanceof HTMLCanvasElement || (window.ImageBitmap && j1 instanceof window.ImageBitmap)) { if (!jX.glTexture) { jX.glTexture = dJ.utils.createTexture(j7, j1, { flipY: false, wrap: j7.REPEAT, mipmap: true, unpackAlpha: true }) } jY = jX.glTexture } else { if (!jX.glTexture) { jX.glTexture = { status: "init" }; var kd = new Image(); kd.crossOrigin = "anonymous"; kd.onload = function () { jX.glTexture.texture = dJ.utils.createTexture(j7, this, { flipY: false, wrap: j7.REPEAT, mipmap: true, unpackAlpha: true }); jX.glTexture.status = "done"; jZ.doOnceDraw() }; kd.src = j1 } if (jX.glTexture.status !== "done") { return } jY = jX.glTexture.texture } j9._state.activeTexture(j7.TEXTURE4); j7.bindTexture(j7.TEXTURE_2D, jY); if (jT.uniforms.lastSampler !== 4) { j7.uniform1i(jT.uniforms.u_image, 4); jT.uniforms.lastSampler = 4 } ka = jX.totalDashLen } var T = this.opacity; if (jT.lastState.opacity !== T) { j7.uniform1f(jT.uniforms.u_opacity, T); jT.lastState.opacity = T } var jU = this.style_opt.sequence; if (jT.lastState.sequence !== jU) { j7.uniform1i(jT.uniforms.u_sequence, jU); jT.lastState.sequence = jU } var e = this.style_opt.marginLength; if (jT.lastState.marginLength !== e) { j7.uniform1f(jT.uniforms.u_margin_length, e); jT.lastState.marginLength = e } if (jT.lastState.dash !== ka) { j7.uniform1f(jT.uniforms.u_dash_length, ka); jT.lastState.dash = ka } if (jT.lastState.mapZoom !== j0) { j7.uniform1f(jT.uniforms.u_map_zoom, j0); jT.lastState.mapZoom = j0 } var j3 = j9._camera._modelViewMatrixLayer; if (!jT.lastState.projMatrix) { j7.uniformMatrix4fv(jT.uniforms.u_proj_matrix, false, j9.projMatrix); jT.lastState.projMatrix = true } j7.uniformMatrix4fv(jT.uniforms.u_mv_matrix, false, j3); var kc = Math.pow(2, 18 - this.map.getZoom()); if (jT.lastState.scale !== kc) { j7.uniform1f(jT.uniforms.u_scale, kc); jT.lastState.scale = kc } var jW = this.base_opt.isFlat; if (jT.lastState.isFlat !== jW) { j7.uniform1i(jT.uniforms.u_flat, jW); jT.lastState.isFlat = jW } var j5 = this.base_opt.drawPart || 1; if (jT.lastState.drawPart !== j5) { j7.uniform1i(jT.uniforms.u_draw_part, j5); jT.lastState.drawPart = j5 } var jV = j9._camera._far || 4000; if (jT.lastState.cameraFar !== jV) { j7.uniform1f(jT.uniforms.u_camera_far, jV); jT.lastState.cameraFar = jV } j7.uniform1i(jT.uniforms.u_no_gradual, kb || false); j7.uniform1i(jT.uniforms.u_pick_model, j6 || this.pickModel); if (jT.lastState.selectColor !== this.select_color) { j7.uniform4fv(jT.uniforms.u_pick_color, this.select_color); jT.lastState.selectColor = this.select_color } if (jT.lastState.pickTag !== this.selectedIndex) { j7.uniform1i(jT.uniforms.u_pick_tag, this.selectedIndex + 1); jT.lastState.pickTag = this.selectedIndex } var j8 = new Int16Array(this.DEL_COUNT); if (this.delIndexs.length) { for (var j4 = 0; j4 < this.delIndexs.length && j4 < this.DEL_COUNT; j4++) { j8[j4] = this.delIndexs[j4] } } j7.uniform1iv(jT.uniforms["u_del_tags[0]"], j8); j2.vao1.bind(j7, jT, j2.vertex, j2.element1); j7.drawElements(j7.TRIANGLES, j2.element1.length, j7.UNSIGNED_SHORT, 0); tags = null }, onDestroy: function (e, i) { this.lines = null; this.buffer = null; this._bufferArray = []; this._texture = {}; dS.prototype.onDestroy.call(this) }, toString: function () { return "LineLayer" } }); function dR(e) { e = e || {}; this.type = "polygon"; this.style_opt = { fillColor: "#142655", fillOpacity: 1, pattern: false, patternMask: true, patternUrl: "", patternMapping: "0, 0, 32, 32", patternScale: 1, patternOffset: "0, 0" }; this.setStyleOptions(e.style || {}); this._bufferArray = []; this._texture = null; dS.call(this, e); e.border = e.border === undefined ? true : e.border; if (e.border) { var i = JSON.parse(JSON.stringify(e)); i = Object.assign(i, { enablePicked: false, autoSelect: false }); this.attach = new bQ(i) } } dR.inherits(dS, "FillLayer"); eN.extend(dR.prototype, { onAdd: function (e, i) { if (this.attach) { this.attach.onAdd(e, i) } if (!this.map) { this.map = e; this.gl = i } if (!this.buffer) { this.parseData() } }, parseData: function () { if (!this.loadModule || !this.styleExpress || !this.map) { return } var i = this.getData(); if (!i) { return } if (this.attach) { this.attach.setData(i) } var T = this.dataset = this.formatData(i); var e = this.fillsParse(T.inner); this.fills = this.combineFill(e); this.buffer = this.createBufferData(this.fills); this.doOnceDraw() }, fillsParse: function (j0) { var j7 = []; for (var jZ = 0; jZ < j0.length; jZ++) { var jY = j0[jZ].points; var T = false; if (!(jY[0] instanceof ct)) { T = true } var j4 = j0[jZ].properties || {}; var j6 = j4.hasOwnProperty(this.base_opt.idKey) ? j4[this.base_opt.idKey] : false; var jV = jZ; if (j0[jZ].index !== undefined) { jV = j0[jZ].index } var e = this.evaluates(jV, { properties: j4, id: j6 }); e = Object.assign(JSON.parse(JSON.stringify(co[this.type])), e || {}); var j5 = this.getColorStyleForGL(e.fillColor, e.fillOpacity, true).join(","); var j3 = []; if (this.style_opt.pattern && this.style_opt.patternUrl) { j3 = [e.patternMapping.split(","), e.patternScale, e.patternOffset.split(",")] } var jU = this.buildFillVertex(jY, T); var j2 = jU[0].length / 2 * 3; var jW = new Float32Array(j2); var j1 = 0; for (var jX = 0; jX < jU[0].length; jX++) { jW[j1] = jU[0][jX]; j1++; if ((jX + 1) % 2 === 0) { jW[j1] = jV; j1++ } } var jT = [j5, jW, jU[1], j3]; jT.hasMultipleParts = T; j7.push(jT) } return j7 }, buildFillVertex: function (jT, e) { var jZ = this._toFormatPolGeometry(jT, e); var j0 = []; var jW; var jX = []; var jV = 0; for (var jU = 0; jU < jZ.length; jU++) { if (jU > 0) { jV += jZ[jU - 1].length } jW = hn(jZ[jU].pointsArray, null, null, jV); for (var T = 0, jY = jW.length; T < jY; T += 3) { j0.push(jW[T], jW[T + 1], jW[T + 2]) } jX = jX.concat(jZ[jU].pointsArray) } var j1 = [new Float32Array(jX), new Uint16Array(j0)]; return j1 }, combineFill: function (T) { var jY = {}; var e = []; for (var jV = 0; jV < T.length; jV++) { var jX = this._cloneFill(T[jV]); if (jX.hasMultipleParts) { e.push(jX) } else { var jU = jX[0] + "_" + jX[3].join("-"); if (jY[jU]) { if ((jY[jU][1].length + jX[1].length) / 3 < 65536) { this.mergeDataItem(jY[jU], jX, jY[jU][1].length / 3) } else { e.push(this._cloneFill(jY[jU])); jY[jU] = jX } } else { jY[jU] = jX } } } var jW = Object.keys(jY); for (var jT = 0; jT < jW.length; jT++) { e.push(jY[jW[jT]]) } return e }, _cloneFill: function (jU) { var jT = jU[1].constructor; var i = new jT(jU[1].length); i.set(jU[1], 0); var jV = jU[2].constructor; var T = new jV(jU[2].length); T.set(jU[2], 0); var e = [jU[0], i, T, jU[3]]; if (jU.hasMultipleParts) { e.hasMultipleParts = jU.hasMultipleParts } return e }, mergeDataItem: function (e, jV, T) { var i = e[1]; var jU = jV[1]; var jT = e[2]; var jW = jV[2]; e[1] = this.concatTypedArray(i, jU); e[2] = this.concatTypedArray(jT, jW, T); return e }, concatTypedArray: function (e, jW, jV) { if (e.constructor === ArrayBuffer) { var jT = new Uint8Array(e.byteLength + jW.byteLength); jT.set(new Uint8Array(e), 0); jT.set(new Uint8Array(jW), e.byteLength); return jT.buffer } else { var jU = e.constructor; var jT = new jU(e.length + jW.length); jT.set(e, 0); if (jV) { for (var T = 0; T < jW.length; T++) { jW[T] += jV } } jT.set(jW, e.length); return jT } }, createBuffer: function (i) { var T = 3; var e = [{ name: "a_pos", components: 2, offset: 0, type: "Float32" }, { name: "a_id", components: 1, offset: 8, type: "Float32" }]; return new w(i, { components: T, members: e }, w.BufferType.VERTEX) }, createBufferData: function (jV) { var jW = []; for (var T = 0; T < jV.length; T++) { var jU = jV[T][1]; var e = jV[T][2]; if (!this._bufferArray[jW.length]) { this._bufferArray[jW.length] = { vertex: null, element1: null, vao1: null }; var jT = this._bufferArray[jW.length]; jT.vertex = this.createBuffer(jU); jT.element1 = new w(e, { components: 1 }, w.BufferType.ELEMENT, e.length); jT.vao1 = new dF() } else { var jT = this._bufferArray[jW.length]; jT.vao1.update(this.gl, jT.vertex, jU, jU.length, jT.element1, e, e.length) } jW.push(jT) } return jW }, preRender: function (T, i, e) { }, render: function (jV, jX, e) { if (!this.buffer) { return } e = e || {}; if (this.style_opt.pattern && this.style_opt.patternUrl) { if (!this._texture) { this._texture = { status: "init" }; var jZ = this; var jU = new Image(); jU.crossOrigin = "anonymous"; jU.onload = function () { jZ._texture = dJ.utils.createTexture(jV, this, { flipY: true, wrap: jV.REPEAT, mipmap: false, unpackAlpha: true }); jZ._texture.size = [this.width, this.height]; jZ._texture.status = "done"; jZ.doOnceDraw() }; jU.src = this.style_opt.patternUrl } if (this._texture.status !== "done") { return } } this.pickModel = e.isPickRender || false; var jY = this.map._webglPainter; var j0 = jY._state; for (var jT = 0; jT < this.buffer.length; jT++) { var T = this.fills[jT][0]; T = T.split(","); T = [T[0] / 255, T[1] / 255, T[2] / 255, parseFloat(T[3])]; var jW = this.fills[jT][3]; if (this.fills[jT].hasMultipleParts) { jV.clear(jV.STENCIL_BUFFER_BIT); jV.stencilFunc(jV.NEVER, 0, 255); j0.stencilOp(jV.INVERT, jV.INVERT, jV.INVERT); jV.stencilMask(255); j0.colorMask(false, false, false, false); this.drawFill(jY, this.buffer[jT], T, jW); jV.stencilFunc(jV.EQUAL, 255, 255); jV.stencilMask(0); j0.stencilOp(jV.KEEP, jV.KEEP, jV.KEEP); j0.colorMask(true, true, true, true); this.drawFill(jY, this.buffer[jT], T, jW); jV.clear(jV.STENCIL_BUFFER_BIT); jV.stencilMask(255); jV.stencilFunc(jV.ALWAYS, 1, 255) } else { this.drawFill(jY, this.buffer[jT], T, jW) } } if (this.attach) { this.attach.render(jV, jX, e) } }, drawFill: function (j9, j1, j2, j7) { if (j1.element1 && j1.element1.length === 0) { return } var j6 = j9.gl; var jV = j9.programMgr.useProgram("filllayer", { def: this.def }); var j3 = j9._camera._modelViewMatrixLayer; if (!jV.lastState.projMatrix) { j6.uniformMatrix4fv(jV.uniforms.u_proj_matrix, false, j9.projMatrix); jV.lastState.projMatrix = true } j6.uniformMatrix4fv(jV.uniforms.u_mv_matrix, false, j3); j6.uniform4fv(jV.uniforms.u_color, j2); var T = this.opacity; if (jV.lastState.opacity !== T) { j6.uniform1f(jV.uniforms.u_opacity, T); jV.lastState.opacity = T } var jW = this.style_opt.pattern; if (jW && this._texture) { j9._state.activeTexture(j6.TEXTURE5); j6.bindTexture(j6.TEXTURE_2D, this._texture); if (jV.uniforms.lastSampler !== 5) { j6.uniform1i(jV.uniforms.u_image, 5); jV.uniforms.lastSampler = 5 } var jZ = this._texture.size; if (jV.lastState.size !== jZ) { j6.uniform2fv(jV.uniforms.u_size, jZ); jV.lastState.size = jZ } } if (jV.lastState.pattern !== jW) { j6.uniform1i(jV.uniforms.u_pattern, jW); jV.lastState.pattern = jW } var jT = this.style_opt.patternMask; if (jV.lastState.patternMask !== jT) { j6.uniform1i(jV.uniforms.u_pattern_mask, jT); jV.lastState.patternMask = jT } var j0 = this.map.getZoom(); if (jV.lastState.mapZoom !== j0) { j6.uniform1f(jV.uniforms.u_map_zoom, j0); jV.lastState.mapZoom = j0 } var e = j7.length >= 3 ? j7[0] : [0, 0, 0, 0]; if (jV.lastState.bound !== e) { j6.uniform4fv(jV.uniforms.u_bound, e); jV.lastState.bound = e } var ka = j7.length >= 3 ? j7[1] : 0; if (jV.lastState.scale !== ka) { j6.uniform1f(jV.uniforms.u_scale, ka); jV.lastState.scale = ka } var jU = j7.length >= 3 ? j7[2] : [0, 0]; if (jV.lastState.offset !== jU) { j6.uniform2fv(jV.uniforms.u_offset, jU); jV.lastState.offset = jU } var jY = this.base_opt.isFlat; if (jV.lastState.isFlat !== jY) { j6.uniform1i(jV.uniforms.u_flat, jY); jV.lastState.isFlat = jY } var j5 = this.base_opt.drawPart || 1; if (jV.lastState.drawPart !== j5) { j6.uniform1i(jV.uniforms.u_draw_part, j5); jV.lastState.drawPart = j5 } var jX = j9._camera._far || 4000; if (jV.lastState.cameraFar !== jX) { j6.uniform1f(jV.uniforms.u_camera_far, jX); jV.lastState.cameraFar = jX } j6.uniform1i(jV.uniforms.u_pick_model, this.pickModel); if (jV.lastState.selectColor !== this.select_color) { j6.uniform4fv(jV.uniforms.u_pick_color, this.select_color); jV.lastState.selectColor = this.select_color } if (jV.lastState.pickTag !== this.selectedIndex) { j6.uniform1i(jV.uniforms.u_pick_tag, this.selectedIndex + 1); jV.lastState.pickTag = this.selectedIndex } var j8 = new Int16Array(this.DEL_COUNT); if (this.delIndexs.length) { for (var j4 = 0; j4 < this.delIndexs.length && j4 < this.DEL_COUNT; j4++) { j8[j4] = this.delIndexs[j4] } } j6.uniform1iv(jV.uniforms["u_del_tags[0]"], j8); j1.vao1.bind(j6, jV, j1.vertex, j1.element1); j6.drawElements(j6.TRIANGLES, j1.element1.length, j6.UNSIGNED_SHORT, 0); tags = null }, onDestroy: function (e, i) { this.fills = null; this.buffer = null; this._bufferArray = []; this._texture = null; dS.prototype.onDestroy.call(this); if (this.attach) { this.attach.onDestroy() } }, toString: function () { return "FillLayer" } }); bw.register(function (i) { if (i.config && i.config.isOverviewMap) { return } if (i.isLoaded()) { J(i) } else { i.addEventListener("load", function () { J(this) }) } i.cityName = "中国"; i.cCode = "1"; var e = {}; e.enableRequest = true; e.request = function () { if (e.enableRequest) { e.enableRequest = false; setTimeout(function () { e._request() }, 500) } }; e._request = function () { var jT = i.getBoundsIn(); if (!jT) { return } var jV = i.getZoom(); var T = jT.getSouthWest(); var jU = jT.getNorthEast(); jC.request(function (jZ) { if (jZ.current_city["code"] >= 9000 && jZ.current_city["code"] <= 9378) { jZ.current_city["name"] = "台湾省" } if (jZ.current_city["code"] >= 20000 && jZ.current_city["code"] <= 20499) { jZ.current_city["name"] = "新加坡" } if (jZ.current_city["code"] >= 20500 && jZ.current_city["code"] <= 25999) { jZ.current_city["name"] = "泰国" } if (jZ.current_city["code"] >= 26000 && jZ.current_city["code"] <= 29999) { jZ.current_city["name"] = "日本" } if (jZ.current_city["code"] >= 30000 && jZ.current_city["code"] <= 30999) { jZ.current_city["name"] = "韩国" } if (jZ.current_city["code"] >= 31000 && jZ.current_city["code"] <= 37000) { jZ.current_city["name"] = "亚太" } if (jZ.current_city["code"] >= 46609 && jZ.current_city["code"] <= 52505) { jZ.current_city["name"] = "欧洲" } if (jZ.current_city["code"] >= 39509 && jZ.current_city["code"] <= 53500) { jZ.current_city["name"] = "南美洲" } if (jZ.current_city["code"] >= 54000 && jZ.current_city["code"] <= 70000) { jZ.current_city["name"] = "北美洲" } if (jZ.current_city["code"] === 54003 && jZ.current_city["code"] >= 60731 && jZ.current_city["code"] <= 61123) { jZ.current_city["name"] = "美国" } if (jZ.current_city["code"] === 54015 || jZ.current_city["code"] >= 57970 && jZ.current_city["code"] <= 60223) { jZ.current_city["name"] = "加拿大" } if (jZ.current_city["code"] === 54025 || jZ.current_city["code"] >= 54338 && jZ.current_city["code"] <= 57374) { jZ.current_city["name"] = "墨西哥" } e.enableRequest = true; if (jZ && jZ.current_city) { var jY = jZ.current_city["name"]; var jX = jZ.current_city["code"]; if (jX !== i.cCode) { var jW = new fy("oncitychange"); jW.name = jY; jW.code = jX; i.dispatchEvent(jW) } i.cityName = jY; i.cCode = jX; if (!bT()) { cV(i) } } }, { qt: "cen", b: T.lng + "," + T.lat + ";" + jU.lng + "," + jU.lat, l: jV }, "", "", true) }; i.addEventListener("load", function (T) { e.request() }); i.addEventListener("moveend", function (T) { e.request() }); i.addEventListener("zoomend", function (T) { e.request() }); e.request() }); function J(i) { if (i.temp.copyadded) { return } i.temp.copyadded = true; if (!i.cpyCtrl) { var jT = new iJ(2, 2); i.config.cpyCtrlOffset = jT; if (bT()) { jT.width = 72; jT.height = 0 } var T = new fT({ offset: jT, printable: true }); i.cpyCtrl = T } if (!bT()) { cV(i); i.addEventListener("maptypechange", function () { cV(i) }) } i.addControl(T); var e = new bz(); e._opts = { printable: true }; i.logoCtrl = e; i.addControl(e); i.addEventListener("resize", function () { if (this.getSize().width >= 300 && i.getSize().height >= 100) { e.show(); T.setOffset(i.config.cpyCtrlOffset) } else { e.hide(); T.setOffset(new iJ(4, 2)) } }); if (i.getSize().width >= 300 && i.getSize().height >= 100) { e.show() } else { e.hide(); T.setOffset(new iJ(4, 2)) } i.addEventListener("oncopyrightoffsetchange", function (jU) { i.logoCtrl.setOffset(jU.target.logo); i.cpyCtrl.setOffset(jU.target.cpy) }); i.dispatchEvent(new fy("oncopyrightaddend")) } function cV(j8) { if (!j8.cpyCtrl) { var kg = new iJ(2, 2); if (bT()) { kg.width = 72; kg.height = 0 } var kb = new fT({ offset: kg, printable: true }); j8.cpyCtrl = kb } var kp = j8.cityName || "中国"; var j9 = j8.getMapType(); var ka = ["常州市", "南昌市", "乌鲁木齐市", "无锡市", "福州市", "泉州市", "珠海市", "贵阳市"]; var j2 = ["北京市", "上海市", "广州市", "深圳市", "宁波市", "石家庄市", "沈阳市", "长春市", "青岛市", "温州市", "台州市", "金华市", "佛山市", "中山市", "昆明市", "南宁市", "苏州市", "西安市", "济南市", "郑州市", "合肥市", "呼和浩特市", "杭州市", "成都市", "武汉市", "长沙市", "天津市", "南京市", "重庆市", "大连市", "东莞市", "厦门市"]; var j4 = ["香港特别行政区"]; var jY = ["台湾省"]; var kh = ["日本"]; var kn = ["韩国"]; var kc = ["泰国"]; var kf = ["亚太"]; var jZ = ["新加坡"]; var ko = ["欧洲"]; var jT = ["南美洲"]; var kk = ["北美洲"]; var T = ["美国"]; var ke = ["墨西哥"]; var jW = ["加拿大"]; for (var kl in ka) { if (ka[kl] === kp) { var j5 = true; break } } for (var kl in j2) { if (j2[kl] === kp) { var jU = true; break } } for (var kl in j4) { if (j4[kl] === kp) { var kr = true; break } } if (jY[0] === kp) { var kj = true } if (jZ[0] === kp) { var i = true } if (kh[0] === kp) { var j1 = true } if (kn[0] === kp) { var j7 = true } if (kc[0] === kp) { var j6 = true } if (kf[0] === kp) { var jX = true } if (ko[0] === kp) { var j3 = true } if (jT[0] === kp) { var j0 = true } if (kk[0] === kp) { var e = true } if (T[0] === kp) { var km = true } if (jW[0] === kp) { var ki = true } if (ke[0] === kp) { var jV = true } var kq = ["&copy;&nbsp;2023 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "]; var kd = "rgba(255, 255, 255, 0.701961)"; if (j8.getZoom() <= 9) { kq = ["&copy;&nbsp;2023 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "] } else { if (kj) { kq = ["&copy;&nbsp;2023 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "] } else { if (j1 || j7) { kq = ["&copy;&nbsp;2023 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "] } else { if (i || j6) { kq = ["&copy;&nbsp;2023 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "] } else { if (jX) { kq = ["&copy;&nbsp;2023 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "] } else { if (j3) { kq = ["&copy;&nbsp;2023 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "] } else { if (j0) { kq = ["&copy;&nbsp;2023 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "] } else { if (e) { kq = ["&copy;&nbsp;2023 Baidu - GS(2021)6026号 - 甲测资字11111342 - 京ICP证030173号 - Data &copy; "] } } } } } } } } if (j8.getZoom() <= 9) { kq.push("百度智图"); kq.push(' &amp; <a target="_blank" href="http://www.openstreetmap.org/">OpenStreetMap</a>'); kq.push(' &amp; <a target="_blank" href="http://corporate.navteq.com/supplier_terms.html">HERE</a>'); if (j9 === BMAP_SATELLITE_MAP || j9 === BMAP_HYBRID_MAP) { kq.push(' &amp; <a target="_blank" href="http://www.eso.org/public/">ESO</a>'); kd = "rgba(0,0,0,.7)" } } else { if (j1 || j7) { kq.push('<a target="_blank" href="http://www.openstreetmap.org/">OpenStreetMap</a>') } else { if (i || j6) { kq.push('<a target="_blank" href="http://corporate.navteq.com/supplier_terms.html">HERE</a>') } else { if (jX) { kq.push('<a target="_blank" href="http://corporate.navteq.com/supplier_terms.html">HERE</a>'); kq.push(' &amp; <a target="_blank" href="https://www.mapbox.com/">Mapbox</a>') } else { if (j3) { kq.push('<a target="_blank" href="http://www.openstreetmap.org/">OpenStreetMap</a>'); kq.push(' &amp; <a target="_blank" href="https://www.mapbox.com/">Mapbox</a>') } else { if (j0) { kq.push('<a target="_blank" href="http://www.openstreetmap.org/">OpenStreetMap</a>'); kq.push(' &amp; <a target="_blank" href="https://www.mapbox.com/">Mapbox</a>') } else { if (km || jV || ki) { kq.push('<a target="_blank" href="http://corporate.navteq.com/supplier_terms.html">HERE</a>'); kq.push(' &amp; <a target="_blank" href="https://www.mapbox.com/">Mapbox</a>') } else { if (e) { kq.push('<a target="_blank" href="http://www.openstreetmap.org/">OpenStreetMap</a>'); kq.push(' &amp; <a target="_blank" href="https://www.mapbox.com/">Mapbox</a>') } else { kq.push("百度智图"); if (j5) { kq.push(' &amp; <a target="_blank" href="http://www.palmcity.cn/palmcity/">PalmCity</a>') } if (kr) { kq.push(' &amp; <a target="_blank" href="http://www.mapking.com/HongKong/eng/home/MapKing_Webmap.html">MapKing</a>') } if (kj) { kq.push(' &amp; <a target="_blank" href="http://corporate.navteq.com/supplier_terms.html">HERE</a>'); kq.push(' &amp; <a target="_blank" href="http://www.localking.com.tw/about/localking.aspx">樂客LocalKing</a>') } if (j9 === BMAP_SATELLITE_MAP || j9 === BMAP_HYBRID_MAP) { kd = "rgba(0,0,0,.7)" } } } } } } } } } kq.unshift('<span style="background: ' + kd + ';padding: 0px 1px;line-height: 16px;display: inline;height: 16px;">'); kq.push("</span>"); kq = kq.join(""); j8.cpyCtrl.addCopyright({ id: 1, content: kq }) } window.BMAP_STATUS_SUCCESS = 0; window.BMAP_STATUS_CITY_LIST = 1; window.BMAP_STATUS_UNKNOWN_LOCATION = 2; window.BMAP_STATUS_UNKNOWN_ROUTE = 3; window.BMAP_STATUS_INVALID_KEY = 4; window.BMAP_STATUS_INVALID_REQUEST = 5; window.BMAP_STATUS_PERMISSION_DENIED = 6; window.BMAP_STATUS_SERVICE_UNAVAILABLE = 7; window.BMAP_STATUS_TIMEOUT = 8; window.BMAP_ROUTE_TYPE_WALKING = 2; window.BMAP_ROUTE_TYPE_DRIVING = 3; window.BMAP_ROUTE_TYPE_RIDING = 6; window.BMAP_ROUTE_STATUS_NORMAL = 0; window.BMAP_ROUTE_STATUS_EMPTY = 1; window.BMAP_ROUTE_STATUS_ADDRESS = 2; var c7 = "cur"; var Y = "cen"; var I = "s"; var dp = "con"; var dg = "bd"; var cL = "nb"; var gL = "bt"; var aN = "nav"; var hS = "walk"; var fF = "gc"; var dL = "rgc"; var K = "dec"; var h8 = "iploc"; var gw = "bse"; var f2 = "nse"; var c4 = "bl"; var ee = "bsl"; var fC = "bda"; var eb = "sa"; var a6 = "nba"; var hZ = "drag"; var iK = "ext"; var jn = "exts"; var jq = "hip"; var hk = "ride"; var jA = "drct"; var fe = 2; var bd = 4; var fM = 7; var h0 = 11; var b4 = 12; var eI = 14; var cI = 15; var d1 = 18; var az = 20; var a5 = 21; var H = 19; var a = 23; var il = 26; var aB = 28; var f3 = 31; var eU = 35; var h9 = 44; var bb = 45; var aw = 46; var jl = 47; var f8 = -1; var a8 = 0; var bv = 1; var iP = 2; var dD = 3; window.BMAP_POI_TYPE_NORMAL = 0; var cx = 1; var h2 = 2; BMapGL.I = eN.I; var bF = {}; bF.removeHtml = function (e) { e = e.replace(/<\/?[^>]*>/g, ""); e = e.replace(/[ | ]* /g, " "); return e }; bF.parseGeoExtReg1 = function (e) { return e.replace(/([1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0|[1-9]\d*),([1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0|[1-9]\d*)(,)/g, "$1,$2;") }; bF.parseGeoExtReg2 = function (i, e) { var T = new RegExp("(((-?\\d+)(\\.\\d+)?),((-?\\d+)(\\.\\d+)?);)(((-?\\d+)(\\.\\d+)?),((-?\\d+)(\\.\\d+)?);){" + e + "}", "ig"); return i.replace(T, "$1") }; var dv = 0; var c6 = 1; var S = 2; bF.unique = function (T) { var jV = false; var jU = []; var jW = {}; for (var jT = 0, e = T.length; jT < e; jT++) { if (!jW[T[jT]]) { jW[T[jT]] = true; jU.push(T[jT]) } } return jU }; bF.getBestLevel = function (T, i) { if (i) { var e = Math.min(i.width / 1100, i.height / 660); T = Math.round(T + (Math.log(e) / Math.log(2))) } if (T < 1) { T = 1 } if (T > 21) { T = 21 } return T }; bF.parseGeo = function (jW, jZ) { if (typeof jW != "string" || !jW) { return } var j1 = jW.split("|"); var e; var jU; var T; if (j1.length == 1) { e = bY(jW) } else { e = bY(j1[2]); jU = bY(j1[0]); T = bY(j1[1]); if (!jZ) { return e } } var jX = { type: e.geoType }; if (jZ) { switch (jX.type) { case S: var jY = new ct(e.geo[0][0], e.geo[0][1]); var j0 = iS.convertMC2LL(jY); jX.point = j0; jX.points = [j0]; break; case c6: jX.points = []; var j2 = e.geo[0]; for (var jV = 0, jT = j2.length - 1; jV < jT; jV += 2) { var j3 = new ct(j2[jV], j2[jV + 1]); j3 = iS.convertMC2LL(j3); jX.points.push(j3) } jU = new ct(jU.geo[0][0], jU.geo[0][1]); T = new ct(T.geo[0][0], T.geo[0][1]); jU = iS.convertMC2LL(jU); T = iS.convertMC2LL(T); jX.bounds = new hJ(jU, T); break; default: break } } return jX }; bF.parseGeoExt = function (kc, j3) { if (!j3) { j3 = 0 } else { if (j3 < 0.25) { j3 = 0 } else { if (j3 > 0.25 && j3 < 1) { j3 = 1 } else { if (j3 > 32) { j3 = 32 } } } } var jY = kc.split("|"); if (jY.length == 1) { var jT = bY(jY[0]); return { type: jT.type, bound: "", points: jT.geo.join(",") } } else { if (jY.length > 1) { var j4 = kc.split(";.="); var j0 = []; var jU = []; var j5 = 0; var j9 = j4.length; for (var j6 = 0; j6 < j9; j6++) { var kb = j4[j6]; if (j9 > 1) { if (j6 == 0) { kb = kb + ";" } if (j6 > 0 && j6 < j9 - 1) { kb = ".=" + kb + ";" } if (j6 == j9 - 1) { kb = ".=" + kb } } var jV = kb.split("|"); var j8 = bY(jV[0]); var j7 = bY(jV[1]); j0.push(j8.geo.join(",")); j0.push(j7.geo.join(",")); var jT = bY(jV[2]); j5 = jT.type; var ka = jT.geo.join(","); ka = bF.parseGeoExtReg1(ka); if (j3 > 0) { ka = bF.parseGeoExtReg2(ka, j3) } jU.push(ka) } if (j9 <= 1) { jU = jU.join(";") } if (j9 == 2) { var T = jU[0] + ";" + jU[1]; var jW = T.split(";"); var e = []; for (var j6 = 0; j6 < jW.length; j6++) { var jZ = jW[j6].split(",")[0]; var jX = jW[j6].split(",")[1]; var j1 = new ct(jZ, jX); var j2 = iS.convertMC2LL(j1); e.push(j2) } jU = e } return { type: j5, bound: j0.join(";"), points: jU } } } }; bF.getPoiPoint = function (e) { var T = []; var i = null; if (e.toString() == "Point") { i = e } else { if (typeof e == "string") { T = eN.trim(e).split(","); if (T.length < 2) { return } T[0] = parseFloat(eN.trim(T[0])); T[1] = parseFloat(eN.trim(T[1])) } else { T = e.slice(0); if (T.length < 2) { return } } i = new BMap.Point(T[0], T[1]) } return i }; bF.parseGeoStr = function (T) { var i = T.split(","); var e = new ct(i[0], i[1]); return iS.convertMC2LL(e) }; bF.level = { country: 4, province: 11, city: 12, area: 13 }; var gX = ["=", ".", "-", "*"]; var c2 = 1 << 23; function bY(jZ) { var jY = hF(jZ.charAt(0)); var T = jZ.substr(1); var j1 = 0; var e = T.length; var j2 = []; var jW = []; var jX = []; while (j1 < e) { if (T.charAt(j1) == gX[0]) { if ((e - j1) < 13) { return 0 } jX = d0(T.substr(j1, 13), j2); if (jX < 0) { return 0 } j1 += 13 } else { if (T.charAt(j1) == ";") { jW.push(j2.slice(0)); j2.length = 0; ++j1 } else { if ((e - j1) < 8) { return 0 } jX = ca(T.substr(j1, 8), j2); if (jX < 0) { return 0 } j1 += 8 } } } for (var jV = 0, jT = jW.length; jV < jT; jV++) { for (var jU = 0, j0 = jW[jV].length; jU < j0; jU++) { jW[jV][jU] /= 100 } } return { geoType: jY, geo: jW } } function hF(i) { var e = -1; if (i == gX[1]) { e = S } else { if (i == gX[2]) { e = c6 } else { if (i == gX[3]) { e = dv } } } return e } function d0(jU, T) { var e = 0; var jW = 0; var jV = 0; for (var jT = 0; jT < 6; jT++) { jV = dn(jU.substr(1 + jT, 1)); if (jV < 0) { return -1 - jT } e += jV << (6 * jT); jV = dn(jU.substr(7 + jT, 1)); if (jV < 0) { return -7 - jT } jW += jV << (6 * jT) } T.push(e); T.push(jW); return 0 } function ca(jV, jT) { var T = jT.length; if (T < 2) { return -1 } var e = 0; var jX = 0; var jW = 0; for (var jU = 0; jU < 4; jU++) { jW = dn(jV.substr(jU, 1)); if (jW < 0) { return -1 - jU } e += jW << (6 * jU); jW = dn(jV.substr(4 + jU, 1)); if (jW < 0) { return -5 - jU } jX += jW << (6 * jU) } if (e > c2) { e = c2 - e } if (jX > c2) { jX = c2 - jX } jT.push(jT[T - 2] + e); jT.push(jT[T - 1] + jX); return 0 } function dn(i) { var e = i.charCodeAt(0); if (i >= "A" && i <= "Z") { return e - "A".charCodeAt(0) } else { if (i >= "a" && i <= "z") { return (26 + e - "a".charCodeAt(0)) } else { if (i >= "0" && i <= "9") { return (52 + e - "0".charCodeAt(0)) } else { if (i == "+") { return 62 } else { if (i == "/") { return 63 } } } } } return -1 } bF.pathToPoints = function (jV) { var jT = []; if (typeof jV !== "string") { return jT } else { var jU = jV.split(";"); for (var T = 0; T < jU.length; T++) { var e = jU[T].split(","); jT.push(new ct(e[0], e[1])) } } return jT }; window.BMAP_POI_TYPE_NORMAL = 0; window.BMAP_POI_TYPE_BUSSTOP = 1; window.BMAP_POI_TYPE_BUSLINE = 2; window.BMAP_POI_TYPE_SUBSTOP = 3; window.BMAP_POI_TYPE_SUBLINE = 4; var Q = 0; var hp = 1; var ft = {}; window.APIPack = ft; function aG(i, e) { c1.call(this); this._loc = {}; this.setLocation(i); e = e || {}; e.renderOptions = e.renderOptions || {}; this._opts = { renderOptions: { panel: e.renderOptions.panel || null, map: e.renderOptions.map || null, autoViewport: e.renderOptions.autoViewport || true, selectFirstResult: e.renderOptions.selectFirstResult, highlightMode: e.renderOptions.highlightMode, enableDragging: e.renderOptions.enableDragging || false }, onSearchComplete: e.onSearchComplete || function () { }, onMarkersSet: e.onMarkersSet || function () { }, onInfoHtmlSet: e.onInfoHtmlSet || function () { }, onResultsHtmlSet: e.onResultsHtmlSet || function () { }, onGetBusListComplete: e.onGetBusListComplete || function () { }, onGetBusLineComplete: e.onGetBusLineComplete || function () { }, onBusListHtmlSet: e.onBusListHtmlSet || function () { }, onBusLineHtmlSet: e.onBusLineHtmlSet || function () { }, onPolylinesSet: e.onPolylinesSet || function () { }, reqFrom: e.reqFrom || "" }; if (typeof e != "undefined" && typeof e.renderOptions != "undefined" && typeof e.renderOptions["autoViewport"] != "undefined") { this._opts.renderOptions.autoViewport = e.renderOptions["autoViewport"] } else { this._opts.renderOptions.autoViewport = true } this._opts.renderOptions.panel = eN.G(this._opts.renderOptions.panel) } aG.inherits(c1, "BaseSearch"); eN.extend(aG.prototype, { getResults: function () { if (!this._isMultiKey) { return this._results } else { return this._arrResults } }, enableAutoViewport: function () { this._opts.renderOptions.autoViewport = true }, disableAutoViewport: function () { this._opts.renderOptions.autoViewport = false }, setLocation: function (e) { if (!e) { return } this._loc.src = e }, setSearchCompleteCallback: function (e) { this._opts.onSearchComplete = e || function () { } }, setMarkersSetCallback: function (e) { this._opts.onMarkersSet = e || function () { } }, setPolylinesSetCallback: function (e) { this._opts.onPolylinesSet = e || function () { } }, setInfoHtmlSetCallback: function (e) { this._opts.onInfoHtmlSet = e || function () { } }, setResultsHtmlSetCallback: function (e) { this._opts.onResultsHtmlSet = e || function () { } }, getStatus: function () { return this._status } }); var cw = function (T, i) { aG.call(this, T, i); i = i || {}; i.renderOptions = i.renderOptions || {}; this.setPageCapacity(i.pageCapacity); if (typeof i.renderOptions["selectFirstResult"] != "undefined" && !i.renderOptions["selectFirstResult"]) { this.disableFirstResultSelection() } else { this.enableFirstResultSelection() } this._overlays = []; this._arrPois = []; this._curIndex = -1; this._queryList = []; var e = this; gO.load("localSearch", function () { e._check() }, true) }; cw.inherits(aG, "LocalSearch"); cw.DEFAULT_PAGE_CAPACITY = 10; cw.MIN_PAGE_CAPACITY = 1; cw.MAX_PAGE_CAPACITY = 100; cw.DEFAULT_RADIUS = 2000; cw.MAX_RADIUS = 100000; eN.extend(cw.prototype, { search: function (e, i) { this._queryList.push({ method: "search", arguments: [e, i] }) }, searchInBounds: function (e, T, i) { this._queryList.push({ method: "searchInBounds", arguments: [e, T, i] }) }, searchNearby: function (T, i, e, jT) { this._queryList.push({ method: "searchNearby", arguments: [T, i, e, jT] }) }, clearResults: function () { delete this._json; delete this._status; delete this._results; delete this._ud; this._curIndex = -1; this._setStatus(); if (this._opts.renderOptions.panel) { this._opts.renderOptions.panel.innerHTML = "" } }, gotoPage: function () { }, enableFirstResultSelection: function () { this._opts.renderOptions.selectFirstResult = true }, disableFirstResultSelection: function () { this._opts.renderOptions.selectFirstResult = false }, setPageCapacity: function (e) { if (typeof e == "number" && !isNaN(e)) { this._opts.pageCapacity = e < 1 ? cw.DEFAULT_PAGE_CAPACITY : (e > cw.MAX_PAGE_CAPACITY ? cw.DEFAULT_PAGE_CAPACITY : e) } else { this._opts.pageCapacity = cw.DEFAULT_PAGE_CAPACITY } }, getPageCapacity: function () { return this._opts.pageCapacity }, toString: function () { return "LocalSearch" } }); function be(i) { this._opts = {}; eN.extend(this._opts, i); this._queryList = []; var e = this; gO.load("otherSearch", function () { e._asyncSearch() }) } be.inherits(c1, "Geocoder"); eN.extend(be.prototype, { getPoint: function (e, T, i) { this._queryList.push({ method: "getPoint", arguments: [e, T, i] }) }, getLocation: function (e, T, i) { this._queryList.push({ method: "getLocation", arguments: [e, T, i] }) }, toString: function () { return "Geocoder" } }); function cQ(e) { e = e || {}; this.config = { timeout: e.timeout || 1000 * 10, maximumAge: e.maximumAge || 0, enableHighAccuracy: e.enableHighAccuracy === undefined ? true : e.enableHighAccuracy, SDKLocation: e.SDKLocation || false }; this._pendingCalls = []; var i = this; gO.load("otherSearch", function () { var T = i._pendingCalls.length; for (var jT = 0; jT < T; jT++) { var jU = i._pendingCalls[jT]; i[jU.method].apply(i, jU.arguments) } }) } eN.extend(cQ.prototype, { getCurrentPosition: function (e, i) { this._pendingCalls.push({ method: "getCurrentPosition", arguments: arguments }) }, getStatus: function () { return BMAP_STATUS_UNKNOWN_LOCATION }, enableSDKLocation: function () { if (bT()) { this.config.SDKLocation = true } }, disableSDKLocation: function () { this.config.SDKLocation = false } }); function fa() { this._queryList = []; var e = this; gO.load("otherSearch", function () { e._asyncSearch() }) } fa.inherits(c1, "Boundary"); eN.extend(fa.prototype, { get: function (i, e) { this._queryList.push({ method: "get", arguments: [i, e] }) }, toString: function () { return "Boundary" }, parsebdStr: function (i, e) { } }); function e3(i) { i = i || {}; i.renderOptions = i.renderOptions || {}; this._opts = { renderOptions: { map: i.renderOptions.map || null } }; this._queryList = []; var e = this; gO.load("otherSearch", function () { e._asyncSearch() }) } e3.inherits(c1, "LocalCity"); eN.extend(e3.prototype, { get: function (e) { this._queryList.push({ method: "get", arguments: [e] }) }, toString: function () { return "LocalCity" } }); function g0(e, T) { c1.call(this); this.markersList = []; this.destList = []; this.pointsList = []; this._opts = T; this.json = e; this.map = this._opts.renderOptions.map || null; this.sType = this._opts.sType; this.infoWindow = null; this.curPointIndex = 0; this.startName = ""; this.endIndex = 1; this.endName = ""; this.resCity = [0, 0, 0, 0, 0, 0, 0]; this.locPois = []; this.curPageIndex = [1, 1, 1, 1, 1, 1, 1]; this.totalPage = [1, 1, 1, 1, 1, 1, 1]; this.resCount = [0, 0, 0, 0, 0, 0, 0]; this.resType = [0, 0, 0, 0, 0, 0, 0]; this.qInfo = [{ n: "", c: 0, u: 0, x: 0, y: 0, t: -1 }, { n: "", c: 0, u: 0, x: 0, y: 0, t: -1 }, { n: "", c: 0, u: 0, x: 0, y: 0, t: -1 }, { n: "", c: 0, u: 0, x: 0, y: 0, t: -1 }, { n: "", c: 0, u: 0, x: 0, y: 0, t: -1 }, { n: "", c: 0, u: 0, x: 0, y: 0, t: -1 }, { n: "", c: 0, u: 0, x: 0, y: 0, t: -1 }]; this.curSelectedIndex = -1; this.tpList = []; this.tpListInMap = []; var i = this; gO.load("route", function () { }) } g0.inherits(c1, "RouteAddr"); function eo(T, i) { aG.call(this, T, i); this.QUERY_TYPE_BUSLIST = c4; this.RETURN_TYPE_BUSLIST = cI; this.QUERY_TYPE_BUSLINE = ee; this.RETURN_TYPE_BUSLINE = d1; this._queryList = []; var e = this; gO.load("buslineSearch", function () { e._asyncSearch() }) } var fr = B.staticHost + "/wolfman/static/common/images/"; eo._iconOpen = B.apiIMG + "/iw_plus.gif"; eo._iconClose = B.apiIMG + "/iw_minus.gif"; eo._stopUrl = fr + "new/bus-stop-1x_ddd4723.png"; eo.inherits(aG, "BusLineSearch"); eN.extend(eo.prototype, { getBusList: function (e) { this._queryList.push({ method: "getBusList", arguments: [e] }) }, getBusLine: function (e) { this._queryList.push({ method: "getBusLine", arguments: [e] }) }, setGetBusListCompleteCallback: function (e) { this._opts.onGetBusListComplete = e || function () { } }, setGetBusLineCompleteCallback: function (e) { this._opts.onGetBusLineComplete = e || function () { } }, setBusListHtmlSetCallback: function (e) { this._opts.onBusListHtmlSet = e || function () { } }, setBusLineHtmlSetCallback: function (e) { this._opts.onBusLineHtmlSet = e || function () { } }, setPolylinesSetCallback: function (e) { this._opts.onPolylinesSet = e || function () { } } }); function iL(i) { aG.call(this, i); i = i || {}; this._options = { input: i.input || null, baseDom: i.baseDom || null, types: i.types || [], onSearchComplete: i.onSearchComplete || function () { } }; this._loc.src = i.location || "全国"; this._word = ""; this._show = false; this._suggestion = null; this._inputValue = ""; this._initialize(); var e = this; gO.load("autocomplete", function () { e._asyncSearch() }, true) } iL.inherits(aG, "Autocomplete"); eN.extend(iL.prototype, { _initialize: function () { }, show: function () { this._show = true }, hide: function () { this._show = false }, setTypes: function (e) { this._options.types = e }, setLocation: function (e) { this._loc.src = e }, search: function (e) { this._word = e }, setInputValue: function (e) { this._inputValue = e }, setSearchCompleteCallback: function (e) { this._options.onSearchComplete = e } }); var js = function (i, e) { aG.call(this, i, e) }; eN.inherit(js, aG, "BaseRoute"); eN.extend(js.prototype, { clearResults: function () { } }); window.BMAP_TRANSIT_POLICY_RECOMMEND = 0; window.BMAP_TRANSIT_POLICY_LEAST_TIME = 4; window.BMAP_TRANSIT_POLICY_LEAST_TRANSFER = 1; window.BMAP_TRANSIT_POLICY_LEAST_WALKING = 2; window.BMAP_TRANSIT_POLICY_AVOID_SUBWAYS = 3; window.BMAP_TRANSIT_POLICY_FIRST_SUBWAYS = 5; window.BMAP_LINE_TYPE_BUS = 0; window.BMAP_LINE_TYPE_SUBWAY = 1; window.BMAP_LINE_TYPE_FERRY = 2; window.BMAP_LINE_TYPE_TRAIN = 3; window.BMAP_LINE_TYPE_AIRPLANE = 4; window.BMAP_LINE_TYPE_COACH = 5; var h3 = 3; var dZ = 4; var af = 1; var h1 = 2; var aU = 5; var cK = 6; window.BMAP_TRANSIT_TYPE_IN_CITY = 0; window.BMAP_TRANSIT_TYPE_CROSS_CITY = 1; window.BMAP_TRANSIT_PLAN_TYPE_ROUTE = 0; window.BMAP_TRANSIT_PLAN_TYPE_LINE = 1; window.BMAP_TRANSIT_TYPE_POLICY_TRAIN = 0; window.BMAP_TRANSIT_TYPE_POLICY_AIRPLANE = 1; window.BMAP_TRANSIT_TYPE_POLICY_COACH = 2; window.BMAP_INTERCITY_POLICY_LEAST_TIME = 0; window.BMAP_INTERCITY_POLICY_EARLY_START = 1; window.BMAP_INTERCITY_POLICY_CHEAP_PRICE = 2; function eC(T, i) { js.call(this, T, i); i = i || {}; this.setPolicy(i.policy); this.setIntercityPolicy(i.intercityPolicy); this.setTransitTypePolicy(i.transitTypePolicy); this.setPageCapacity(i.pageCapacity); this.QUERY_TYPE = gL; this.RETURN_TYPE = eI; this.ROUTE_TYPE = hp; this._overlays = []; this._curIndex = -1; this._opts._enableTraffic = i.enableTraffic || false; this._queryList = []; var e = this; gO.load("route", function () { e._asyncSearch() }, true) } eC.MAX_PAGE_CAPACITY = 100; eC.LINE_TYPE_MAPPING = [0, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1, 1]; eC.LINE_TYPE_MAPPING_CROSS_CITY = [0, 3, 4, 0, 0, 0, 5]; eN.inherit(eC, js, "TransitRoute"); eN.extend(eC.prototype, { setPolicy: function (e) { if (e >= BMAP_TRANSIT_POLICY_RECOMMEND && e <= BMAP_TRANSIT_POLICY_FIRST_SUBWAYS) { this._opts.policy = e } else { this._opts.policy = BMAP_TRANSIT_POLICY_RECOMMEND } }, setIntercityPolicy: function (e) { if (e >= BMAP_INTERCITY_POLICY_LEAST_TIME && e <= BMAP_INTERCITY_POLICY_CHEAP_PRICE) { this._opts.intercityPolicy = e } else { this._opts.intercityPolicy = BMAP_INTERCITY_POLICY_LEAST_TIME } }, setTransitTypePolicy: function (e) { if (e >= BMAP_TRANSIT_TYPE_POLICY_TRAIN && e <= BMAP_TRANSIT_TYPE_POLICY_COACH) { this._opts.transitTypePolicy = e } else { this._opts.transitTypePolicy = BMAP_TRANSIT_TYPE_POLICY_TRAIN } }, _internalSearch: function (i, e) { this._queryList.push({ method: "_internalSearch", arguments: [i, e] }) }, search: function (i, e) { this._queryList.push({ method: "search", arguments: [i, e] }) }, setPageCapacity: function (e) { if (typeof e === "string") { e = parseInt(e, 10); if (isNaN(e)) { this._opts.pageCapacity = eC.MAX_PAGE_CAPACITY; return } } if (typeof e !== "number") { this._opts.pageCapacity = eC.MAX_PAGE_CAPACITY; return } if (e >= 1 && e <= eC.MAX_PAGE_CAPACITY) { this._opts.pageCapacity = Math.round(e) } else { this._opts.pageCapacity = eC.MAX_PAGE_CAPACITY } }, toString: function () { return "TransitRoute" }, _shortTitle: function (e) { return e.replace(/\(.*\)/, "") } }); window.BMAP_HIGHLIGHT_STEP = 1; window.BMAP_HIGHLIGHT_ROUTE = 2; var cA = function (e, jT) { js.call(this, e, jT); this._overlays = []; this._curIndex = -1; this._queryList = []; var T = this; var i = this._opts.renderOptions; if (i.highlightMode !== BMAP_HIGHLIGHT_STEP && i.highlightMode !== BMAP_HIGHLIGHT_ROUTE) { i.highlightMode = BMAP_HIGHLIGHT_STEP } this._enableDragging = this._opts.renderOptions.enableDragging ? true : false; gO.load("route", function () { T._asyncSearch() }, true); if (this.init_d) { this.init_d() } }; cA.ROAD_TYPE = ["", "环岛", "无属性道路", "主路", "高速连接路", "交叉点内路段", "连接道路", "停车场内部道路", "服务区内部道路", "桥", "步行街", "辅路", "匝道", "全封闭道路", "未定义交通区域", "POI连接路", "隧道", "步行道", "公交专用道", "提前右转道"]; eN.inherit(cA, js, "DWRoute"); eN.extend(cA.prototype, { search: function (T, e, i) { this._queryList.push({ method: "search", arguments: [T, e, i] }) } }); window.BMAP_DRIVING_POLICY_DEFAULT = 0; window.BMAP_DRIVING_POLICY_AVOID_HIGHWAYS = 3; window.BMAP_DRIVING_POLICY_FIRST_HIGHWAYS = 4; window.BMAP_DRIVING_POLICY_AVOID_CONGESTION = 5; window.BMAP_TRAFFICE_STATUS_NONE = 0; window.BMAP_TRAFFICE_STATUS_NORMAL = 1; window.BMAP_TRAFFICE_STATUS_SLOW = 2; window.BMAP_TRAFFICE_STATUS_JAM = 3; function cm(e, i) { cA.call(this, e, i); i = i || {}; this._opts._enableTraffic = i.enableTraffic || false; this.setPolicy(i.policy); this.QUERY_TYPE = aN; this.RETURN_TYPE = az; this.ROUTE_TYPE = BMAP_ROUTE_TYPE_DRIVING } eN.inherit(cm, cA, "DrivingRoute"); cm.prototype.setPolicy = function (e) { if (e >= BMAP_DRIVING_POLICY_DEFAULT && e <= BMAP_DRIVING_POLICY_AVOID_CONGESTION) { this._opts.policy = e } else { this._opts.policy = BMAP_DRIVING_POLICY_DEFAULT } }; function ff(e, i) { cA.call(this, e, i); this.QUERY_TYPE = hS; this.RETURN_TYPE = f3; this.ROUTE_TYPE = BMAP_ROUTE_TYPE_WALKING; this._enableDragging = false } eN.inherit(ff, cA, "WalkingRoute"); function cY(e, i) { cA.call(this, e, i); this.QUERY_TYPE = hk; this.ROUTE_TYPE = BMAP_ROUTE_TYPE_RIDING; this._enableDragging = false } eN.inherit(cY, cA, "RidingRoute"); window.BMAP_MODE_DRIVING = "driving"; window.BMAP_MODE_TRANSIT = "transit"; window.BMAP_MODE_WALKING = "walking"; window.BMAP_MODE_NAVIGATION = "navigation"; var a0 = { web: "//api.map.baidu.com/direction?", android: "bdapp://map/direction?", ios: "baidumap://map/direction?" }; function ir(e) { this.opts = e || {} } eN.extend(ir.prototype, { routeCall: function (jT, e, T) { var i = this; gO.load("route", function () { i._asyncSearch(jT, e, T) }) } }); function dX() { return Pano.getStreetViewCoverageLayer(bw) } function eE() { Pano.PanoramaService.call(this) } eN.inherit(eE, Pano.PanoramaService, "PanoramaService"); eN.extend(eE.prototype, { getPanoramaById: function (T, i) { var e = this; this.getPanoById(T, function (jT) { i && i(e._makeData(jT)) }) }, getPanoramaByLocation: function (e, T) { e = iS.convertLL2MC(e); var i = this; this.getPanoByLocation(e, 50, function (jT) { T && T(i._makeData(jT)) }) }, _makeData: function (T) { if (!T) { return null } var i = {}; var e = T.content[0]; i.description = e.Rname || e.Info || ""; i.id = e.ID; i.pointX = e.X / 100; i.pointY = e.Y / 100; i.position = iS.convertMC2LL(new ct(i.pointX, i.pointY)); return i } }); function e5() { if (window.PANORAMA_URL) { return Pano.getPanoControl(bw, { imgPath: B.imgPath, tileBaseUrl: B.panoTilePath, }) } return Pano.getPanoControl(bw) } function O(T, e) { if (!e) { return } this.content = T; if (e.position && !Array.isArray(e.position)) { e.position = iS.convertLL2MC(e.position); this.position = e.position; this.hideDistance = !!e.hideDistance } else { this.hideDistance = true } var i = this._createDom(); Pano.PanoOverlay.call(this, e.position, { dom: i, altitude: e.altitude, }) } eN.inherit(O, Pano.PanoOverlay, "PanoramaLabel"); eN.extend(O.prototype, { init: function (e) { var i = this; this._pano = e; this.updatedDistance(); Pano.PanoOverlay.prototype.init.call(this, e); this._pano.on("dataload", function (T) { i.updatedDistance() }) }, _createDom: function () { var jT = this.content; var jW = document.createElement("div"); var i = jW.style; i.position = "absolute"; i.backgroundColor = "rgba(29, 29, 29, 0.8)"; i.padding = "7px 0"; i.height = "19px"; i.font = "16px arial"; i.color = "white"; i.whiteSpace = "nowrap"; i.borderRadius = "4px"; var e = document.createElement("div"); e.style["float"] = "left"; e.style["lineHeight"] = "19px"; jW.appendChild(e); var T = document.createElement("span"); T.style.margin = "0 14px"; T.innerText = jT; e.appendChild(T); if (!this.hideDistance) { var jV = document.createElement("span"); jV.style.color = "color:rgba(255,255,255,0.3)"; jV.innerText = "|"; e.appendChild(jV); var jU = document.createElement("span"); jU.style.margin = "0 8px"; jU.style.color = "#60c7fa"; jU.style.fontSize = "12px"; jU.innerText = "0米"; e.appendChild(jU); this._distanceDom = jU } this._dom = jW; this._titleDom = T; return jW }, updatedDistance: function () { if (this.hideDistance) { return } var T = 0; if (this._pano) { var i = this._pano.position; var e = this.position; if (i && !i.equals(e)) { T = iS.getDistanceByMC(i, e) } } if (T > 100) { T = T / 1000; T = T < 100 ? T.toFixed(2) : T.toFixed(0); T += "公里" } else { T = T < 100 ? T.toFixed(2) : T.toFixed(0); T += "米" } this._distanceDom.innerText = T }, }); function d(i) { if (typeof i === "string" && /^(?!#)(\w)*/.test(i)) { i = "#" + i } var jT = {}; if (window.PANORAMA_URL) { jT.imgPath = B.imgPath; jT.tileBaseUrls = [B.panoTilePath] } var e = Pano.init(i, jT); var T = e.setPosition; e.setPosition = function (jV) { var jW = iS.convertLL2MC(jV); T.call(e, jW) }; var jU = e.addEventListener; e.addEventListener = function (jV, jW) { if (jV === "position_changed") { jU.call(e, jV, function (jX) { var jY = iS.convertMC2LL(jX); jW(jY) }) } else { jU.call(e, jV, jW) } }; return e } bw.Map = hv; bw.MapType = ea; bw.Point = ct; bw.Pixel = e8; bw.Size = iJ; bw.Bounds = hJ; bw.PrivateRegionDataModel = cG; bw.TileLayer = hg; bw.Copyright = m; bw.Projection = bw.Project = iS; bw.XYZProjection = bw.XYZProject = ds; bw.Convertor = fH; bw.RenderTypeUtils = cZ; bw.Overlay = aQ; bw.Label = hC; bw.Marker = s; bw.Symbol = e6; bw.SVGSymbol = dB; bw.Icon = jb; bw.Symbol = e6; bw.SVGSymbol = dB; bw.Polyline = bk; bw.BezierCurve = cC; bw.PolylineMultipart = ec; bw.Polygon = iq; bw.MapMask = jF; bw.Prism = bq; bw.Marker3D = d2; bw.GroundOverlay = fN; bw.InfoWindow = dT; bw.SimpleInfoWindow = hM; bw.Circle = aT; bw.Control = gv; bw.NavigationControl = jp; bw.NavigationControl3D = eP; bw.CopyrightControl = fT; bw.ScaleControl = jS; bw.CityListControl = br; bw.MapTypeControl = v; bw.ZoomControl = iV; bw.LocationControl = gc; bw.LogoControl = bz; bw.DistanceTool = cb; bw.ContextMenu = g7; bw.MenuItem = hH; bw.OperationMask = ai; bw.Animation = fo; bw.ViewAnimation = q; bw.Transitions = go; bw.Event = fy; bw.trafficLayer = jm; bw.TrafficLayer = iZ; bw.GeoJSONLayer = aM; bw.XYZLayer = jG; bw.PixelLayer = dj; bw.GeoJSONParse = gk; bw.NormalLayer = ci; bw.LineLayer = bQ; bw.FillLayer = dR; bw.Entity = iT; bw.MVTLayer = dY; bw.BaiduLayer = U; bw.Geolocation = cQ; bw.Geocoder = be; bw.Boundary = fa; bw.DistrictLayer = dO; bw.LocalCity = e3; bw.LocalSearch = cw; bw.Autocomplete = iL; bw.BusLineSearch = eo; bw.WalkingRoute = ff; bw.RidingRoute = cY; bw.DrivingRoute = cm; bw.TransitRoute = eC; bw.RouteSearch = ir; bw.PanoramaCoverageLayer = dX; bw.PanoramaControl = e5; bw.PanoramaService = eE; bw.PanoramaLabel = O; bw.Panorama = d; function gY(e, i) { for (var T in i) { e[T] = i[T] } } bw.fetchDebug && bw.fetchDebug.init(); bw.verify(); bw.apiLoad(); bw.frequency(); bw.getSeckeyCid(); window._layer = 1; eN.extend(dO.prototype, { _asyncSearch: function () { for (var T = 0, e = this._queryList.length; T < e; T++) { var jT = this._queryList[T]; this[jT.method].apply(this, jT.arguments) } delete this._queryList }, addDistrict: function () { if (this._opts.districts) { var e = this._opts.districts; if (typeof e === "string") { this.getDistrictData(e) } else { if (Object.prototype.toString.call(e) === "[object Array]") { var i = this.parseArrayParams(e); this.getDistrictData(i) } } } }, parseArrayParams: function (e) { var jU = ""; for (var jT = 0; jT < e.length; jT++) { if (e[jT] instanceof Array) { jU += "("; for (var T = 0; T < e.length; T++) { jU += e[T] } jU += ")" } else { jU += "(" + e[jT] + ")" } } return jU }, getDistrictData: function (e) { var i = this; jC.request(function (jT) { var T = i._parseGeoData(jT); i._drawToMap(i, T) }, { qt: jn, adnames: e, level: i._opts.kind }) }, _drawToMap: function (j2, jY) { var j1 = jY.boundaries.length; if (j1 === 0) { alert("未能获取当前输入行政区域"); return } var j3 = this._config.fillColor; var jV = this._config.fillOpacity; var T = this._config.strokeColor; var e = this._config.strokeOpacity; var jZ = this._config.strokeWeight; if (typeof j3 === "string") { var jT = j3; var j4 = []; for (var jX = 0; jX < j1; jX++) { var j0 = new BMapGL.Polygon(jY.boundaries[jX], { strokeWeight: jZ, strokeColor: T, strokeOpacity: e, fillColor: jT, fillOpacity: jV }); j0.style = { strokeWeight: jZ, strokecolor: T, strokeOpacity: e, fillColor: jT, fillOpacity: jV }; this.disOverlays.push(j0); this.addEventListenerIn(); j2._map.addOverlay(j0); j4 = j4.concat(j0.getPath()) } if (this._config.viewport) { j2._map.setViewport(j4) } } else { if (Object.prototype.toString.call(j3) === "[object Array]") { var j4 = []; var jW = j3.length; if (jW < j1) { for (var jX = 0, jU = 0; jX < j1 - jW; jX++) { if (jU < jW - 1) { j3.push(j3[jU++]) } else { j3.push(j3[0]) } } } for (var jX = 0; jX < j1; jX++) { var jT = j3[jX]; var j0 = new BMapGL.Polygon(jY.boundaries[jX], { strokeWeight: jZ, strokeColor: T, strokeOpacity: e, fillColor: jT, fillOpacity: jV }); j0.style = { strokeWeight: jZ, strokecolor: T, strokeOpacity: e, fillColor: jT, fillOpacity: jV }; this.disOverlays.push(j0); this.addEventListenerIn(); j2._map.addOverlay(j0); j4 = j4.concat(j0.getPath()) } if (this._config.viewport) { j2._map.setViewport(j4) } } } }, _parseGeoData: function (j2) { var j5 = {}; j5.boundaries = []; if (j2 && j2.content && j2.content["geo"]) { for (var ka = 0; ka < j2.content["geo"].length; ka++) { var jT = bF.parseGeo(j2.content["geo"][ka], false); if (jT.geo && jT.geo.length && jT.geo.length > 0) { var j8 = jT.geo.length; for (i6 = 0; i6 < j8; i6++) { var T = jT.geo[i6]; if (T && T.length && T.length > 0) { var j0 = T.length - 1; var j7 = []; var jZ = false; var j6 = 0; var j4 = 0; for (var j9 = 0; j9 < j0; j9 += 2) { var jX = T[j9]; var jV = T[j9 + 1]; var j3 = new ct(jX, jV); j3 = iS.convertMC2LL(j3); if (j9 < j0 - 3) { var i = T[j9 + 2]; var e = T[j9 + 3]; var j1 = new ct(i, e); j1 = iS.convertMC2LL(j1) } j7.push(j3.lng + ", " + j3.lat) } if (jZ === true) { if (j6 > j4) { var kb = j6; j6 = j4; j4 = kb } var jY = j7; var jW = j7.splice(j6 + 1); var jU = jW.splice(j4 - j6); jY = jY.concat(jU); j5.boundaries.push(jY.join(";")); j5.boundaries.push(jW.join(";")); jZ = false; continue } if (j7.length !== 0) { j5.boundaries.push(j7.join(";")) } } } } } } return j5 }, deleteDistrict: function (jT) { var T = jT.disOverlays; for (var e = 0; e < T.length; e++) { this._map.removeOverlay(T[e]) } }, addEventListener: function (e, i) { this.eventAndCallback[e] = i }, addEventListenerIn: function () { var jT = this; var jV = Object.keys(jT.eventAndCallback); if (jV.length > 0) { for (var T = 0; T < jV.length; T++) { var jU = jT.eventAndCallback[jV[T]]; for (var e = 0; e < jT.disOverlays.length; e++) { jT.disOverlays[e].addEventListener(jV[T], jU) } } } }, searchBoundary: function (i, jU) { i = i || {}; var e = i.name || ""; var T = i.kind || 0; var jT = this; jC.request(function (jW) { var jV = jT._parseGeoData(jW); jU && jU(jV) }, { qt: jn, adnames: e, level: T }) } }); window._layer = 2; })(BMapGL, "BMapGL");